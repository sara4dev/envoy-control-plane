apiVersion: v1
items:
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-20T18:39:49Z
    generation: 1
    labels:
      ebsEnvironment: production
      ephemeral: "true"
      ephemeralName: crossbow-pr-416-production
      sha: 7abac51d
    name: crossbow-pr-416-production
    namespace: adaptive-cia
    resourceVersion: "192952493"
    selfLink: /apis/extensions/v1beta1/namespaces/adaptive-cia/ingresses/crossbow-pr-416-production
    uid: 8ac7d1d1-4b3f-11e9-b3bf-525400884743
  spec:
    rules:
    - host: crossbow-pr-416-production.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: crossbow-pr-416-production
            servicePort: 80
          path: /
    - host: crossbow-pr-416-production.internal.ephemeral.target.com
      http:
        paths:
        - backend:
            serviceName: crossbow-pr-416-production
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-01-31T16:08:07Z
    generation: 1
    labels:
      app: github-pr-summary-dev
    name: github-pr-summary-dev
    namespace: adaptive-cia
    resourceVersion: "144932645"
    selfLink: /apis/extensions/v1beta1/namespaces/adaptive-cia/ingresses/github-pr-summary-dev
    uid: 65f37157-2572-11e9-9c86-525400b195c5
  spec:
    rules:
    - host: github-pr-summary.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: github-pr-summary-dev
            servicePort: 8080
          path: /
    - host: github-pr-summary.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: github-pr-summary-dev
            servicePort: 8080
          path: /
    - host: github-pr-summary.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: github-pr-summary-dev
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - github-pr-summary.test.k8s.target.com
      - github-pr-summary.ttc-test.k8s.target.com
      - github-pr-summary.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-08T04:09:20Z
    generation: 1
    labels:
      ebsEnvironment: production
      ephemeral: "true"
      ephemeralName: pdex-ui-react-pr-1919-production
      sha: 390d100a
    name: pdex-ui-react-pr-1919-production
    namespace: adaptive-cia
    resourceVersion: "181291166"
    selfLink: /apis/extensions/v1beta1/namespaces/adaptive-cia/ingresses/pdex-ui-react-pr-1919-production
    uid: f31806ee-4157-11e9-8f23-525400cb189a
  spec:
    rules:
    - host: pdex-ui-react-pr-1919-production.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pdex-ui-react-pr-1919-production
            servicePort: 80
          path: /
    - host: pdex-ui-react-pr-1919-production.internal.ephemeral.target.com
      http:
        paths:
        - backend:
            serviceName: pdex-ui-react-pr-1919-production
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-15T18:53:34Z
    generation: 1
    labels:
      ebsEnvironment: production
      ephemeral: "true"
      ephemeralName: pdex-ui-react-pr-1933-production
      sha: 5a256bb4
    name: pdex-ui-react-pr-1933-production
    namespace: adaptive-cia
    resourceVersion: "188456680"
    selfLink: /apis/extensions/v1beta1/namespaces/adaptive-cia/ingresses/pdex-ui-react-pr-1933-production
    uid: a236daba-4753-11e9-8490-52540095f1e4
  spec:
    rules:
    - host: pdex-ui-react-pr-1933-production.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pdex-ui-react-pr-1933-production
            servicePort: 80
          path: /
    - host: pdex-ui-react-pr-1933-production.internal.ephemeral.target.com
      http:
        paths:
        - backend:
            serviceName: pdex-ui-react-pr-1933-production
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-22T15:31:34Z
    generation: 1
    labels:
      ebsEnvironment: production
      ephemeral: "true"
      ephemeralName: pdex-ui-react-pr-2205-production
      sha: 3cef113c
    name: pdex-ui-react-pr-2205-production
    namespace: adaptive-cia
    resourceVersion: "194650693"
    selfLink: /apis/extensions/v1beta1/namespaces/adaptive-cia/ingresses/pdex-ui-react-pr-2205-production
    uid: 931e8c7f-4cb7-11e9-b3bf-525400884743
  spec:
    rules:
    - host: pdex-ui-react-pr-2205-production.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pdex-ui-react-pr-2205-production
            servicePort: 80
          path: /
    - host: pdex-ui-react-pr-2205-production.internal.ephemeral.target.com
      http:
        paths:
        - backend:
            serviceName: pdex-ui-react-pr-2205-production
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"ao-data-load-ingress"},"name":"ao-data-load-ingress","namespace":"ao-dev"},"spec":{"rules":[{"host":"ao-data-load-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ao-data-load","servicePort":80},"path":"/"}]}},{"host":"ao-data-load-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ao-data-load","servicePort":80},"path":"/"}]}},{"host":"ao-data-load-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ao-data-load","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["ao-data-load-dev.ttc-test.k8s.target.com","ao-data-load-dev.tte-test.k8s.target.com","ao-data-load-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-17T08:08:56Z
    generation: 1
    labels:
      name: ao-data-load-ingress
    name: ao-data-load-ingress
    namespace: ao-dev
    resourceVersion: "23698184"
    selfLink: /apis/extensions/v1beta1/namespaces/ao-dev/ingresses/ao-data-load-ingress
    uid: ecd0c66d-ba50-11e8-88c5-5254004139fa
  spec:
    rules:
    - host: ao-data-load-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ao-data-load
            servicePort: 80
          path: /
    - host: ao-data-load-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ao-data-load
            servicePort: 80
          path: /
    - host: ao-data-load-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ao-data-load
            servicePort: 80
          path: /
    tls:
    - hosts:
      - ao-data-load-dev.ttc-test.k8s.target.com
      - ao-data-load-dev.tte-test.k8s.target.com
      - ao-data-load-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"ao-reporting-ingress"},"name":"ao-reporting-ingress","namespace":"ao-dev"},"spec":{"rules":[{"host":"aoreporting-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ao-reporting","servicePort":80},"path":"/"}]}},{"host":"aoreporting-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ao-reporting","servicePort":80},"path":"/"}]}},{"host":"aoreporting-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ao-reporting","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["aoreporting-dev.ttc-test.k8s.target.com","aoreporting-dev.tte-test.k8s.target.com","aoreporting-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-11T14:35:50Z
    generation: 1
    labels:
      name: ao-reporting-ingress
    name: ao-reporting-ingress
    namespace: ao-dev
    resourceVersion: "21258038"
    selfLink: /apis/extensions/v1beta1/namespaces/ao-dev/ingresses/ao-reporting-ingress
    uid: fa962356-b5cf-11e8-842d-525400df3355
  spec:
    rules:
    - host: aoreporting-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ao-reporting
            servicePort: 80
          path: /
    - host: aoreporting-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ao-reporting
            servicePort: 80
          path: /
    - host: aoreporting-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ao-reporting
            servicePort: 80
          path: /
    tls:
    - hosts:
      - aoreporting-dev.ttc-test.k8s.target.com
      - aoreporting-dev.tte-test.k8s.target.com
      - aoreporting-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"ao-space-aggregations-ingress"},"name":"ao-space-aggregations-ingress","namespace":"ao-dev"},"spec":{"rules":[{"host":"ao-space-aggregations-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ao-space-aggregations","servicePort":80},"path":"/"}]}},{"host":"ao-space-aggregations-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ao-space-aggregations","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["ao-space-aggregations-dev.tte-test.k8s.target.com","ao-space-aggregations-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-11T14:24:20Z
    generation: 1
    labels:
      name: ao-space-aggregations-ingress
    name: ao-space-aggregations-ingress
    namespace: ao-dev
    resourceVersion: "21255089"
    selfLink: /apis/extensions/v1beta1/namespaces/ao-dev/ingresses/ao-space-aggregations-ingress
    uid: 5f66cb2a-b5ce-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: ao-space-aggregations-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ao-space-aggregations
            servicePort: 80
          path: /
    - host: ao-space-aggregations-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ao-space-aggregations
            servicePort: 80
          path: /
    tls:
    - hosts:
      - ao-space-aggregations-dev.tte-test.k8s.target.com
      - ao-space-aggregations-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"assortment-optimization-ingress"},"name":"assortment-optimization-ingress","namespace":"ao-dev"},"spec":{"rules":[{"host":"pogap-dev-ao.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"assortment-optimization","servicePort":80},"path":"/"}]}},{"host":"pogap-dev-ao.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"assortment-optimization","servicePort":80},"path":"/"}]}},{"host":"pogap-dev-ao.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"assortment-optimization","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["pogap-dev-ao.ttc-test.k8s.target.com","pogap-dev-ao.tte-test.k8s.target.com","pogap-dev-ao.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-11T10:44:01Z
    generation: 3
    labels:
      name: assortment-optimization-ingress
    name: assortment-optimization-ingress
    namespace: ao-dev
    resourceVersion: "21240422"
    selfLink: /apis/extensions/v1beta1/namespaces/ao-dev/ingresses/assortment-optimization-ingress
    uid: 9820f936-b5af-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: pogap-dev-ao.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: assortment-optimization
            servicePort: 80
          path: /
    - host: pogap-dev-ao.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: assortment-optimization
            servicePort: 80
          path: /
    - host: pogap-dev-ao.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: assortment-optimization
            servicePort: 80
          path: /
    tls:
    - hosts:
      - pogap-dev-ao.ttc-test.k8s.target.com
      - pogap-dev-ao.tte-test.k8s.target.com
      - pogap-dev-ao.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"assortment-spaces-ingress"},"name":"assortment-spaces-ingress","namespace":"ao-dev"},"spec":{"rules":[{"host":"assortment-spaces-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"assortment-spaces","servicePort":80},"path":"/"}]}},{"host":"assortment-spaces-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"assortment-spaces","servicePort":80},"path":"/"}]}},{"host":"assortment-spaces-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"assortment-spaces","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["assortment-spaces-dev.tte-test.k8s.target.com","assortment-spaces-dev.tte-test.k8s.target.com","assortment-spaces-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-04T13:50:48Z
    generation: 1
    labels:
      name: assortment-spaces-ingress
    name: assortment-spaces-ingress
    namespace: ao-dev
    resourceVersion: "34289323"
    selfLink: /apis/extensions/v1beta1/namespaces/ao-dev/ingresses/assortment-spaces-ingress
    uid: 7fa9e392-c7dc-11e8-8a20-5254001e2711
  spec:
    rules:
    - host: assortment-spaces-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: assortment-spaces
            servicePort: 80
          path: /
    - host: assortment-spaces-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: assortment-spaces
            servicePort: 80
          path: /
    - host: assortment-spaces-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: assortment-spaces
            servicePort: 80
          path: /
    tls:
    - hosts:
      - assortment-spaces-dev.tte-test.k8s.target.com
      - assortment-spaces-dev.tte-test.k8s.target.com
      - assortment-spaces-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"ao-data-load-ingress"},"name":"ao-data-load-ingress","namespace":"ao-stage"},"spec":{"rules":[{"host":"pogap-stage-ao-data-load.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ao-data-load","servicePort":80},"path":"/"}]}},{"host":"pogap-stage-ao-data-load.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ao-data-load","servicePort":80},"path":"/"}]}},{"host":"pogap-stage-ao-data-load.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ao-data-load","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["pogap-stage-ao-data-load.ttc-test.k8s.target.com","pogap-stage-ao-data-load.tte-test.k8s.target.com","pogap-stage-ao-data-load.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-17T15:42:54Z
    generation: 1
    labels:
      name: ao-data-load-ingress
    name: ao-data-load-ingress
    namespace: ao-stage
    resourceVersion: "23859391"
    selfLink: /apis/extensions/v1beta1/namespaces/ao-stage/ingresses/ao-data-load-ingress
    uid: 57af55ca-ba90-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: pogap-stage-ao-data-load.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ao-data-load
            servicePort: 80
          path: /
    - host: pogap-stage-ao-data-load.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ao-data-load
            servicePort: 80
          path: /
    - host: pogap-stage-ao-data-load.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ao-data-load
            servicePort: 80
          path: /
    tls:
    - hosts:
      - pogap-stage-ao-data-load.ttc-test.k8s.target.com
      - pogap-stage-ao-data-load.tte-test.k8s.target.com
      - pogap-stage-ao-data-load.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"ao-reporting-ingress"},"name":"ao-reporting-ingress","namespace":"ao-stage"},"spec":{"rules":[{"host":"aoreporting-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ao-reporting","servicePort":80},"path":"/"}]}},{"host":"aoreporting-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ao-reporting","servicePort":80},"path":"/"}]}},{"host":"aoreporting-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ao-reporting","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["aoreporting-stage.ttc-test.k8s.target.com","aoreporting-stage.tte-test.k8s.target.com","aoreporting-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-17T15:42:01Z
    generation: 1
    labels:
      name: ao-reporting-ingress
    name: ao-reporting-ingress
    namespace: ao-stage
    resourceVersion: "23858963"
    selfLink: /apis/extensions/v1beta1/namespaces/ao-stage/ingresses/ao-reporting-ingress
    uid: 3813fbd7-ba90-11e8-842d-525400df3355
  spec:
    rules:
    - host: aoreporting-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ao-reporting
            servicePort: 80
          path: /
    - host: aoreporting-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ao-reporting
            servicePort: 80
          path: /
    - host: aoreporting-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ao-reporting
            servicePort: 80
          path: /
    tls:
    - hosts:
      - aoreporting-stage.ttc-test.k8s.target.com
      - aoreporting-stage.tte-test.k8s.target.com
      - aoreporting-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"ao-space-aggregations-ingress"},"name":"ao-space-aggregations-ingress","namespace":"ao-stage"},"spec":{"rules":[{"host":"ao-space-aggregations-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ao-space-aggregations","servicePort":80},"path":"/"}]}},{"host":"ao-space-aggregations-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ao-space-aggregations","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["ao-space-aggregations-stage.tte-test.k8s.target.com","ao-space-aggregations-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-17T15:40:25Z
    generation: 1
    labels:
      name: ao-space-aggregations-ingress
    name: ao-space-aggregations-ingress
    namespace: ao-stage
    resourceVersion: "23858150"
    selfLink: /apis/extensions/v1beta1/namespaces/ao-stage/ingresses/ao-space-aggregations-ingress
    uid: fee4fba2-ba8f-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: ao-space-aggregations-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ao-space-aggregations
            servicePort: 80
          path: /
    - host: ao-space-aggregations-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ao-space-aggregations
            servicePort: 80
          path: /
    tls:
    - hosts:
      - ao-space-aggregations-stage.tte-test.k8s.target.com
      - ao-space-aggregations-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"assortment-optimization-ingress"},"name":"assortment-optimization-ingress","namespace":"ao-stage"},"spec":{"rules":[{"host":"pogap-stage-ao.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"assortment-optimization","servicePort":80},"path":"/"}]}},{"host":"pogap-stage-ao.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"assortment-optimization","servicePort":80},"path":"/"}]}},{"host":"pogap-stage-ao.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"assortment-optimization","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["pogap-stage-ao.ttc-test.k8s.target.com","pogap-stage-ao.tte-test.k8s.target.com","pogap-stage-ao.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-17T15:58:04Z
    generation: 1
    labels:
      name: assortment-optimization-ingress
    name: assortment-optimization-ingress
    namespace: ao-stage
    resourceVersion: "23865347"
    selfLink: /apis/extensions/v1beta1/namespaces/ao-stage/ingresses/assortment-optimization-ingress
    uid: 766d1763-ba92-11e8-842d-525400df3355
  spec:
    rules:
    - host: pogap-stage-ao.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: assortment-optimization
            servicePort: 80
          path: /
    - host: pogap-stage-ao.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: assortment-optimization
            servicePort: 80
          path: /
    - host: pogap-stage-ao.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: assortment-optimization
            servicePort: 80
          path: /
    tls:
    - hosts:
      - pogap-stage-ao.ttc-test.k8s.target.com
      - pogap-stage-ao.tte-test.k8s.target.com
      - pogap-stage-ao.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"assortment-spaces-ingress"},"name":"assortment-spaces-ingress","namespace":"ao-stage"},"spec":{"rules":[{"host":"assortment-spaces-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"assortment-spaces","servicePort":80},"path":"/"}]}},{"host":"assortment-spaces-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"assortment-spaces","servicePort":80},"path":"/"}]}},{"host":"assortment-spaces-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"assortment-spaces","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["assortment-spaces-stage.tte-test.k8s.target.com","assortment-spaces-stage.tte-test.k8s.target.com","assortment-spaces-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-18T06:19:20Z
    generation: 1
    labels:
      name: assortment-spaces-ingress
    name: assortment-spaces-ingress
    namespace: ao-stage
    resourceVersion: "44666507"
    selfLink: /apis/extensions/v1beta1/namespaces/ao-stage/ingresses/assortment-spaces-ingress
    uid: c0067a20-d29d-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: assortment-spaces-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: assortment-spaces
            servicePort: 80
          path: /
    - host: assortment-spaces-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: assortment-spaces
            servicePort: 80
          path: /
    - host: assortment-spaces-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: assortment-spaces
            servicePort: 80
          path: /
    tls:
    - hosts:
      - assortment-spaces-stage.tte-test.k8s.target.com
      - assortment-spaces-stage.tte-test.k8s.target.com
      - assortment-spaces-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"assortment-plans-ingress"},"name":"assortment-plans-ingress","namespace":"apex-dev"},"spec":{"rules":[{"host":"apexplatform-dev-plans.us-central-1.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"assortment-plans","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["apexplatform-dev-plans.us-central-1.test.core.k8s.tgt"],"secretName":"vanitysecret"}]}}
    creationTimestamp: 2018-09-28T15:41:04Z
    generation: 1
    labels:
      name: assortment-plans-ingress
    name: assortment-plans-ingress
    namespace: apex-dev
    resourceVersion: "30382861"
    selfLink: /apis/extensions/v1beta1/namespaces/apex-dev/ingresses/assortment-plans-ingress
    uid: e8778d32-c334-11e8-b583-525400d3319b
  spec:
    rules:
    - host: apexplatform-dev-plans.us-central-1.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: assortment-plans
            servicePort: 80
          path: /
    tls:
    - hosts:
      - apexplatform-dev-plans.us-central-1.test.core.k8s.tgt
      secretName: vanitysecret
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"audits-ingress"},"name":"audits-ingress","namespace":"apex-dev"},"spec":{"rules":[{"host":"apexplatform-dev-audits.us-central-1.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"audits","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["apexplatform-dev-audits.us-central-1.test.core.k8s.tgt"],"secretName":"vanitysecretevents"}]}}
    creationTimestamp: 2019-03-06T15:28:36Z
    generation: 1
    labels:
      name: audits-ingress
    name: audits-ingress
    namespace: apex-dev
    resourceVersion: "179816967"
    selfLink: /apis/extensions/v1beta1/namespaces/apex-dev/ingresses/audits-ingress
    uid: 82a3f982-4024-11e9-8f23-525400cb189a
  spec:
    rules:
    - host: apexplatform-dev-audits.us-central-1.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: audits
            servicePort: 80
          path: /
    tls:
    - hosts:
      - apexplatform-dev-audits.us-central-1.test.core.k8s.tgt
      secretName: vanitysecretevents
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"events-ingress"},"name":"events-ingress","namespace":"apex-dev"},"spec":{"rules":[{"host":"apexplatform-dev-events.us-central-1.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"events","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["apexplatform-dev-events.us-central-1.test.core.k8s.tgt"],"secretName":"vanitysecretevents"}]}}
    creationTimestamp: 2018-09-28T21:16:50Z
    generation: 1
    labels:
      name: events-ingress
    name: events-ingress
    namespace: apex-dev
    resourceVersion: "30556938"
    selfLink: /apis/extensions/v1beta1/namespaces/apex-dev/ingresses/events-ingress
    uid: d073a36a-c363-11e8-bb02-525400b2fa35
  spec:
    rules:
    - host: apexplatform-dev-events.us-central-1.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: events
            servicePort: 80
          path: /
    tls:
    - hosts:
      - apexplatform-dev-events.us-central-1.test.core.k8s.tgt
      secretName: vanitysecretevents
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"potential-items-ingress"},"name":"potential-items-ingress","namespace":"apex-dev"},"spec":{"rules":[{"host":"apexplatform-dev-potential-items.us-central-1.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"potential-items","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["apexplatform-dev-potential-items.us-central-1.test.core.k8s.tgt"],"secretName":"vanitysecretpotentialitems"}]}}
    creationTimestamp: 2018-09-28T17:01:17Z
    generation: 3
    labels:
      name: potential-items-ingress
    name: potential-items-ingress
    namespace: apex-dev
    resourceVersion: "30515940"
    selfLink: /apis/extensions/v1beta1/namespaces/apex-dev/ingresses/potential-items-ingress
    uid: 1da49946-c340-11e8-bb02-525400b2fa35
  spec:
    rules:
    - host: apexplatform-dev-potential-items.us-central-1.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: potential-items
            servicePort: 80
          path: /
    tls:
    - hosts:
      - apexplatform-dev-potential-items.us-central-1.test.core.k8s.tgt
      secretName: vanitysecretpotentialitems
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"product-plan-summaries-ingress"},"name":"product-plan-summaries-ingress","namespace":"apex-dev"},"spec":{"rules":[{"host":"apexplatform-dev-product-plan-summaries.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"product-plan-summaries","servicePort":80},"path":"/"}]}},{"host":"apexplatform-dev-product-plan-summaries.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"product-plan-summaries","servicePort":80},"path":"/"}]}},{"host":"apexplatform-dev-product-plan-summaries.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"product-plan-summaries","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-01T19:58:44Z
    generation: 1
    labels:
      name: product-plan-summaries-ingress
    name: product-plan-summaries-ingress
    namespace: apex-dev
    resourceVersion: "146062799"
    selfLink: /apis/extensions/v1beta1/namespaces/apex-dev/ingresses/product-plan-summaries-ingress
    uid: c7995d5e-265b-11e9-898c-525400270885
  spec:
    rules:
    - host: apexplatform-dev-product-plan-summaries.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: product-plan-summaries
            servicePort: 80
          path: /
    - host: apexplatform-dev-product-plan-summaries.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: product-plan-summaries
            servicePort: 80
          path: /
    - host: apexplatform-dev-product-plan-summaries.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: product-plan-summaries
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"product-summaries-ingress"},"name":"product-summaries-ingress","namespace":"apex-dev"},"spec":{"rules":[{"host":"apexplatform-dev-product-summaries.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"product-summaries","servicePort":80},"path":"/"}]}},{"host":"apexplatform-dev-product-summaries.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"product-summaries","servicePort":80},"path":"/"}]}},{"host":"apexplatform-dev-product-summaries.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"product-summaries","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-11-16T19:07:05Z
    generation: 1
    labels:
      name: product-summaries-ingress
    name: product-summaries-ingress
    namespace: apex-dev
    resourceVersion: "71087295"
    selfLink: /apis/extensions/v1beta1/namespaces/apex-dev/ingresses/product-summaries-ingress
    uid: cef09a90-e9d2-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: apexplatform-dev-product-summaries.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: product-summaries
            servicePort: 80
          path: /
    - host: apexplatform-dev-product-summaries.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: product-summaries
            servicePort: 80
          path: /
    - host: apexplatform-dev-product-summaries.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: product-summaries
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"apex-eil-ingress-dev"},"name":"apex-eil-ingress-dev","namespace":"apex-eil-dev"},"spec":{"rules":[{"host":"apex-eil-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"apex-eil-service-dev","servicePort":80},"path":"/"}]}},{"host":"apex-eil-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"apex-eil-service-dev","servicePort":80},"path":"/"}]}},{"host":"apex-eil-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"apex-eil-service-dev","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["apex-eil-dev.test.k8s.target.com","apex-eil-dev.ttc-test.k8s.target.com","apex-eil-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-17T06:23:44Z
    generation: 1
    labels:
      name: apex-eil-ingress-dev
    name: apex-eil-ingress-dev
    namespace: apex-eil-dev
    resourceVersion: "43719466"
    selfLink: /apis/extensions/v1beta1/namespaces/apex-eil-dev/ingresses/apex-eil-ingress-dev
    uid: 32cbd62e-d1d5-11e8-b121-525400340d56
  spec:
    rules:
    - host: apex-eil-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: apex-eil-service-dev
            servicePort: 80
          path: /
    - host: apex-eil-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: apex-eil-service-dev
            servicePort: 80
          path: /
    - host: apex-eil-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: apex-eil-service-dev
            servicePort: 80
          path: /
    tls:
    - hosts:
      - apex-eil-dev.test.k8s.target.com
      - apex-eil-dev.ttc-test.k8s.target.com
      - apex-eil-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"apex-eil-ui-ingress"},"name":"apex-eil-ui-ingress","namespace":"apex-eil-dev"},"spec":{"rules":[{"host":"apex-eil-ui-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"apex-eil-ui-service","servicePort":80},"path":"/"}]}},{"host":"apex-eil-ui-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"apex-eil-ui-service","servicePort":80},"path":"/"}]}},{"host":"apex-eil-ui-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"apex-eil-ui-service","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-17T09:00:51Z
    generation: 1
    labels:
      name: apex-eil-ui-ingress
    name: apex-eil-ui-ingress
    namespace: apex-eil-dev
    resourceVersion: "43808357"
    selfLink: /apis/extensions/v1beta1/namespaces/apex-eil-dev/ingresses/apex-eil-ui-ingress
    uid: 25706e45-d1eb-11e8-ae94-52540075a812
  spec:
    rules:
    - host: apex-eil-ui-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: apex-eil-ui-service
            servicePort: 80
          path: /
    - host: apex-eil-ui-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: apex-eil-ui-service
            servicePort: 80
          path: /
    - host: apex-eil-ui-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: apex-eil-ui-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"apex-eil-ingress-stage"},"name":"apex-eil-ingress-stage","namespace":"apex-eil-stage"},"spec":{"rules":[{"host":"apex-eil-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"apex-eil-service-stage","servicePort":80},"path":"/"}]}},{"host":"apex-eil-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"apex-eil-service-stage","servicePort":80},"path":"/"}]}},{"host":"apex-eil-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"apex-eil-service-stage","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["apex-eil-stage.test.k8s.target.com","apex-eil-stage.ttc-test.k8s.target.com","apex-eil-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-17T11:15:42Z
    generation: 1
    labels:
      name: apex-eil-ingress-stage
    name: apex-eil-ingress-stage
    namespace: apex-eil-stage
    resourceVersion: "43886857"
    selfLink: /apis/extensions/v1beta1/namespaces/apex-eil-stage/ingresses/apex-eil-ingress-stage
    uid: fc562932-d1fd-11e8-b121-525400340d56
  spec:
    rules:
    - host: apex-eil-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: apex-eil-service-stage
            servicePort: 80
          path: /
    - host: apex-eil-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: apex-eil-service-stage
            servicePort: 80
          path: /
    - host: apex-eil-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: apex-eil-service-stage
            servicePort: 80
          path: /
    tls:
    - hosts:
      - apex-eil-stage.test.k8s.target.com
      - apex-eil-stage.ttc-test.k8s.target.com
      - apex-eil-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"assortment-plans-ingress"},"name":"assortment-plans-ingress","namespace":"apex-stage"},"spec":{"rules":[{"host":"apexplatform-stage-plans.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"assortment-plans","servicePort":80},"path":"/"}]}},{"host":"apexplatform-stage-plans.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"assortment-plans","servicePort":80},"path":"/"}]}},{"host":"apexplatform-stage-plans.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"assortment-plans","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-01T16:32:19Z
    generation: 2
    labels:
      name: assortment-plans-ingress
    name: assortment-plans-ingress
    namespace: apex-stage
    resourceVersion: "33088784"
    selfLink: /apis/extensions/v1beta1/namespaces/apex-stage/ingresses/assortment-plans-ingress
    uid: 90fb4238-c597-11e8-bad5-525400b91df9
  spec:
    rules:
    - host: apexplatform-stage-plans.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: assortment-plans
            servicePort: 80
          path: /
    - host: apexplatform-stage-plans.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: assortment-plans
            servicePort: 80
          path: /
    - host: apexplatform-stage-plans.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: assortment-plans
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"events-ingress"},"name":"events-ingress","namespace":"apex-stage"},"spec":{"rules":[{"host":"apexplatform-stage-events.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"events","servicePort":80},"path":"/"}]}},{"host":"apexplatform-stage-events.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"events","servicePort":80},"path":"/"}]}},{"host":"apexplatform-stage-events.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"events","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-01T17:49:28Z
    generation: 2
    labels:
      name: events-ingress
    name: events-ingress
    namespace: apex-stage
    resourceVersion: "34425039"
    selfLink: /apis/extensions/v1beta1/namespaces/apex-stage/ingresses/events-ingress
    uid: 579dec9a-c5a2-11e8-8a20-5254001e2711
  spec:
    rules:
    - host: apexplatform-stage-events.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: events
            servicePort: 80
          path: /
    - host: apexplatform-stage-events.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: events
            servicePort: 80
          path: /
    - host: apexplatform-stage-events.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: events
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"potential-items-ingress"},"name":"potential-items-ingress","namespace":"apex-stage"},"spec":{"rules":[{"host":"apexplatform-stage-potential-items.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"potential-items","servicePort":80},"path":"/"}]}},{"host":"apexplatform-stage-potential-items.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"potential-items","servicePort":80},"path":"/"}]}},{"host":"apexplatform-stage-potential-items.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"potential-items","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-02T18:37:33Z
    generation: 1
    labels:
      name: potential-items-ingress
    name: potential-items-ingress
    namespace: apex-stage
    resourceVersion: "33100651"
    selfLink: /apis/extensions/v1beta1/namespaces/apex-stage/ingresses/potential-items-ingress
    uid: 39b8952f-c672-11e8-8a20-5254001e2711
  spec:
    rules:
    - host: apexplatform-stage-potential-items.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: potential-items
            servicePort: 80
          path: /
    - host: apexplatform-stage-potential-items.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: potential-items
            servicePort: 80
          path: /
    - host: apexplatform-stage-potential-items.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: potential-items
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"product-plan-summaries-ingress"},"name":"product-plan-summaries-ingress","namespace":"apex-stage"},"spec":{"rules":[{"host":"apexplatform-stage-product-plan-summaries.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"product-plan-summaries","servicePort":80},"path":"/"}]}},{"host":"apexplatform-stage-product-plan-summaries.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"product-plan-summaries","servicePort":80},"path":"/"}]}},{"host":"apexplatform-stage-product-plan-summaries.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"product-plan-summaries","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-04T15:52:59Z
    generation: 1
    labels:
      name: product-plan-summaries-ingress
    name: product-plan-summaries-ingress
    namespace: apex-stage
    resourceVersion: "148913135"
    selfLink: /apis/extensions/v1beta1/namespaces/apex-stage/ingresses/product-plan-summaries-ingress
    uid: f248228c-2894-11e9-9c86-525400b195c5
  spec:
    rules:
    - host: apexplatform-stage-product-plan-summaries.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: product-plan-summaries
            servicePort: 80
          path: /
    - host: apexplatform-stage-product-plan-summaries.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: product-plan-summaries
            servicePort: 80
          path: /
    - host: apexplatform-stage-product-plan-summaries.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: product-plan-summaries
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"product-summaries-ingress"},"name":"product-summaries-ingress","namespace":"apex-stage"},"spec":{"rules":[{"host":"apexplatform-stage-product-summaries.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"product-summaries","servicePort":80},"path":"/"}]}},{"host":"apexplatform-stage-product-summaries.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"product-summaries","servicePort":80},"path":"/"}]}},{"host":"apexplatform-stage-product-summaries.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"product-summaries","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-12-26T19:12:45Z
    generation: 1
    labels:
      name: product-summaries-ingress
    name: product-summaries-ingress
    namespace: apex-stage
    resourceVersion: "109582410"
    selfLink: /apis/extensions/v1beta1/namespaces/apex-stage/ingresses/product-summaries-ingress
    uid: 39dbc4da-0942-11e9-a3f2-525400a6ba56
  spec:
    rules:
    - host: apexplatform-stage-product-summaries.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: product-summaries
            servicePort: 80
          path: /
    - host: apexplatform-stage-product-summaries.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: product-summaries
            servicePort: 80
          path: /
    - host: apexplatform-stage-product-summaries.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: product-summaries
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cars-v1-ingress"},"name":"cars-v1-ingress","namespace":"api-gateway"},"spec":{"rules":[{"host":"cars-v1-gp.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cars-v1-service","servicePort":80},"path":"/"}]}},{"host":"cars-v1-gp.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cars-v1-service","servicePort":80},"path":"/"}]}},{"host":"cars-v1.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cars-v1-service","servicePort":81},"path":"/"}]}},{"host":"cars-v1.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cars-v1-service","servicePort":81},"path":"/"}]}},{"host":"cars-v1-manage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cars-v1-service","servicePort":82},"path":"/"}]}},{"host":"cars-v1-manage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cars-v1-service","servicePort":82},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-05T21:12:10Z
    generation: 1
    labels:
      name: cars-v1-ingress
    name: cars-v1-ingress
    namespace: api-gateway
    resourceVersion: "35176124"
    selfLink: /apis/extensions/v1beta1/namespaces/api-gateway/ingresses/cars-v1-ingress
    uid: 529e38e1-c8e3-11e8-8a20-5254001e2711
  spec:
    rules:
    - host: cars-v1-gp.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cars-v1-service
            servicePort: 80
          path: /
    - host: cars-v1-gp.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cars-v1-service
            servicePort: 80
          path: /
    - host: cars-v1.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cars-v1-service
            servicePort: 81
          path: /
    - host: cars-v1.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cars-v1-service
            servicePort: 81
          path: /
    - host: cars-v1-manage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cars-v1-service
            servicePort: 82
          path: /
    - host: cars-v1-manage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cars-v1-service
            servicePort: 82
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"clippybot-ingress"},"name":"clippybot-ingress","namespace":"api-gateway"},"spec":{"rules":[{"host":"clippybot.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"clippybot-dev-service","servicePort":3000},"path":"/slack_events/v1/clippybot_dev-v1_events"},{"backend":{"serviceName":"clippybot-dev-service","servicePort":3000},"path":"/event_health"},{"backend":{"serviceName":"clippybot-dev-service","servicePort":80},"path":"/metrics"},{"backend":{"serviceName":"clippybot-dev-service","servicePort":80},"path":"/metrics_health"}]}},{"host":"clippybot.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"clippybot-dev-service","servicePort":3000},"path":"/slack_events/v1/clippybot_dev-v1_events"},{"backend":{"serviceName":"clippybot-dev-service","servicePort":3000},"path":"/event_health"},{"backend":{"serviceName":"clippybot-dev-service","servicePort":80},"path":"/metrics"},{"backend":{"serviceName":"clippybot-dev-service","servicePort":80},"path":"/metrics_health"}]}}]}}
    creationTimestamp: 2018-12-04T21:42:00Z
    generation: 1
    labels:
      name: clippybot-ingress
    name: clippybot-ingress
    namespace: api-gateway
    resourceVersion: "88295403"
    selfLink: /apis/extensions/v1beta1/namespaces/api-gateway/ingresses/clippybot-ingress
    uid: 6e7f7146-f80d-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: clippybot.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: clippybot-dev-service
            servicePort: 3000
          path: /slack_events/v1/clippybot_dev-v1_events
        - backend:
            serviceName: clippybot-dev-service
            servicePort: 3000
          path: /event_health
        - backend:
            serviceName: clippybot-dev-service
            servicePort: 80
          path: /metrics
        - backend:
            serviceName: clippybot-dev-service
            servicePort: 80
          path: /metrics_health
    - host: clippybot.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: clippybot-dev-service
            servicePort: 3000
          path: /slack_events/v1/clippybot_dev-v1_events
        - backend:
            serviceName: clippybot-dev-service
            servicePort: 3000
          path: /event_health
        - backend:
            serviceName: clippybot-dev-service
            servicePort: 80
          path: /metrics
        - backend:
            serviceName: clippybot-dev-service
            servicePort: 80
          path: /metrics_health
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"marvinbot-dev-ingress"},"name":"marvinbot-dev-ingress","namespace":"api-gateway"},"spec":{"rules":[{"host":"marvinbot.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"marvinbot-dev-service","servicePort":3000},"path":"/slack_events/v1/marvinbot_dev-v1_events"},{"backend":{"serviceName":"marvinbot-dev-service","servicePort":3000},"path":"/event_health"},{"backend":{"serviceName":"marvinbot-dev-service","servicePort":80},"path":"/metrics"},{"backend":{"serviceName":"marvinbot-dev-service","servicePort":80},"path":"/metrics_health"}]}},{"host":"marvinbot.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"marvinbot-dev-service","servicePort":3000},"path":"/slack_events/v1/marvinbot_dev-v1_events"},{"backend":{"serviceName":"marvinbot-dev-service","servicePort":3000},"path":"/event_health"},{"backend":{"serviceName":"marvinbot-dev-service","servicePort":80},"path":"/metrics"},{"backend":{"serviceName":"marvinbot-dev-service","servicePort":80},"path":"/metrics_health"}]}}]}}
    creationTimestamp: 2018-12-17T21:06:02Z
    generation: 1
    labels:
      name: marvinbot-dev-ingress
    name: marvinbot-dev-ingress
    namespace: api-gateway
    resourceVersion: "100908772"
    selfLink: /apis/extensions/v1beta1/namespaces/api-gateway/ingresses/marvinbot-dev-ingress
    uid: 8f9b0207-023f-11e9-999b-5254008d935f
  spec:
    rules:
    - host: marvinbot.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: marvinbot-dev-service
            servicePort: 3000
          path: /slack_events/v1/marvinbot_dev-v1_events
        - backend:
            serviceName: marvinbot-dev-service
            servicePort: 3000
          path: /event_health
        - backend:
            serviceName: marvinbot-dev-service
            servicePort: 80
          path: /metrics
        - backend:
            serviceName: marvinbot-dev-service
            servicePort: 80
          path: /metrics_health
    - host: marvinbot.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: marvinbot-dev-service
            servicePort: 3000
          path: /slack_events/v1/marvinbot_dev-v1_events
        - backend:
            serviceName: marvinbot-dev-service
            servicePort: 3000
          path: /event_health
        - backend:
            serviceName: marvinbot-dev-service
            servicePort: 80
          path: /metrics
        - backend:
            serviceName: marvinbot-dev-service
            servicePort: 80
          path: /metrics_health
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"runscope-agent-guest-post-order-services-ingress"},"name":"runscope-agent-guest-post-order-services-ingress","namespace":"api-gateway"},"spec":{"rules":[{"host":"runscope-agent-guest-post-order-services.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"runscope-agent-service","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-04T19:11:43Z
    generation: 1
    labels:
      name: runscope-agent-guest-post-order-services-ingress
    name: runscope-agent-guest-post-order-services-ingress
    namespace: api-gateway
    resourceVersion: "149065308"
    selfLink: /apis/extensions/v1beta1/namespaces/api-gateway/ingresses/runscope-agent-guest-post-order-services-ingress
    uid: b559bb3d-28b0-11e9-90e0-52540049c41a
  spec:
    rules:
    - host: runscope-agent-guest-post-order-services.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: runscope-agent-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"runscope-agent-ingress"},"name":"runscope-agent-ingress","namespace":"api-gateway"},"spec":{"rules":[{"host":"runscope-agent-target.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"runscope-agent-service","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-04T21:43:26Z
    generation: 1
    labels:
      name: runscope-agent-ingress
    name: runscope-agent-ingress
    namespace: api-gateway
    resourceVersion: "149184244"
    selfLink: /apis/extensions/v1beta1/namespaces/api-gateway/ingresses/runscope-agent-ingress
    uid: e724727a-28c5-11e9-9c86-525400b195c5
  spec:
    rules:
    - host: runscope-agent-target.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: runscope-agent-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"runscope-agent-ivy-pricing-ingress"},"name":"runscope-agent-ivy-pricing-ingress","namespace":"api-gateway"},"spec":{"rules":[{"host":"runscope-agent-ivy-pricing.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"runscope-agent-service","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-04T21:46:41Z
    generation: 1
    labels:
      name: runscope-agent-ivy-pricing-ingress
    name: runscope-agent-ivy-pricing-ingress
    namespace: api-gateway
    resourceVersion: "149186697"
    selfLink: /apis/extensions/v1beta1/namespaces/api-gateway/ingresses/runscope-agent-ivy-pricing-ingress
    uid: 5b498e28-28c6-11e9-90e0-52540049c41a
  spec:
    rules:
    - host: runscope-agent-ivy-pricing.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: runscope-agent-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"runscope-agent-merch-businesspartner-ingress"},"name":"runscope-agent-merch-businesspartner-ingress","namespace":"api-gateway"},"spec":{"rules":[{"host":"runscope-agent-merch-businesspartner.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"runscope-agent-service","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-04T21:33:27Z
    generation: 1
    labels:
      name: runscope-agent-merch-businesspartner-ingress
    name: runscope-agent-merch-businesspartner-ingress
    namespace: api-gateway
    resourceVersion: "149176020"
    selfLink: /apis/extensions/v1beta1/namespaces/api-gateway/ingresses/runscope-agent-merch-businesspartner-ingress
    uid: 820385b4-28c4-11e9-9c86-525400b195c5
  spec:
    rules:
    - host: runscope-agent-merch-businesspartner.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: runscope-agent-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"runscope-agent-my-performance-mobile-ingress"},"name":"runscope-agent-my-performance-mobile-ingress","namespace":"api-gateway"},"spec":{"rules":[{"host":"runscope-agent-my-performance-mobile.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"runscope-agent-service","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-12-05T21:36:38Z
    generation: 1
    labels:
      name: runscope-agent-my-performance-mobile-ingress
    name: runscope-agent-my-performance-mobile-ingress
    namespace: api-gateway
    resourceVersion: "89268071"
    selfLink: /apis/extensions/v1beta1/namespaces/api-gateway/ingresses/runscope-agent-my-performance-mobile-ingress
    uid: d90845bf-f8d5-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: runscope-agent-my-performance-mobile.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: runscope-agent-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"status-page-events-v1-ingress"},"name":"status-page-events-v1-ingress","namespace":"api-gateway"},"spec":{"rules":[{"host":"status-page-events-v1-app.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"status-page-events-v1-service","servicePort":80},"path":"/"}]}},{"host":"status-page-events-v1-app.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"status-page-events-v1-service","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-01-31T17:46:36Z
    generation: 1
    labels:
      name: status-page-events-v1-ingress
    name: status-page-events-v1-ingress
    namespace: api-gateway
    resourceVersion: "144996044"
    selfLink: /apis/extensions/v1beta1/namespaces/api-gateway/ingresses/status-page-events-v1-ingress
    uid: 27fb892c-2580-11e9-90e0-52540049c41a
  spec:
    rules:
    - host: status-page-events-v1-app.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: status-page-events-v1-service
            servicePort: 80
          path: /
    - host: status-page-events-v1-app.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: status-page-events-v1-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-10T20:11:00Z
    generation: 1
    labels:
      app: autobahn-corona-item-sdm-v1-consumer
    name: autobahn-corona-item-sdm-v1-consumer
    namespace: autobahn
    resourceVersion: "38506617"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-corona-item-sdm-v1-consumer
    uid: 9b0a19c8-ccc8-11e8-8770-525400a7f06e
  spec:
    rules:
    - host: autobahn-corona-item-sdm-v1-consumer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-corona-item-sdm-v1-consumer
            servicePort: 5050
          path: /
    - host: autobahn-corona-item-sdm-v1-consumer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-corona-item-sdm-v1-consumer
            servicePort: 5050
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-10T20:11:21Z
    generation: 1
    labels:
      app: autobahn-corona-item-sdm-v1-explorer
    name: autobahn-corona-item-sdm-v1-explorer
    namespace: autobahn
    resourceVersion: "38506618"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-corona-item-sdm-v1-explorer
    uid: a7d14040-ccc8-11e8-8770-525400a7f06e
  spec:
    rules:
    - host: autobahn-corona-item-sdm-v1-explorer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-corona-item-sdm-v1-explorer
            servicePort: 8080
          path: /
    - host: autobahn-corona-item-sdm-v1-explorer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-corona-item-sdm-v1-explorer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-11-24T17:26:44Z
    generation: 1
    labels:
      app: autobahn-corona-item-sdm-v1-producer
    name: autobahn-corona-item-sdm-v1-producer
    namespace: autobahn
    resourceVersion: "78632426"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-corona-item-sdm-v1-producer
    uid: 1d297f69-f00e-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: autobahn-corona-item-sdm-v1-producer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-corona-item-sdm-v1-producer
            servicePort: 8080
          path: /
    - host: autobahn-corona-item-sdm-v1-producer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-corona-item-sdm-v1-producer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-01-28T23:41:38Z
    generation: 1
    labels:
      app: autobahn-ewic-apl-v1-consumer
    name: autobahn-ewic-apl-v1-consumer
    namespace: autobahn
    resourceVersion: "142496682"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-ewic-apl-v1-consumer
    uid: 4146a0b1-2356-11e9-9f4c-52540007c5b2
  spec:
    rules:
    - host: autobahn-ewic-apl-v1-consumer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-ewic-apl-v1-consumer
            servicePort: 5050
          path: /
    - host: autobahn-ewic-apl-v1-consumer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-ewic-apl-v1-consumer
            servicePort: 5050
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-01-28T23:35:18Z
    generation: 1
    labels:
      app: autobahn-ewic-apl-v1-explorer
    name: autobahn-ewic-apl-v1-explorer
    namespace: autobahn
    resourceVersion: "142492633"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-ewic-apl-v1-explorer
    uid: 5f2a11e4-2355-11e9-9f4c-52540007c5b2
  spec:
    rules:
    - host: autobahn-ewic-apl-v1-explorer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-ewic-apl-v1-explorer
            servicePort: 8080
          path: /
    - host: autobahn-ewic-apl-v1-explorer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-ewic-apl-v1-explorer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-01-28T23:32:43Z
    generation: 1
    labels:
      app: autobahn-ewic-apl-v1-producer
    name: autobahn-ewic-apl-v1-producer
    namespace: autobahn
    resourceVersion: "142491209"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-ewic-apl-v1-producer
    uid: 02d58d22-2355-11e9-9f4c-52540007c5b2
  spec:
    rules:
    - host: autobahn-ewic-apl-v1-producer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-ewic-apl-v1-producer
            servicePort: 8080
          path: /
    - host: autobahn-ewic-apl-v1-producer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-ewic-apl-v1-producer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-06T20:32:27Z
    generation: 1
    labels:
      app: autobahn-family-code-v1-producer
    name: autobahn-family-code-v1-producer
    namespace: autobahn
    resourceVersion: "180023703"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-family-code-v1-producer
    uid: f52ace2b-404e-11e9-ae3d-52540007651c
  spec:
    rules:
    - host: autobahn-family-code-v1-producer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-family-code-v1-producer
            servicePort: 8080
          path: /
    - host: autobahn-family-code-v1-producer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-family-code-v1-producer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-08T15:58:34Z
    generation: 2
    labels:
      app: autobahn-first-mile-domestic-transit-times-v2-consumer
    name: autobahn-first-mile-domestic-transit-times-v2-consumer
    namespace: autobahn
    resourceVersion: "80441643"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-first-mile-domestic-transit-times-v2-consumer
    uid: 028009a9-cb13-11e8-8a20-5254001e2711
  spec:
    rules:
    - host: autobahn-first-mile-domestic-transit-times-v2-consumer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-first-mile-domestic-transit-times-v2-consumer
            servicePort: 5050
          path: /
    - host: autobahn-first-mile-domestic-transit-times-v2-consumer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-first-mile-domestic-transit-times-v2-consumer
            servicePort: 5050
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-09T03:33:18Z
    generation: 2
    labels:
      app: autobahn-first-mile-domestic-transit-times-v2-producer
    name: autobahn-first-mile-domestic-transit-times-v2-producer
    namespace: autobahn
    resourceVersion: "81605952"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-first-mile-domestic-transit-times-v2-producer
    uid: 107380a4-cb74-11e8-93f3-5254000c5c7e
  spec:
    rules:
    - host: autobahn-first-mile-domestic-transit-times-v2-producer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-first-mile-domestic-transit-times-v2-producer
            servicePort: 8080
          path: /
    - host: autobahn-first-mile-domestic-transit-times-v2-producer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-first-mile-domestic-transit-times-v2-producer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-19T13:10:57Z
    generation: 1
    labels:
      app: autobahn-gateway-api-keys-v2-explorer
    name: autobahn-gateway-api-keys-v2-explorer
    namespace: autobahn
    resourceVersion: "45784111"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-gateway-api-keys-v2-explorer
    uid: 6ae9a3f1-d3a0-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: autobahn-gateway-api-keys-v2-explorer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-gateway-api-keys-v2-explorer
            servicePort: 8080
          path: /
    - host: autobahn-gateway-api-keys-v2-explorer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-gateway-api-keys-v2-explorer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-19T13:07:43Z
    generation: 1
    labels:
      app: autobahn-gateway-api-keys-v2-producer
    name: autobahn-gateway-api-keys-v2-producer
    namespace: autobahn
    resourceVersion: "45782391"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-gateway-api-keys-v2-producer
    uid: f762dbbf-d39f-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: autobahn-gateway-api-keys-v2-producer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-gateway-api-keys-v2-producer
            servicePort: 8080
          path: /
    - host: autobahn-gateway-api-keys-v2-producer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-gateway-api-keys-v2-producer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-08T01:03:17Z
    generation: 1
    labels:
      app: autobahn-gateway-api-specs-v1-producer
    name: autobahn-gateway-api-specs-v1-producer
    namespace: autobahn
    resourceVersion: "181169122"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-gateway-api-specs-v1-producer
    uid: f53ccc41-413d-11e9-ae3d-52540007651c
  spec:
    rules:
    - host: autobahn-gateway-api-specs-v1-producer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-gateway-api-specs-v1-producer
            servicePort: 8080
          path: /
    - host: autobahn-gateway-api-specs-v1-producer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-gateway-api-specs-v1-producer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-12-13T19:17:03Z
    generation: 1
    labels:
      app: autobahn-iceberg-kubernetes-v1-consumer
    name: autobahn-iceberg-kubernetes-v1-consumer
    namespace: autobahn
    resourceVersion: "96937077"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-iceberg-kubernetes-v1-consumer
    uid: abfed6ae-ff0b-11e8-999b-5254008d935f
  spec:
    rules:
    - host: autobahn-iceberg-kubernetes-v1-consumer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-iceberg-kubernetes-v1-consumer
            servicePort: 5050
          path: /
    - host: autobahn-iceberg-kubernetes-v1-consumer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-iceberg-kubernetes-v1-consumer
            servicePort: 5050
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-12-13T22:21:12Z
    generation: 1
    labels:
      app: autobahn-iceberg-kubernetes-v1-explorer
    name: autobahn-iceberg-kubernetes-v1-explorer
    namespace: autobahn
    resourceVersion: "97066506"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-iceberg-kubernetes-v1-explorer
    uid: 664d11af-ff25-11e8-999b-5254008d935f
  spec:
    rules:
    - host: autobahn-iceberg-kubernetes-v1-explorer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-iceberg-kubernetes-v1-explorer
            servicePort: 8080
          path: /
    - host: autobahn-iceberg-kubernetes-v1-explorer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-iceberg-kubernetes-v1-explorer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-12-11T15:25:59Z
    generation: 1
    labels:
      app: autobahn-iceberg-kubernetes-v1-producer
    name: autobahn-iceberg-kubernetes-v1-producer
    namespace: autobahn
    resourceVersion: "94792328"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-iceberg-kubernetes-v1-producer
    uid: 1016c5cd-fd59-11e8-999b-5254008d935f
  spec:
    rules:
    - host: autobahn-iceberg-kubernetes-v1-producer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-iceberg-kubernetes-v1-producer
            servicePort: 8080
          path: /
    - host: autobahn-iceberg-kubernetes-v1-producer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-iceberg-kubernetes-v1-producer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-04T16:48:56Z
    generation: 1
    labels:
      app: autobahn-inr-reactive-pull-v1-v1-producer
    name: autobahn-inr-reactive-pull-v1-v1-producer
    namespace: autobahn
    resourceVersion: "178088720"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-inr-reactive-pull-v1-v1-producer
    uid: 66881e92-3e9d-11e9-81c2-52540003963e
  spec:
    rules:
    - host: autobahn-inr-reactive-pull-v1-v1-producer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-inr-reactive-pull-v1-v1-producer
            servicePort: 8080
          path: /
    - host: autobahn-inr-reactive-pull-v1-v1-producer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-inr-reactive-pull-v1-v1-producer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-04T15:07:24Z
    generation: 1
    labels:
      app: autobahn-item-loc-v0-producer
    name: autobahn-item-loc-v0-producer
    namespace: autobahn
    resourceVersion: "178017337"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-item-loc-v0-producer
    uid: 379c29f2-3e8f-11e9-81c2-52540003963e
  spec:
    rules:
    - host: autobahn-item-loc-v0-producer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-item-loc-v0-producer
            servicePort: 8080
          path: /
    - host: autobahn-item-loc-v0-producer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-item-loc-v0-producer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-02-27T17:33:21Z
    generation: 1
    labels:
      app: autobahn-item-loc-v1-producer
    name: autobahn-item-loc-v1-producer
    namespace: autobahn
    resourceVersion: "172890994"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-item-loc-v1-producer
    uid: c6fe6fd0-3ab5-11e9-8c81-525400abdf59
  spec:
    rules:
    - host: autobahn-item-loc-v1-producer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-item-loc-v1-producer
            servicePort: 8080
          path: /
    - host: autobahn-item-loc-v1-producer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-item-loc-v1-producer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-17T18:06:56Z
    generation: 2
    labels:
      app: autobahn-item-location-placements-v2-consumer
    name: autobahn-item-location-placements-v2-consumer
    namespace: autobahn
    resourceVersion: "118098865"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-item-location-placements-v2-consumer
    uid: 6ef0a5d3-d237-11e8-999f-52540096678d
  spec:
    rules:
    - host: autobahn-item-location-placements-v2-consumer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-item-location-placements-v2-consumer
            servicePort: 5050
          path: /
    - host: autobahn-item-location-placements-v2-consumer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-item-location-placements-v2-consumer
            servicePort: 5050
          path: /
    - host: autobahn-item-location-placements-v2-consumerlive.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-item-location-placements-v2-consumerlive
            servicePort: 8080
          path: /
    - host: autobahn-item-location-placements-v2-consumerlive.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-item-location-placements-v2-consumerlive
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-11-14T16:15:52Z
    generation: 1
    labels:
      app: autobahn-item-location-placements-v2-explorer
    name: autobahn-item-location-placements-v2-explorer
    namespace: autobahn
    resourceVersion: "69065204"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-item-location-placements-v2-explorer
    uid: 8e972da3-e828-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: autobahn-item-location-placements-v2-explorer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-item-location-placements-v2-explorer
            servicePort: 8080
          path: /
    - host: autobahn-item-location-placements-v2-explorer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-item-location-placements-v2-explorer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-09T05:19:51Z
    generation: 1
    labels:
      app: autobahn-item-location-placements-v2-producer
    name: autobahn-item-location-placements-v2-producer
    namespace: autobahn
    resourceVersion: "37298612"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-item-location-placements-v2-producer
    uid: f290861a-cb82-11e8-bad5-525400b91df9
  spec:
    rules:
    - host: autobahn-item-location-placements-v2-producer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-item-location-placements-v2-producer
            servicePort: 8080
          path: /
    - host: autobahn-item-location-placements-v2-producer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-item-location-placements-v2-producer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"autobahn-kubernetes-api-deployer"},"name":"autobahn-kubernetes-api-deployer","namespace":"autobahn"},"spec":{"rules":[{"host":"autobahn-kubernetes-api-deployer.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"autobahn-kubernetes-api-deployer","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-05T20:47:33Z
    generation: 1
    labels:
      app: autobahn-kubernetes-api-deployer
    name: autobahn-kubernetes-api-deployer
    namespace: autobahn
    resourceVersion: "35164425"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-kubernetes-api-deployer
    uid: e2318fbd-c8df-11e8-bad5-525400b91df9
  spec:
    rules:
    - host: autobahn-kubernetes-api-deployer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-kubernetes-api-deployer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-02-01T16:41:13Z
    generation: 1
    labels:
      app: autobahn-offer-store-products-v1-consumer
    name: autobahn-offer-store-products-v1-consumer
    namespace: autobahn
    resourceVersion: "145919102"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-offer-store-products-v1-consumer
    uid: 2fafeaf9-2640-11e9-90e0-52540049c41a
  spec:
    rules:
    - host: autobahn-offer-store-products-v1-consumer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-offer-store-products-v1-consumer
            servicePort: 5050
          path: /
    - host: autobahn-offer-store-products-v1-consumer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-offer-store-products-v1-consumer
            servicePort: 5050
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-02-01T16:42:43Z
    generation: 1
    labels:
      app: autobahn-offer-store-products-v1-explorer
    name: autobahn-offer-store-products-v1-explorer
    namespace: autobahn
    resourceVersion: "145920661"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-offer-store-products-v1-explorer
    uid: 65acf343-2640-11e9-90e0-52540049c41a
  spec:
    rules:
    - host: autobahn-offer-store-products-v1-explorer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-offer-store-products-v1-explorer
            servicePort: 8080
          path: /
    - host: autobahn-offer-store-products-v1-explorer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-offer-store-products-v1-explorer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-02-01T16:33:31Z
    generation: 1
    labels:
      app: autobahn-offer-store-products-v1-producer
    name: autobahn-offer-store-products-v1-producer
    namespace: autobahn
    resourceVersion: "145913834"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-offer-store-products-v1-producer
    uid: 1c3e85c1-263f-11e9-90e0-52540049c41a
  spec:
    rules:
    - host: autobahn-offer-store-products-v1-producer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-offer-store-products-v1-producer
            servicePort: 8080
          path: /
    - host: autobahn-offer-store-products-v1-producer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-offer-store-products-v1-producer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-02-01T19:03:06Z
    generation: 1
    labels:
      app: autobahn-offer-store-promotions-v1-consumer
    name: autobahn-offer-store-promotions-v1-consumer
    namespace: autobahn
    resourceVersion: "146021619"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-offer-store-promotions-v1-consumer
    uid: 0227f1d4-2654-11e9-90e0-52540049c41a
  spec:
    rules:
    - host: autobahn-offer-store-promotions-v1-consumer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-offer-store-promotions-v1-consumer
            servicePort: 5050
          path: /
    - host: autobahn-offer-store-promotions-v1-consumer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-offer-store-promotions-v1-consumer
            servicePort: 5050
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-02-01T19:03:24Z
    generation: 1
    labels:
      app: autobahn-offer-store-promotions-v1-explorer
    name: autobahn-offer-store-promotions-v1-explorer
    namespace: autobahn
    resourceVersion: "146022594"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-offer-store-promotions-v1-explorer
    uid: 0cbacae2-2654-11e9-90e0-52540049c41a
  spec:
    rules:
    - host: autobahn-offer-store-promotions-v1-explorer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-offer-store-promotions-v1-explorer
            servicePort: 8080
          path: /
    - host: autobahn-offer-store-promotions-v1-explorer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-offer-store-promotions-v1-explorer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-02-01T18:53:17Z
    generation: 1
    labels:
      app: autobahn-offer-store-promotions-v1-producer
    name: autobahn-offer-store-promotions-v1-producer
    namespace: autobahn
    resourceVersion: "146014129"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-offer-store-promotions-v1-producer
    uid: a2ff854c-2652-11e9-90e0-52540049c41a
  spec:
    rules:
    - host: autobahn-offer-store-promotions-v1-producer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-offer-store-promotions-v1-producer
            servicePort: 8080
          path: /
    - host: autobahn-offer-store-promotions-v1-producer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-offer-store-promotions-v1-producer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-19T18:02:57Z
    generation: 1
    labels:
      app: autobahn-pos-location-v1-consumer
    name: autobahn-pos-location-v1-consumer
    namespace: autobahn
    resourceVersion: "192030920"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-pos-location-v1-consumer
    uid: 39b91abd-4a71-11e9-b096-525400ca6771
  spec:
    rules:
    - host: autobahn-pos-location-v1-consumer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-pos-location-v1-consumer
            servicePort: 5050
          path: /
    - host: autobahn-pos-location-v1-consumer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-pos-location-v1-consumer
            servicePort: 5050
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-19T18:13:51Z
    generation: 1
    labels:
      app: autobahn-pos-location-v1-explorer
    name: autobahn-pos-location-v1-explorer
    namespace: autobahn
    resourceVersion: "192040401"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-pos-location-v1-explorer
    uid: bfa0eed5-4a72-11e9-b096-525400ca6771
  spec:
    rules:
    - host: autobahn-pos-location-v1-explorer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-pos-location-v1-explorer
            servicePort: 8080
          path: /
    - host: autobahn-pos-location-v1-explorer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-pos-location-v1-explorer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-19T17:51:01Z
    generation: 1
    labels:
      app: autobahn-pos-location-v1-producer
    name: autobahn-pos-location-v1-producer
    namespace: autobahn
    resourceVersion: "192022610"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-pos-location-v1-producer
    uid: 8f39e5f8-4a6f-11e9-b096-525400ca6771
  spec:
    rules:
    - host: autobahn-pos-location-v1-producer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-pos-location-v1-producer
            servicePort: 8080
          path: /
    - host: autobahn-pos-location-v1-producer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-pos-location-v1-producer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-01-11T18:24:54Z
    generation: 1
    labels:
      app: autobahn-salesfloor-presentation-units-v3-explorer
    name: autobahn-salesfloor-presentation-units-v3-explorer
    namespace: autobahn
    resourceVersion: "125163937"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-salesfloor-presentation-units-v3-explorer
    uid: 310a98a8-15ce-11e9-82a9-5254003cfc52
  spec:
    rules:
    - host: autobahn-salesfloor-presentation-units-v3-explorer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-salesfloor-presentation-units-v3-explorer
            servicePort: 8080
          path: /
    - host: autobahn-salesfloor-presentation-units-v3-explorer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-salesfloor-presentation-units-v3-explorer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-24T04:07:23Z
    generation: 1
    labels:
      app: autobahn-salesfloor-presentation-units-v3-producer
    name: autobahn-salesfloor-presentation-units-v3-producer
    namespace: autobahn
    resourceVersion: "49600856"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-salesfloor-presentation-units-v3-producer
    uid: 4f684d91-d742-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: autobahn-salesfloor-presentation-units-v3-producer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-salesfloor-presentation-units-v3-producer
            servicePort: 8080
          path: /
    - host: autobahn-salesfloor-presentation-units-v3-producer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-salesfloor-presentation-units-v3-producer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-02-21T20:39:21Z
    generation: 1
    labels:
      app: autobahn-sms-seller-updates-v1-consumer
    name: autobahn-sms-seller-updates-v1-consumer
    namespace: autobahn
    resourceVersion: "165581868"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-sms-seller-updates-v1-consumer
    uid: c452f4ce-3618-11e9-ba28-52540054e5ef
  spec:
    rules:
    - host: autobahn-sms-seller-updates-v1-consumer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-sms-seller-updates-v1-consumer
            servicePort: 5050
          path: /
    - host: autobahn-sms-seller-updates-v1-consumer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-sms-seller-updates-v1-consumer
            servicePort: 5050
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-02-21T20:40:03Z
    generation: 1
    labels:
      app: autobahn-sms-seller-updates-v1-explorer
    name: autobahn-sms-seller-updates-v1-explorer
    namespace: autobahn
    resourceVersion: "165582675"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-sms-seller-updates-v1-explorer
    uid: dd7916a0-3618-11e9-ba28-52540054e5ef
  spec:
    rules:
    - host: autobahn-sms-seller-updates-v1-explorer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-sms-seller-updates-v1-explorer
            servicePort: 8080
          path: /
    - host: autobahn-sms-seller-updates-v1-explorer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-sms-seller-updates-v1-explorer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-02-21T20:13:18Z
    generation: 1
    labels:
      app: autobahn-sms-seller-updates-v1-producer
    name: autobahn-sms-seller-updates-v1-producer
    namespace: autobahn
    resourceVersion: "165563986"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-sms-seller-updates-v1-producer
    uid: 2121c594-3615-11e9-b42d-5254003b1534
  spec:
    rules:
    - host: autobahn-sms-seller-updates-v1-producer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-sms-seller-updates-v1-producer
            servicePort: 8080
          path: /
    - host: autobahn-sms-seller-updates-v1-producer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-sms-seller-updates-v1-producer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-12-21T23:16:38Z
    generation: 1
    labels:
      app: autobahn-stores-stc-alert-acks-v1-consumer
    name: autobahn-stores-stc-alert-acks-v1-consumer
    namespace: autobahn
    resourceVersion: "104946015"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-stores-stc-alert-acks-v1-consumer
    uid: 77b00a4f-0576-11e9-b513-525400493f0a
  spec:
    rules:
    - host: autobahn-stores-stc-alert-acks-v1-consumer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-stores-stc-alert-acks-v1-consumer
            servicePort: 5050
          path: /
    - host: autobahn-stores-stc-alert-acks-v1-consumer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-stores-stc-alert-acks-v1-consumer
            servicePort: 5050
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-12-21T23:15:51Z
    generation: 1
    labels:
      app: autobahn-stores-stc-alert-acks-v1-explorer
    name: autobahn-stores-stc-alert-acks-v1-explorer
    namespace: autobahn
    resourceVersion: "104946014"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-stores-stc-alert-acks-v1-explorer
    uid: 5ba36518-0576-11e9-b513-525400493f0a
  spec:
    rules:
    - host: autobahn-stores-stc-alert-acks-v1-explorer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-stores-stc-alert-acks-v1-explorer
            servicePort: 8080
          path: /
    - host: autobahn-stores-stc-alert-acks-v1-explorer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-stores-stc-alert-acks-v1-explorer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-12-21T23:05:17Z
    generation: 1
    labels:
      app: autobahn-stores-stc-alert-acks-v1-producer
    name: autobahn-stores-stc-alert-acks-v1-producer
    namespace: autobahn
    resourceVersion: "104938415"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-stores-stc-alert-acks-v1-producer
    uid: e1ca0609-0574-11e9-b513-525400493f0a
  spec:
    rules:
    - host: autobahn-stores-stc-alert-acks-v1-producer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-stores-stc-alert-acks-v1-producer
            servicePort: 8080
          path: /
    - host: autobahn-stores-stc-alert-acks-v1-producer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-stores-stc-alert-acks-v1-producer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-02-08T15:05:11Z
    generation: 1
    labels:
      app: autobahn-strategy-rules-evaluations-v1-consumer
    name: autobahn-strategy-rules-evaluations-v1-consumer
    namespace: autobahn
    resourceVersion: "153117336"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-strategy-rules-evaluations-v1-consumer
    uid: ee3cd7c9-2bb2-11e9-b42d-5254003b1534
  spec:
    rules:
    - host: autobahn-strategy-rules-evaluations-v1-consumer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-strategy-rules-evaluations-v1-consumer
            servicePort: 5050
          path: /
    - host: autobahn-strategy-rules-evaluations-v1-consumer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-strategy-rules-evaluations-v1-consumer
            servicePort: 5050
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-02-08T15:05:39Z
    generation: 1
    labels:
      app: autobahn-strategy-rules-evaluations-v1-explorer
    name: autobahn-strategy-rules-evaluations-v1-explorer
    namespace: autobahn
    resourceVersion: "153117337"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-strategy-rules-evaluations-v1-explorer
    uid: fedf5dfc-2bb2-11e9-b42d-5254003b1534
  spec:
    rules:
    - host: autobahn-strategy-rules-evaluations-v1-explorer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-strategy-rules-evaluations-v1-explorer
            servicePort: 8080
          path: /
    - host: autobahn-strategy-rules-evaluations-v1-explorer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-strategy-rules-evaluations-v1-explorer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-02-08T15:03:16Z
    generation: 1
    labels:
      app: autobahn-strategy-rules-evaluations-v1-producer
    name: autobahn-strategy-rules-evaluations-v1-producer
    namespace: autobahn
    resourceVersion: "153115838"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-strategy-rules-evaluations-v1-producer
    uid: a991f81e-2bb2-11e9-b42d-5254003b1534
  spec:
    rules:
    - host: autobahn-strategy-rules-evaluations-v1-producer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-strategy-rules-evaluations-v1-producer
            servicePort: 8080
          path: /
    - host: autobahn-strategy-rules-evaluations-v1-producer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-strategy-rules-evaluations-v1-producer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-13T02:13:46Z
    generation: 1
    labels:
      app: autobahn-supplychain-attributes-v1-consumer
    name: autobahn-supplychain-attributes-v1-consumer
    namespace: autobahn
    resourceVersion: "185966579"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-supplychain-attributes-v1-consumer
    uid: a2224cf7-4535-11e9-aff2-525400dba923
  spec:
    rules:
    - host: autobahn-supplychain-attributes-v1-consumer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-supplychain-attributes-v1-consumer
            servicePort: 5050
          path: /
    - host: autobahn-supplychain-attributes-v1-consumer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-supplychain-attributes-v1-consumer
            servicePort: 5050
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-13T02:14:16Z
    generation: 1
    labels:
      app: autobahn-supplychain-attributes-v1-explorer
    name: autobahn-supplychain-attributes-v1-explorer
    namespace: autobahn
    resourceVersion: "185967121"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-supplychain-attributes-v1-explorer
    uid: b3cbcbcb-4535-11e9-aff2-525400dba923
  spec:
    rules:
    - host: autobahn-supplychain-attributes-v1-explorer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-supplychain-attributes-v1-explorer
            servicePort: 8080
          path: /
    - host: autobahn-supplychain-attributes-v1-explorer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-supplychain-attributes-v1-explorer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-12T21:37:27Z
    generation: 1
    labels:
      app: autobahn-supplychain-attributes-v1-producer
    name: autobahn-supplychain-attributes-v1-producer
    namespace: autobahn
    resourceVersion: "185786269"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-supplychain-attributes-v1-producer
    uid: 07eb8bf5-450f-11e9-aff2-525400dba923
  spec:
    rules:
    - host: autobahn-supplychain-attributes-v1-producer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-supplychain-attributes-v1-producer
            servicePort: 8080
          path: /
    - host: autobahn-supplychain-attributes-v1-producer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-supplychain-attributes-v1-producer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-21T15:09:21Z
    generation: 1
    labels:
      app: autobahn-touchpoint-v1-consumer
    name: autobahn-touchpoint-v1-consumer
    namespace: autobahn
    resourceVersion: "193713055"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-touchpoint-v1-consumer
    uid: 4e4c4074-4beb-11e9-b096-525400ca6771
  spec:
    rules:
    - host: autobahn-touchpoint-v1-consumer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-touchpoint-v1-consumer
            servicePort: 5050
          path: /
    - host: autobahn-touchpoint-v1-consumer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-touchpoint-v1-consumer
            servicePort: 5050
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-21T15:09:58Z
    generation: 1
    labels:
      app: autobahn-touchpoint-v1-explorer
    name: autobahn-touchpoint-v1-explorer
    namespace: autobahn
    resourceVersion: "193713733"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-touchpoint-v1-explorer
    uid: 64712bb0-4beb-11e9-b096-525400ca6771
  spec:
    rules:
    - host: autobahn-touchpoint-v1-explorer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-touchpoint-v1-explorer
            servicePort: 8080
          path: /
    - host: autobahn-touchpoint-v1-explorer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-touchpoint-v1-explorer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-21T15:06:47Z
    generation: 1
    labels:
      app: autobahn-touchpoint-v1-producer
    name: autobahn-touchpoint-v1-producer
    namespace: autobahn
    resourceVersion: "193711192"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-touchpoint-v1-producer
    uid: f25b2b31-4bea-11e9-b096-525400ca6771
  spec:
    rules:
    - host: autobahn-touchpoint-v1-producer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-touchpoint-v1-producer
            servicePort: 8080
          path: /
    - host: autobahn-touchpoint-v1-producer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-touchpoint-v1-producer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-11-29T04:57:07Z
    generation: 1
    labels:
      app: autobahn-vendors-v2-consumer
    name: autobahn-vendors-v2-consumer
    namespace: autobahn
    resourceVersion: "82846207"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-vendors-v2-consumer
    uid: 39181cdd-f393-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: autobahn-vendors-v2-consumer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-vendors-v2-consumer
            servicePort: 5050
          path: /
    - host: autobahn-vendors-v2-consumer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-vendors-v2-consumer
            servicePort: 5050
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"ingest-web-ingress"},"name":"ingest-web-ingress","namespace":"bifrost"},"spec":{"rules":[{"host":"ingest-web-memento.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ingest-web-service","servicePort":80},"path":"/"}]}},{"host":"ingest-web-memento.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ingest-web-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["ingest-web-memento.test.k8s.target.com","ingest-web-memento.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-17T21:53:57Z
    generation: 2
    labels:
      name: ingest-web-ingress
    name: ingest-web-ingress
    namespace: bifrost
    resourceVersion: "14291449"
    selfLink: /apis/extensions/v1beta1/namespaces/bifrost/ingresses/ingest-web-ingress
    uid: 0af4bd61-a268-11e8-8dd4-5254004139fa
  spec:
    rules:
    - host: ingest-web-memento.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ingest-web-service
            servicePort: 80
          path: /
    - host: ingest-web-memento.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ingest-web-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - ingest-web-memento.test.k8s.target.com
      - ingest-web-memento.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"memento-ingest-ingress"},"name":"memento-ingest-ingress","namespace":"bifrost"},"spec":{"rules":[{"host":"collector.mementwo.test.target.com","http":{"paths":[{"backend":{"serviceName":"memento-ingest-go-proxy-service","servicePort":8888},"path":"/"}]}},{"host":"go-proxy-memento-ingest.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"memento-ingest-go-proxy-service","servicePort":8888},"path":"/"}]}},{"host":"go-proxy-memento-ingest.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"memento-ingest-go-proxy-service","servicePort":8888},"path":"/"}]}},{"host":"go-proxy-memento-ingest.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"memento-ingest-go-proxy-service","servicePort":8888},"path":"/"}]}},{"host":"memento-ingest.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"memento-ingest-service","servicePort":9999},"path":"/"}]}},{"host":"memento-ingest.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"memento-ingest-service","servicePort":9999},"path":"/"}]}},{"host":"memento-ingest.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"memento-ingest-service","servicePort":9999},"path":"/"}]}}],"tls":[{"hosts":["collector.mementwo.test.target.com","go-proxy-memento-ingest.ttc-test.k8s.target.com","go-proxy-memento-ingest.tte-test.k8s.target.com","go-proxy-memento-ingest.test.k8s.target.com","memento-ingest.ttc-test.k8s.target.com","memento-ingest.tte-test.k8s.target.com","memento-ingest.test.k8s.target.com"],"secretName":"vanitysecret"}]}}
    creationTimestamp: 2018-08-21T13:40:19Z
    generation: 3
    labels:
      name: memento-ingest-ingress
    name: memento-ingest-ingress
    namespace: bifrost
    resourceVersion: "19027007"
    selfLink: /apis/extensions/v1beta1/namespaces/bifrost/ingresses/memento-ingest-ingress
    uid: be6abc0f-a547-11e8-8dd4-5254004139fa
  spec:
    rules:
    - host: collector.mementwo.test.target.com
      http:
        paths:
        - backend:
            serviceName: memento-ingest-go-proxy-service
            servicePort: 8888
          path: /
    - host: go-proxy-memento-ingest.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: memento-ingest-go-proxy-service
            servicePort: 8888
          path: /
    - host: go-proxy-memento-ingest.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: memento-ingest-go-proxy-service
            servicePort: 8888
          path: /
    - host: go-proxy-memento-ingest.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: memento-ingest-go-proxy-service
            servicePort: 8888
          path: /
    - host: memento-ingest.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: memento-ingest-service
            servicePort: 9999
          path: /
    - host: memento-ingest.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: memento-ingest-service
            servicePort: 9999
          path: /
    - host: memento-ingest.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: memento-ingest-service
            servicePort: 9999
          path: /
    tls:
    - hosts:
      - collector.mementwo.test.target.com
      - go-proxy-memento-ingest.ttc-test.k8s.target.com
      - go-proxy-memento-ingest.tte-test.k8s.target.com
      - go-proxy-memento-ingest.test.k8s.target.com
      - memento-ingest.ttc-test.k8s.target.com
      - memento-ingest.tte-test.k8s.target.com
      - memento-ingest.test.k8s.target.com
      secretName: vanitysecret
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-12-07T22:05:45Z
    generation: 1
    name: cannonball-data-access-ingress
    namespace: cannonball
    resourceVersion: "91255493"
    selfLink: /apis/extensions/v1beta1/namespaces/cannonball/ingresses/cannonball-data-access-ingress
    uid: 3ef9573f-fa6c-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: cannonball-data-access.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: test-data-access-cannonball-data-access
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cannonball-data-access.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-12-07T22:05:46Z
    generation: 1
    name: cannonball-data-access-single-region-ingress
    namespace: cannonball
    resourceVersion: "91255494"
    selfLink: /apis/extensions/v1beta1/namespaces/cannonball/ingresses/cannonball-data-access-single-region-ingress
    uid: 3fbb4372-fa6c-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: cannonball-data-access.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: test-data-access-cannonball-data-access
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cannonball-data-access.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-18T21:23:36Z
    generation: 1
    name: cannonball-guest-api-ingress-gp
    namespace: cannonball
    resourceVersion: "191267621"
    selfLink: /apis/extensions/v1beta1/namespaces/cannonball/ingresses/cannonball-guest-api-ingress-gp
    uid: 1724b2a4-49c4-11e9-ad83-525400a854be
  spec:
    rules:
    - host: cannonball-guest-api-gp.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: test-cannonball-guest-api-cannonball-guest-api-gp
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cannonball-guest-api-gp.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-18T21:23:34Z
    generation: 1
    name: cannonball-guest-api-single-region-ingress-gp
    namespace: cannonball
    resourceVersion: "191267620"
    selfLink: /apis/extensions/v1beta1/namespaces/cannonball/ingresses/cannonball-guest-api-single-region-ingress-gp
    uid: 15f1fccd-49c4-11e9-ad83-525400a854be
  spec:
    rules:
    - host: cannonball-guest-api-gp.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: test-cannonball-guest-api-cannonball-guest-api-gp
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cannonball-guest-api-gp.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-22T15:14:18Z
    generation: 1
    name: cannonball-team-member-api-ingress
    namespace: cannonball
    resourceVersion: "194639065"
    selfLink: /apis/extensions/v1beta1/namespaces/cannonball/ingresses/cannonball-team-member-api-ingress
    uid: 29796630-4cb5-11e9-b3bf-525400884743
  spec:
    rules:
    - host: cannonball-team-member-api.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: test-cannonball-team-member-api-cannonball-team-member-api
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cannonball-team-member-api.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-22T15:14:12Z
    generation: 1
    name: cannonball-team-member-api-ingress-gp
    namespace: cannonball
    resourceVersion: "194639064"
    selfLink: /apis/extensions/v1beta1/namespaces/cannonball/ingresses/cannonball-team-member-api-ingress-gp
    uid: 2614ebe7-4cb5-11e9-b3bf-525400884743
  spec:
    rules:
    - host: cannonball-team-member-api-gp.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: test-cannonball-team-member-api-cannonball-team-member-api-gp
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cannonball-team-member-api-gp.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-22T15:14:15Z
    generation: 1
    name: cannonball-team-member-api-single-region-ingress
    namespace: cannonball
    resourceVersion: "194639066"
    selfLink: /apis/extensions/v1beta1/namespaces/cannonball/ingresses/cannonball-team-member-api-single-region-ingress
    uid: 2817c51a-4cb5-11e9-b3bf-525400884743
  spec:
    rules:
    - host: cannonball-team-member-api.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: test-cannonball-team-member-api-cannonball-team-member-api
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cannonball-team-member-api.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-22T15:14:13Z
    generation: 1
    name: cannonball-team-member-api-single-region-ingress-gp
    namespace: cannonball
    resourceVersion: "194639067"
    selfLink: /apis/extensions/v1beta1/namespaces/cannonball/ingresses/cannonball-team-member-api-single-region-ingress-gp
    uid: 26e86d5d-4cb5-11e9-b3bf-525400884743
  spec:
    rules:
    - host: cannonball-team-member-api-gp.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: test-cannonball-team-member-api-cannonball-team-member-api-gp
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cannonball-team-member-api-gp.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-18T21:23:38Z
    generation: 1
    name: cannonballguestapi-ingress
    namespace: cannonball
    resourceVersion: "191267619"
    selfLink: /apis/extensions/v1beta1/namespaces/cannonball/ingresses/cannonballguestapi-ingress
    uid: 186fd829-49c4-11e9-ad83-525400a854be
  spec:
    rules:
    - host: cannonball-guest-api.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: test-cannonball-guest-api-cannonball-guest-api
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cannonball-guest-api.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-18T21:23:40Z
    generation: 1
    name: cannonballguestapi-single-region-ingress
    namespace: cannonball
    resourceVersion: "191267618"
    selfLink: /apis/extensions/v1beta1/namespaces/cannonball/ingresses/cannonballguestapi-single-region-ingress
    uid: 19b04936-49c4-11e9-ad83-525400a854be
  spec:
    rules:
    - host: cannonball-guest-api.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: test-cannonball-guest-api-cannonball-guest-api
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cannonball-guest-api.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-12T16:14:48Z
    generation: 1
    name: driveup-ingress
    namespace: cannonball
    resourceVersion: "39921864"
    selfLink: /apis/extensions/v1beta1/namespaces/cannonball/ingresses/driveup-ingress
    uid: f0e2038f-ce39-11e8-9ae6-5254005969a8
  spec:
    rules:
    - host: drive-up.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: test-driveup-services
            servicePort: 80
          path: /
    tls:
    - hosts:
      - drive-up.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-12T16:14:47Z
    generation: 1
    name: driveup-ingress-gp
    namespace: cannonball
    resourceVersion: "39921865"
    selfLink: /apis/extensions/v1beta1/namespaces/cannonball/ingresses/driveup-ingress-gp
    uid: f089d4b9-ce39-11e8-9ae6-5254005969a8
  spec:
    rules:
    - host: drive-up-gp.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: test-driveup-services-gp
            servicePort: 80
          path: /
    tls:
    - hosts:
      - drive-up-gp.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-12T16:14:49Z
    generation: 1
    name: driveup-single-region-ingress
    namespace: cannonball
    resourceVersion: "39921863"
    selfLink: /apis/extensions/v1beta1/namespaces/cannonball/ingresses/driveup-single-region-ingress
    uid: f15b70ec-ce39-11e8-9ae6-5254005969a8
  spec:
    rules:
    - host: drive-up.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: test-driveup-services
            servicePort: 80
          path: /
    tls:
    - hosts:
      - drive-up.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-12T16:14:47Z
    generation: 1
    name: driveup-single-region-ingress-gp
    namespace: cannonball
    resourceVersion: "39921862"
    selfLink: /apis/extensions/v1beta1/namespaces/cannonball/ingresses/driveup-single-region-ingress-gp
    uid: f00d637a-ce39-11e8-9ae6-5254005969a8
  spec:
    rules:
    - host: drive-up-gp.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: test-driveup-services-gp
            servicePort: 80
          path: /
    tls:
    - hosts:
      - drive-up-gp.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-12T15:55:44Z
    generation: 1
    name: test-driveup-utility-app-driveup-utility-app-ingress
    namespace: cannonball
    resourceVersion: "39910031"
    selfLink: /apis/extensions/v1beta1/namespaces/cannonball/ingresses/test-driveup-utility-app-driveup-utility-app-ingress
    uid: 46f42040-ce37-11e8-9ae6-5254005969a8
  spec:
    rules:
    - host: drive-up-utility.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: test-driveup-utility-app-driveup-utility-app
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-12T15:55:45Z
    generation: 1
    name: test-driveup-utility-app-driveup-utility-app-single-region-ingress
    namespace: cannonball
    resourceVersion: "39910032"
    selfLink: /apis/extensions/v1beta1/namespaces/cannonball/ingresses/test-driveup-utility-app-driveup-utility-app-single-region-ingress
    uid: 475df5cf-ce37-11e8-9ae6-5254005969a8
  spec:
    rules:
    - host: drive-up-utility.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: test-driveup-utility-app-driveup-utility-app
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-content-pipeline-api-ingress"},"name":"cep-content-pipeline-api-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"cep-content-pipeline-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-content-pipeline-api-service","servicePort":8080},"path":"/"}]}},{"host":"cep-content-pipeline-api-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-content-pipeline-api-service","servicePort":8080},"path":"/"}]}},{"host":"cep-content-pipeline-api-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-content-pipeline-api-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["cep-content-pipeline-api-dev.ttc-test.k8s.target.com","cep-content-pipeline-api-dev.tte-test.k8s.target.com","cep-content-pipeline-api-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-16T18:01:01Z
    generation: 2
    labels:
      name: cep-content-pipeline-api-ingress
    name: cep-content-pipeline-api-ingress
    namespace: cep-dev
    resourceVersion: "130140704"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-content-pipeline-api-ingress
    uid: af75f40e-19b8-11e9-9770-525400b66b60
  spec:
    rules:
    - host: cep-content-pipeline-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-content-pipeline-api-service
            servicePort: 8080
          path: /
    - host: cep-content-pipeline-api-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-content-pipeline-api-service
            servicePort: 8080
          path: /
    - host: cep-content-pipeline-api-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-content-pipeline-api-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - cep-content-pipeline-api-dev.ttc-test.k8s.target.com
      - cep-content-pipeline-api-dev.tte-test.k8s.target.com
      - cep-content-pipeline-api-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-external-asset-api-ingress"},"name":"cep-external-asset-api-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"cep-external-asset-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-external-asset-api-service","servicePort":80},"path":"/"}]}},{"host":"cep-external-asset-api-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-external-asset-api-service","servicePort":80},"path":"/"}]}},{"host":"cep-external-asset-api-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-external-asset-api-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["cep-external-asset-api-dev.ttc-test.k8s.target.com","cep-external-asset-api-dev.tte-test.k8s.target.com","cep-external-asset-api-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-16T19:57:36Z
    generation: 1
    labels:
      name: cep-external-asset-api-ingress
    name: cep-external-asset-api-ingress
    namespace: cep-dev
    resourceVersion: "130156124"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-external-asset-api-ingress
    uid: f8b04d12-19c8-11e9-9770-525400b66b60
  spec:
    rules:
    - host: cep-external-asset-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-external-asset-api-service
            servicePort: 80
          path: /
    - host: cep-external-asset-api-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-external-asset-api-service
            servicePort: 80
          path: /
    - host: cep-external-asset-api-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-external-asset-api-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cep-external-asset-api-dev.ttc-test.k8s.target.com
      - cep-external-asset-api-dev.tte-test.k8s.target.com
      - cep-external-asset-api-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-external-assets-processor-ingress"},"name":"cep-external-assets-processor-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"cep-external-assets-processor-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-external-assets-processor-service","servicePort":80},"path":"/"}]}},{"host":"cep-external-assets-processor-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-external-assets-processor-service","servicePort":80},"path":"/"}]}},{"host":"cep-external-assets-processor-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-external-assets-processor-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["cep-external-assets-processor-dev.ttc-test.k8s.target.com","cep-external-assets-processor-dev.tte-test.k8s.target.com","cep-external-assets-processor-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-15T20:22:21Z
    generation: 1
    labels:
      name: cep-external-assets-processor-ingress
    name: cep-external-assets-processor-ingress
    namespace: cep-dev
    resourceVersion: "129112904"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-external-assets-processor-ingress
    uid: 437f84fd-1903-11e9-9770-525400b66b60
  spec:
    rules:
    - host: cep-external-assets-processor-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-external-assets-processor-service
            servicePort: 80
          path: /
    - host: cep-external-assets-processor-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-external-assets-processor-service
            servicePort: 80
          path: /
    - host: cep-external-assets-processor-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-external-assets-processor-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cep-external-assets-processor-dev.ttc-test.k8s.target.com
      - cep-external-assets-processor-dev.tte-test.k8s.target.com
      - cep-external-assets-processor-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-guides-ui-ingress"},"name":"cep-guides-ui-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"pipeline-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-guides-ui-service","servicePort":8080},"path":"/"}]}},{"host":"pipeline-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-guides-ui-service","servicePort":8080},"path":"/"}]}},{"host":"pipeline-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-guides-ui-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["pipeline-dev.ttc-test.k8s.target.com","pipeline-dev.tte-test.k8s.target.com","pipeline-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-10T16:10:01Z
    generation: 2
    labels:
      name: cep-guides-ui-ingress
    name: cep-guides-ui-ingress
    namespace: cep-dev
    resourceVersion: "187479813"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-guides-ui-ingress
    uid: 2f21b7a9-14f2-11e9-8c6f-5254000c9945
  spec:
    rules:
    - host: pipeline-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-guides-ui-service
            servicePort: 8080
          path: /
    - host: pipeline-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-guides-ui-service
            servicePort: 8080
          path: /
    - host: pipeline-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-guides-ui-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - pipeline-dev.ttc-test.k8s.target.com
      - pipeline-dev.tte-test.k8s.target.com
      - pipeline-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-image-o-sphere-ingress"},"name":"cep-image-o-sphere-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"cep-image-o-sphere-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-image-o-sphere-service","servicePort":80},"path":"/"}]}},{"host":"cep-image-o-sphere-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-image-o-sphere-service","servicePort":80},"path":"/"}]}},{"host":"cep-image-o-sphere-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-image-o-sphere-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["cep-image-o-sphere-dev.ttc-test.k8s.target.com","cep-image-o-sphere-dev.tte-test.k8s.target.com","cep-image-o-sphere-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-08T17:06:33Z
    generation: 1
    labels:
      name: cep-image-o-sphere-ingress
    name: cep-image-o-sphere-ingress
    namespace: cep-dev
    resourceVersion: "122137474"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-image-o-sphere-ingress
    uid: bffb3c3b-1367-11e9-b513-525400493f0a
  spec:
    rules:
    - host: cep-image-o-sphere-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-image-o-sphere-service
            servicePort: 80
          path: /
    - host: cep-image-o-sphere-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-image-o-sphere-service
            servicePort: 80
          path: /
    - host: cep-image-o-sphere-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-image-o-sphere-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cep-image-o-sphere-dev.ttc-test.k8s.target.com
      - cep-image-o-sphere-dev.tte-test.k8s.target.com
      - cep-image-o-sphere-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-image-o-sphere-ui-ingress"},"name":"cep-image-o-sphere-ui-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"imageosphere-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-image-o-sphere-ui-service","servicePort":8080},"path":"/"}]}},{"host":"imageosphere-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-image-o-sphere-ui-service","servicePort":8080},"path":"/"}]}},{"host":"imageosphere-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-image-o-sphere-ui-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["imageosphere-dev.ttc-test.k8s.target.com","imageosphere-dev.tte-test.k8s.target.com","imageosphere-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-08T17:32:03Z
    generation: 2
    labels:
      name: cep-image-o-sphere-ui-ingress
    name: cep-image-o-sphere-ui-ingress
    namespace: cep-dev
    resourceVersion: "187499431"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-image-o-sphere-ui-ingress
    uid: 4fb8aeeb-136b-11e9-a3f2-525400a6ba56
  spec:
    rules:
    - host: imageosphere-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-image-o-sphere-ui-service
            servicePort: 8080
          path: /
    - host: imageosphere-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-image-o-sphere-ui-service
            servicePort: 8080
          path: /
    - host: imageosphere-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-image-o-sphere-ui-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - imageosphere-dev.ttc-test.k8s.target.com
      - imageosphere-dev.tte-test.k8s.target.com
      - imageosphere-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-pipeline-asset-app-ingress"},"name":"cep-pipeline-asset-app-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"cep-pipeline-asset-app-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-asset-app-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-asset-app-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-asset-app-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-asset-app-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-asset-app-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["cep-pipeline-asset-app-dev.ttc-test.k8s.target.com","cep-pipeline-asset-app-dev.tte-test.k8s.target.com","cep-pipeline-asset-app-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-16T16:52:47Z
    generation: 1
    labels:
      name: cep-pipeline-asset-app-ingress
    name: cep-pipeline-asset-app-ingress
    namespace: cep-dev
    resourceVersion: "130018526"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-pipeline-asset-app-ingress
    uid: 26e3e48d-19af-11e9-a7f3-52540072a6ea
  spec:
    rules:
    - host: cep-pipeline-asset-app-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-asset-app-service
            servicePort: 80
          path: /
    - host: cep-pipeline-asset-app-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-asset-app-service
            servicePort: 80
          path: /
    - host: cep-pipeline-asset-app-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-asset-app-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cep-pipeline-asset-app-dev.ttc-test.k8s.target.com
      - cep-pipeline-asset-app-dev.tte-test.k8s.target.com
      - cep-pipeline-asset-app-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-pipeline-content-app-ingress"},"name":"cep-pipeline-content-app-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"cep-pipeline-content-app-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-content-app-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-content-app-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-content-app-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-content-app-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-content-app-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["cep-pipeline-content-app-dev.ttc-test.k8s.target.com","cep-pipeline-content-app-dev.tte-test.k8s.target.com","cep-pipeline-content-app-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-19T21:00:14Z
    generation: 1
    labels:
      name: cep-pipeline-content-app-ingress
    name: cep-pipeline-content-app-ingress
    namespace: cep-dev
    resourceVersion: "25171605"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-pipeline-content-app-ingress
    uid: 015e84b1-bc4f-11e8-b40e-5254004139fa
  spec:
    rules:
    - host: cep-pipeline-content-app-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-content-app-service
            servicePort: 80
          path: /
    - host: cep-pipeline-content-app-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-content-app-service
            servicePort: 80
          path: /
    - host: cep-pipeline-content-app-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-content-app-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cep-pipeline-content-app-dev.ttc-test.k8s.target.com
      - cep-pipeline-content-app-dev.tte-test.k8s.target.com
      - cep-pipeline-content-app-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-pipeline-copy-app-ingress"},"name":"cep-pipeline-copy-app-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"cep-pipeline-copy-app-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-copy-app-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-copy-app-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-copy-app-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-copy-app-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-copy-app-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["cep-pipeline-copy-app-dev.ttc-test.k8s.target.com","cep-pipeline-copy-app-dev.tte-test.k8s.target.com","cep-pipeline-copy-app-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-16T15:15:17Z
    generation: 1
    labels:
      name: cep-pipeline-copy-app-ingress
    name: cep-pipeline-copy-app-ingress
    namespace: cep-dev
    resourceVersion: "129949704"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-pipeline-copy-app-ingress
    uid: 88048b79-19a1-11e9-a7f3-52540072a6ea
  spec:
    rules:
    - host: cep-pipeline-copy-app-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-copy-app-service
            servicePort: 80
          path: /
    - host: cep-pipeline-copy-app-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-copy-app-service
            servicePort: 80
          path: /
    - host: cep-pipeline-copy-app-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-copy-app-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cep-pipeline-copy-app-dev.ttc-test.k8s.target.com
      - cep-pipeline-copy-app-dev.tte-test.k8s.target.com
      - cep-pipeline-copy-app-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-pipeline-data-api-ingress"},"name":"cep-pipeline-data-api-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"cep-pipeline-data-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-data-api-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-data-api-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-data-api-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-data-api-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-data-api-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["cep-pipeline-data-api-dev.ttc-test.k8s.target.com","cep-pipeline-data-api-dev.tte-test.k8s.target.com","cep-pipeline-data-api-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-15T15:41:45Z
    generation: 1
    labels:
      name: cep-pipeline-data-api-ingress
    name: cep-pipeline-data-api-ingress
    namespace: cep-dev
    resourceVersion: "128889477"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-pipeline-data-api-ingress
    uid: 0ff890da-18dc-11e9-a7f3-52540072a6ea
  spec:
    rules:
    - host: cep-pipeline-data-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-data-api-service
            servicePort: 80
          path: /
    - host: cep-pipeline-data-api-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-data-api-service
            servicePort: 80
          path: /
    - host: cep-pipeline-data-api-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-data-api-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cep-pipeline-data-api-dev.ttc-test.k8s.target.com
      - cep-pipeline-data-api-dev.tte-test.k8s.target.com
      - cep-pipeline-data-api-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-pipeline-enrichment-app-ingress"},"name":"cep-pipeline-enrichment-app-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"cep-pipeline-enrichment-app-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-enrichment-app-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-enrichment-app-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-enrichment-app-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-enrichment-app-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-enrichment-app-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["cep-pipeline-enrichment-app-dev.ttc-test.k8s.target.com","cep-pipeline-enrichment-app-dev.tte-test.k8s.target.com","cep-pipeline-enrichment-app-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-03-14T21:31:08Z
    generation: 1
    labels:
      name: cep-pipeline-enrichment-app-ingress
    name: cep-pipeline-enrichment-app-ingress
    namespace: cep-dev
    resourceVersion: "187637903"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-pipeline-enrichment-app-ingress
    uid: 7b0b1d19-46a0-11e9-b613-52540007651c
  spec:
    rules:
    - host: cep-pipeline-enrichment-app-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-enrichment-app-service
            servicePort: 80
          path: /
    - host: cep-pipeline-enrichment-app-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-enrichment-app-service
            servicePort: 80
          path: /
    - host: cep-pipeline-enrichment-app-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-enrichment-app-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cep-pipeline-enrichment-app-dev.ttc-test.k8s.target.com
      - cep-pipeline-enrichment-app-dev.tte-test.k8s.target.com
      - cep-pipeline-enrichment-app-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-pipeline-item-api-ingress"},"name":"cep-pipeline-item-api-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"cep-pipeline-item-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-item-api-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-item-api-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-item-api-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-item-api-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-item-api-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["cep-pipeline-item-api-dev.ttc-test.k8s.target.com","cep-pipeline-item-api-dev.tte-test.k8s.target.com","cep-pipeline-item-api-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-14T15:57:49Z
    generation: 1
    labels:
      name: cep-pipeline-item-api-ingress
    name: cep-pipeline-item-api-ingress
    namespace: cep-dev
    resourceVersion: "127870968"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-pipeline-item-api-ingress
    uid: 2492c33b-1815-11e9-9770-525400b66b60
  spec:
    rules:
    - host: cep-pipeline-item-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-item-api-service
            servicePort: 80
          path: /
    - host: cep-pipeline-item-api-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-item-api-service
            servicePort: 80
          path: /
    - host: cep-pipeline-item-api-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-item-api-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cep-pipeline-item-api-dev.ttc-test.k8s.target.com
      - cep-pipeline-item-api-dev.tte-test.k8s.target.com
      - cep-pipeline-item-api-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-pipeline-ml-api-ingress"},"name":"cep-pipeline-ml-api-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"cep-pipeline-ml-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-ml-api-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-ml-api-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-ml-api-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-ml-api-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-ml-api-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["cep-pipeline-ml-api-dev.ttc-test.k8s.target.com","cep-pipeline-ml-api-dev.tte-test.k8s.target.com","cep-pipeline-ml-api-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-29T15:50:20Z
    generation: 4
    labels:
      name: cep-pipeline-ml-api-ingress
    name: cep-pipeline-ml-api-ingress
    namespace: cep-dev
    resourceVersion: "17591534"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-pipeline-ml-api-ingress
    uid: 3bf75c49-aba3-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: cep-pipeline-ml-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-ml-api-service
            servicePort: 80
          path: /
    - host: cep-pipeline-ml-api-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-ml-api-service
            servicePort: 80
          path: /
    - host: cep-pipeline-ml-api-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-ml-api-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cep-pipeline-ml-api-dev.ttc-test.k8s.target.com
      - cep-pipeline-ml-api-dev.tte-test.k8s.target.com
      - cep-pipeline-ml-api-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-pipeline-monitor-api-ingress"},"name":"cep-pipeline-monitor-api-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"cep-pipeline-monitor-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-monitor-api-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-monitor-api-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-monitor-api-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-monitor-api-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-monitor-api-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["cep-pipeline-monitor-api-dev.ttc-test.k8s.target.com","cep-pipeline-monitor-api-dev.tte-test.k8s.target.com","cep-pipeline-monitor-api-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-09T18:56:21Z
    generation: 1
    labels:
      name: cep-pipeline-monitor-api-ingress
    name: cep-pipeline-monitor-api-ingress
    namespace: cep-dev
    resourceVersion: "123185752"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-pipeline-monitor-api-ingress
    uid: 4132314a-1440-11e9-b513-525400493f0a
  spec:
    rules:
    - host: cep-pipeline-monitor-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-monitor-api-service
            servicePort: 80
          path: /
    - host: cep-pipeline-monitor-api-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-monitor-api-service
            servicePort: 80
          path: /
    - host: cep-pipeline-monitor-api-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-monitor-api-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cep-pipeline-monitor-api-dev.ttc-test.k8s.target.com
      - cep-pipeline-monitor-api-dev.tte-test.k8s.target.com
      - cep-pipeline-monitor-api-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-pipeline-notify-app-ingress"},"name":"cep-pipeline-notify-app-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"cep-pipeline-notify-app-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-notify-app-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-notify-app-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-notify-app-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-notify-app-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-notify-app-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["cep-pipeline-notify-app-dev.ttc-test.k8s.target.com","cep-pipeline-notify-app-dev.tte-test.k8s.target.com","cep-pipeline-notify-app-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-16T17:26:12Z
    generation: 1
    labels:
      name: cep-pipeline-notify-app-ingress
    name: cep-pipeline-notify-app-ingress
    namespace: cep-dev
    resourceVersion: "130043536"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-pipeline-notify-app-ingress
    uid: d23281a2-19b3-11e9-a7f3-52540072a6ea
  spec:
    rules:
    - host: cep-pipeline-notify-app-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-notify-app-service
            servicePort: 80
          path: /
    - host: cep-pipeline-notify-app-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-notify-app-service
            servicePort: 80
          path: /
    - host: cep-pipeline-notify-app-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-notify-app-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cep-pipeline-notify-app-dev.ttc-test.k8s.target.com
      - cep-pipeline-notify-app-dev.tte-test.k8s.target.com
      - cep-pipeline-notify-app-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-pipeline-search-api-ingress"},"name":"cep-pipeline-search-api-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"cep-pipeline-search-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-search-api-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-search-api-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-search-api-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-search-api-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-search-api-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["cep-pipeline-search-api-dev.ttc-test.k8s.target.com","cep-pipeline-search-api-dev.tte-test.k8s.target.com","cep-pipeline-search-api-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-30T20:59:13Z
    generation: 1
    labels:
      name: cep-pipeline-search-api-ingress
    name: cep-pipeline-search-api-ingress
    namespace: cep-dev
    resourceVersion: "55310025"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-pipeline-search-api-ingress
    uid: a8209216-dc86-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: cep-pipeline-search-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-search-api-service
            servicePort: 80
          path: /
    - host: cep-pipeline-search-api-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-search-api-service
            servicePort: 80
          path: /
    - host: cep-pipeline-search-api-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-search-api-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cep-pipeline-search-api-dev.ttc-test.k8s.target.com
      - cep-pipeline-search-api-dev.tte-test.k8s.target.com
      - cep-pipeline-search-api-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-pipeline-sender-app-ingress"},"name":"cep-pipeline-sender-app-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"cep-pipeline-sender-app-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-sender-app-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-sender-app-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-sender-app-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-sender-app-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-sender-app-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["cep-pipeline-sender-app-dev.ttc-test.k8s.target.com","cep-pipeline-sender-app-dev.tte-test.k8s.target.com","cep-pipeline-sender-app-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-14T17:31:17Z
    generation: 1
    labels:
      name: cep-pipeline-sender-app-ingress
    name: cep-pipeline-sender-app-ingress
    namespace: cep-dev
    resourceVersion: "127933666"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-pipeline-sender-app-ingress
    uid: 32d967b7-1822-11e9-a7f3-52540072a6ea
  spec:
    rules:
    - host: cep-pipeline-sender-app-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-sender-app-service
            servicePort: 80
          path: /
    - host: cep-pipeline-sender-app-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-sender-app-service
            servicePort: 80
          path: /
    - host: cep-pipeline-sender-app-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-sender-app-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cep-pipeline-sender-app-dev.ttc-test.k8s.target.com
      - cep-pipeline-sender-app-dev.tte-test.k8s.target.com
      - cep-pipeline-sender-app-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-pipeline-tcin-image-generator-ingress"},"name":"cep-pipeline-tcin-image-generator-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"cep-pipeline-tcin-image-generator-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-tcin-image-generator-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-tcin-image-generator-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-tcin-image-generator-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-tcin-image-generator-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-tcin-image-generator-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["cep-pipeline-tcin-image-generator-dev.ttc-test.k8s.target.com","cep-pipeline-tcin-image-generator-dev.tte-test.k8s.target.com","cep-pipeline-tcin-image-generator-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-14T15:27:05Z
    generation: 1
    labels:
      name: cep-pipeline-tcin-image-generator-ingress
    name: cep-pipeline-tcin-image-generator-ingress
    namespace: cep-dev
    resourceVersion: "127851237"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-pipeline-tcin-image-generator-ingress
    uid: d975df6b-1810-11e9-9770-525400b66b60
  spec:
    rules:
    - host: cep-pipeline-tcin-image-generator-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-tcin-image-generator-service
            servicePort: 80
          path: /
    - host: cep-pipeline-tcin-image-generator-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-tcin-image-generator-service
            servicePort: 80
          path: /
    - host: cep-pipeline-tcin-image-generator-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-tcin-image-generator-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cep-pipeline-tcin-image-generator-dev.ttc-test.k8s.target.com
      - cep-pipeline-tcin-image-generator-dev.tte-test.k8s.target.com
      - cep-pipeline-tcin-image-generator-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-pipeline-ui-ingress"},"name":"cep-pipeline-ui-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"pipeline-v2-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-ui-service","servicePort":8080},"path":"/"}]}},{"host":"pipeline-v2-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-ui-service","servicePort":8080},"path":"/"}]}},{"host":"pipeline-v2-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-ui-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["pipeline-v2-dev.ttc-test.k8s.target.com","pipeline-v2-dev.tte-test.k8s.target.com","pipeline-v2-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-10T15:46:19Z
    generation: 2
    labels:
      name: cep-pipeline-ui-ingress
    name: cep-pipeline-ui-ingress
    namespace: cep-dev
    resourceVersion: "187637070"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-pipeline-ui-ingress
    uid: df76f102-14ee-11e9-8c6f-5254000c9945
  spec:
    rules:
    - host: pipeline-v2-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-ui-service
            servicePort: 8080
          path: /
    - host: pipeline-v2-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-ui-service
            servicePort: 8080
          path: /
    - host: pipeline-v2-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-ui-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - pipeline-v2-dev.ttc-test.k8s.target.com
      - pipeline-v2-dev.tte-test.k8s.target.com
      - pipeline-v2-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-pipeline-visual-search-ingress"},"name":"cep-pipeline-visual-search-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"cep-pipeline-visual-search-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-visual-search-service","servicePort":8080},"path":"/"}]}},{"host":"cep-pipeline-visual-search-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-visual-search-service","servicePort":8080},"path":"/"}]}},{"host":"cep-pipeline-visual-search-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-visual-search-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["cep-pipeline-visual-search-dev.ttc-test.k8s.target.com","cep-pipeline-visual-search-dev.tte-test.k8s.target.com","cep-pipeline-visual-search-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-09T15:27:07Z
    generation: 1
    labels:
      name: cep-pipeline-visual-search-ingress
    name: cep-pipeline-visual-search-ingress
    namespace: cep-dev
    resourceVersion: "123051132"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-pipeline-visual-search-ingress
    uid: 0634fcb0-1423-11e9-b513-525400493f0a
  spec:
    rules:
    - host: cep-pipeline-visual-search-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-visual-search-service
            servicePort: 8080
          path: /
    - host: cep-pipeline-visual-search-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-visual-search-service
            servicePort: 8080
          path: /
    - host: cep-pipeline-visual-search-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-visual-search-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - cep-pipeline-visual-search-dev.ttc-test.k8s.target.com
      - cep-pipeline-visual-search-dev.tte-test.k8s.target.com
      - cep-pipeline-visual-search-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-purge-pipeline-api-ingress"},"name":"cep-purge-pipeline-api-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"cep-purge-pipeline-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-purge-pipeline-api-service","servicePort":80},"path":"/"}]}},{"host":"cep-purge-pipeline-api-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-purge-pipeline-api-service","servicePort":80},"path":"/"}]}},{"host":"cep-purge-pipeline-api-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-purge-pipeline-api-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["cep-purge-pipeline-api-dev.ttc-test.k8s.target.com","cep-purge-pipeline-api-dev.tte-test.k8s.target.com","cep-purge-pipeline-api-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-08T18:31:15Z
    generation: 1
    labels:
      name: cep-purge-pipeline-api-ingress
    name: cep-purge-pipeline-api-ingress
    namespace: cep-dev
    resourceVersion: "122197617"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-purge-pipeline-api-ingress
    uid: 95411a17-1373-11e9-a3f2-525400a6ba56
  spec:
    rules:
    - host: cep-purge-pipeline-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-purge-pipeline-api-service
            servicePort: 80
          path: /
    - host: cep-purge-pipeline-api-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-purge-pipeline-api-service
            servicePort: 80
          path: /
    - host: cep-purge-pipeline-api-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-purge-pipeline-api-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cep-purge-pipeline-api-dev.ttc-test.k8s.target.com
      - cep-purge-pipeline-api-dev.tte-test.k8s.target.com
      - cep-purge-pipeline-api-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-sizecharts-app-ingress"},"name":"cep-sizecharts-app-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"cep-sizecharts-app-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-sizecharts-app-service","servicePort":80},"path":"/"}]}},{"host":"cep-sizecharts-app-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-sizecharts-app-service","servicePort":80},"path":"/"}]}},{"host":"cep-sizecharts-app-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-sizecharts-app-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["cep-sizecharts-app-dev.ttc-test.k8s.target.com","cep-sizecharts-app-dev.tte-test.k8s.target.com","cep-sizecharts-app-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-16T17:05:51Z
    generation: 1
    labels:
      name: cep-sizecharts-app-ingress
    name: cep-sizecharts-app-ingress
    namespace: cep-dev
    resourceVersion: "130028903"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-sizecharts-app-ingress
    uid: fa7701c8-19b0-11e9-a7f3-52540072a6ea
  spec:
    rules:
    - host: cep-sizecharts-app-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-sizecharts-app-service
            servicePort: 80
          path: /
    - host: cep-sizecharts-app-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-sizecharts-app-service
            servicePort: 80
          path: /
    - host: cep-sizecharts-app-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-sizecharts-app-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cep-sizecharts-app-dev.ttc-test.k8s.target.com
      - cep-sizecharts-app-dev.tte-test.k8s.target.com
      - cep-sizecharts-app-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-vendor-pipeline-ui-ingress"},"name":"cep-vendor-pipeline-ui-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"vendorpipeline-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-vendor-pipeline-ui-service","servicePort":8080},"path":"/"}]}},{"host":"vendorpipeline-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-vendor-pipeline-ui-service","servicePort":8080},"path":"/"}]}},{"host":"vendorpipeline-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-vendor-pipeline-ui-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["vendorpipeline-dev.ttc-test.k8s.target.com","vendorpipeline-dev.tte-test.k8s.target.com","vendorpipeline-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-10T15:14:21Z
    generation: 2
    labels:
      name: cep-vendor-pipeline-ui-ingress
    name: cep-vendor-pipeline-ui-ingress
    namespace: cep-dev
    resourceVersion: "187587120"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-vendor-pipeline-ui-ingress
    uid: 6844accc-14ea-11e9-8c6f-5254000c9945
  spec:
    rules:
    - host: vendorpipeline-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-vendor-pipeline-ui-service
            servicePort: 8080
          path: /
    - host: vendorpipeline-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-vendor-pipeline-ui-service
            servicePort: 8080
          path: /
    - host: vendorpipeline-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-vendor-pipeline-ui-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - vendorpipeline-dev.ttc-test.k8s.target.com
      - vendorpipeline-dev.tte-test.k8s.target.com
      - vendorpipeline-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cls-ingress-stage-tte"},"name":"cls-ingress-stage-tte","namespace":"clusteringlocation-stage"},"spec":{"rules":[{"host":"clusteringlocation-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cls-app-service-stage","servicePort":80},"path":"/"}]}},{"host":"clusteringlocation-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cls-app-service-stage","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["clusteringlocation-stage.tte-test.k8s.target.com","clusteringlocation-stage.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-03T09:33:52Z
    generation: 1
    labels:
      name: cls-ingress-stage-tte
    name: cls-ingress-stage-tte
    namespace: clusteringlocation-stage
    resourceVersion: "33501765"
    selfLink: /apis/extensions/v1beta1/namespaces/clusteringlocation-stage/ingresses/cls-ingress-stage-tte
    uid: 70ae716b-c6ef-11e8-bad5-525400b91df9
  spec:
    rules:
    - host: clusteringlocation-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cls-app-service-stage
            servicePort: 80
          path: /
    - host: clusteringlocation-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cls-app-service-stage
            servicePort: 80
          path: /
    tls:
    - hosts:
      - clusteringlocation-stage.tte-test.k8s.target.com
      - clusteringlocation-stage.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cls-ingress-test"},"name":"cls-ingress-test","namespace":"clusteringlocation-test"},"spec":{"rules":[{"host":"clusteringlocation-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cls-app-service-test","servicePort":80},"path":"/"}]}},{"host":"clusteringlocation-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cls-app-service-test","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["clusteringlocation-test.tte-test.k8s.target.com","clusteringlocation-test.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-01T10:24:30Z
    generation: 1
    labels:
      name: cls-ingress-test
    name: cls-ingress-test
    namespace: clusteringlocation-test
    resourceVersion: "32213144"
    selfLink: /apis/extensions/v1beta1/namespaces/clusteringlocation-test/ingresses/cls-ingress-test
    uid: 2e989f86-c564-11e8-b583-525400d3319b
  spec:
    rules:
    - host: clusteringlocation-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cls-app-service-test
            servicePort: 80
          path: /
    - host: clusteringlocation-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cls-app-service-test
            servicePort: 80
          path: /
    tls:
    - hosts:
      - clusteringlocation-test.tte-test.k8s.target.com
      - clusteringlocation-test.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cls-int-ingress-test"},"name":"cls-int-ingress-test","namespace":"clusteringlocation-test"},"spec":{"rules":[{"host":"clusteringlocation-int-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cls-int-service-test","servicePort":8080},"path":"/"}]}},{"host":"clusteringlocation-int-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cls-int-service-test","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["clusteringlocation-int-test.tte-test.k8s.target.com","clusteringlocation-int-test.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-01T10:03:43Z
    generation: 1
    labels:
      name: cls-int-ingress-test
    name: cls-int-ingress-test
    namespace: clusteringlocation-test
    resourceVersion: "32203590"
    selfLink: /apis/extensions/v1beta1/namespaces/clusteringlocation-test/ingresses/cls-int-ingress-test
    uid: 4756c6ee-c561-11e8-b583-525400d3319b
  spec:
    rules:
    - host: clusteringlocation-int-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cls-int-service-test
            servicePort: 8080
          path: /
    - host: clusteringlocation-int-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cls-int-service-test
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - clusteringlocation-int-test.tte-test.k8s.target.com
      - clusteringlocation-int-test.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cls-ingress-test"},"name":"cls-ui-ingress-test","namespace":"clusteringlocation-test"},"spec":{"rules":[{"host":"clusteringlocation-ui-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cls-ui-service-test","servicePort":80},"path":"/"}]}},{"host":"clusteringlocation-ui-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cls-ui-service-test","servicePort":80},"path":"/"}]}},{"host":"clusteringlocation-ui-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cls-ui-service-test","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["clusteringlocation-ui-test.ttc-test.k8s.target.com","clusteringlocation-ui-test.tte-test.k8s.target.com","clusteringlocation-ui-test.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-01T10:07:40Z
    generation: 1
    labels:
      name: cls-ingress-test
    name: cls-ui-ingress-test
    namespace: clusteringlocation-test
    resourceVersion: "32205414"
    selfLink: /apis/extensions/v1beta1/namespaces/clusteringlocation-test/ingresses/cls-ui-ingress-test
    uid: d4b7d2c7-c561-11e8-93a6-525400dd15a8
  spec:
    rules:
    - host: clusteringlocation-ui-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cls-ui-service-test
            servicePort: 80
          path: /
    - host: clusteringlocation-ui-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cls-ui-service-test
            servicePort: 80
          path: /
    - host: clusteringlocation-ui-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cls-ui-service-test
            servicePort: 80
          path: /
    tls:
    - hosts:
      - clusteringlocation-ui-test.ttc-test.k8s.target.com
      - clusteringlocation-ui-test.tte-test.k8s.target.com
      - clusteringlocation-ui-test.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"imperial-items-ingress"},"name":"imperial-items-ingress","namespace":"corona"},"spec":{"rules":[{"host":"imperial-items.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"imperial-items","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-11-20T21:39:01Z
    generation: 2
    labels:
      name: imperial-items-ingress
    name: imperial-items-ingress
    namespace: corona
    resourceVersion: "75063459"
    selfLink: /apis/extensions/v1beta1/namespaces/corona/ingresses/imperial-items-ingress
    uid: b1bb08c0-ed0c-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: imperial-items.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: imperial-items
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"kibana-v2-ingress"},"name":"kibana-v2-ingress","namespace":"corona"},"spec":{"rules":[{"host":"corona-kibana-v2.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"kibana-v2-service","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-01-15T21:33:06Z
    generation: 1
    labels:
      name: kibana-v2-ingress
    name: kibana-v2-ingress
    namespace: corona
    resourceVersion: "129167634"
    selfLink: /apis/extensions/v1beta1/namespaces/corona/ingresses/kibana-v2-ingress
    uid: 2528f3ab-190d-11e9-a7f3-52540072a6ea
  spec:
    rules:
    - host: corona-kibana-v2.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: kibana-v2-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"xref-gutenberg-persist-ingress"},"name":"xref-gutenberg-persist-ingress","namespace":"corona"},"spec":{"rules":[{"host":"xref-gutenberg-persist.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"xref-gutenberg-persist-service","servicePort":80},"path":"/"}]}},{"host":"xref-gutenberg-persist.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"xref-gutenberg-persist-service","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-01-15T22:38:20Z
    generation: 1
    labels:
      name: xref-gutenberg-persist-ingress
    name: xref-gutenberg-persist-ingress
    namespace: corona
    resourceVersion: "129215779"
    selfLink: /apis/extensions/v1beta1/namespaces/corona/ingresses/xref-gutenberg-persist-ingress
    uid: 42572cbb-1916-11e9-9770-525400b66b60
  spec:
    rules:
    - host: xref-gutenberg-persist.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: xref-gutenberg-persist-service
            servicePort: 80
          path: /
    - host: xref-gutenberg-persist.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: xref-gutenberg-persist-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"dcv-asset-publish-app-ingress"},"name":"dcv-asset-publish-app-ingress","namespace":"dcv-dev"},"spec":{"rules":[{"host":"dcv-asset-publish-app-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dcv-asset-publish-app-service","servicePort":80},"path":"/"}]}},{"host":"dcv-asset-publish-app-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dcv-asset-publish-app-service","servicePort":80},"path":"/"}]}},{"host":"dcv-asset-publish-app-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dcv-asset-publish-app-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["dcv-asset-publish-app-dev.ttc-test.k8s.target.com","dcv-asset-publish-app-dev.tte-test.k8s.target.com","dcv-asset-publish-app-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-03-17T11:44:07Z
    generation: 1
    labels:
      name: dcv-asset-publish-app-ingress
    name: dcv-asset-publish-app-ingress
    namespace: dcv-dev
    resourceVersion: "190008879"
    selfLink: /apis/extensions/v1beta1/namespaces/dcv-dev/ingresses/dcv-asset-publish-app-ingress
    uid: f90d22ad-48a9-11e9-8490-52540095f1e4
  spec:
    rules:
    - host: dcv-asset-publish-app-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dcv-asset-publish-app-service
            servicePort: 80
          path: /
    - host: dcv-asset-publish-app-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dcv-asset-publish-app-service
            servicePort: 80
          path: /
    - host: dcv-asset-publish-app-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dcv-asset-publish-app-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - dcv-asset-publish-app-dev.ttc-test.k8s.target.com
      - dcv-asset-publish-app-dev.tte-test.k8s.target.com
      - dcv-asset-publish-app-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"dcv-content-search-app-ingress"},"name":"dcv-content-search-app-ingress","namespace":"dcv-dev"},"spec":{"rules":[{"host":"dcv-content-search-app-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dcv-content-search-app-service","servicePort":80},"path":"/"}]}},{"host":"dcv-content-search-app-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dcv-content-search-app-service","servicePort":80},"path":"/"}]}},{"host":"dcv-content-search-app-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dcv-content-search-app-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["dcv-content-search-app-dev.ttc-test.k8s.target.com","dcv-content-search-app-dev.tte-test.k8s.target.com","dcv-content-search-app-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-15T18:39:46Z
    generation: 1
    labels:
      name: dcv-content-search-app-ingress
    name: dcv-content-search-app-ingress
    namespace: dcv-dev
    resourceVersion: "129032056"
    selfLink: /apis/extensions/v1beta1/namespaces/dcv-dev/ingresses/dcv-content-search-app-ingress
    uid: ee4f6c0a-18f4-11e9-a7f3-52540072a6ea
  spec:
    rules:
    - host: dcv-content-search-app-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dcv-content-search-app-service
            servicePort: 80
          path: /
    - host: dcv-content-search-app-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dcv-content-search-app-service
            servicePort: 80
          path: /
    - host: dcv-content-search-app-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dcv-content-search-app-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - dcv-content-search-app-dev.ttc-test.k8s.target.com
      - dcv-content-search-app-dev.tte-test.k8s.target.com
      - dcv-content-search-app-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"carrier-data-management"},"name":"carrier-data-management","namespace":"dmo-data-mgmt"},"spec":{"rules":[{"host":"cdm.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"carrier-data-management","servicePort":3000},"path":"/"}]}},{"host":"cdm.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"carrier-data-management","servicePort":3000},"path":"/"}]}},{"host":"cdm.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"carrier-data-management","servicePort":3000},"path":"/"}]}}],"tls":[{"hosts":["cdm.test.k8s.target.com","cdm.ttc-test.k8s.target.com","cdm.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-11T13:04:23Z
    generation: 2
    labels:
      name: carrier-data-management
    name: carrier-data-management
    namespace: dmo-data-mgmt
    resourceVersion: "21238364"
    selfLink: /apis/extensions/v1beta1/namespaces/dmo-data-mgmt/ingresses/carrier-data-management
    uid: 34703231-b5c3-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: cdm.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: carrier-data-management
            servicePort: 3000
          path: /
    - host: cdm.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: carrier-data-management
            servicePort: 3000
          path: /
    - host: cdm.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: carrier-data-management
            servicePort: 3000
          path: /
    tls:
    - hosts:
      - cdm.test.k8s.target.com
      - cdm.ttc-test.k8s.target.com
      - cdm.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"carrier-services"},"name":"carrier-services","namespace":"dmo-data-mgmt"},"spec":{"rules":[{"host":"carrier-services.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"carrier-services","servicePort":4000},"path":"/"}]}},{"host":"carrier-services.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"carrier-services","servicePort":4000},"path":"/"}]}},{"host":"carrier-services.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"carrier-services","servicePort":4000},"path":"/"}]}}],"tls":[{"hosts":["carrier-services.test.k8s.target.com","carrier-services.ttc-test.k8s.target.com","carrier-services.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-18T21:01:21Z
    generation: 1
    labels:
      name: carrier-services
    name: carrier-services
    namespace: dmo-data-mgmt
    resourceVersion: "132582853"
    selfLink: /apis/extensions/v1beta1/namespaces/dmo-data-mgmt/ingresses/carrier-services
    uid: 350fd1ba-1b64-11e9-b998-525400bb6b25
  spec:
    rules:
    - host: carrier-services.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: carrier-services
            servicePort: 4000
          path: /
    - host: carrier-services.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: carrier-services
            servicePort: 4000
          path: /
    - host: carrier-services.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: carrier-services
            servicePort: 4000
          path: /
    tls:
    - hosts:
      - carrier-services.test.k8s.target.com
      - carrier-services.ttc-test.k8s.target.com
      - carrier-services.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"dmo-ui-services"},"name":"dmo-ui-services","namespace":"dmo-data-mgmt"},"spec":{"rules":[{"host":"dmo-ui-services.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dmo-ui-services","servicePort":4000},"path":"/"}]}},{"host":"dmo-ui-services.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dmo-ui-services","servicePort":4000},"path":"/"}]}},{"host":"dmo-ui-services.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dmo-ui-services","servicePort":4000},"path":"/"}]}}],"tls":[{"hosts":["dmo-ui-services.test.k8s.target.com","dmo-ui-services.ttc-test.k8s.target.com","dmo-ui-services.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-08T04:18:21Z
    generation: 1
    labels:
      name: dmo-ui-services
    name: dmo-ui-services
    namespace: dmo-data-mgmt
    resourceVersion: "20129192"
    selfLink: /apis/extensions/v1beta1/namespaces/dmo-data-mgmt/ingresses/dmo-ui-services
    uid: 3850c4c3-b31e-11e8-842d-525400df3355
  spec:
    rules:
    - host: dmo-ui-services.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dmo-ui-services
            servicePort: 4000
          path: /
    - host: dmo-ui-services.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dmo-ui-services
            servicePort: 4000
          path: /
    - host: dmo-ui-services.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dmo-ui-services
            servicePort: 4000
          path: /
    tls:
    - hosts:
      - dmo-ui-services.test.k8s.target.com
      - dmo-ui-services.ttc-test.k8s.target.com
      - dmo-ui-services.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"location-services"},"name":"location-services","namespace":"dmo-data-mgmt"},"spec":{"rules":[{"host":"location-services.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"location-services","servicePort":4000},"path":"/"}]}},{"host":"location-services.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"location-services","servicePort":4000},"path":"/"}]}},{"host":"location-services.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"location-services","servicePort":4000},"path":"/"}]}}],"tls":[{"hosts":["location-services.test.k8s.target.com","location-services.ttc-test.k8s.target.com","location-services.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-06T18:24:25Z
    generation: 1
    labels:
      name: location-services
    name: location-services
    namespace: dmo-data-mgmt
    resourceVersion: "19672847"
    selfLink: /apis/extensions/v1beta1/namespaces/dmo-data-mgmt/ingresses/location-services
    uid: 15b965bf-b202-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: location-services.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: location-services
            servicePort: 4000
          path: /
    - host: location-services.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: location-services
            servicePort: 4000
          path: /
    - host: location-services.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: location-services
            servicePort: 4000
          path: /
    tls:
    - hosts:
      - location-services.test.k8s.target.com
      - location-services.ttc-test.k8s.target.com
      - location-services.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"rate-services"},"name":"rate-services","namespace":"dmo-data-mgmt"},"spec":{"rules":[{"host":"rate-services.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rate-services","servicePort":4000},"path":"/"}]}},{"host":"rate-services.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rate-services","servicePort":4000},"path":"/"}]}},{"host":"rate-services.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rate-services","servicePort":4000},"path":"/"}]}}],"tls":[{"hosts":["rate-services.test.k8s.target.com","rate-services.ttc-test.k8s.target.com","rate-services.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-06T02:02:14Z
    generation: 1
    labels:
      name: rate-services
    name: rate-services
    namespace: dmo-data-mgmt
    resourceVersion: "19453064"
    selfLink: /apis/extensions/v1beta1/namespaces/dmo-data-mgmt/ingresses/rate-services
    uid: df98cdab-b178-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: rate-services.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rate-services
            servicePort: 4000
          path: /
    - host: rate-services.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rate-services
            servicePort: 4000
          path: /
    - host: rate-services.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rate-services
            servicePort: 4000
          path: /
    tls:
    - hosts:
      - rate-services.test.k8s.target.com
      - rate-services.ttc-test.k8s.target.com
      - rate-services.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"utility-services"},"name":"utility-services","namespace":"dmo-data-mgmt"},"spec":{"rules":[{"host":"utility-services.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"utility-services","servicePort":4000},"path":"/"}]}},{"host":"utility-services.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"utility-services","servicePort":4000},"path":"/"}]}},{"host":"utility-services.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"utility-services","servicePort":4000},"path":"/"}]}}],"tls":[{"hosts":["utility-services.test.k8s.target.com","utility-services.ttc-test.k8s.target.com","utility-services.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-02T15:27:34Z
    generation: 1
    labels:
      name: utility-services
    name: utility-services
    namespace: dmo-data-mgmt
    resourceVersion: "57739785"
    selfLink: /apis/extensions/v1beta1/namespaces/dmo-data-mgmt/ingresses/utility-services
    uid: d28d30eb-deb3-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: utility-services.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: utility-services
            servicePort: 4000
          path: /
    - host: utility-services.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: utility-services
            servicePort: 4000
          path: /
    - host: utility-services.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: utility-services
            servicePort: 4000
          path: /
    tls:
    - hosts:
      - utility-services.test.k8s.target.com
      - utility-services.ttc-test.k8s.target.com
      - utility-services.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"dmo-carrier-selection"},"name":"dmo-carrier-selection","namespace":"dmo"},"spec":{"rules":[{"host":"dmo-ops-center-be.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dmo-ops-center-be","servicePort":80},"path":"/"}]}},{"host":"dmo-ops-center-be.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dmo-ops-center-be","servicePort":80},"path":"/"}]}},{"host":"dmo-ops-center-be.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dmo-ops-center-be","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["dmo-ops-center-be.test.k8s.target.com","dmo-ops-center-be.ttc-test.k8s.target.com","dmo-ops-center-be.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-27T15:07:18Z
    generation: 3
    labels:
      name: dmo-carrier-selection
    name: dmo-carrier-selection
    namespace: dmo
    resourceVersion: "165384298"
    selfLink: /apis/extensions/v1beta1/namespaces/dmo/ingresses/dmo-carrier-selection
    uid: 06fc4dea-c267-11e8-bb02-525400b2fa35
  spec:
    rules:
    - host: dmo-ops-center-be.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dmo-ops-center-be
            servicePort: 80
          path: /
    - host: dmo-ops-center-be.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dmo-ops-center-be
            servicePort: 80
          path: /
    - host: dmo-ops-center-be.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dmo-ops-center-be
            servicePort: 80
          path: /
    tls:
    - hosts:
      - dmo-ops-center-be.test.k8s.target.com
      - dmo-ops-center-be.ttc-test.k8s.target.com
      - dmo-ops-center-be.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"gardenia","namespace":"drone"},"spec":{"rules":[{"host":"gardenia-eng.target.com","http":{"paths":[{"backend":{"serviceName":"gardenia","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["gardenia-eng.target.com"],"secretName":"gardenia-vanity-secret"}]}}
    creationTimestamp: 2018-10-15T14:02:06Z
    generation: 1
    name: gardenia
    namespace: drone
    resourceVersion: "42193010"
    selfLink: /apis/extensions/v1beta1/namespaces/drone/ingresses/gardenia
    uid: e6b5627b-d082-11e8-b121-525400340d56
  spec:
    rules:
    - host: gardenia-eng.target.com
      http:
        paths:
        - backend:
            serviceName: gardenia
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - gardenia-eng.target.com
      secretName: gardenia-vanity-secret
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"jarvis"},"name":"jarvis","namespace":"drone"},"spec":{"rules":[{"host":"jarvis.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"jarvis-service","servicePort":80},"path":"/"}]}},{"host":"jarvis.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"jarvis-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["jarvis.tte-test.k8s.target.com","jarvis.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-13T16:59:05Z
    generation: 8
    labels:
      name: jarvis
    name: jarvis
    namespace: drone
    resourceVersion: "97933461"
    selfLink: /apis/extensions/v1beta1/namespaces/drone/ingresses/jarvis
    uid: 6dd24dfe-e765-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: jarvis.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: jarvis-service
            servicePort: 80
          path: /
    - host: jarvis.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: jarvis-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - jarvis.tte-test.k8s.target.com
      - jarvis.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"poterminator","namespace":"drone"},"spec":{"rules":[{"host":"poterminator.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"poterminator","servicePort":3000},"path":"/slack_events/v1/poterminator_dev-v1_events"},{"backend":{"serviceName":"poterminator","servicePort":3000},"path":"/event_health"},{"backend":{"serviceName":"poterminator","servicePort":4000},"path":"/slack_events/v1/poterminator_dev-v1_interactions"},{"backend":{"serviceName":"poterminator","servicePort":4000},"path":"/interaction_health"}]}},{"host":"poterminator.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"poterminator","servicePort":3000},"path":"/slack_events/v1/poterminator_dev-v1_events"},{"backend":{"serviceName":"poterminator","servicePort":3000},"path":"/event_health"},{"backend":{"serviceName":"poterminator","servicePort":4000},"path":"/slack_events/v1/poterminator_dev-v1_interactions"},{"backend":{"serviceName":"poterminator","servicePort":4000},"path":"/interaction_health"}]}}],"tls":[{"hosts":["poterminator.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-22T19:08:37Z
    generation: 2
    name: poterminator
    namespace: drone
    resourceVersion: "48518044"
    selfLink: /apis/extensions/v1beta1/namespaces/drone/ingresses/poterminator
    uid: e1797acd-d62d-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: poterminator.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: poterminator
            servicePort: 3000
          path: /slack_events/v1/poterminator_dev-v1_events
        - backend:
            serviceName: poterminator
            servicePort: 3000
          path: /event_health
        - backend:
            serviceName: poterminator
            servicePort: 4000
          path: /slack_events/v1/poterminator_dev-v1_interactions
        - backend:
            serviceName: poterminator
            servicePort: 4000
          path: /interaction_health
    - host: poterminator.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: poterminator
            servicePort: 3000
          path: /slack_events/v1/poterminator_dev-v1_events
        - backend:
            serviceName: poterminator
            servicePort: 3000
          path: /event_health
        - backend:
            serviceName: poterminator
            servicePort: 4000
          path: /slack_events/v1/poterminator_dev-v1_interactions
        - backend:
            serviceName: poterminator
            servicePort: 4000
          path: /interaction_health
    tls:
    - hosts:
      - poterminator.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"vault","namespace":"drone"},"spec":{"rules":[{"host":"drone-vault-eng.target.com","http":{"paths":[{"backend":{"serviceName":"vault","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["drone-vault-eng.target.com"],"secretName":"vault-vanity"}]}}
    creationTimestamp: 2018-10-10T19:39:03Z
    generation: 2
    name: vault
    namespace: drone
    resourceVersion: "49317728"
    selfLink: /apis/extensions/v1beta1/namespaces/drone/ingresses/vault
    uid: 24c2abe1-ccc4-11e8-8770-525400a7f06e
  spec:
    rules:
    - host: drone-vault-eng.target.com
      http:
        paths:
        - backend:
            serviceName: vault
            servicePort: 80
          path: /
    tls:
    - hosts:
      - drone-vault-eng.target.com
      secretName: vault-vanity
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"eciclient","name":"eciclient-ingress"},"name":"eciclient-ingress","namespace":"eci-stage"},"spec":{"rules":[{"host":"eciclient.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"eciclient-service","servicePort":8080},"path":"/"}]}},{"host":"eciclient.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"eciclient-service","servicePort":8080},"path":"/"}]}},{"host":"rhinofrs-s.target.com","http":{"paths":[{"backend":{"serviceName":"eciclient-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["eciclient.tte-test.k8s.target.com","eciclient.test.k8s.target.com","rhinofrs-s.target.com"],"secretName":"vanitysecret"}]}}
    creationTimestamp: 2019-01-29T20:54:34Z
    generation: 2
    labels:
      app: eciclient
      name: eciclient-ingress
    name: eciclient-ingress
    namespace: eci-stage
    resourceVersion: "144079357"
    selfLink: /apis/extensions/v1beta1/namespaces/eci-stage/ingresses/eciclient-ingress
    uid: 1558e416-2408-11e9-8180-525400143763
  spec:
    rules:
    - host: eciclient.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: eciclient-service
            servicePort: 8080
          path: /
    - host: eciclient.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: eciclient-service
            servicePort: 8080
          path: /
    - host: rhinofrs-s.target.com
      http:
        paths:
        - backend:
            serviceName: eciclient-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - eciclient.tte-test.k8s.target.com
      - eciclient.test.k8s.target.com
      - rhinofrs-s.target.com
      secretName: vanitysecret
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"ingestionapi","name":"ingestionapi-ingress"},"name":"ingestionapi-ingress","namespace":"eci-stage"},"spec":{"rules":[{"host":"ingestionapi.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ingestionapi-service","servicePort":8080},"path":"/"}]}},{"host":"ingestionapi.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ingestionapi-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["ingestionapi.tte-test.k8s.target.com","ingestionapi.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-29T21:51:05Z
    generation: 1
    labels:
      app: ingestionapi
      name: ingestionapi-ingress
    name: ingestionapi-ingress
    namespace: eci-stage
    resourceVersion: "143299876"
    selfLink: /apis/extensions/v1beta1/namespaces/eci-stage/ingresses/ingestionapi-ingress
    uid: fa50fe6c-240f-11e9-86c4-525400ed1a2a
  spec:
    rules:
    - host: ingestionapi.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ingestionapi-service
            servicePort: 8080
          path: /
    - host: ingestionapi.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ingestionapi-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - ingestionapi.tte-test.k8s.target.com
      - ingestionapi.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"activityapi","name":"activityapi-ingress"},"name":"activityapi-ingress","namespace":"eci-test"},"spec":{"rules":[{"host":"activityapi-t.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"activityapi-service","servicePort":8080},"path":"/"}]}},{"host":"activityapi-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"activityapi-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["activityapi-t.tte-test.k8s.target.com","activityapi-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-29T20:33:27Z
    generation: 1
    labels:
      app: activityapi
      name: activityapi-ingress
    name: activityapi-ingress
    namespace: eci-test
    resourceVersion: "143251852"
    selfLink: /apis/extensions/v1beta1/namespaces/eci-test/ingresses/activityapi-ingress
    uid: 22362c47-2405-11e9-8180-525400143763
  spec:
    rules:
    - host: activityapi-t.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: activityapi-service
            servicePort: 8080
          path: /
    - host: activityapi-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: activityapi-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - activityapi-t.tte-test.k8s.target.com
      - activityapi-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"combine","name":"combine-ingress"},"name":"combine-ingress","namespace":"eci-test"},"spec":{"rules":[{"host":"combine-t.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"combine-service","servicePort":8080},"path":"/"}]}},{"host":"combine-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"combine-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["combine-t.tte-test.k8s.target.com","combine-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-29T21:07:06Z
    generation: 1
    labels:
      app: combine
      name: combine-ingress
    name: combine-ingress
    namespace: eci-test
    resourceVersion: "143272120"
    selfLink: /apis/extensions/v1beta1/namespaces/eci-test/ingresses/combine-ingress
    uid: d5b16009-2409-11e9-8180-525400143763
  spec:
    rules:
    - host: combine-t.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: combine-service
            servicePort: 8080
          path: /
    - host: combine-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: combine-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - combine-t.tte-test.k8s.target.com
      - combine-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"combineapi","name":"combineapi-ingress"},"name":"combineapi-ingress","namespace":"eci-test"},"spec":{"rules":[{"host":"combineapi-t.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"combineapi-service","servicePort":8080},"path":"/"}]}},{"host":"combineapi-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"combineapi-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["combineapi-t.tte-test.k8s.target.com","combineapi-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-29T21:10:06Z
    generation: 1
    labels:
      app: combineapi
      name: combineapi-ingress
    name: combineapi-ingress
    namespace: eci-test
    resourceVersion: "143274052"
    selfLink: /apis/extensions/v1beta1/namespaces/eci-test/ingresses/combineapi-ingress
    uid: 40bca391-240a-11e9-8180-525400143763
  spec:
    rules:
    - host: combineapi-t.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: combineapi-service
            servicePort: 8080
          path: /
    - host: combineapi-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: combineapi-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - combineapi-t.tte-test.k8s.target.com
      - combineapi-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"docconversion","name":"docconversion-ingress"},"name":"docconversion-ingress","namespace":"eci-test"},"spec":{"rules":[{"host":"docconversion-t.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"docconversion-service","servicePort":8080},"path":"/"}]}},{"host":"docconversion-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"docconversion-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["docconversion-t.tte-test.k8s.target.com","docconversion-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-30T00:24:18Z
    generation: 1
    labels:
      app: docconversion
      name: docconversion-ingress
    name: docconversion-ingress
    namespace: eci-test
    resourceVersion: "143396716"
    selfLink: /apis/extensions/v1beta1/namespaces/eci-test/ingresses/docconversion-ingress
    uid: 62116bbc-2425-11e9-9f4c-52540007c5b2
  spec:
    rules:
    - host: docconversion-t.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: docconversion-service
            servicePort: 8080
          path: /
    - host: docconversion-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: docconversion-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - docconversion-t.tte-test.k8s.target.com
      - docconversion-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"docschema","name":"docschemaapi-ingress"},"name":"docschemaapi-ingress","namespace":"eci-test"},"spec":{"rules":[{"host":"docschema-t.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"docschemaapi-service","servicePort":8080},"path":"/"}]}},{"host":"docschema-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"docschemaapi-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["docschema-t.tte-test.k8s.target.com","docschema-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-30T00:24:19Z
    generation: 1
    labels:
      app: docschema
      name: docschemaapi-ingress
    name: docschemaapi-ingress
    namespace: eci-test
    resourceVersion: "143396717"
    selfLink: /apis/extensions/v1beta1/namespaces/eci-test/ingresses/docschemaapi-ingress
    uid: 62a9818b-2425-11e9-8180-525400143763
  spec:
    rules:
    - host: docschema-t.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: docschemaapi-service
            servicePort: 8080
          path: /
    - host: docschema-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: docschemaapi-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - docschema-t.tte-test.k8s.target.com
      - docschema-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"eciclient","name":"eciclient-ingress"},"name":"eciclient-ingress","namespace":"eci-test"},"spec":{"rules":[{"host":"eciclient-t.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"eciclient-service","servicePort":8080},"path":"/"}]}},{"host":"eciclient-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"eciclient-service","servicePort":8080},"path":"/"}]}},{"host":"rhinofrs-t.target.com","http":{"paths":[{"backend":{"serviceName":"eciclient-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["eciclient-t.tte-test.k8s.target.com","eciclient-t.test.k8s.target.com","rhinofrs-t.target.com"],"secretName":"vanitysecret"}]}}
    creationTimestamp: 2019-01-29T20:54:03Z
    generation: 1
    labels:
      app: eciclient
      name: eciclient-ingress
    name: eciclient-ingress
    namespace: eci-test
    resourceVersion: "143263776"
    selfLink: /apis/extensions/v1beta1/namespaces/eci-test/ingresses/eciclient-ingress
    uid: 02bbdf62-2408-11e9-8180-525400143763
  spec:
    rules:
    - host: eciclient-t.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: eciclient-service
            servicePort: 8080
          path: /
    - host: eciclient-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: eciclient-service
            servicePort: 8080
          path: /
    - host: rhinofrs-t.target.com
      http:
        paths:
        - backend:
            serviceName: eciclient-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - eciclient-t.tte-test.k8s.target.com
      - eciclient-t.test.k8s.target.com
      - rhinofrs-t.target.com
      secretName: vanitysecret
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"fileapi","name":"fileapi-ingress"},"name":"fileapi-ingress","namespace":"eci-test"},"spec":{"rules":[{"host":"fileapi-t.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fileapi-service","servicePort":8080},"path":"/"}]}},{"host":"fileapi-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fileapi-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["fileapi-t.tte-test.k8s.target.com","fileapi-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-30T14:08:47Z
    generation: 1
    labels:
      app: fileapi
      name: fileapi-ingress
    name: fileapi-ingress
    namespace: eci-test
    resourceVersion: "143891993"
    selfLink: /apis/extensions/v1beta1/namespaces/eci-test/ingresses/fileapi-ingress
    uid: 8fcc883b-2498-11e9-8180-525400143763
  spec:
    rules:
    - host: fileapi-t.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fileapi-service
            servicePort: 8080
          path: /
    - host: fileapi-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fileapi-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - fileapi-t.tte-test.k8s.target.com
      - fileapi-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"groupdocsjpoc","name":"groupdocsjpoc-ingress"},"name":"groupdocsjpoc-ingress","namespace":"eci-test"},"spec":{"rules":[{"host":"groupdocsjpoc-t.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"groupdocsjpoc-service","servicePort":8080},"path":"/"}]}},{"host":"groupdocsjpoc-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"groupdocsjpoc-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["groupdocsjpoc-t.tte-test.k8s.target.com","groupdocsjpoc-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-30T00:25:45Z
    generation: 1
    labels:
      app: groupdocsjpoc
      name: groupdocsjpoc-ingress
    name: groupdocsjpoc-ingress
    namespace: eci-test
    resourceVersion: "143398014"
    selfLink: /apis/extensions/v1beta1/namespaces/eci-test/ingresses/groupdocsjpoc-ingress
    uid: 95f2a84e-2425-11e9-86c4-525400ed1a2a
  spec:
    rules:
    - host: groupdocsjpoc-t.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: groupdocsjpoc-service
            servicePort: 8080
          path: /
    - host: groupdocsjpoc-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: groupdocsjpoc-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - groupdocsjpoc-t.tte-test.k8s.target.com
      - groupdocsjpoc-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"guidgenapi","name":"guidgenapi-ingress"},"name":"guidgenapi-ingress","namespace":"eci-test"},"spec":{"rules":[{"host":"guidgenapi-t.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"guidgenapi-service","servicePort":8080},"path":"/"}]}},{"host":"guidgenapi-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"guidgenapi-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["guidgenapi-t.tte-test.k8s.target.com","guidgenapi-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-03-08T16:39:10Z
    generation: 1
    labels:
      app: guidgenapi
      name: guidgenapi-ingress
    name: guidgenapi-ingress
    namespace: eci-test
    resourceVersion: "181791631"
    selfLink: /apis/extensions/v1beta1/namespaces/eci-test/ingresses/guidgenapi-ingress
    uid: b31287e8-41c0-11e9-a26e-525400dba923
  spec:
    rules:
    - host: guidgenapi-t.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: guidgenapi-service
            servicePort: 8080
          path: /
    - host: guidgenapi-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: guidgenapi-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - guidgenapi-t.tte-test.k8s.target.com
      - guidgenapi-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"ingestionapi","name":"ingestionapi-ingress"},"name":"ingestionapi-ingress","namespace":"eci-test"},"spec":{"rules":[{"host":"ingestionapi-t.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ingestionapi-service","servicePort":8080},"path":"/"}]}},{"host":"ingestionapi-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ingestionapi-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["ingestionapi-t.tte-test.k8s.target.com","ingestionapi-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-29T21:50:38Z
    generation: 1
    labels:
      app: ingestionapi
      name: ingestionapi-ingress
    name: ingestionapi-ingress
    namespace: eci-test
    resourceVersion: "143299877"
    selfLink: /apis/extensions/v1beta1/namespaces/eci-test/ingresses/ingestionapi-ingress
    uid: ea747286-240f-11e9-86c4-525400ed1a2a
  spec:
    rules:
    - host: ingestionapi-t.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ingestionapi-service
            servicePort: 8080
          path: /
    - host: ingestionapi-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ingestionapi-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - ingestionapi-t.tte-test.k8s.target.com
      - ingestionapi-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"mongoclean","name":"mongoclean-ingress"},"name":"mongoclean-ingress","namespace":"eci-test"},"spec":{"rules":[{"host":"mongoclean-t.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mongoclean-service","servicePort":8080},"path":"/"}]}},{"host":"mongoclean-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mongoclean-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["mongoclean-t.tte-test.k8s.target.com","mongoclean-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-29T21:16:36Z
    generation: 1
    labels:
      app: mongoclean
      name: mongoclean-ingress
    name: mongoclean-ingress
    namespace: eci-test
    resourceVersion: "143278719"
    selfLink: /apis/extensions/v1beta1/namespaces/eci-test/ingresses/mongoclean-ingress
    uid: 291e0719-240b-11e9-8180-525400143763
  spec:
    rules:
    - host: mongoclean-t.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mongoclean-service
            servicePort: 8080
          path: /
    - host: mongoclean-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mongoclean-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - mongoclean-t.tte-test.k8s.target.com
      - mongoclean-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presort","name":"presort-ingress"},"name":"presort-ingress","namespace":"eci-test"},"spec":{"rules":[{"host":"presort-t.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presort-service","servicePort":8080},"path":"/"}]}},{"host":"presort-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presort-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["presort-t.tte-test.k8s.target.com","presort-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-29T21:56:28Z
    generation: 1
    labels:
      app: presort
      name: presort-ingress
    name: presort-ingress
    namespace: eci-test
    resourceVersion: "143303679"
    selfLink: /apis/extensions/v1beta1/namespaces/eci-test/ingresses/presort-ingress
    uid: baf3ac46-2410-11e9-9f4c-52540007c5b2
  spec:
    rules:
    - host: presort-t.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presort-service
            servicePort: 8080
          path: /
    - host: presort-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presort-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - presort-t.tte-test.k8s.target.com
      - presort-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"sprelease","name":"sprelease-ingress"},"name":"sprelease-ingress","namespace":"eci-test"},"spec":{"rules":[{"host":"sprelease-t.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"sprelease-service","servicePort":8080},"path":"/"}]}},{"host":"sprelease-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"sprelease-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["sprelease-t.tte-test.k8s.target.com","sprelease-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-29T21:50:38Z
    generation: 1
    labels:
      app: sprelease
      name: sprelease-ingress
    name: sprelease-ingress
    namespace: eci-test
    resourceVersion: "143299878"
    selfLink: /apis/extensions/v1beta1/namespaces/eci-test/ingresses/sprelease-ingress
    uid: e9f95584-240f-11e9-9f4c-52540007c5b2
  spec:
    rules:
    - host: sprelease-t.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: sprelease-service
            servicePort: 8080
          path: /
    - host: sprelease-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: sprelease-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - sprelease-t.tte-test.k8s.target.com
      - sprelease-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"svccompletion","name":"svccompletion-ingress"},"name":"svccompletion-ingress","namespace":"eci-test"},"spec":{"rules":[{"host":"svccompletion-t.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"svccompletion-service","servicePort":8080},"path":"/"}]}},{"host":"svccompletion-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"svccompletion-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["svccompletion-t.tte-test.k8s.target.com","svccompletion-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-29T21:42:48Z
    generation: 1
    labels:
      app: svccompletion
      name: svccompletion-ingress
    name: svccompletion-ingress
    namespace: eci-test
    resourceVersion: "143294356"
    selfLink: /apis/extensions/v1beta1/namespaces/eci-test/ingresses/svccompletion-ingress
    uid: d1f7e57f-240e-11e9-86c4-525400ed1a2a
  spec:
    rules:
    - host: svccompletion-t.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: svccompletion-service
            servicePort: 8080
          path: /
    - host: svccompletion-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: svccompletion-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - svccompletion-t.tte-test.k8s.target.com
      - svccompletion-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"workflow","name":"workflowapi-ingress"},"name":"workflowapi-ingress","namespace":"eci-test"},"spec":{"rules":[{"host":"workflowapi-t.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"workflowapi-service","servicePort":8080},"path":"/"}]}},{"host":"workflowapi-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"workflowapi-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["workflowapi-t.tte-test.k8s.target.com","workflowapi-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-29T21:43:06Z
    generation: 1
    labels:
      app: workflow
      name: workflowapi-ingress
    name: workflowapi-ingress
    namespace: eci-test
    resourceVersion: "143294357"
    selfLink: /apis/extensions/v1beta1/namespaces/eci-test/ingresses/workflowapi-ingress
    uid: dcec5c54-240e-11e9-9f4c-52540007c5b2
  spec:
    rules:
    - host: workflowapi-t.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: workflowapi-service
            servicePort: 8080
          path: /
    - host: workflowapi-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: workflowapi-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - workflowapi-t.tte-test.k8s.target.com
      - workflowapi-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-01-17T09:24:46Z
    generation: 1
    labels:
      name: dev-itemlistplanattr-ing
    name: dev-itemlistplanattr-ing
    namespace: eil-aggregator-dev
    resourceVersion: "131096173"
    selfLink: /apis/extensions/v1beta1/namespaces/eil-aggregator-dev/ingresses/dev-itemlistplanattr-ing
    uid: bad1224c-1a39-11e9-b998-525400bb6b25
  spec:
    rules:
    - host: apex-only-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dev-itemlistplanattr-srv
            servicePort: 8080
          path: /
    - host: apex-only-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dev-itemlistplanattr-srv
            servicePort: 8080
          path: /
    - host: apex-only-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dev-itemlistplanattr-srv
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - apex-only-dev.test.k8s.target.com
      - apex-only-dev.ttc-test.k8s.target.com
    - hosts:
      - apex-only-dev.test.k8s.target.com
      - apex-only-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"dev-nginx-enterpriseitemlist"},"name":"dev-nginx-enterpriseitemlist","namespace":"eil-aggregator-dev"},"spec":{"rules":[{"host":"enterpriseitemlist-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dev-nginx-enterpriseitemlist","servicePort":8080},"path":"/"}]}},{"host":"enterpriseitemlist-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dev-nginx-enterpriseitemlist","servicePort":8080},"path":"/"}]}},{"host":"enterpriseitemlist-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dev-nginx-enterpriseitemlist","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["enterpriseitemlist-dev.test.k8s.target.com","enterpriseitemlist-dev.ttc-test.k8s.target.com"]},{"hosts":["enterpriseitemlist-dev.test.k8s.target.com","enterpriseitemlist-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-15T05:27:26Z
    generation: 3
    labels:
      name: dev-nginx-enterpriseitemlist
    name: dev-nginx-enterpriseitemlist
    namespace: eil-aggregator-dev
    resourceVersion: "72672742"
    selfLink: /apis/extensions/v1beta1/namespaces/eil-aggregator-dev/ingresses/dev-nginx-enterpriseitemlist
    uid: 233aaa96-e897-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: enterpriseitemlist-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dev-nginx-enterpriseitemlist
            servicePort: 8080
          path: /
    - host: enterpriseitemlist-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dev-nginx-enterpriseitemlist
            servicePort: 8080
          path: /
    - host: enterpriseitemlist-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dev-nginx-enterpriseitemlist
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - enterpriseitemlist-dev.test.k8s.target.com
      - enterpriseitemlist-dev.ttc-test.k8s.target.com
    - hosts:
      - enterpriseitemlist-dev.test.k8s.target.com
      - enterpriseitemlist-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-11T18:05:48Z
    generation: 1
    labels:
      name: dev-usertcinlist-ing
    name: dev-usertcinlist-ing
    namespace: eil-aggregator-dev
    resourceVersion: "184692526"
    selfLink: /apis/extensions/v1beta1/namespaces/eil-aggregator-dev/ingresses/dev-usertcinlist-ing
    uid: 4c967065-4428-11e9-8f23-525400cb189a
  spec:
    rules:
    - host: usertcinlist-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dev-usertcinlist-srv
            servicePort: 8080
          path: /
    - host: usertcinlist-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dev-usertcinlist-srv
            servicePort: 8080
          path: /
    - host: usertcinlist-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dev-usertcinlist-srv
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - usertcinlist-dev.test.k8s.target.com
      - usertcinlist-dev.ttc-test.k8s.target.com
    - hosts:
      - usertcinlist-dev.test.k8s.target.com
      - usertcinlist-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"stage-itemlistplanattr-ing"},"name":"stage-itemlistplanattr-ing","namespace":"eil-aggregator-stage"},"spec":{"rules":[{"host":"apex-only-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"stage-itemlistplanattr-srv","servicePort":8080},"path":"/"}]}},{"host":"apex-only-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"stage-itemlistplanattr-srv","servicePort":8080},"path":"/"}]}},{"host":"apex-only-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"stage-itemlistplanattr-srv","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["apex-only-stage.test.k8s.target.com","apex-only-stage.ttc-test.k8s.target.com"]},{"hosts":["apex-only-stage.test.k8s.target.com","apex-only-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-21T14:02:07Z
    generation: 1
    labels:
      name: stage-itemlistplanattr-ing
    name: stage-itemlistplanattr-ing
    namespace: eil-aggregator-stage
    resourceVersion: "75705937"
    selfLink: /apis/extensions/v1beta1/namespaces/eil-aggregator-stage/ingresses/stage-itemlistplanattr-ing
    uid: 086a8e26-ed96-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: apex-only-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: stage-itemlistplanattr-srv
            servicePort: 8080
          path: /
    - host: apex-only-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: stage-itemlistplanattr-srv
            servicePort: 8080
          path: /
    - host: apex-only-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: stage-itemlistplanattr-srv
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - apex-only-stage.test.k8s.target.com
      - apex-only-stage.ttc-test.k8s.target.com
    - hosts:
      - apex-only-stage.test.k8s.target.com
      - apex-only-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"stage-nginx-enterpriseitemlist"},"name":"stage-nginx-enterpriseitemlist","namespace":"eil-aggregator-stage"},"spec":{"rules":[{"host":"enterpriseitemlist-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"stage-nginx-enterpriseitemlist","servicePort":8080},"path":"/"}]}},{"host":"enterpriseitemlist-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"stage-nginx-enterpriseitemlist","servicePort":8080},"path":"/"}]}},{"host":"enterpriseitemlist-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"stage-nginx-enterpriseitemlist","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["enterpriseitemlist-stage.test.k8s.target.com","enterpriseitemlist-stage.ttc-test.k8s.target.com"]},{"hosts":["enterpriseitemlist-stage.test.k8s.target.com","enterpriseitemlist-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-21T09:31:14Z
    generation: 1
    labels:
      name: stage-nginx-enterpriseitemlist
    name: stage-nginx-enterpriseitemlist
    namespace: eil-aggregator-stage
    resourceVersion: "75530770"
    selfLink: /apis/extensions/v1beta1/namespaces/eil-aggregator-stage/ingresses/stage-nginx-enterpriseitemlist
    uid: 30a7192d-ed70-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: enterpriseitemlist-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: stage-nginx-enterpriseitemlist
            servicePort: 8080
          path: /
    - host: enterpriseitemlist-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: stage-nginx-enterpriseitemlist
            servicePort: 8080
          path: /
    - host: enterpriseitemlist-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: stage-nginx-enterpriseitemlist
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - enterpriseitemlist-stage.test.k8s.target.com
      - enterpriseitemlist-stage.ttc-test.k8s.target.com
    - hosts:
      - enterpriseitemlist-stage.test.k8s.target.com
      - enterpriseitemlist-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"stage-usertcinlist-ing"},"name":"stage-usertcinlist-ing","namespace":"eil-aggregator-stage"},"spec":{"rules":[{"host":"usertcinlist-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"stage-usertcinlist-srv","servicePort":8080},"path":"/"}]}},{"host":"usertcinlist-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"stage-usertcinlist-srv","servicePort":8080},"path":"/"}]}},{"host":"usertcinlist-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"stage-usertcinlist-srv","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["usertcinlist-stage.test.k8s.target.com","usertcinlist-stage.ttc-test.k8s.target.com"]},{"hosts":["usertcinlist-stage.test.k8s.target.com","usertcinlist-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-22T05:39:02Z
    generation: 1
    labels:
      name: stage-usertcinlist-ing
    name: stage-usertcinlist-ing
    namespace: eil-aggregator-stage
    resourceVersion: "76339800"
    selfLink: /apis/extensions/v1beta1/namespaces/eil-aggregator-stage/ingresses/stage-usertcinlist-ing
    uid: eb01930e-ee18-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: usertcinlist-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: stage-usertcinlist-srv
            servicePort: 8080
          path: /
    - host: usertcinlist-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: stage-usertcinlist-srv
            servicePort: 8080
          path: /
    - host: usertcinlist-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: stage-usertcinlist-srv
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - usertcinlist-stage.test.k8s.target.com
      - usertcinlist-stage.ttc-test.k8s.target.com
    - hosts:
      - usertcinlist-stage.test.k8s.target.com
      - usertcinlist-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"eno-transfer-order-move-stream-ingress"},"name":"eno-transfer-order-move-stream-ingress","namespace":"eno-streams"},"spec":{"rules":[{"host":"eno-transfer-order-move-stream.us-central-1tte.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"eno-transfer-order-move-stream-service","servicePort":9099},"path":"/metrics"}]}}]}}
    creationTimestamp: 2018-10-24T18:55:45Z
    generation: 1
    labels:
      name: eno-transfer-order-move-stream-ingress
    name: eno-transfer-order-move-stream-ingress
    namespace: eno-streams
    resourceVersion: "50087807"
    selfLink: /apis/extensions/v1beta1/namespaces/eno-streams/ingresses/eno-transfer-order-move-stream-ingress
    uid: 69f74b51-d7be-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: eno-transfer-order-move-stream.us-central-1tte.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: eno-transfer-order-move-stream-service
            servicePort: 9099
          path: /metrics
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"enterprise-returns-service-ingress-dev"},"name":"enterprise-returns-service-ingress-dev","namespace":"enterprise-refunds"},"spec":{"rules":[{"host":"enterprise-returns-service.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"enterprise-returns-service-service-dev","servicePort":8080},"path":"/"}]}},{"host":"enterprise-returns-service.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"enterprise-returns-service-service-dev","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["enterprise-returns-service.test.k8s.target.com","enterprise-returns-service.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-27T14:15:06Z
    generation: 1
    labels:
      name: enterprise-returns-service-ingress-dev
    name: enterprise-returns-service-ingress-dev
    namespace: enterprise-refunds
    resourceVersion: "81274236"
    selfLink: /apis/extensions/v1beta1/namespaces/enterprise-refunds/ingresses/enterprise-returns-service-ingress-dev
    uid: d73d78cd-f24e-11e8-999b-5254008d935f
  spec:
    rules:
    - host: enterprise-returns-service.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: enterprise-returns-service-service-dev
            servicePort: 8080
          path: /
    - host: enterprise-returns-service.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: enterprise-returns-service-service-dev
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - enterprise-returns-service.test.k8s.target.com
      - enterprise-returns-service.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"enterprise-returns-service-ingress-stage"},"name":"enterprise-returns-service-ingress-stage","namespace":"enterprise-refunds"},"spec":{"rules":[{"host":"enterprise-returns-service-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"go-proxy-service","servicePort":80},"path":"/"}]}},{"host":"enterprise-returns-service-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"go-proxy-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["enterprise-returns-service-stage.test.k8s.target.com","enterprise-returns-service-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-04T14:47:51Z
    generation: 1
    labels:
      name: enterprise-returns-service-ingress-stage
    name: enterprise-returns-service-ingress-stage
    namespace: enterprise-refunds
    resourceVersion: "88005001"
    selfLink: /apis/extensions/v1beta1/namespaces/enterprise-refunds/ingresses/enterprise-returns-service-ingress-stage
    uid: 9352ccd4-f7d3-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: enterprise-returns-service-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: go-proxy-service
            servicePort: 80
          path: /
    - host: enterprise-returns-service-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: go-proxy-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - enterprise-returns-service-stage.test.k8s.target.com
      - enterprise-returns-service-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"sales-api-simulator-ingress"},"name":"sales-api-simulator-ingress","namespace":"enterprise-returns-simulator"},"spec":{"rules":[{"host":"sales-api-simulator.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"sales-api-simulator-service","servicePort":8080},"path":"/"}]}},{"host":"sales-api-simulator.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"sales-api-simulator-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["sales-api-simulator.test.k8s.target.com","sales-api-simulator.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-03T10:04:20Z
    generation: 1
    labels:
      name: sales-api-simulator-ingress
    name: sales-api-simulator-ingress
    namespace: enterprise-returns-simulator
    resourceVersion: "86828561"
    selfLink: /apis/extensions/v1beta1/namespaces/enterprise-returns-simulator/ingresses/sales-api-simulator-ingress
    uid: cd501745-f6e2-11e8-999b-5254008d935f
  spec:
    rules:
    - host: sales-api-simulator.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: sales-api-simulator-service
            servicePort: 8080
          path: /
    - host: sales-api-simulator.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: sales-api-simulator-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - sales-api-simulator.test.k8s.target.com
      - sales-api-simulator.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"rundeck"},"name":"rundeck","namespace":"financeintg-stage"},"spec":{"rules":[{"host":"rundeck-corpsysfin.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rundeck","servicePort":4440},"path":"/"}]}}],"tls":[{"hosts":["rundeck-corpsysfin.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-25T06:43:03Z
    generation: 1
    labels:
      name: rundeck
    name: rundeck
    namespace: financeintg-stage
    resourceVersion: "50496521"
    selfLink: /apis/extensions/v1beta1/namespaces/financeintg-stage/ingresses/rundeck
    uid: 391468fa-d821-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: rundeck-corpsysfin.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rundeck
            servicePort: 4440
          path: /
    tls:
    - hosts:
      - rundeck-corpsysfin.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"drone6-wall-ingress"},"name":"drone6-wall-ingress","namespace":"gdm-dev"},"spec":{"rules":[{"host":"gdm-drone6-wall-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"drone6-wall-service","servicePort":3000},"path":"/"}]}},{"host":"gdm-drone6-wall-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"drone6-wall-service","servicePort":3000},"path":"/"}]}}],"tls":[{"hosts":["gdm-drone6-wall-dev.tte-test.k8s.target.com","gdm-drone6-wall-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T15:52:01Z
    generation: 1
    labels:
      name: drone6-wall-ingress
    name: drone6-wall-ingress
    namespace: gdm-dev
    resourceVersion: "26113907"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-dev/ingresses/drone6-wall-ingress
    uid: 476a1944-bdb6-11e8-bc70-5254004139fa
  spec:
    rules:
    - host: gdm-drone6-wall-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: drone6-wall-service
            servicePort: 3000
          path: /
    - host: gdm-drone6-wall-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: drone6-wall-service
            servicePort: 3000
          path: /
    tls:
    - hosts:
      - gdm-drone6-wall-dev.tte-test.k8s.target.com
      - gdm-drone6-wall-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"gdm-gc-purge-ingress"},"name":"gdm-gc-purge-ingress","namespace":"gdm-dev"},"spec":{"rules":[{"host":"gdm-gc-purge-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"gdm-gc-purge-service","servicePort":8080},"path":"/"}]}},{"host":"gdm-gc-purge-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"gdm-gc-purge-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["gdm-gc-purge-dev.tte-test.k8s.target.com","gdm-gc-purge-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T17:40:27Z
    generation: 1
    labels:
      name: gdm-gc-purge-ingress
    name: gdm-gc-purge-ingress
    namespace: gdm-dev
    resourceVersion: "26155751"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-dev/ingresses/gdm-gc-purge-ingress
    uid: 6d6bb04a-bdc5-11e8-8bab-525400df3355
  spec:
    rules:
    - host: gdm-gc-purge-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: gdm-gc-purge-service
            servicePort: 8080
          path: /
    - host: gdm-gc-purge-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: gdm-gc-purge-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - gdm-gc-purge-dev.tte-test.k8s.target.com
      - gdm-gc-purge-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"gdm-guest-purge-ingress"},"name":"gdm-guest-purge-ingress","namespace":"gdm-dev"},"spec":{"rules":[{"host":"gdm-guest-purge-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"gdm-guest-purge-service","servicePort":8080},"path":"/"}]}},{"host":"gdm-guest-purge-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"gdm-guest-purge-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["gdm-guest-purge-dev.tte-test.k8s.target.com","gdm-guest-purge-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T17:42:42Z
    generation: 1
    labels:
      name: gdm-guest-purge-ingress
    name: gdm-guest-purge-ingress
    namespace: gdm-dev
    resourceVersion: "26156551"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-dev/ingresses/gdm-guest-purge-ingress
    uid: bdc91cec-bdc5-11e8-bc70-5254004139fa
  spec:
    rules:
    - host: gdm-guest-purge-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: gdm-guest-purge-service
            servicePort: 8080
          path: /
    - host: gdm-guest-purge-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: gdm-guest-purge-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - gdm-guest-purge-dev.tte-test.k8s.target.com
      - gdm-guest-purge-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"gdm-guest-search-api-ingress"},"name":"gdm-guest-search-api-ingress","namespace":"gdm-dev"},"spec":{"rules":[{"host":"gdm-guest-search-api-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"gdm-guest-search-api-service","servicePort":8080},"path":"/"}]}},{"host":"gdm-guest-search-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"gdm-guest-search-api-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["gdm-guest-search-api-dev.tte-test.k8s.target.com","gdm-guest-search-api-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-29T17:20:23Z
    generation: 1
    labels:
      name: gdm-guest-search-api-ingress
    name: gdm-guest-search-api-ingress
    namespace: gdm-dev
    resourceVersion: "83358253"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-dev/ingresses/gdm-guest-search-api-ingress
    uid: 0dee505b-f3fb-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: gdm-guest-search-api-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: gdm-guest-search-api-service
            servicePort: 8080
          path: /
    - host: gdm-guest-search-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: gdm-guest-search-api-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - gdm-guest-search-api-dev.tte-test.k8s.target.com
      - gdm-guest-search-api-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"gdmguestprocessor-ingress"},"name":"gdmguestprocessor-ingress","namespace":"gdm-dev"},"spec":{"rules":[{"host":"gdm-gdmguestprocessor-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"gdmguestprocessor-service","servicePort":8080},"path":"/"}]}},{"host":"gdm-gdmguestprocessor-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"gdmguestprocessor-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["gdm-gdmguestprocessor-dev.tte-test.k8s.target.com","gdm-gdmguestprocessor-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-22T07:30:12Z
    generation: 1
    labels:
      name: gdmguestprocessor-ingress
    name: gdmguestprocessor-ingress
    namespace: gdm-dev
    resourceVersion: "166003690"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-dev/ingresses/gdmguestprocessor-ingress
    uid: b0938c29-3673-11e9-8c81-525400abdf59
  spec:
    rules:
    - host: gdm-gdmguestprocessor-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: gdmguestprocessor-service
            servicePort: 8080
          path: /
    - host: gdm-gdmguestprocessor-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: gdmguestprocessor-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - gdm-gdmguestprocessor-dev.tte-test.k8s.target.com
      - gdm-gdmguestprocessor-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"gdmguestpublish-ingress"},"name":"gdmguestpublish-ingress","namespace":"gdm-dev"},"spec":{"rules":[{"host":"gdm-gdmguestpublish-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"gdmguestpublish-service","servicePort":8080},"path":"/"}]}},{"host":"gdm-gdmguestpublish-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"gdmguestpublish-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["gdm-gdmguestpublish-dev.tte-test.k8s.target.com","gdm-gdmguestpublish-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-26T18:51:53Z
    generation: 1
    labels:
      name: gdmguestpublish-ingress
    name: gdmguestpublish-ingress
    namespace: gdm-dev
    resourceVersion: "51776180"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-dev/ingresses/gdmguestpublish-ingress
    uid: 34922626-d950-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: gdm-gdmguestpublish-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: gdmguestpublish-service
            servicePort: 8080
          path: /
    - host: gdm-gdmguestpublish-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: gdmguestpublish-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - gdm-gdmguestpublish-dev.tte-test.k8s.target.com
      - gdm-gdmguestpublish-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"guest-choice-core-api-ingress"},"name":"guest-choice-core-api-ingress","namespace":"gdm-dev"},"spec":{"rules":[{"host":"gdm-guest-choice-core-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"guest-choice-core-api-service","servicePort":8080},"path":"/"}]}},{"host":"gdm-guest-choice-core-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"guest-choice-core-api-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["gdm-guest-choice-core-dev.tte-test.k8s.target.com","gdm-guest-choice-core-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T20:02:00Z
    generation: 1
    labels:
      name: guest-choice-core-api-ingress
    name: guest-choice-core-api-ingress
    namespace: gdm-dev
    resourceVersion: "26213246"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-dev/ingresses/guest-choice-core-api-ingress
    uid: 3374c382-bdd9-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: gdm-guest-choice-core-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: guest-choice-core-api-service
            servicePort: 8080
          path: /
    - host: gdm-guest-choice-core-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: guest-choice-core-api-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - gdm-guest-choice-core-dev.tte-test.k8s.target.com
      - gdm-guest-choice-core-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"guest-to-contact-mechanism-api-ingress"},"name":"guest-to-contact-mechanism-api-ingress","namespace":"gdm-dev"},"spec":{"rules":[{"host":"guest-to-contact-mechanism-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"guest-to-contact-mechanism-api-service","servicePort":8080},"path":"/"}]}},{"host":"guest-to-contact-mechanism-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"guest-to-contact-mechanism-api-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["guest-to-contact-mechanism-dev.tte-test.k8s.target.com","guest-to-contact-mechanism-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T18:00:02Z
    generation: 2
    labels:
      name: guest-to-contact-mechanism-api-ingress
    name: guest-to-contact-mechanism-api-ingress
    namespace: gdm-dev
    resourceVersion: "28078961"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-dev/ingresses/guest-to-contact-mechanism-api-ingress
    uid: 2980c033-bdc8-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: guest-to-contact-mechanism-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: guest-to-contact-mechanism-api-service
            servicePort: 8080
          path: /
    - host: guest-to-contact-mechanism-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: guest-to-contact-mechanism-api-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - guest-to-contact-mechanism-dev.tte-test.k8s.target.com
      - guest-to-contact-mechanism-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"hadoop-purge-ack-ingress"},"name":"hadoop-purge-ack-ingress","namespace":"gdm-dev"},"spec":{"rules":[{"host":"hadoop-purge-ack-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"hadoop-purge-ack-service","servicePort":8080},"path":"/"}]}},{"host":"hadoop-purge-ack-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"hadoop-purge-ack-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["hadoop-purge-ack-dev.tte-test.k8s.target.com","hadoop-purge-ack-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-29T05:17:40Z
    generation: 2
    labels:
      name: hadoop-purge-ack-ingress
    name: hadoop-purge-ack-ingress
    namespace: gdm-dev
    resourceVersion: "16953534"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-dev/ingresses/hadoop-purge-ack-ingress
    uid: d9ee8bc1-ab4a-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: hadoop-purge-ack-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: hadoop-purge-ack-service
            servicePort: 8080
          path: /
    - host: hadoop-purge-ack-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: hadoop-purge-ack-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - hadoop-purge-ack-dev.tte-test.k8s.target.com
      - hadoop-purge-ack-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"janusingestion-ingress"},"name":"janusingestion-ingress","namespace":"gdm-dev"},"spec":{"rules":[{"host":"gdm-janusingestion-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"janusingestion-service","servicePort":8080},"path":"/"}]}},{"host":"gdm-janusingestion-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"janusingestion-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["gdm-janusingestion-dev.tte-test.k8s.target.com","gdm-janusingestion-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-07T06:42:10Z
    generation: 1
    labels:
      name: janusingestion-ingress
    name: janusingestion-ingress
    namespace: gdm-dev
    resourceVersion: "151828660"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-dev/ingresses/janusingestion-ingress
    uid: 7ea42f75-2aa3-11e9-ba28-52540054e5ef
  spec:
    rules:
    - host: gdm-janusingestion-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: janusingestion-service
            servicePort: 8080
          path: /
    - host: gdm-janusingestion-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: janusingestion-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - gdm-janusingestion-dev.tte-test.k8s.target.com
      - gdm-janusingestion-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"l1-master-incremental-out-ingress"},"name":"l1-master-incremental-out-ingress","namespace":"gdm-dev"},"spec":{"rules":[{"host":"l1-master-incremental-out-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"l1-master-incremental-out-service","servicePort":8080},"path":"/"}]}},{"host":"l1-master-incremental-out-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"l1-master-incremental-out-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["l1-master-incremental-out-dev.tte-test.k8s.target.com","l1-master-incremental-out-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-12T10:59:04Z
    generation: 1
    labels:
      name: l1-master-incremental-out-ingress
    name: l1-master-incremental-out-ingress
    namespace: gdm-dev
    resourceVersion: "21594442"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-dev/ingresses/l1-master-incremental-out-ingress
    uid: dce01586-b67a-11e8-842d-525400df3355
  spec:
    rules:
    - host: l1-master-incremental-out-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: l1-master-incremental-out-service
            servicePort: 8080
          path: /
    - host: l1-master-incremental-out-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: l1-master-incremental-out-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - l1-master-incremental-out-dev.tte-test.k8s.target.com
      - l1-master-incremental-out-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"l3-contactmechanism-service-api-ingress"},"name":"l3-contactmechanism-service-api-ingress","namespace":"gdm-dev"},"spec":{"rules":[{"host":"gdm-l3-contactmechanism-service-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"l3-contactmechanism-service","servicePort":8080},"path":"/"}]}},{"host":"gdm-l3-contactmechanism-service-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"l3-contactmechanism-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["gdm-l3-contactmechanism-service-dev.tte-test.k8s.target.com","gdm-l3-contactmechanism-service-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-24T21:12:26Z
    generation: 3
    labels:
      name: l3-contactmechanism-service-api-ingress
    name: l3-contactmechanism-service-api-ingress
    namespace: gdm-dev
    resourceVersion: "28471605"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-dev/ingresses/l3-contactmechanism-service-api-ingress
    uid: 8972ad35-c03e-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: gdm-l3-contactmechanism-service-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: l3-contactmechanism-service
            servicePort: 8080
          path: /
    - host: gdm-l3-contactmechanism-service-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: l3-contactmechanism-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - gdm-l3-contactmechanism-service-dev.tte-test.k8s.target.com
      - gdm-l3-contactmechanism-service-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"l3-master-publish-hadoop-ingress"},"name":"l3-master-publish-hadoop-ingress","namespace":"gdm-dev"},"spec":{"rules":[{"host":"l3-master-publish-hadoop-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"l3-master-publish-hadoop-service","servicePort":8080},"path":"/"}]}},{"host":"l3-master-publish-hadoop-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"l3-master-publish-hadoop-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["l3-master-publish-hadoop-dev.tte-test.k8s.target.com","l3-master-publish-hadoop-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-12T11:00:03Z
    generation: 1
    labels:
      name: l3-master-publish-hadoop-ingress
    name: l3-master-publish-hadoop-ingress
    namespace: gdm-dev
    resourceVersion: "21594849"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-dev/ingresses/l3-master-publish-hadoop-ingress
    uid: fff29a31-b67a-11e8-88c5-5254004139fa
  spec:
    rules:
    - host: l3-master-publish-hadoop-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: l3-master-publish-hadoop-service
            servicePort: 8080
          path: /
    - host: l3-master-publish-hadoop-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: l3-master-publish-hadoop-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - l3-master-publish-hadoop-dev.tte-test.k8s.target.com
      - l3-master-publish-hadoop-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"l3-master-service-api-ingress"},"name":"l3-master-service-api-ingress","namespace":"gdm-dev"},"spec":{"rules":[{"host":"gdm-l3-master-service-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"l3-master-service","servicePort":8080},"path":"/"}]}},{"host":"gdm-l3-master-service-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"l3-master-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["gdm-l3-master-service-dev.tte-test.k8s.target.com","gdm-l3-master-service-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-25T22:09:50Z
    generation: 1
    labels:
      name: l3-master-service-api-ingress
    name: l3-master-service-api-ingress
    namespace: gdm-dev
    resourceVersion: "28569393"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-dev/ingresses/l3-master-service-api-ingress
    uid: b9040372-c10f-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: gdm-l3-master-service-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: l3-master-service
            servicePort: 8080
          path: /
    - host: gdm-l3-master-service-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: l3-master-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - gdm-l3-master-service-dev.tte-test.k8s.target.com
      - gdm-l3-master-service-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"marketability-decision-api-ingress"},"name":"marketability-decision-api-ingress","namespace":"gdm-dev"},"spec":{"rules":[{"host":"gdm-marketability-decision-api-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"marketability-decision-api-service","servicePort":8080},"path":"/"}]}},{"host":"gdm-marketability-decision-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"marketability-decision-api-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["gdm-marketability-decision-api-dev.tte-test.k8s.target.com","gdm-marketability-decision-api-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-02T21:16:35Z
    generation: 1
    labels:
      name: marketability-decision-api-ingress
    name: marketability-decision-api-ingress
    namespace: gdm-dev
    resourceVersion: "33175047"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-dev/ingresses/marketability-decision-api-ingress
    uid: 71778329-c688-11e8-bad5-525400b91df9
  spec:
    rules:
    - host: gdm-marketability-decision-api-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: marketability-decision-api-service
            servicePort: 8080
          path: /
    - host: gdm-marketability-decision-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: marketability-decision-api-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - gdm-marketability-decision-api-dev.tte-test.k8s.target.com
      - gdm-marketability-decision-api-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"neo4jservice-ingress"},"name":"neo4jservice-ingress","namespace":"gdm-dev"},"spec":{"rules":[{"host":"neo4jservice-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"neo4jservice-service","servicePort":8080},"path":"/"}]}},{"host":"neo4jservice-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"neo4jservice-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["neo4jservice-dev.tte-test.k8s.target.com","neo4jservice-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-18T07:27:09Z
    generation: 1
    labels:
      name: neo4jservice-ingress
    name: neo4jservice-ingress
    namespace: gdm-dev
    resourceVersion: "72547999"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-dev/ingresses/neo4jservice-ingress
    uid: 5c14d7ce-eb03-11e8-999b-5254008d935f
  spec:
    rules:
    - host: neo4jservice-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: neo4jservice-service
            servicePort: 8080
          path: /
    - host: neo4jservice-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: neo4jservice-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - neo4jservice-dev.tte-test.k8s.target.com
      - neo4jservice-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"profile-to-contact-mechanism-api-ingress"},"name":"profile-to-contact-mechanism-api-ingress","namespace":"gdm-dev"},"spec":{"rules":[{"host":"gdm-profile-to-contact-mechanism-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"profile-to-contact-mechanism-api-service","servicePort":8080},"path":"/"}]}},{"host":"gdm-profile-to-contact-mechanism-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"profile-to-contact-mechanism-api-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["gdm-profile-to-contact-mechanism-dev.tte-test.k8s.target.com","gdm-profile-to-contact-mechanism-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T18:17:20Z
    generation: 2
    labels:
      name: profile-to-contact-mechanism-api-ingress
    name: profile-to-contact-mechanism-api-ingress
    namespace: gdm-dev
    resourceVersion: "28984155"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-dev/ingresses/profile-to-contact-mechanism-api-ingress
    uid: 941deb42-bdca-11e8-8bab-525400df3355
  spec:
    rules:
    - host: gdm-profile-to-contact-mechanism-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: profile-to-contact-mechanism-api-service
            servicePort: 8080
          path: /
    - host: gdm-profile-to-contact-mechanism-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: profile-to-contact-mechanism-api-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - gdm-profile-to-contact-mechanism-dev.tte-test.k8s.target.com
      - gdm-profile-to-contact-mechanism-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"emu-publish-ingress"},"name":"emu-publish-ingress","namespace":"gdm-stage"},"spec":{"rules":[{"host":"emu-publish.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"emu-publish-service","servicePort":8080},"path":"/"}]}},{"host":"emu-publish.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"emu-publish-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["emu-publish.tte-test.k8s.target.com","emu-publish.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-01T07:32:35Z
    generation: 1
    labels:
      name: emu-publish-ingress
    name: emu-publish-ingress
    namespace: gdm-stage
    resourceVersion: "17938302"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-stage/ingresses/emu-publish-ingress
    uid: 32211bd7-adb9-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: emu-publish.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: emu-publish-service
            servicePort: 8080
          path: /
    - host: emu-publish.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: emu-publish-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - emu-publish.tte-test.k8s.target.com
      - emu-publish.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"gdm-gc-purge-ingress"},"name":"gdm-gc-purge-ingress","namespace":"gdm-stage"},"spec":{"rules":[{"host":"gdm-gc-purge-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"gdm-gc-purge-service","servicePort":8080},"path":"/"}]}},{"host":"gdm-gc-purge-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"gdm-gc-purge-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["gdm-gc-purge-stage.tte-test.k8s.target.com","gdm-gc-purge-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T20:44:47Z
    generation: 1
    labels:
      name: gdm-gc-purge-ingress
    name: gdm-gc-purge-ingress
    namespace: gdm-stage
    resourceVersion: "26232508"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-stage/ingresses/gdm-gc-purge-ingress
    uid: 2d4f7dc6-bddf-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: gdm-gc-purge-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: gdm-gc-purge-service
            servicePort: 8080
          path: /
    - host: gdm-gc-purge-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: gdm-gc-purge-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - gdm-gc-purge-stage.tte-test.k8s.target.com
      - gdm-gc-purge-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"gdm-guest-purge-ingress"},"name":"gdm-guest-purge-ingress","namespace":"gdm-stage"},"spec":{"rules":[{"host":"gdm-guest-purge-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"gdm-guest-purge-service","servicePort":8080},"path":"/"}]}},{"host":"gdm-guest-purge-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"gdm-guest-purge-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["gdm-guest-purge-stage.tte-test.k8s.target.com","gdm-guest-purge-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-26T03:51:26Z
    generation: 1
    labels:
      name: gdm-guest-purge-ingress
    name: gdm-guest-purge-ingress
    namespace: gdm-stage
    resourceVersion: "28704952"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-stage/ingresses/gdm-guest-purge-ingress
    uid: 7151e482-c13f-11e8-8bab-525400df3355
  spec:
    rules:
    - host: gdm-guest-purge-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: gdm-guest-purge-service
            servicePort: 8080
          path: /
    - host: gdm-guest-purge-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: gdm-guest-purge-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - gdm-guest-purge-stage.tte-test.k8s.target.com
      - gdm-guest-purge-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"gdm-guest-search-api-ingress"},"name":"gdm-guest-search-api-ingress","namespace":"gdm-stage"},"spec":{"rules":[{"host":"gdm-guest-search-api-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"gdm-guest-search-api-go-proxy-service","servicePort":80},"path":"/"}]}},{"host":"gdm-guest-search-api-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"gdm-guest-search-api-go-proxy-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["gdm-guest-search-api-stage.tte-test.k8s.target.com","gdm-guest-search-api-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-03T16:37:53Z
    generation: 1
    labels:
      name: gdm-guest-search-api-ingress
    name: gdm-guest-search-api-ingress
    namespace: gdm-stage
    resourceVersion: "87090791"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-stage/ingresses/gdm-guest-search-api-ingress
    uid: c806ea3a-f719-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: gdm-guest-search-api-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: gdm-guest-search-api-go-proxy-service
            servicePort: 80
          path: /
    - host: gdm-guest-search-api-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: gdm-guest-search-api-go-proxy-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - gdm-guest-search-api-stage.tte-test.k8s.target.com
      - gdm-guest-search-api-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"gdmguestprocessor-ingress"},"name":"gdmguestprocessor-ingress","namespace":"gdm-stage"},"spec":{"rules":[{"host":"gdm-gdmguestprocessor-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"gdmguestprocessor-service","servicePort":8080},"path":"/"}]}},{"host":"gdm-gdmguestprocessor-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"gdmguestprocessor-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["gdm-gdmguestprocessor-stage.tte-test.k8s.target.com","gdm-gdmguestprocessor-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-22T07:16:32Z
    generation: 1
    labels:
      name: gdmguestprocessor-ingress
    name: gdmguestprocessor-ingress
    namespace: gdm-stage
    resourceVersion: "165994696"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-stage/ingresses/gdmguestprocessor-ingress
    uid: c7f6935e-3671-11e9-8c81-525400abdf59
  spec:
    rules:
    - host: gdm-gdmguestprocessor-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: gdmguestprocessor-service
            servicePort: 8080
          path: /
    - host: gdm-gdmguestprocessor-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: gdmguestprocessor-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - gdm-gdmguestprocessor-stage.tte-test.k8s.target.com
      - gdm-gdmguestprocessor-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"guest-choice-core-api-ingress"},"name":"guest-choice-core-api-ingress","namespace":"gdm-stage"},"spec":{"rules":[{"host":"gdm-guest-choice-core-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"guest-choice-core-api-service","servicePort":8080},"path":"/"}]}},{"host":"gdm-guest-choice-core-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"guest-choice-core-api-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["gdm-guest-choice-core-stage.tte-test.k8s.target.com","gdm-guest-choice-core-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-24T16:48:34Z
    generation: 1
    labels:
      name: guest-choice-core-api-ingress
    name: guest-choice-core-api-ingress
    namespace: gdm-stage
    resourceVersion: "27855594"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-stage/ingresses/guest-choice-core-api-ingress
    uid: ad2f274e-c019-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: gdm-guest-choice-core-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: guest-choice-core-api-service
            servicePort: 8080
          path: /
    - host: gdm-guest-choice-core-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: guest-choice-core-api-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - gdm-guest-choice-core-stage.tte-test.k8s.target.com
      - gdm-guest-choice-core-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"guest-to-contact-mechanism-api-ingress"},"name":"guest-to-contact-mechanism-api-ingress","namespace":"gdm-stage"},"spec":{"rules":[{"host":"guest-to-contact-mechanism-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"guest-to-contact-mechanism-api-service","servicePort":8080},"path":"/"}]}},{"host":"guest-to-contact-mechanism-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"guest-to-contact-mechanism-api-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["guest-to-contact-mechanism-stage.tte-test.k8s.target.com","guest-to-contact-mechanism-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T19:06:39Z
    generation: 2
    labels:
      name: guest-to-contact-mechanism-api-ingress
    name: guest-to-contact-mechanism-api-ingress
    namespace: gdm-stage
    resourceVersion: "28099309"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-stage/ingresses/guest-to-contact-mechanism-api-ingress
    uid: 781a3b5b-bdd1-11e8-bc70-5254004139fa
  spec:
    rules:
    - host: guest-to-contact-mechanism-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: guest-to-contact-mechanism-api-service
            servicePort: 8080
          path: /
    - host: guest-to-contact-mechanism-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: guest-to-contact-mechanism-api-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - guest-to-contact-mechanism-stage.tte-test.k8s.target.com
      - guest-to-contact-mechanism-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"hadoop-purge-ack-ingress"},"name":"hadoop-purge-ack-ingress","namespace":"gdm-stage"},"spec":{"rules":[{"host":"hadoop-purge-ack-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"hadoop-purge-ack-service","servicePort":8080},"path":"/"}]}},{"host":"hadoop-purge-ack-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"hadoop-purge-ack-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["hadoop-purge-ack-stage.tte-test.k8s.target.com","hadoop-purge-ack-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-29T12:41:40Z
    generation: 1
    labels:
      name: hadoop-purge-ack-ingress
    name: hadoop-purge-ack-ingress
    namespace: gdm-stage
    resourceVersion: "17048007"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-stage/ingresses/hadoop-purge-ack-ingress
    uid: e08cf49d-ab88-11e8-88c5-5254004139fa
  spec:
    rules:
    - host: hadoop-purge-ack-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: hadoop-purge-ack-service
            servicePort: 8080
          path: /
    - host: hadoop-purge-ack-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: hadoop-purge-ack-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - hadoop-purge-ack-stage.tte-test.k8s.target.com
      - hadoop-purge-ack-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"l1-master-incremental-out-ingress"},"name":"l1-master-incremental-out-ingress","namespace":"gdm-stage"},"spec":{"rules":[{"host":"l1-master-incremental-out-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"l1-master-incremental-out-service","servicePort":8080},"path":"/"}]}},{"host":"l1-master-incremental-out-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"l1-master-incremental-out-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["l1-master-incremental-out-stage.tte-test.k8s.target.com","l1-master-incremental-out-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-17T06:08:32Z
    generation: 1
    labels:
      name: l1-master-incremental-out-ingress
    name: l1-master-incremental-out-ingress
    namespace: gdm-stage
    resourceVersion: "23656037"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-stage/ingresses/l1-master-incremental-out-ingress
    uid: 1aca4ed1-ba40-11e8-842d-525400df3355
  spec:
    rules:
    - host: l1-master-incremental-out-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: l1-master-incremental-out-service
            servicePort: 8080
          path: /
    - host: l1-master-incremental-out-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: l1-master-incremental-out-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - l1-master-incremental-out-stage.tte-test.k8s.target.com
      - l1-master-incremental-out-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"l3-contactmechanism-service-api-ingress"},"name":"l3-contactmechanism-service-api-ingress","namespace":"gdm-stage"},"spec":{"rules":[{"host":"gdm-l3-contactmechanism-service-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"l3-contactmechanism-service","servicePort":8080},"path":"/"}]}},{"host":"gdm-l3-contactmechanism-service-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"l3-contactmechanism-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["gdm-l3-contactmechanism-service-stage.ttc-test.k8s.target.com","gdm-l3-contactmechanism-service-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-26T21:25:33Z
    generation: 1
    labels:
      name: l3-contactmechanism-service-api-ingress
    name: l3-contactmechanism-service-api-ingress
    namespace: gdm-stage
    resourceVersion: "29141501"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-stage/ingresses/l3-contactmechanism-service-api-ingress
    uid: b3b35d04-c1d2-11e8-93a6-525400dd15a8
  spec:
    rules:
    - host: gdm-l3-contactmechanism-service-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: l3-contactmechanism-service
            servicePort: 8080
          path: /
    - host: gdm-l3-contactmechanism-service-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: l3-contactmechanism-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - gdm-l3-contactmechanism-service-stage.ttc-test.k8s.target.com
      - gdm-l3-contactmechanism-service-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"l3-master-publish-hadoop-ingress"},"name":"l3-master-publish-hadoop-ingress","namespace":"gdm-stage"},"spec":{"rules":[{"host":"l3-master-publish-hadoop-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"l3-master-publish-hadoop-service","servicePort":8080},"path":"/"}]}},{"host":"l3-master-publish-hadoop-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"l3-master-publish-hadoop-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["l3-master-publish-hadoop-stage.tte-test.k8s.target.com","l3-master-publish-hadoop-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-18T06:39:36Z
    generation: 1
    labels:
      name: l3-master-publish-hadoop-ingress
    name: l3-master-publish-hadoop-ingress
    namespace: gdm-stage
    resourceVersion: "24212977"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-stage/ingresses/l3-master-publish-hadoop-ingress
    uid: 9c0a4de8-bb0d-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: l3-master-publish-hadoop-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: l3-master-publish-hadoop-service
            servicePort: 8080
          path: /
    - host: l3-master-publish-hadoop-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: l3-master-publish-hadoop-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - l3-master-publish-hadoop-stage.tte-test.k8s.target.com
      - l3-master-publish-hadoop-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"l3-master-service-api-ingress"},"name":"l3-master-service-api-ingress","namespace":"gdm-stage"},"spec":{"rules":[{"host":"gdm-l3-master-service-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"l3-master-service","servicePort":8080},"path":"/"}]}},{"host":"gdm-l3-master-service-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"l3-master-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["gdm-l3-master-service-stage.tte-test.k8s.target.com","gdm-l3-master-service-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-27T00:43:37Z
    generation: 1
    labels:
      name: l3-master-service-api-ingress
    name: l3-master-service-api-ingress
    namespace: gdm-stage
    resourceVersion: "29229902"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-stage/ingresses/l3-master-service-api-ingress
    uid: 5f446886-c1ee-11e8-bb02-525400b2fa35
  spec:
    rules:
    - host: gdm-l3-master-service-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: l3-master-service
            servicePort: 8080
          path: /
    - host: gdm-l3-master-service-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: l3-master-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - gdm-l3-master-service-stage.tte-test.k8s.target.com
      - gdm-l3-master-service-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"marketability-decision-api-ingress"},"name":"marketability-decision-api-ingress","namespace":"gdm-stage"},"spec":{"rules":[{"host":"gdm-marketability-decision-api-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"marketability-decision-api-service","servicePort":8080},"path":"/"}]}},{"host":"gdm-marketability-decision-api-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"marketability-decision-api-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["gdm-marketability-decision-api-stage.tte-test.k8s.target.com","gdm-marketability-decision-api-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-26T16:59:40Z
    generation: 1
    labels:
      name: marketability-decision-api-ingress
    name: marketability-decision-api-ingress
    namespace: gdm-stage
    resourceVersion: "29025318"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-stage/ingresses/marketability-decision-api-ingress
    uid: 8e9d81dd-c1ad-11e8-bc70-5254004139fa
  spec:
    rules:
    - host: gdm-marketability-decision-api-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: marketability-decision-api-service
            servicePort: 8080
          path: /
    - host: gdm-marketability-decision-api-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: marketability-decision-api-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - gdm-marketability-decision-api-stage.tte-test.k8s.target.com
      - gdm-marketability-decision-api-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"pmu-preference-processor-ingress"},"name":"pmu-preference-processor-ingress","namespace":"gdm-stage"},"spec":{"rules":[{"host":"gdm-pmu-preference-processor-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pmu-preference-processor-service","servicePort":8080},"path":"/"}]}},{"host":"gdm-pmu-preference-processor-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pmu-preference-processor-service","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2018-12-10T18:16:44Z
    generation: 1
    labels:
      name: pmu-preference-processor-ingress
    name: pmu-preference-processor-ingress
    namespace: gdm-stage
    resourceVersion: "93944332"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-stage/ingresses/pmu-preference-processor-ingress
    uid: c03b1a27-fca7-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: gdm-pmu-preference-processor-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pmu-preference-processor-service
            servicePort: 8080
          path: /
    - host: gdm-pmu-preference-processor-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pmu-preference-processor-service
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"profile-to-contact-mechanism-api-ingress"},"name":"profile-to-contact-mechanism-api-ingress","namespace":"gdm-stage"},"spec":{"rules":[{"host":"gdm-profile-to-contact-mechanism-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"profile-to-contact-mechanism-api-service","servicePort":8080},"path":"/"}]}},{"host":"gdm-profile-to-contact-mechanism-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"profile-to-contact-mechanism-api-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["gdm-profile-to-contact-mechanism-stage.tte-test.k8s.target.com","gdm-profile-to-contact-mechanism-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-26T21:32:25Z
    generation: 1
    labels:
      name: profile-to-contact-mechanism-api-ingress
    name: profile-to-contact-mechanism-api-ingress
    namespace: gdm-stage
    resourceVersion: "29144635"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-stage/ingresses/profile-to-contact-mechanism-api-ingress
    uid: a945a010-c1d3-11e8-b583-525400d3319b
  spec:
    rules:
    - host: gdm-profile-to-contact-mechanism-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: profile-to-contact-mechanism-api-service
            servicePort: 8080
          path: /
    - host: gdm-profile-to-contact-mechanism-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: profile-to-contact-mechanism-api-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - gdm-profile-to-contact-mechanism-stage.tte-test.k8s.target.com
      - gdm-profile-to-contact-mechanism-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"gohttpbin-ingress"},"name":"gohttpbin-ingress","namespace":"gohttpbin"},"spec":{"rules":[{"host":"gohttpbin.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"gohttpbin-service","servicePort":80},"path":"/"}]}},{"host":"gohttpbin.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"gohttpbin-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["gohttpbin.tte-test.k8s.target.com","gohttpbin.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-07-17T18:26:22Z
    generation: 1
    labels:
      name: gohttpbin-ingress
    name: gohttpbin-ingress
    namespace: gohttpbin
    resourceVersion: "1380259"
    selfLink: /apis/extensions/v1beta1/namespaces/gohttpbin/ingresses/gohttpbin-ingress
    uid: e7fb49ae-89ee-11e8-8dd4-5254004139fa
  spec:
    rules:
    - host: gohttpbin.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: gohttpbin-service
            servicePort: 80
          path: /
    - host: gohttpbin.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: gohttpbin-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - gohttpbin.tte-test.k8s.target.com
      - gohttpbin.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"graphql-audit-ingress"},"name":"graphql-audit-ingress","namespace":"graphql-enterprise-audit-dev"},"spec":{"rules":[{"host":"graphql-audit-kafka-connect-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"kafka-connect-proxy-service","servicePort":80},"path":"/"}]}},{"host":"graphql-audit-kibana-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"kibana-proxy-service","servicePort":80},"path":"/"}]}},{"host":"graphql-audit-kibana-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"kibana-proxy-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["graphql-audit-kafka-connect-dev.tte-test.k8s.target.com","graphql-audit-kibana-dev.tte-test.k8s.target.com","graphql-audit-kibana-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-30T20:24:46Z
    generation: 3
    labels:
      name: graphql-audit-ingress
    name: graphql-audit-ingress
    namespace: graphql-enterprise-audit-dev
    resourceVersion: "19672165"
    selfLink: /apis/extensions/v1beta1/namespaces/graphql-enterprise-audit-dev/ingresses/graphql-audit-ingress
    uid: bcc6430e-ac92-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: graphql-audit-kafka-connect-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: kafka-connect-proxy-service
            servicePort: 80
          path: /
    - host: graphql-audit-kibana-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: kibana-proxy-service
            servicePort: 80
          path: /
    - host: graphql-audit-kibana-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: kibana-proxy-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - graphql-audit-kafka-connect-dev.tte-test.k8s.target.com
      - graphql-audit-kibana-dev.tte-test.k8s.target.com
      - graphql-audit-kibana-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"graphql-audit-ingress"},"name":"graphql-audit-ingress","namespace":"graphql-enterprise-audit"},"spec":{"rules":[{"host":"graphql-audit-kafka-connect.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"kafka-connect-proxy-service","servicePort":80},"path":"/"}]}},{"host":"graphql-audit-kibana.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"kibana-proxy-service","servicePort":80},"path":"/"}]}},{"host":"graphql-audit-kibana.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"kibana-proxy-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["graphql-audit-kafka-connect.tte-test.k8s.target.com","graphql-audit-kibana.tte-test.k8s.target.com","graphql-audit-kibana.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-06T18:24:46Z
    generation: 1
    labels:
      name: graphql-audit-ingress
    name: graphql-audit-ingress
    namespace: graphql-enterprise-audit
    resourceVersion: "19672848"
    selfLink: /apis/extensions/v1beta1/namespaces/graphql-enterprise-audit/ingresses/graphql-audit-ingress
    uid: 22080500-b202-11e8-88c5-5254004139fa
  spec:
    rules:
    - host: graphql-audit-kafka-connect.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: kafka-connect-proxy-service
            servicePort: 80
          path: /
    - host: graphql-audit-kibana.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: kibana-proxy-service
            servicePort: 80
          path: /
    - host: graphql-audit-kibana.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: kibana-proxy-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - graphql-audit-kafka-connect.tte-test.k8s.target.com
      - graphql-audit-kibana.tte-test.k8s.target.com
      - graphql-audit-kibana.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"graphql-customer-portal-ingress"},"name":"graphql-customer-portal-ingress","namespace":"graphql-enterprise-customer-portal"},"spec":{"rules":[{"host":"graphql-enterprise-customer-portal.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"graphql-customer-portal-service","servicePort":80},"path":"/"}]}},{"host":"graphql-enterprise-customer-portal.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"graphql-customer-portal-service","servicePort":80},"path":"/"}]}},{"host":"graphql-enterprise-customer-portal.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"graphql-customer-portal-service","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-09T13:40:35Z
    generation: 1
    labels:
      name: graphql-customer-portal-ingress
    name: graphql-customer-portal-ingress
    namespace: graphql-enterprise-customer-portal
    resourceVersion: "37531805"
    selfLink: /apis/extensions/v1beta1/namespaces/graphql-enterprise-customer-portal/ingresses/graphql-customer-portal-ingress
    uid: e67f64a2-cbc8-11e8-bad5-525400b91df9
  spec:
    rules:
    - host: graphql-enterprise-customer-portal.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: graphql-customer-portal-service
            servicePort: 80
          path: /
    - host: graphql-enterprise-customer-portal.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: graphql-customer-portal-service
            servicePort: 80
          path: /
    - host: graphql-enterprise-customer-portal.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: graphql-customer-portal-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"graphql-ingress"},"name":"graphql-ingress","namespace":"graphql-enterprise-dev"},"spec":{"rules":[{"host":"graphql-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"graphql-dev-lb","servicePort":80},"path":"/"}]}},{"host":"graphql-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"graphql-dev-lb","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["graphql-dev.tte-test.k8s.target.com","graphql-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-12T19:12:37Z
    generation: 3
    labels:
      name: graphql-ingress
    name: graphql-ingress
    namespace: graphql-enterprise-dev
    resourceVersion: "35159259"
    selfLink: /apis/extensions/v1beta1/namespaces/graphql-enterprise-dev/ingresses/graphql-ingress
    uid: cfa76c05-b6bf-11e8-88c5-5254004139fa
  spec:
    rules:
    - host: graphql-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: graphql-dev-lb
            servicePort: 80
          path: /
    - host: graphql-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: graphql-dev-lb
            servicePort: 80
          path: /
    tls:
    - hosts:
      - graphql-dev.tte-test.k8s.target.com
      - graphql-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"graphql-jvm-ingress"},"name":"graphql-jvm-ingress","namespace":"graphql-enterprise-dev"},"spec":{"rules":[{"host":"graphql-jvm-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"graphql-jvm-dev-lb","servicePort":80},"path":"/"}]}},{"host":"graphql-jvm-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"graphql-jvm-dev-lb","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["graphql-jvm-dev.tte-test.k8s.target.com","graphql-jvm-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-25T09:01:59Z
    generation: 1
    labels:
      name: graphql-jvm-ingress
    name: graphql-jvm-ingress
    namespace: graphql-enterprise-dev
    resourceVersion: "53856143"
    selfLink: /apis/extensions/v1beta1/namespaces/graphql-enterprise-dev/ingresses/graphql-jvm-ingress
    uid: a14bf5e9-d834-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: graphql-jvm-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: graphql-jvm-dev-lb
            servicePort: 80
          path: /
    - host: graphql-jvm-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: graphql-jvm-dev-lb
            servicePort: 80
          path: /
    tls:
    - hosts:
      - graphql-jvm-dev.tte-test.k8s.target.com
      - graphql-jvm-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"graphql-ingress"},"name":"graphql-ingress","namespace":"graphql-enterprise"},"spec":{"rules":[{"host":"graphql.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"graphql-lb","servicePort":80},"path":"/"}]}},{"host":"graphql.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"graphql-lb","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["graphql.tte-test.k8s.target.com","graphql.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-18T14:17:59Z
    generation: 1
    labels:
      name: graphql-ingress
    name: graphql-ingress
    namespace: graphql-enterprise
    resourceVersion: "24398010"
    selfLink: /apis/extensions/v1beta1/namespaces/graphql-enterprise/ingresses/graphql-ingress
    uid: a56d4298-bb4d-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: graphql.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: graphql-lb
            servicePort: 80
          path: /
    - host: graphql.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: graphql-lb
            servicePort: 80
          path: /
    tls:
    - hosts:
      - graphql.tte-test.k8s.target.com
      - graphql.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"graphql-onboarding-api-ingress"},"name":"graphql-onboarding-api-ingress","namespace":"graphql-onboarding"},"spec":{"rules":[{"host":"graphql-onboarding.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"graphql-onboarding-api-service","servicePort":80},"path":"/"}]}},{"host":"graphql-onboarding.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"graphql-onboarding-api-service","servicePort":80},"path":"/"}]}},{"host":"graphql-onboarding.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"graphql-onboarding-api-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["graphql-onboarding.tte-test.k8s.target.com","graphql-onboarding.test.k8s.target.com","graphql-onboarding.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-26T15:17:07Z
    generation: 1
    labels:
      name: graphql-onboarding-api-ingress
    name: graphql-onboarding-api-ingress
    namespace: graphql-onboarding
    resourceVersion: "28978698"
    selfLink: /apis/extensions/v1beta1/namespaces/graphql-onboarding/ingresses/graphql-onboarding-api-ingress
    uid: 3b9a2930-c19f-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: graphql-onboarding.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: graphql-onboarding-api-service
            servicePort: 80
          path: /
    - host: graphql-onboarding.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: graphql-onboarding-api-service
            servicePort: 80
          path: /
    - host: graphql-onboarding.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: graphql-onboarding-api-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - graphql-onboarding.tte-test.k8s.target.com
      - graphql-onboarding.test.k8s.target.com
      - graphql-onboarding.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"groupingsv1-ingress-stage-tte"},"name":"groupingsv1-ingress-stage-tte","namespace":"groupingsv1"},"spec":{"rules":[{"host":"groupingsv1.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"groupingsv1-app-service-stage","servicePort":80},"path":"/"}]}},{"host":"groupingsv1.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"groupingsv1-app-service-stage","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["groupingsv1.tte-test.k8s.target.com","groupingsv1.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-24T09:33:20Z
    generation: 1
    labels:
      name: groupingsv1-ingress-stage-tte
    name: groupingsv1-ingress-stage-tte
    namespace: groupingsv1
    resourceVersion: "49775228"
    selfLink: /apis/extensions/v1beta1/namespaces/groupingsv1/ingresses/groupingsv1-ingress-stage-tte
    uid: d8700412-d76f-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: groupingsv1.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: groupingsv1-app-service-stage
            servicePort: 80
          path: /
    - host: groupingsv1.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: groupingsv1-app-service-stage
            servicePort: 80
          path: /
    tls:
    - hosts:
      - groupingsv1.tte-test.k8s.target.com
      - groupingsv1.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"autocomplete-dev-ingress","namespace":"iceberg"},"spec":{"rules":[{"host":"iceberg-autocomplete-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"autocomplete-dev-service","servicePort":80},"path":"/"}]}},{"host":"iceberg-autocomplete-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"autocomplete-dev-service","servicePort":80},"path":"/"}]}},{"host":"iceberg-autocomplete-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"autocomplete-dev-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["iceberg-autocomplete-dev.tte-test.k8s.target.com","iceberg-autocomplete-dev.ttc-test.k8s.target.com","iceberg-autocomplete-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-25T18:17:40Z
    generation: 1
    name: autocomplete-dev-ingress
    namespace: iceberg
    resourceVersion: "50894032"
    selfLink: /apis/extensions/v1beta1/namespaces/iceberg/ingresses/autocomplete-dev-ingress
    uid: 424ad725-d882-11e8-999b-5254008d935f
  spec:
    rules:
    - host: iceberg-autocomplete-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autocomplete-dev-service
            servicePort: 80
          path: /
    - host: iceberg-autocomplete-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autocomplete-dev-service
            servicePort: 80
          path: /
    - host: iceberg-autocomplete-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autocomplete-dev-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - iceberg-autocomplete-dev.tte-test.k8s.target.com
      - iceberg-autocomplete-dev.ttc-test.k8s.target.com
      - iceberg-autocomplete-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"autocomplete-test-ingress","namespace":"iceberg"},"spec":{"rules":[{"host":"iceberg-autocomplete.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"autocomplete-test-service","servicePort":80},"path":"/"}]}},{"host":"iceberg-autocomplete.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"autocomplete-test-service","servicePort":80},"path":"/"}]}},{"host":"iceberg-autocomplete.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"autocomplete-test-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["iceberg-autocomplete.tte-test.k8s.target.com","iceberg-autocomplete.ttc-test.k8s.target.com","iceberg-autocomplete.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-03T18:06:01Z
    generation: 1
    name: autocomplete-test-ingress
    namespace: iceberg
    resourceVersion: "6457407"
    selfLink: /apis/extensions/v1beta1/namespaces/iceberg/ingresses/autocomplete-test-ingress
    uid: e16fd2a3-9747-11e8-bda5-525400df3355
  spec:
    rules:
    - host: iceberg-autocomplete.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autocomplete-test-service
            servicePort: 80
          path: /
    - host: iceberg-autocomplete.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autocomplete-test-service
            servicePort: 80
          path: /
    - host: iceberg-autocomplete.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autocomplete-test-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - iceberg-autocomplete.tte-test.k8s.target.com
      - iceberg-autocomplete.ttc-test.k8s.target.com
      - iceberg-autocomplete.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"chainsaw-api-ingress"},"name":"chainsaw-api-ingress","namespace":"iceberg"},"spec":{"rules":[{"host":"chainsaw-api.ttc-prod.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"chainsaw-api-service","servicePort":80},"path":"/"}]}},{"host":"chainsaw-api.tte-prod.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"chainsaw-api-service","servicePort":80},"path":"/"}]}},{"host":"chainsaw-api.prod.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"chainsaw-api-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["chainsaw-api.tte-prod.k8s.target.com","chainsaw-api.ttc-prod.k8s.target.com","chainsaw-api.prod.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-03T18:57:03Z
    generation: 1
    labels:
      name: chainsaw-api-ingress
    name: chainsaw-api-ingress
    namespace: iceberg
    resourceVersion: "6475349"
    selfLink: /apis/extensions/v1beta1/namespaces/iceberg/ingresses/chainsaw-api-ingress
    uid: 029c2605-974f-11e8-8dd4-5254004139fa
  spec:
    rules:
    - host: chainsaw-api.ttc-prod.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: chainsaw-api-service
            servicePort: 80
          path: /
    - host: chainsaw-api.tte-prod.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: chainsaw-api-service
            servicePort: 80
          path: /
    - host: chainsaw-api.prod.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: chainsaw-api-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - chainsaw-api.tte-prod.k8s.target.com
      - chainsaw-api.ttc-prod.k8s.target.com
      - chainsaw-api.prod.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"health-service-ingress"},"name":"health-service-ingress","namespace":"iceberg"},"spec":{"rules":[{"host":"iceberg-health.us-central-1.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"health-service","servicePort":80},"path":"/"}]}},{"host":"iceberg-health.us-central-1ttc.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"health-service","servicePort":80},"path":"/"}]}},{"host":"iceberg-health.us-central-1tte.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"health-service","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-08-02T17:54:38Z
    generation: 1
    labels:
      name: health-service-ingress
    name: health-service-ingress
    namespace: iceberg
    resourceVersion: "5960265"
    selfLink: /apis/extensions/v1beta1/namespaces/iceberg/ingresses/health-service-ingress
    uid: 1f9e8ed3-967d-11e8-8dd4-5254004139fa
  spec:
    rules:
    - host: iceberg-health.us-central-1.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: health-service
            servicePort: 80
          path: /
    - host: iceberg-health.us-central-1ttc.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: health-service
            servicePort: 80
          path: /
    - host: iceberg-health.us-central-1tte.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: health-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"iceberg-export-api-test-ingress","namespace":"iceberg"},"spec":{"rules":[{"host":"iceberg-export-api.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"iceberg-export-api-test-service","servicePort":80},"path":"/"}]}},{"host":"iceberg-export-api.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"iceberg-export-api-test-service","servicePort":80},"path":"/"}]}},{"host":"iceberg-export-api.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"iceberg-export-api-test-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["iceberg-export-api.tte-test.k8s.target.com","iceberg-export-api.ttc-test.k8s.target.com","iceberg-export-api.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-13T14:55:30Z
    generation: 2
    name: iceberg-export-api-test-ingress
    namespace: iceberg
    resourceVersion: "11601226"
    selfLink: /apis/extensions/v1beta1/namespaces/iceberg/ingresses/iceberg-export-api-test-ingress
    uid: ec57f2a5-9f08-11e8-8dd4-5254004139fa
  spec:
    rules:
    - host: iceberg-export-api.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: iceberg-export-api-test-service
            servicePort: 80
          path: /
    - host: iceberg-export-api.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: iceberg-export-api-test-service
            servicePort: 80
          path: /
    - host: iceberg-export-api.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: iceberg-export-api-test-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - iceberg-export-api.tte-test.k8s.target.com
      - iceberg-export-api.ttc-test.k8s.target.com
      - iceberg-export-api.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"iceberg-health-service-non-prod-ingress"},"name":"iceberg-health-service-non-prod-ingress","namespace":"iceberg"},"spec":{"rules":[{"host":"iceberg-health.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"iceberg-health-service-non-prod","servicePort":80},"path":"/"}]}},{"host":"iceberg-health.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"iceberg-health-service-non-prod","servicePort":80},"path":"/"}]}},{"host":"iceberg-health.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"iceberg-health-service-non-prod","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["iceberg-health.ttc-test.k8s.target.com","iceberg-health.tte-test.k8s.target.com","iceberg-health.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-03T01:32:08Z
    generation: 1
    labels:
      name: iceberg-health-service-non-prod-ingress
    name: iceberg-health-service-non-prod-ingress
    namespace: iceberg
    resourceVersion: "6116098"
    selfLink: /apis/extensions/v1beta1/namespaces/iceberg/ingresses/iceberg-health-service-non-prod-ingress
    uid: 09aa2587-96bd-11e8-bda5-525400df3355
  spec:
    rules:
    - host: iceberg-health.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: iceberg-health-service-non-prod
            servicePort: 80
          path: /
    - host: iceberg-health.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: iceberg-health-service-non-prod
            servicePort: 80
          path: /
    - host: iceberg-health.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: iceberg-health-service-non-prod
            servicePort: 80
          path: /
    tls:
    - hosts:
      - iceberg-health.ttc-test.k8s.target.com
      - iceberg-health.tte-test.k8s.target.com
      - iceberg-health.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"kubernetes-exporter-bigoli-prod-ingress"},"name":"kubernetes-exporter-bigoli-prod-ingress","namespace":"iceberg"},"spec":{"rules":[{"host":"kubernetes-exporter-bigoli-prod.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"kubernetes-exporter-bigoli-prod-service","servicePort":80},"path":"/"}]}},{"host":"kubernetes-exporter-bigoli-prod.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"kubernetes-exporter-bigoli-prod-service","servicePort":80},"path":"/"}]}},{"host":"kubernetes-exporter-bigoli-prod.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"kubernetes-exporter-bigoli-prod-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["kubernetes-exporter-bigoli-prod.tte-test.k8s.target.com","kubernetes-exporter-bigoli-prod.ttc-test.k8s.target.com","kubernetes-exporter-bigoli-prod.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-20T18:08:55Z
    generation: 1
    labels:
      name: kubernetes-exporter-bigoli-prod-ingress
    name: kubernetes-exporter-bigoli-prod-ingress
    namespace: iceberg
    resourceVersion: "103735654"
    selfLink: /apis/extensions/v1beta1/namespaces/iceberg/ingresses/kubernetes-exporter-bigoli-prod-ingress
    uid: 506918dc-0482-11e9-baf5-525400dc2748
  spec:
    rules:
    - host: kubernetes-exporter-bigoli-prod.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: kubernetes-exporter-bigoli-prod-service
            servicePort: 80
          path: /
    - host: kubernetes-exporter-bigoli-prod.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: kubernetes-exporter-bigoli-prod-service
            servicePort: 80
          path: /
    - host: kubernetes-exporter-bigoli-prod.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: kubernetes-exporter-bigoli-prod-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - kubernetes-exporter-bigoli-prod.tte-test.k8s.target.com
      - kubernetes-exporter-bigoli-prod.ttc-test.k8s.target.com
      - kubernetes-exporter-bigoli-prod.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cam-syslog-app-ingress"},"name":"cam-syslog-app-ingress","namespace":"icelab-test"},"spec":{"rules":[{"host":"cam-syslog-app.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cam-syslog-app-service","servicePort":80},"path":"/"}]}},{"host":"cam-syslog-app.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cam-syslog-app-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["cam-syslog-app.test.k8s.target.com","cam-syslog-app.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-06T16:01:57Z
    generation: 1
    labels:
      name: cam-syslog-app-ingress
    name: cam-syslog-app-ingress
    namespace: icelab-test
    resourceVersion: "61664720"
    selfLink: /apis/extensions/v1beta1/namespaces/icelab-test/ingresses/cam-syslog-app-ingress
    uid: 49d03546-e1dd-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: cam-syslog-app.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cam-syslog-app-service
            servicePort: 80
          path: /
    - host: cam-syslog-app.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cam-syslog-app-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cam-syslog-app.test.k8s.target.com
      - cam-syslog-app.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"davetest-ingress"},"name":"davetest-ingress","namespace":"icelab"},"spec":{"rules":[{"host":"davetest-test.target.com","http":{"paths":[{"backend":{"serviceName":"davetest-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["davetest-test.target.com"],"secretName":"vanitysecret"}]}}
    creationTimestamp: 2019-01-14T16:26:23Z
    generation: 1
    labels:
      name: davetest-ingress
    name: davetest-ingress
    namespace: icelab
    resourceVersion: "127890470"
    selfLink: /apis/extensions/v1beta1/namespaces/icelab/ingresses/davetest-ingress
    uid: 220df95a-1819-11e9-a7f3-52540072a6ea
  spec:
    rules:
    - host: davetest-test.target.com
      http:
        paths:
        - backend:
            serviceName: davetest-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - davetest-test.target.com
      secretName: vanitysecret
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"vanityurl-ingress"},"name":"vanityurl-ingress","namespace":"icelab"},"spec":{"rules":[{"host":"vanityurl-test.target.com","http":{"paths":[{"backend":{"serviceName":"vanityurl-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["vanityurl-test.target.com"],"secretName":"vanityurlsecret"}]}}
    creationTimestamp: 2019-01-14T18:51:40Z
    generation: 1
    labels:
      name: vanityurl-ingress
    name: vanityurl-ingress
    namespace: icelab
    resourceVersion: "127989694"
    selfLink: /apis/extensions/v1beta1/namespaces/icelab/ingresses/vanityurl-ingress
    uid: 6e01e717-182d-11e9-a7f3-52540072a6ea
  spec:
    rules:
    - host: vanityurl-test.target.com
      http:
        paths:
        - backend:
            serviceName: vanityurl-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - vanityurl-test.target.com
      secretName: vanityurlsecret
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"ima-hotfix-tte"},"name":"ima-hotfix-tte","namespace":"ima"},"spec":{"rules":[{"host":"ima-hotfix.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ima-hotfix-tte","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["ima-hotfix.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T15:17:30Z
    generation: 1
    labels:
      name: ima-hotfix-tte
    name: ima-hotfix-tte
    namespace: ima
    resourceVersion: "26100661"
    selfLink: /apis/extensions/v1beta1/namespaces/ima/ingresses/ima-hotfix-tte
    uid: 74c9471a-bdb1-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: ima-hotfix.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ima-hotfix-tte
            servicePort: 80
          path: /
    tls:
    - hosts:
      - ima-hotfix.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"ima-test-tte"},"name":"ima-test-tte","namespace":"ima"},"spec":{"rules":[{"host":"ima-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ima-test-tte","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["ima-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-13T16:26:34Z
    generation: 1
    labels:
      name: ima-test-tte
    name: ima-test-tte
    namespace: ima
    resourceVersion: "22094524"
    selfLink: /apis/extensions/v1beta1/namespaces/ima/ingresses/ima-test-tte
    uid: c7d79c59-b771-11e8-842d-525400df3355
  spec:
    rules:
    - host: ima-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ima-test-tte
            servicePort: 80
          path: /
    tls:
    - hosts:
      - ima-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-31T15:01:12Z
    generation: 1
    labels:
      app: prometheus
      chart: prometheus-6.7.0
      component: server
      heritage: Tiller
      release: iss-prometheus
    name: iss-prometheus-server
    namespace: infra-storage
    resourceVersion: "55959461"
    selfLink: /apis/extensions/v1beta1/namespaces/infra-storage/ingresses/iss-prometheus-server
    uid: cea3d3bd-dd1d-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: iss-prometheus-db.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: iss-prometheus-server
            servicePort: 80
          path: /
    tls:
    - hosts:
      - iss-prometheus-db.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"ima-stage-tte"},"name":"ima-stage-tte","namespace":"inventory-management"},"spec":{"rules":[{"host":"ima-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ima-stage-tte","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["ima-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-12T17:58:31Z
    generation: 1
    labels:
      name: ima-stage-tte
    name: ima-stage-tte
    namespace: inventory-management
    resourceVersion: "21710877"
    selfLink: /apis/extensions/v1beta1/namespaces/inventory-management/ingresses/ima-stage-tte
    uid: 75c6617d-b6b5-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: ima-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ima-stage-tte
            servicePort: 80
          path: /
    tls:
    - hosts:
      - ima-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"benthos-kafka-writer-ingress"},"name":"benthos-kafka-writer-ingress","namespace":"iot"},"spec":{"rules":[{"host":"benthos-kafka-writer-iot.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"benthos-kafka-writer","servicePort":4195},"path":"/"}]}}],"tls":[{"hosts":["benthos-kafka-writer-iot.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-28T11:49:31Z
    generation: 5
    labels:
      name: benthos-kafka-writer-ingress
    name: benthos-kafka-writer-ingress
    namespace: iot
    resourceVersion: "100441086"
    selfLink: /apis/extensions/v1beta1/namespaces/iot/ingresses/benthos-kafka-writer-ingress
    uid: 6d1e38a1-aab8-11e8-88c5-5254004139fa
  spec:
    rules:
    - host: benthos-kafka-writer-iot.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: benthos-kafka-writer
            servicePort: 4195
          path: /
    tls:
    - hosts:
      - benthos-kafka-writer-iot.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cassandra-writer"},"name":"cassandra-writer","namespace":"iot"},"spec":{"rules":[{"host":"cassandra-writer-iot.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cassandra-writer","servicePort":9042},"path":"/"}]}}],"tls":[{"hosts":["cassandra-writer-iot.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-04T05:11:08Z
    generation: 1
    labels:
      name: cassandra-writer
    name: cassandra-writer
    namespace: iot
    resourceVersion: "104728488"
    selfLink: /apis/extensions/v1beta1/namespaces/iot/ingresses/cassandra-writer
    uid: 022e7e5e-f783-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: cassandra-writer-iot.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cassandra-writer
            servicePort: 9042
          path: /
    tls:
    - hosts:
      - cassandra-writer-iot.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"emqx"},"name":"emqx","namespace":"iot"},"spec":{"rules":[{"host":"emq-iot.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"emqx","servicePort":18083},"path":"/"}]}}],"tls":[{"hosts":["emq-iot.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-23T21:59:32Z
    generation: 3
    labels:
      name: emqx
    name: emqx
    namespace: iot
    resourceVersion: "49932357"
    selfLink: /apis/extensions/v1beta1/namespaces/iot/ingresses/emqx
    uid: ebd65fa0-d70e-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: emq-iot.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: emqx
            servicePort: 18083
          path: /
    tls:
    - hosts:
      - emq-iot.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"http-adapter"},"name":"http-adapter","namespace":"iot"},"spec":{"rules":[{"host":"http-adapter-iot.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"http-adapter","servicePort":8180},"path":"/"}]}}],"tls":[{"hosts":["http-adapter-iot.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-28T18:52:50Z
    generation: 1
    labels:
      name: http-adapter
    name: http-adapter
    namespace: iot
    resourceVersion: "111502197"
    selfLink: /apis/extensions/v1beta1/namespaces/iot/ingresses/http-adapter
    uid: c676d603-0ad1-11e9-b513-525400493f0a
  spec:
    rules:
    - host: http-adapter-iot.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: http-adapter
            servicePort: 8180
          path: /
    tls:
    - hosts:
      - http-adapter-iot.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"iot-events","namespace":"iot"},"spec":{"rules":[{"host":"iot-events.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"iot-events","servicePort":443},"path":"/"}]}},{"host":"iot-events.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"iot-events","servicePort":443},"path":"/"}]}}],"tls":[{"hosts":["iot-events.test.k8s.target.com","iot-events.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-17T18:45:42Z
    generation: 2
    name: iot-events
    namespace: iot
    resourceVersion: "163677052"
    selfLink: /apis/extensions/v1beta1/namespaces/iot/ingresses/iot-events
    uid: 3a48d460-32e4-11e9-b42d-5254003b1534
  spec:
    rules:
    - host: iot-events.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: iot-events
            servicePort: 443
          path: /
    - host: iot-events.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: iot-events
            servicePort: 443
          path: /
    tls:
    - hosts:
      - iot-events.test.k8s.target.com
      - iot-events.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/ssl-passthrough: "false"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/ssl-passthrough":"false"},"name":"lora-app-server","namespace":"iot"},"spec":{"rules":[{"host":"lora-app-server.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lora-app-server","servicePort":443},"path":"/"}]}},{"host":"lora-app-server.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lora-app-server","servicePort":443},"path":"/"}]}}],"tls":[{"hosts":["lora-app-server.tte-test.k8s.target.com","lora-app-server.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-30T10:27:55Z
    generation: 7
    name: lora-app-server
    namespace: iot
    resourceVersion: "67376485"
    selfLink: /apis/extensions/v1beta1/namespaces/iot/ingresses/lora-app-server
    uid: 5bdc9c48-ac3f-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: lora-app-server.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lora-app-server
            servicePort: 443
          path: /
    - host: lora-app-server.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lora-app-server
            servicePort: 443
          path: /
    tls:
    - hosts:
      - lora-app-server.tte-test.k8s.target.com
      - lora-app-server.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"mqtt-adapter"},"name":"mqtt-adapter","namespace":"iot"},"spec":{"rules":[{"host":"mqtt-adapter-iot.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mqtt-adapter","servicePort":8180},"path":"/"}]}}],"tls":[{"hosts":["mqtt-adapter-iot.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-28T18:52:53Z
    generation: 1
    labels:
      name: mqtt-adapter
    name: mqtt-adapter
    namespace: iot
    resourceVersion: "111502198"
    selfLink: /apis/extensions/v1beta1/namespaces/iot/ingresses/mqtt-adapter
    uid: c802038a-0ad1-11e9-b513-525400493f0a
  spec:
    rules:
    - host: mqtt-adapter-iot.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mqtt-adapter
            servicePort: 8180
          path: /
    tls:
    - hosts:
      - mqtt-adapter-iot.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"nats"},"name":"nats","namespace":"iot"},"spec":{"rules":[{"host":"nats-iot.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"nats","servicePort":8222},"path":"/"}]}}],"tls":[{"hosts":["nats-iot.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-28T18:51:27Z
    generation: 1
    labels:
      name: nats
    name: nats
    namespace: iot
    resourceVersion: "111501316"
    selfLink: /apis/extensions/v1beta1/namespaces/iot/ingresses/nats
    uid: 94fa1150-0ad1-11e9-b513-525400493f0a
  spec:
    rules:
    - host: nats-iot.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: nats
            servicePort: 8222
          path: /
    tls:
    - hosts:
      - nats-iot.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"simple-logic-service"},"name":"simple-logic-service","namespace":"iot"},"spec":{"rules":[{"host":"simple-logic-service-iot.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"simple-logic-service","servicePort":80},"path":"/"},{"backend":{"serviceName":"simple-logic-service","servicePort":3001},"path":"/metrics"}]}},{"host":"simple-logic-service-iot.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"simple-logic-service","servicePort":80},"path":"/"},{"backend":{"serviceName":"simple-logic-service","servicePort":3001},"path":"/metrics"}]}}]}}
    creationTimestamp: 2018-12-16T21:27:50Z
    generation: 5
    labels:
      name: simple-logic-service
    name: simple-logic-service
    namespace: iot
    resourceVersion: "101307636"
    selfLink: /apis/extensions/v1beta1/namespaces/iot/ingresses/simple-logic-service
    uid: 70fb0e7c-0179-11e9-baf5-525400dc2748
  spec:
    rules:
    - host: simple-logic-service-iot.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: simple-logic-service
            servicePort: 80
          path: /
        - backend:
            serviceName: simple-logic-service
            servicePort: 3001
          path: /metrics
    - host: simple-logic-service-iot.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: simple-logic-service
            servicePort: 80
          path: /
        - backend:
            serviceName: simple-logic-service
            servicePort: 3001
          path: /metrics
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"things"},"name":"things","namespace":"iot"},"spec":{"rules":[{"host":"things-iot.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"things","servicePort":8180},"path":"/"}]}}],"tls":[{"hosts":["things-iot.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-28T18:52:56Z
    generation: 1
    labels:
      name: things
    name: things
    namespace: iot
    resourceVersion: "111503326"
    selfLink: /apis/extensions/v1beta1/namespaces/iot/ingresses/things
    uid: c9b597a0-0ad1-11e9-b513-525400493f0a
  spec:
    rules:
    - host: things-iot.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: things
            servicePort: 8180
          path: /
    tls:
    - hosts:
      - things-iot.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/protocol: h2c
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/protocol":"h2c","kubernetes.io/ingress.class":"traefik-iot"},"labels":{"name":"things-traefik"},"name":"things-traefik","namespace":"iot"},"spec":{"rules":[{"host":"things-iot-traefik.tte.test.iot.target.com","http":{"paths":[{"backend":{"serviceName":"things","servicePort":8181},"path":"/"}]}}]}}
      kubernetes.io/ingress.class: traefik-iot
    creationTimestamp: 2018-12-28T18:52:57Z
    generation: 2
    labels:
      name: things-traefik
    name: things-traefik
    namespace: iot
    resourceVersion: "116273821"
    selfLink: /apis/extensions/v1beta1/namespaces/iot/ingresses/things-traefik
    uid: caace3e8-0ad1-11e9-b513-525400493f0a
  spec:
    rules:
    - host: things-iot-traefik.tte.test.iot.target.com
      http:
        paths:
        - backend:
            serviceName: things
            servicePort: 8181
          path: /
  status:
    loadBalancer: {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"users"},"name":"users","namespace":"iot"},"spec":{"rules":[{"host":"users-iot.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"users","servicePort":8180},"path":"/"}]}}],"tls":[{"hosts":["users-iot.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-28T18:52:48Z
    generation: 1
    labels:
      name: users
    name: users
    namespace: iot
    resourceVersion: "111502199"
    selfLink: /apis/extensions/v1beta1/namespaces/iot/ingresses/users
    uid: c4ffbb76-0ad1-11e9-b513-525400493f0a
  spec:
    rules:
    - host: users-iot.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: users
            servicePort: 8180
          path: /
    tls:
    - hosts:
      - users-iot.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/protocol: h2c
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/protocol":"h2c","kubernetes.io/ingress.class":"traefik-iot"},"labels":{"name":"users-traefik"},"name":"users-traefik","namespace":"iot"},"spec":{"rules":[{"host":"users-iot-traefik.tte.test.iot.target.com","http":{"paths":[{"backend":{"serviceName":"users","servicePort":8181},"path":"/"}]}}]}}
      kubernetes.io/ingress.class: traefik-iot
    creationTimestamp: 2018-12-31T18:06:58Z
    generation: 5
    labels:
      name: users-traefik
    name: users-traefik
    namespace: iot
    resourceVersion: "116403616"
    selfLink: /apis/extensions/v1beta1/namespaces/iot/ingresses/users-traefik
    uid: dd6fe142-0d26-11e9-b513-525400493f0a
  spec:
    rules:
    - host: users-iot-traefik.tte.test.iot.target.com
      http:
        paths:
        - backend:
            serviceName: users
            servicePort: 8181
          path: /
  status:
    loadBalancer: {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"vernemq"},"name":"vernemq","namespace":"iot"},"spec":{"rules":[{"host":"vernemq-iot.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"vernemq","servicePort":443},"path":"/"}]}}],"tls":[{"hosts":["vernemq-iot.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-21T18:23:35Z
    generation: 1
    labels:
      name: vernemq
    name: vernemq
    namespace: iot
    resourceVersion: "165489521"
    selfLink: /apis/extensions/v1beta1/namespaces/iot/ingresses/vernemq
    uid: cd081e59-3605-11e9-8c81-525400abdf59
  spec:
    rules:
    - host: vernemq-iot.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: vernemq
            servicePort: 443
          path: /
    tls:
    - hosts:
      - vernemq-iot.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"item-grouper-ingress-migration-tte"},"name":"item-grouper-ingress-migration-tte","namespace":"item-grouper-migration"},"spec":{"rules":[{"host":"item-grouper-migration.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"item-grouper-app-service-migration","servicePort":80},"path":"/"}]}},{"host":"item-grouper-migration.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"item-grouper-app-service-migration","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["item-grouper-migration.tte-test.k8s.target.com","item-grouper-migration.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-27T16:42:03Z
    generation: 2
    labels:
      name: item-grouper-ingress-migration-tte
    name: item-grouper-ingress-migration-tte
    namespace: item-grouper-migration
    resourceVersion: "81399255"
    selfLink: /apis/extensions/v1beta1/namespaces/item-grouper-migration/ingresses/item-grouper-ingress-migration-tte
    uid: 5e2b9661-f263-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: item-grouper-migration.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: item-grouper-app-service-migration
            servicePort: 80
          path: /
    - host: item-grouper-migration.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: item-grouper-app-service-migration
            servicePort: 80
          path: /
    tls:
    - hosts:
      - item-grouper-migration.tte-test.k8s.target.com
      - item-grouper-migration.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"grouper-ui-ingress-stage-tte"},"name":"grouper-ui-ingress-stage-tte","namespace":"item-grouper-test-ui"},"spec":{"rules":[{"host":"item-grouper-ui.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"grouper-ui-app-service-stage","servicePort":80},"path":"/"}]}},{"host":"item-grouper-ui.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"grouper-ui-app-service-stage","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["item-grouper-ui.tte-test.k8s.target.com","item-grouper-ui.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-26T10:07:29Z
    generation: 1
    labels:
      name: grouper-ui-ingress-stage-tte
    name: grouper-ui-ingress-stage-tte
    namespace: item-grouper-test-ui
    resourceVersion: "28854650"
    selfLink: /apis/extensions/v1beta1/namespaces/item-grouper-test-ui/ingresses/grouper-ui-ingress-stage-tte
    uid: f9ecc379-c173-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: item-grouper-ui.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: grouper-ui-app-service-stage
            servicePort: 80
          path: /
    - host: item-grouper-ui.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: grouper-ui-app-service-stage
            servicePort: 80
          path: /
    tls:
    - hosts:
      - item-grouper-ui.tte-test.k8s.target.com
      - item-grouper-ui.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"item-grouper-ingress-test-tte"},"name":"item-grouper-ingress-test-tte","namespace":"item-grouper-test"},"spec":{"rules":[{"host":"item-grouper.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"item-grouper-app-service-test","servicePort":80},"path":"/"}]}},{"host":"item-grouper.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"item-grouper-app-service-test","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["item-grouper.tte-test.k8s.target.com","item-grouper.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-28T07:33:44Z
    generation: 2
    labels:
      name: item-grouper-ingress-test-tte
    name: item-grouper-ingress-test-tte
    namespace: item-grouper-test
    resourceVersion: "16656267"
    selfLink: /apis/extensions/v1beta1/namespaces/item-grouper-test/ingresses/item-grouper-ingress-test-tte
    uid: b13cbc78-aa94-11e8-88c5-5254004139fa
  spec:
    rules:
    - host: item-grouper.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: item-grouper-app-service-test
            servicePort: 80
          path: /
    - host: item-grouper.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: item-grouper-app-service-test
            servicePort: 80
          path: /
    tls:
    - hosts:
      - item-grouper.tte-test.k8s.target.com
      - item-grouper.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"item-location-intent"},"name":"item-location-intent","namespace":"item-location-intent-dev"},"spec":{"rules":[{"host":"item-location-intent-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"item-location-intent","servicePort":80},"path":"/"}]}},{"host":"item-location-intent-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"item-location-intent","servicePort":80},"path":"/"}]}},{"host":"item-location-intent-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"item-location-intent","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["item-location-intent-dev.ttc-test.k8s.target.com","item-location-intent-dev.tte-test.k8s.target.com","item-location-intent-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-01T08:23:25Z
    generation: 1
    labels:
      name: item-location-intent
    name: item-location-intent
    namespace: item-location-intent-dev
    resourceVersion: "32157317"
    selfLink: /apis/extensions/v1beta1/namespaces/item-location-intent-dev/ingresses/item-location-intent
    uid: 445eadce-c553-11e8-93a6-525400dd15a8
  spec:
    rules:
    - host: item-location-intent-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: item-location-intent
            servicePort: 80
          path: /
    - host: item-location-intent-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: item-location-intent
            servicePort: 80
          path: /
    - host: item-location-intent-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: item-location-intent
            servicePort: 80
          path: /
    tls:
    - hosts:
      - item-location-intent-dev.ttc-test.k8s.target.com
      - item-location-intent-dev.tte-test.k8s.target.com
      - item-location-intent-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"item-location-intent"},"name":"item-location-intent","namespace":"item-location-intent-stage"},"spec":{"rules":[{"host":"item-location-intent-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"item-location-intent","servicePort":80},"path":"/"}]}},{"host":"item-location-intent-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"item-location-intent","servicePort":80},"path":"/"}]}},{"host":"item-location-intent-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"item-location-intent","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["item-location-intent-stage.ttc-test.k8s.target.com","item-location-intent-stage.tte-test.k8s.target.com","item-location-intent-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-03T09:16:51Z
    generation: 1
    labels:
      name: item-location-intent
    name: item-location-intent
    namespace: item-location-intent-stage
    resourceVersion: "33494099"
    selfLink: /apis/extensions/v1beta1/namespaces/item-location-intent-stage/ingresses/item-location-intent
    uid: 1009c060-c6ed-11e8-93f3-5254000c5c7e
  spec:
    rules:
    - host: item-location-intent-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: item-location-intent
            servicePort: 80
          path: /
    - host: item-location-intent-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: item-location-intent
            servicePort: 80
          path: /
    - host: item-location-intent-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: item-location-intent
            servicePort: 80
          path: /
    tls:
    - hosts:
      - item-location-intent-stage.ttc-test.k8s.target.com
      - item-location-intent-stage.tte-test.k8s.target.com
      - item-location-intent-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"item-router-ingress-stage-tte"},"name":"item-router-ingress-stage-tte","namespace":"item-photon"},"spec":{"rules":[{"host":"item-router-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"item-router-app-service-stage","servicePort":80},"path":"/"}]}},{"host":"item-router-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"item-router-app-service-stage","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["item-router-stage.test.k8s.target.com","item-router-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-17T09:00:21Z
    generation: 1
    labels:
      name: item-router-ingress-stage-tte
    name: item-router-ingress-stage-tte
    namespace: item-photon
    resourceVersion: "139269034"
    selfLink: /apis/extensions/v1beta1/namespaces/item-photon/ingresses/item-router-ingress-stage-tte
    uid: 13e57dca-d1eb-11e8-999f-52540096678d
  spec:
    rules:
    - host: item-router-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: item-router-app-service-stage
            servicePort: 80
          path: /
    - host: item-router-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: item-router-app-service-stage
            servicePort: 80
          path: /
    tls:
    - hosts:
      - item-router-stage.test.k8s.target.com
      - item-router-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"go-kafka-producer-ingress"},"name":"go-kafka-producer-ingress","namespace":"itse-go-kafka-producer"},"spec":{"rules":[{"host":"go-kafka-producer.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"go-kafka-producer-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["go-kafka-producer.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-12T16:16:26Z
    generation: 3
    labels:
      name: go-kafka-producer-ingress
    name: go-kafka-producer-ingress
    namespace: itse-go-kafka-producer
    resourceVersion: "22538925"
    selfLink: /apis/extensions/v1beta1/namespaces/itse-go-kafka-producer/ingresses/go-kafka-producer-ingress
    uid: 32bd0d10-b6a7-11e8-88c5-5254004139fa
  spec:
    rules:
    - host: go-kafka-producer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: go-kafka-producer-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - go-kafka-producer.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"incidents-ingress"},"name":"incidents-ingress","namespace":"itse-incidents"},"spec":{"rules":[{"host":"incidents.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"incidents-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["incidents.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-14T20:39:53Z
    generation: 1
    labels:
      name: incidents-ingress
    name: incidents-ingress
    namespace: itse-incidents
    resourceVersion: "22566658"
    selfLink: /apis/extensions/v1beta1/namespaces/itse-incidents/ingresses/incidents-ingress
    uid: 55a8224f-b85e-11e8-88c5-5254004139fa
  spec:
    rules:
    - host: incidents.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: incidents-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - incidents.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"sms-prototype-ingress"},"name":"sms-prototype-ingress","namespace":"itse-solana"},"spec":{"rules":[{"host":"sms-prototype.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"sms-prototype-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["sms-prototype.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-18T18:17:13Z
    generation: 1
    labels:
      name: sms-prototype-ingress
    name: sms-prototype-ingress
    namespace: itse-solana
    resourceVersion: "24495885"
    selfLink: /apis/extensions/v1beta1/namespaces/itse-solana/ingresses/sms-prototype-ingress
    uid: 113cb1bd-bb6f-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: sms-prototype.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: sms-prototype-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - sms-prototype.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"solana-api-ingress"},"name":"solana-api-ingress","namespace":"itse-solana"},"spec":{"rules":[{"host":"solana-api.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"solana-api-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["solana-api.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-15T18:28:46Z
    generation: 1
    labels:
      name: solana-api-ingress
    name: solana-api-ingress
    namespace: itse-solana
    resourceVersion: "70080422"
    selfLink: /apis/extensions/v1beta1/namespaces/itse-solana/ingresses/solana-api-ingress
    uid: 4a119eb1-e904-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: solana-api.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: solana-api-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - solana-api.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"solana-api-stage-ingress"},"name":"solana-api-stage-ingress","namespace":"itse-solana"},"spec":{"rules":[{"host":"solana-api-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"solana-api-stage-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["solana-api-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-16T00:22:26Z
    generation: 2
    labels:
      name: solana-api-stage-ingress
    name: solana-api-stage-ingress
    namespace: itse-solana
    resourceVersion: "70947125"
    selfLink: /apis/extensions/v1beta1/namespaces/itse-solana/ingresses/solana-api-stage-ingress
    uid: b20f4871-e935-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: solana-api-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: solana-api-stage-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - solana-api-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"vestigium-cartographer-stage-ingress"},"name":"vestigium-cartographer-stage-ingress","namespace":"itse-vestigium"},"spec":{"rules":[{"host":"vestigium-cartographer-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"vestigium-cartographer-stage-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["vestigium-cartographer-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-18T04:40:51Z
    generation: 1
    labels:
      name: vestigium-cartographer-stage-ingress
    name: vestigium-cartographer-stage-ingress
    namespace: itse-vestigium
    resourceVersion: "44608312"
    selfLink: /apis/extensions/v1beta1/namespaces/itse-vestigium/ingresses/vestigium-cartographer-stage-ingress
    uid: fdc45b7d-d28f-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: vestigium-cartographer-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: vestigium-cartographer-stage-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - vestigium-cartographer-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"vestigium-cartographer-test-ingress"},"name":"vestigium-cartographer-test-ingress","namespace":"itse-vestigium"},"spec":{"rules":[{"host":"vestigium-cartographer-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"vestigium-cartographer-test-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["vestigium-cartographer-test.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-18T03:56:12Z
    generation: 1
    labels:
      name: vestigium-cartographer-test-ingress
    name: vestigium-cartographer-test-ingress
    namespace: itse-vestigium
    resourceVersion: "44581339"
    selfLink: /apis/extensions/v1beta1/namespaces/itse-vestigium/ingresses/vestigium-cartographer-test-ingress
    uid: c0c5c4b9-d289-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: vestigium-cartographer-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: vestigium-cartographer-test-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - vestigium-cartographer-test.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"vestigium-finder-stage-ingress"},"name":"vestigium-finder-stage-ingress","namespace":"itse-vestigium"},"spec":{"rules":[{"host":"vestigium-finder-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"vestigium-finder-stage-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["vestigium-finder-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-18T20:06:11Z
    generation: 1
    labels:
      name: vestigium-finder-stage-ingress
    name: vestigium-finder-stage-ingress
    namespace: itse-vestigium
    resourceVersion: "45164117"
    selfLink: /apis/extensions/v1beta1/namespaces/itse-vestigium/ingresses/vestigium-finder-stage-ingress
    uid: 426dd7ef-d311-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: vestigium-finder-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: vestigium-finder-stage-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - vestigium-finder-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"vestigium-finder-test-ingress"},"name":"vestigium-finder-test-ingress","namespace":"itse-vestigium"},"spec":{"rules":[{"host":"vestigium-finder-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"vestigium-finder-test-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["vestigium-finder-test.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-17T20:44:32Z
    generation: 1
    labels:
      name: vestigium-finder-test-ingress
    name: vestigium-finder-test-ingress
    namespace: itse-vestigium
    resourceVersion: "44285998"
    selfLink: /apis/extensions/v1beta1/namespaces/itse-vestigium/ingresses/vestigium-finder-test-ingress
    uid: 736db358-d24d-11e8-999b-5254008d935f
  spec:
    rules:
    - host: vestigium-finder-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: vestigium-finder-test-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - vestigium-finder-test.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"vestigium-scholar-stage-ingress"},"name":"vestigium-scholar-stage-ingress","namespace":"itse-vestigium"},"spec":{"rules":[{"host":"vestigium-scholar-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"vestigium-scholar-stage-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["vestigium-scholar-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-17T23:40:13Z
    generation: 2
    labels:
      name: vestigium-scholar-stage-ingress
    name: vestigium-scholar-stage-ingress
    namespace: itse-vestigium
    resourceVersion: "44622268"
    selfLink: /apis/extensions/v1beta1/namespaces/itse-vestigium/ingresses/vestigium-scholar-stage-ingress
    uid: fe16d716-d265-11e8-999b-5254008d935f
  spec:
    rules:
    - host: vestigium-scholar-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: vestigium-scholar-stage-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - vestigium-scholar-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"vestigium-scholar-test-ingress"},"name":"vestigium-scholar-test-ingress","namespace":"itse-vestigium"},"spec":{"rules":[{"host":"vestigium-scholar-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"vestigium-scholar-test-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["vestigium-scholar-test.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-17T23:32:28Z
    generation: 1
    labels:
      name: vestigium-scholar-test-ingress
    name: vestigium-scholar-test-ingress
    namespace: itse-vestigium
    resourceVersion: "44395624"
    selfLink: /apis/extensions/v1beta1/namespaces/itse-vestigium/ingresses/vestigium-scholar-test-ingress
    uid: e922b7a2-d264-11e8-999b-5254008d935f
  spec:
    rules:
    - host: vestigium-scholar-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: vestigium-scholar-test-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - vestigium-scholar-test.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"discovery-api-ingress"},"name":"discovery-api-ingress","namespace":"kafka-operations-api"},"spec":{"rules":[{"host":"kafka-discovery.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"discovery-api-service","servicePort":8080},"path":"/"}]}},{"host":"kafka-discovery.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"discovery-api-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["kafka-discovery.test.k8s.target.com","kafka-discovery.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-20T16:46:27Z
    generation: 1
    labels:
      name: discovery-api-ingress
    name: discovery-api-ingress
    namespace: kafka-operations-api
    resourceVersion: "74860718"
    selfLink: /apis/extensions/v1beta1/namespaces/kafka-operations-api/ingresses/discovery-api-ingress
    uid: d2cdfccf-ece3-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: kafka-discovery.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: discovery-api-service
            servicePort: 8080
          path: /
    - host: kafka-discovery.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: discovery-api-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - kafka-discovery.test.k8s.target.com
      - kafka-discovery.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-19T17:08:40Z
    generation: 4
    labels:
      app: envoyproxy-healthz-helm
      chart: envoyproxy-healthz-helm-0.0.6
      heritage: Tiller
      release: envoyproxy-healthz
    name: envoyproxy-healthz-envoyproxy-healthz-helm
    namespace: kube-system
    resourceVersion: "192939668"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/envoyproxy-healthz-envoyproxy-healthz-helm
    uid: a454fb7f-4a69-11e9-b096-525400ca6771
  spec:
    rules:
    - host: envoyproxy-healthz.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: envoyproxy-healthz-envoyproxy-healthz-helm
            servicePort: 8000
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-02-21T17:38:25Z
    generation: 1
    labels:
      app: fed-pie-dev-tte-prometheus
      chart: prometheus-1.4.27
      component: alertmanager
      heritage: Tiller
      release: fed-pie-dev-tte
    name: fed-pie-dev-tte-prom-alt
    namespace: kube-system
    resourceVersion: "178854896"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/fed-pie-dev-tte-prom-alt
    uid: 7d8914f1-35ff-11e9-8c81-525400abdf59
  spec:
    rules:
    - host: fed-prometheus-infra-alert-pie-dev-tte.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fed-pie-dev-tte-prom-alt
            servicePort: 80
          path: /
    tls:
    - hosts:
      - fed-prometheus-infra-alert-pie-dev-tte.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-02-06T20:05:55Z
    generation: 1
    labels:
      app: fed-pie-dev-tte-prometheus
      chart: prometheus-1.4.27
      component: server-infra
      heritage: Tiller
      release: fed-pie-dev-tte
    name: fed-pie-dev-tte-prometheus-infra
    namespace: kube-system
    resourceVersion: "178854924"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/fed-pie-dev-tte-prometheus-infra
    uid: 9c8fcfba-2a4a-11e9-8c81-525400abdf59
  spec:
    rules:
    - host: fed-prometheus-infra-pie-dev-tte.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fed-pie-dev-tte-prom-srv-infra
            servicePort: 80
          path: /
    tls:
    - hosts:
      - fed-prometheus-infra-pie-dev-tte.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"hello-cloud-ingress"},"name":"hello-cloud-ingress","namespace":"kube-system"},"spec":{"rules":[{"host":"hello-cloud.us-central-1.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"hello-cloud-service","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-09-12T18:45:59Z
    generation: 1
    labels:
      name: hello-cloud-ingress
    name: hello-cloud-ingress
    namespace: kube-system
    resourceVersion: "21733084"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/hello-cloud-ingress
    uid: 17466984-b6bc-11e8-88c5-5254004139fa
  spec:
    rules:
    - host: hello-cloud.us-central-1.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: hello-cloud-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"hello-envoy-ingress"},"name":"hello-envoy-ingress","namespace":"kube-system"},"spec":{"rules":[{"host":"hello-envoy.us-central-1.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"hello-envoy-service","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-03-14T20:56:38Z
    generation: 1
    labels:
      name: hello-envoy-ingress
    name: hello-envoy-ingress
    namespace: kube-system
    resourceVersion: "187614581"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/hello-envoy-ingress
    uid: a930b0cb-469b-11e9-b84e-525400cb189a
  spec:
    rules:
    - host: hello-envoy.us-central-1.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: hello-envoy-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-02T16:25:50Z
    generation: 1
    labels:
      app: incluster-pie-dev-001-tte-prometheus
      chart: prometheus-1.4.27
      component: server-infra
      heritage: Tiller
      release: incluster-pie-dev-001-tte
    name: incluster-pie-dev-001-tte-prometheus-infra
    namespace: kube-system
    resourceVersion: "178855113"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/incluster-pie-dev-001-tte-prometheus-infra
    uid: d32c3eda-c65f-11e8-8a20-5254001e2711
  spec:
    rules:
    - host: prometheus-infra-pie-dev-001.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: incluster-pie-dev-001-tte-prom-srv-infra
            servicePort: 80
          path: /
    tls:
    - hosts:
      - prometheus-infra-pie-dev-001.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-02-06T21:35:00Z
    generation: 1
    labels:
      app: incluster-pie-dev-006-tte-prometheus
      chart: prometheus-1.4.27
      component: server-infra
      heritage: Tiller
      release: incluster-pie-dev-006-tte
    name: incluster-pie-dev-006-tte-prometheus-infra
    namespace: kube-system
    resourceVersion: "178855147"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/incluster-pie-dev-006-tte-prometheus-infra
    uid: 0e397c30-2a57-11e9-8c81-525400abdf59
  spec:
    rules:
    - host: prometheus-infra-pie-dev-006.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: incluster-pie-dev-006-tte-prom-srv-infra
            servicePort: 80
          path: /
    tls:
    - hosts:
      - prometheus-infra-pie-dev-006.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-01-31T21:50:51Z
    generation: 1
    labels:
      app: incluster-pie-dev-007-tte-prometheus
      chart: prometheus-1.4.27
      component: server-infra
      heritage: Tiller
      release: incluster-pie-dev-007-tte
    name: incluster-pie-dev-007-tte-prometheus-infra
    namespace: kube-system
    resourceVersion: "178855215"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/incluster-pie-dev-007-tte-prometheus-infra
    uid: 4714d6d3-25a2-11e9-9c86-525400b195c5
  spec:
    rules:
    - host: prometheus-infra-pie-dev-007.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: incluster-pie-dev-007-tte-prom-srv-infra
            servicePort: 80
          path: /
    tls:
    - hosts:
      - prometheus-infra-pie-dev-007.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-11T16:18:56Z
    generation: 1
    labels:
      app: incluster-pie-dev-vmaas-001-tte-prometheus
      chart: prometheus-1.4.27
      component: server-infra
      heritage: Tiller
      release: incluster-pie-dev-vmaas-001-tte
    name: incluster-pie-dev-vmaas-001-tte-prometheus-infra
    namespace: kube-system
    resourceVersion: "184621213"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/incluster-pie-dev-vmaas-001-tte-prometheus-infra
    uid: 5e9ec796-4419-11e9-a26e-525400dba923
  spec:
    rules:
    - host: prometheus-infra-pie-dev-vmaas-001.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: incluster-pie-dev-vmaas-001-tte-prom-srv-infra
            servicePort: 80
          path: /
    tls:
    - hosts:
      - prometheus-infra-pie-dev-vmaas-001.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-07-11T21:54:56Z
    generation: 1
    labels:
      app: incluster-prometheus
      chart: prometheus-1.4.27
      component: server-infra
      heritage: Tiller
      release: incluster
    name: incluster-prometheus-infra
    namespace: kube-system
    resourceVersion: "178855032"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/incluster-prometheus-infra
    uid: 0c92a2da-8555-11e8-9d1e-5254007fdc03
  spec:
    rules:
    - host: prometheus-infra.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: incluster-prom-srv-infra
            servicePort: 80
          path: /
    tls:
    - hosts:
      - prometheus-infra.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-07-11T21:54:56Z
    generation: 1
    labels:
      app: incluster-prometheus
      chart: prometheus-1.4.27
      component: server-pod
      heritage: Tiller
      release: incluster
    name: incluster-prometheus-pod
    namespace: kube-system
    resourceVersion: "178855022"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/incluster-prometheus-pod
    uid: 0cb78b4b-8555-11e8-9d1e-5254007fdc03
  spec:
    rules:
    - host: prometheus-pod.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: incluster-prom-srv-pod
            servicePort: 80
          path: /
    tls:
    - hosts:
      - prometheus-pod.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-07-11T21:54:56Z
    generation: 1
    labels:
      app: incluster-prometheus
      chart: prometheus-1.4.27
      component: server-redsky
      heritage: Tiller
      release: incluster
    name: incluster-prometheus-redsky
    namespace: kube-system
    resourceVersion: "178855006"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/incluster-prometheus-redsky
    uid: 0cc987cf-8555-11e8-9d1e-5254007fdc03
  spec:
    rules:
    - host: prometheus-redsky.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: incluster-prom-srv-redsky
            servicePort: 80
          path: /
    tls:
    - hosts:
      - prometheus-redsky.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-07-11T21:54:56Z
    generation: 1
    labels:
      app: incluster-prometheus
      chart: prometheus-1.4.27
      component: server-service-01
      heritage: Tiller
      release: incluster
    name: incluster-prometheus-service-01
    namespace: kube-system
    resourceVersion: "178854994"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/incluster-prometheus-service-01
    uid: 0ccb9f5a-8555-11e8-9d1e-5254007fdc03
  spec:
    rules:
    - host: prometheus-service-01.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: incluster-prom-srv-service-01
            servicePort: 80
          path: /
    tls:
    - hosts:
      - prometheus-service-01.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-07-11T21:54:56Z
    generation: 1
    labels:
      app: incluster-prometheus
      chart: prometheus-1.4.27
      component: server-service-02
      heritage: Tiller
      release: incluster
    name: incluster-prometheus-service-02
    namespace: kube-system
    resourceVersion: "178854980"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/incluster-prometheus-service-02
    uid: 0cd53b27-8555-11e8-9d1e-5254007fdc03
  spec:
    rules:
    - host: prometheus-service-02.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: incluster-prom-srv-service-02
            servicePort: 80
          path: /
    tls:
    - hosts:
      - prometheus-service-02.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-15T21:19:47Z
    generation: 1
    labels:
      app: prom-fed-all-prometheus
      chart: prometheus-1.4.27
      component: server-all
      heritage: Tiller
      release: prom-fed-all
    name: prom-fed-all-prometheus-all
    namespace: kube-system
    resourceVersion: "178854743"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/prom-fed-all-prometheus-all
    uid: 0b4f0f36-d0c0-11e8-999f-52540096678d
  spec:
    rules:
    - host: fed-prometheus-all.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: prom-fed-all-prom-srv-all
            servicePort: 80
          path: /
    tls:
    - hosts:
      - fed-prometheus-all.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-12-10T15:27:02Z
    generation: 1
    labels:
      app: prom-fed-infra-prometheus
      chart: prometheus-1.4.27
      component: alertmanager
      heritage: Tiller
      release: prom-fed-infra
    name: prom-fed-infra-prom-alt
    namespace: kube-system
    resourceVersion: "178854791"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/prom-fed-infra-prom-alt
    uid: 0ade48fc-fc90-11e8-999b-5254008d935f
  spec:
    rules:
    - host: fed-prometheus-infra-alert.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: prom-fed-infra-prom-alt
            servicePort: 80
          path: /
    tls:
    - hosts:
      - fed-prometheus-infra-alert.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-12-10T15:27:03Z
    generation: 1
    labels:
      app: prom-fed-infra-prometheus
      chart: prometheus-1.4.27
      component: server-infra
      heritage: Tiller
      release: prom-fed-infra
    name: prom-fed-infra-prometheus-infra
    namespace: kube-system
    resourceVersion: "178854828"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/prom-fed-infra-prometheus-infra
    uid: 0b896085-fc90-11e8-999b-5254008d935f
  spec:
    rules:
    - host: fed-prometheus-infra.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: prom-fed-infra-prom-srv-infra
            servicePort: 80
          path: /
    tls:
    - hosts:
      - fed-prometheus-infra.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-18T18:50:21Z
    generation: 1
    labels:
      app: prom-fed-redsky-prometheus
      chart: prometheus-1.4.27
      component: server-redsky
      heritage: Tiller
      release: prom-fed-redsky
    name: prom-fed-redsky-prometheus-redsky
    namespace: kube-system
    resourceVersion: "178854857"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/prom-fed-redsky-prometheus-redsky
    uid: aa7750fc-d306-11e8-999b-5254008d935f
  spec:
    rules:
    - host: fed-prometheus-redsky.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: prom-fed-redsky-prom-srv-redsky
            servicePort: 80
          path: /
    tls:
    - hosts:
      - fed-prometheus-redsky.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-02-06T19:16:51Z
    generation: 1
    labels:
      app: sample-app-sox-sample-app
      chart: sample-app-sox-helm-1.0.1
      heritage: Tiller
      name: sample-app-sox-sample-ap-ingress
      release: sample-app-sox
    name: sample-app-sox-sample-ap-ingress
    namespace: kube-system
    resourceVersion: "151375924"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/sample-app-sox-sample-ap-ingress
    uid: c1b863b7-2a43-11e9-8c81-525400abdf59
  spec:
    rules:
    - host: sampleapp.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: sample-app-sox-sample-ap-service
            servicePort: 80
          path: /
    - host: sampleapp.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: sample-app-sox-sample-ap-service
            servicePort: 80
          path: /
    - host: sampleapp.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: sample-app-sox-sample-ap-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - sampleapp.ttc-test.k8s.target.com
      - sampleapp.tte-test.k8s.target.com
      - sampleapp.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"lat2-analytics-ingress"},"name":"lat2-analytics-ingress","namespace":"lat-2"},"spec":{"rules":[{"host":"lat2-analytics-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lat2-analytics-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["lat2-analytics-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-28T06:02:50Z
    generation: 2
    labels:
      name: lat2-analytics-ingress
    name: lat2-analytics-ingress
    namespace: lat-2
    resourceVersion: "82310300"
    selfLink: /apis/extensions/v1beta1/namespaces/lat-2/ingresses/lat2-analytics-ingress
    uid: 3cafbe6f-f2d3-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: lat2-analytics-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lat2-analytics-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - lat2-analytics-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"lat2-contentapi-ingress"},"name":"lat2-contentapi-ingress","namespace":"lat-2"},"spec":{"rules":[{"host":"lat2-contentapi-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lat2-contentapi-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["lat2-contentapi-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-30T19:03:08Z
    generation: 1
    labels:
      name: lat2-contentapi-ingress
    name: lat2-contentapi-ingress
    namespace: lat-2
    resourceVersion: "17447964"
    selfLink: /apis/extensions/v1beta1/namespaces/lat-2/ingresses/lat2-contentapi-ingress
    uid: 552a2b96-ac87-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: lat2-contentapi-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lat2-contentapi-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - lat2-contentapi-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/ssl-redirect: "true"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/ssl-redirect":"true"},"labels":{"name":"lat2-dashboard-ingress"},"name":"lat2-dashboard-ingress","namespace":"lat-2"},"spec":{"rules":[{"host":"lat2-dashboard-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lat2-dashboard-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["lat2-dashboard-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-18T21:17:50Z
    generation: 5
    labels:
      name: lat2-dashboard-ingress
    name: lat2-dashboard-ingress
    namespace: lat-2
    resourceVersion: "86841537"
    selfLink: /apis/extensions/v1beta1/namespaces/lat-2/ingresses/lat2-dashboard-ingress
    uid: 6798069e-eb77-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: lat2-dashboard-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lat2-dashboard-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - lat2-dashboard-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/ssl-redirect: "true"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/ssl-redirect":"true"},"labels":{"name":"lat2-ingress"},"name":"lat2-ingress","namespace":"lat-2"},"spec":{"rules":[{"host":"lat2-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lat2-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["lat2-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-29T22:15:32Z
    generation: 2
    labels:
      name: lat2-ingress
    name: lat2-ingress
    namespace: lat-2
    resourceVersion: "26220569"
    selfLink: /apis/extensions/v1beta1/namespaces/lat-2/ingresses/lat2-ingress
    uid: 0bc495a7-abd9-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: lat2-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lat2-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - lat2-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"lat2-searchapi-ingress"},"name":"lat2-searchapi-ingress","namespace":"lat-2"},"spec":{"rules":[{"host":"lat2-searchapi-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lat2-searchapi-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["lat2-searchapi-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-04T18:59:52Z
    generation: 2
    labels:
      name: lat2-searchapi-ingress
    name: lat2-searchapi-ingress
    namespace: lat-2
    resourceVersion: "19050504"
    selfLink: /apis/extensions/v1beta1/namespaces/lat-2/ingresses/lat2-searchapi-ingress
    uid: b4b7eae6-b074-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: lat2-searchapi-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lat2-searchapi-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - lat2-searchapi-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"lat2-userapi-ingress"},"name":"lat2-userapi-ingress","namespace":"lat-2"},"spec":{"rules":[{"host":"lat2-userapi-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lat2-userapi-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["lat2-userapi-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-04T16:14:34Z
    generation: 3
    labels:
      name: lat2-userapi-ingress
    name: lat2-userapi-ingress
    namespace: lat-2
    resourceVersion: "19333042"
    selfLink: /apis/extensions/v1beta1/namespaces/lat-2/ingresses/lat2-userapi-ingress
    uid: 9cdb5c48-b05d-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: lat2-userapi-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lat2-userapi-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - lat2-userapi-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"pubportal-ingress"},"name":"pubportal-ingress","namespace":"lat-2"},"spec":{"rules":[{"host":"pubportal-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pubportal-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["pubportal-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-05T20:40:13Z
    generation: 1
    labels:
      name: pubportal-ingress
    name: pubportal-ingress
    namespace: lat-2
    resourceVersion: "19381534"
    selfLink: /apis/extensions/v1beta1/namespaces/lat-2/ingresses/pubportal-ingress
    uid: e3da44b7-b14b-11e8-88c5-5254004139fa
  spec:
    rules:
    - host: pubportal-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pubportal-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - pubportal-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"mfm-change"},"name":"mfm-change-request-ing","namespace":"mainframe-shutoff-test"},"spec":{"rules":[{"host":"mainframe-shutoff-test-change.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mfm-change-request-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["mainframe-shutoff-test-change.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-07T17:16:52Z
    generation: 5
    labels:
      name: mfm-change
    name: mfm-change-request-ing
    namespace: mainframe-shutoff-test
    resourceVersion: "20005337"
    selfLink: /apis/extensions/v1beta1/namespaces/mainframe-shutoff-test/ingresses/mfm-change-request-ing
    uid: d007d121-b2c1-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: mainframe-shutoff-test-change.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mfm-change-request-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - mainframe-shutoff-test-change.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"mfm-website"},"name":"mfm-website-ing","namespace":"mainframe-shutoff-test"},"spec":{"rules":[{"host":"mainframe-shutoff-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mfm-website-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["mainframe-shutoff-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-07T19:48:25Z
    generation: 1
    labels:
      name: mfm-website
    name: mfm-website-ing
    namespace: mainframe-shutoff-test
    resourceVersion: "20014158"
    selfLink: /apis/extensions/v1beta1/namespaces/mainframe-shutoff-test/ingresses/mfm-website-ing
    uid: fbd7fecd-b2d6-11e8-88c5-5254004139fa
  spec:
    rules:
    - host: mainframe-shutoff-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mfm-website-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - mainframe-shutoff-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"merch-financial-calendar-ingress-dev"},"name":"merch-financial-calendar-ingress-dev","namespace":"merch-financial-calendar-dev"},"spec":{"rules":[{"host":"merch-financial-calendar-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-financial-calendar-service-dev","servicePort":80},"path":"/"}]}},{"host":"merch-financial-calendar-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-financial-calendar-service-dev","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-financial-calendar-dev.test.k8s.target.com","merch-financial-calendar-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-26T10:29:14Z
    generation: 1
    labels:
      name: merch-financial-calendar-ingress-dev
    name: merch-financial-calendar-ingress-dev
    namespace: merch-financial-calendar-dev
    resourceVersion: "80186984"
    selfLink: /apis/extensions/v1beta1/namespaces/merch-financial-calendar-dev/ingresses/merch-financial-calendar-ingress-dev
    uid: 1f21ec36-f166-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: merch-financial-calendar-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-financial-calendar-service-dev
            servicePort: 80
          path: /
    - host: merch-financial-calendar-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-financial-calendar-service-dev
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-financial-calendar-dev.test.k8s.target.com
      - merch-financial-calendar-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"mww-app-ingress-dev"},"name":"mww-app-ingress-dev","namespace":"merch-wagon-wheel-dev"},"spec":{"rules":[{"host":"merch-wagon-wheel-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mww-app-service-dev","servicePort":80},"path":"/"}]}},{"host":"merch-wagon-wheel-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mww-app-service-dev","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-wagon-wheel-dev.test.k8s.target.com","merch-wagon-wheel-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-04T13:00:09Z
    generation: 21
    labels:
      name: mww-app-ingress-dev
    name: mww-app-ingress-dev
    namespace: merch-wagon-wheel-dev
    resourceVersion: "34398714"
    selfLink: /apis/extensions/v1beta1/namespaces/merch-wagon-wheel-dev/ingresses/mww-app-ingress-dev
    uid: 6c1a6b91-c7d5-11e8-93f3-5254000c5c7e
  spec:
    rules:
    - host: merch-wagon-wheel-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mww-app-service-dev
            servicePort: 80
          path: /
    - host: merch-wagon-wheel-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mww-app-service-dev
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-wagon-wheel-dev.test.k8s.target.com
      - merch-wagon-wheel-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"mww-app-ingress-stage"},"name":"mww-app-ingress-stage","namespace":"merch-wagon-wheel-stage"},"spec":{"rules":[{"host":"merch-wagon-wheel-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mww-app-service-stage","servicePort":80},"path":"/"}]}},{"host":"merch-wagon-wheel-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mww-app-service-stage","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-wagon-wheel-stage.test.k8s.target.com","merch-wagon-wheel-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-05T10:58:26Z
    generation: 1
    labels:
      name: mww-app-ingress-stage
    name: mww-app-ingress-stage
    namespace: merch-wagon-wheel-stage
    resourceVersion: "34885551"
    selfLink: /apis/extensions/v1beta1/namespaces/merch-wagon-wheel-stage/ingresses/mww-app-ingress-stage
    uid: 95ff9dd7-c88d-11e8-8a20-5254001e2711
  spec:
    rules:
    - host: merch-wagon-wheel-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mww-app-service-stage
            servicePort: 80
          path: /
    - host: merch-wagon-wheel-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mww-app-service-stage
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-wagon-wheel-stage.test.k8s.target.com
      - merch-wagon-wheel-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/rewrite-target: /
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/rewrite-target":"/"},"labels":{"name":"brand-sales-api-ingress"},"name":"brand-sales-api-ingress","namespace":"my-performance-mobile-2"},"spec":{"rules":[{"host":"myperformance.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"brand-sales-go-proxy-service","servicePort":80},"path":"/mpm_brand_sales/v1"}]}},{"host":"myperformance.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"brand-sales-go-proxy-service","servicePort":80},"path":"/mpm_brand_sales/v1"}]}}]}}
    creationTimestamp: 2018-10-31T20:24:10Z
    generation: 1
    labels:
      name: brand-sales-api-ingress
    name: brand-sales-api-ingress
    namespace: my-performance-mobile-2
    resourceVersion: "56170516"
    selfLink: /apis/extensions/v1beta1/namespaces/my-performance-mobile-2/ingresses/brand-sales-api-ingress
    uid: ec8a18c3-dd4a-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: myperformance.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: brand-sales-go-proxy-service
            servicePort: 80
          path: /mpm_brand_sales/v1
    - host: myperformance.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: brand-sales-go-proxy-service
            servicePort: 80
          path: /mpm_brand_sales/v1
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/rewrite-target: /
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/rewrite-target":"/"},"labels":{"name":"custom-merchandise-sales-api-ingress"},"name":"custom-merchandise-sales-api-ingress","namespace":"my-performance-mobile-2"},"spec":{"rules":[{"host":"myperformance.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"custom-merchandise-sales-go-proxy-service","servicePort":80},"path":"/mpm_customized_merchandise_sales/v1"}]}},{"host":"myperformance.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"custom-merchandise-sales-go-proxy-service","servicePort":80},"path":"/mpm_customized_merchandise_sales/v1"}]}}]}}
    creationTimestamp: 2018-10-31T20:24:05Z
    generation: 1
    labels:
      name: custom-merchandise-sales-api-ingress
    name: custom-merchandise-sales-api-ingress
    namespace: my-performance-mobile-2
    resourceVersion: "56170517"
    selfLink: /apis/extensions/v1beta1/namespaces/my-performance-mobile-2/ingresses/custom-merchandise-sales-api-ingress
    uid: e9ab8200-dd4a-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: myperformance.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: custom-merchandise-sales-go-proxy-service
            servicePort: 80
          path: /mpm_customized_merchandise_sales/v1
    - host: myperformance.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: custom-merchandise-sales-go-proxy-service
            servicePort: 80
          path: /mpm_customized_merchandise_sales/v1
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/rewrite-target: /
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/rewrite-target":"/"},"labels":{"name":"feedback-api-ingress"},"name":"feedback-api-ingress","namespace":"my-performance-mobile-2"},"spec":{"rules":[{"host":"myperformance.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"feedback-go-proxy-service","servicePort":80},"path":"/mpm_feedbacks/v1"}]}},{"host":"myperformance.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"feedback-go-proxy-service","servicePort":80},"path":"/mpm_feedbacks/v1"}]}}]}}
    creationTimestamp: 2019-01-16T04:27:43Z
    generation: 2
    labels:
      name: feedback-api-ingress
    name: feedback-api-ingress
    namespace: my-performance-mobile-2
    resourceVersion: "129853470"
    selfLink: /apis/extensions/v1beta1/namespaces/my-performance-mobile-2/ingresses/feedback-api-ingress
    uid: 1148036c-1947-11e9-9770-525400b66b60
  spec:
    rules:
    - host: myperformance.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: feedback-go-proxy-service
            servicePort: 80
          path: /mpm_feedbacks/v1
    - host: myperformance.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: feedback-go-proxy-service
            servicePort: 80
          path: /mpm_feedbacks/v1
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/rewrite-target: /
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/rewrite-target":"/"},"labels":{"name":"flex-fulfillments-v3-api-ingress"},"name":"flex-fulfillments-v3-api-ingress","namespace":"my-performance-mobile-2"},"spec":{"rules":[{"host":"myperformance.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"flex-fulfillments-v3-go-proxy-service","servicePort":80},"path":"/mpm_flex_fulfillments/v3"}]}},{"host":"myperformance.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"flex-fulfillments-v3-go-proxy-service","servicePort":80},"path":"/mpm_flex_fulfillments/v3"}]}}]}}
    creationTimestamp: 2018-10-31T20:24:05Z
    generation: 1
    labels:
      name: flex-fulfillments-v3-api-ingress
    name: flex-fulfillments-v3-api-ingress
    namespace: my-performance-mobile-2
    resourceVersion: "56170581"
    selfLink: /apis/extensions/v1beta1/namespaces/my-performance-mobile-2/ingresses/flex-fulfillments-v3-api-ingress
    uid: e9acd52c-dd4a-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: myperformance.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: flex-fulfillments-v3-go-proxy-service
            servicePort: 80
          path: /mpm_flex_fulfillments/v3
    - host: myperformance.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: flex-fulfillments-v3-go-proxy-service
            servicePort: 80
          path: /mpm_flex_fulfillments/v3
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/rewrite-target: /
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/rewrite-target":"/"},"labels":{"name":"item-details-api-ingress"},"name":"item-details-api-ingress","namespace":"my-performance-mobile-2"},"spec":{"rules":[{"host":"myperformance.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"item-details-go-proxy-service","servicePort":80},"path":"/mpm_item_details/v1"}]}},{"host":"myperformance.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"item-details-go-proxy-service","servicePort":80},"path":"/mpm_item_details/v1"}]}}]}}
    creationTimestamp: 2018-11-09T16:17:04Z
    generation: 1
    labels:
      name: item-details-api-ingress
    name: item-details-api-ingress
    namespace: my-performance-mobile-2
    resourceVersion: "64474011"
    selfLink: /apis/extensions/v1beta1/namespaces/my-performance-mobile-2/ingresses/item-details-api-ingress
    uid: e54454f3-e43a-11e8-999b-5254008d935f
  spec:
    rules:
    - host: myperformance.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: item-details-go-proxy-service
            servicePort: 80
          path: /mpm_item_details/v1
    - host: myperformance.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: item-details-go-proxy-service
            servicePort: 80
          path: /mpm_item_details/v1
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/rewrite-target: /
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/rewrite-target":"/"},"labels":{"name":"merchandise-sales-api-ingress"},"name":"merchandise-sales-api-ingress","namespace":"my-performance-mobile-2"},"spec":{"rules":[{"host":"myperformance.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merchandise-sales-go-proxy-service","servicePort":80},"path":"/mpm_merchandise_sales/v1"}]}},{"host":"myperformance.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merchandise-sales-go-proxy-service","servicePort":80},"path":"/mpm_merchandise_sales/v1"}]}}]}}
    creationTimestamp: 2018-10-31T20:24:05Z
    generation: 1
    labels:
      name: merchandise-sales-api-ingress
    name: merchandise-sales-api-ingress
    namespace: my-performance-mobile-2
    resourceVersion: "56170578"
    selfLink: /apis/extensions/v1beta1/namespaces/my-performance-mobile-2/ingresses/merchandise-sales-api-ingress
    uid: e9aa9673-dd4a-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: myperformance.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merchandise-sales-go-proxy-service
            servicePort: 80
          path: /mpm_merchandise_sales/v1
    - host: myperformance.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merchandise-sales-go-proxy-service
            servicePort: 80
          path: /mpm_merchandise_sales/v1
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"mpm-admin-console-ingress"},"name":"mpm-admin-console-ingress","namespace":"my-performance-mobile-2"},"spec":{"rules":[{"host":"mpm-admin-console.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mpm-admin-console-service","servicePort":80},"path":"/"}]}},{"host":"mpm-admin-console.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mpm-admin-console-service","servicePort":80},"path":"/"}]}},{"host":"mpm-admin-console.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mpm-admin-console-service","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-01-31T09:58:41Z
    generation: 1
    labels:
      name: mpm-admin-console-ingress
    name: mpm-admin-console-ingress
    namespace: my-performance-mobile-2
    resourceVersion: "144708924"
    selfLink: /apis/extensions/v1beta1/namespaces/my-performance-mobile-2/ingresses/mpm-admin-console-ingress
    uid: c9ac959a-253e-11e9-898c-525400270885
  spec:
    rules:
    - host: mpm-admin-console.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mpm-admin-console-service
            servicePort: 80
          path: /
    - host: mpm-admin-console.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mpm-admin-console-service
            servicePort: 80
          path: /
    - host: mpm-admin-console.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mpm-admin-console-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/rewrite-target: /
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/rewrite-target":"/"},"labels":{"name":"overall-sales-api-ingress"},"name":"overall-sales-api-ingress","namespace":"my-performance-mobile-2"},"spec":{"rules":[{"host":"myperformance.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"overall-sales-go-proxy-service","servicePort":80},"path":"/store_sales/v1"}]}},{"host":"myperformance.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"overall-sales-go-proxy-service","servicePort":80},"path":"/store_sales/v1"}]}}]}}
    creationTimestamp: 2018-10-31T20:24:10Z
    generation: 1
    labels:
      name: overall-sales-api-ingress
    name: overall-sales-api-ingress
    namespace: my-performance-mobile-2
    resourceVersion: "56170582"
    selfLink: /apis/extensions/v1beta1/namespaces/my-performance-mobile-2/ingresses/overall-sales-api-ingress
    uid: ec8a0a9d-dd4a-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: myperformance.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: overall-sales-go-proxy-service
            servicePort: 80
          path: /store_sales/v1
    - host: myperformance.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: overall-sales-go-proxy-service
            servicePort: 80
          path: /store_sales/v1
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/rewrite-target: /
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/rewrite-target":"/"},"labels":{"name":"payroll-api-ingress"},"name":"payroll-api-ingress","namespace":"my-performance-mobile-2"},"spec":{"rules":[{"host":"myperformance.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"payroll-go-proxy-service","servicePort":80},"path":"/mpm_payrolls/v1"}]}},{"host":"myperformance.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"payroll-go-proxy-service","servicePort":80},"path":"/mpm_payrolls/v1"}]}}]}}
    creationTimestamp: 2018-10-31T20:24:10Z
    generation: 1
    labels:
      name: payroll-api-ingress
    name: payroll-api-ingress
    namespace: my-performance-mobile-2
    resourceVersion: "56170579"
    selfLink: /apis/extensions/v1beta1/namespaces/my-performance-mobile-2/ingresses/payroll-api-ingress
    uid: ec897285-dd4a-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: myperformance.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: payroll-go-proxy-service
            servicePort: 80
          path: /mpm_payrolls/v1
    - host: myperformance.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: payroll-go-proxy-service
            servicePort: 80
          path: /mpm_payrolls/v1
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/rewrite-target: /
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/rewrite-target":"/"},"labels":{"name":"redcard-api-ingress"},"name":"redcard-api-ingress","namespace":"my-performance-mobile-2"},"spec":{"rules":[{"host":"myperformance.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"redcard-go-proxy-service","servicePort":80},"path":"/redcard_applications/v1"}]}},{"host":"myperformance.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"redcard-go-proxy-service","servicePort":80},"path":"/redcard_applications/v1"}]}}]}}
    creationTimestamp: 2018-10-31T20:24:05Z
    generation: 1
    labels:
      name: redcard-api-ingress
    name: redcard-api-ingress
    namespace: my-performance-mobile-2
    resourceVersion: "56170557"
    selfLink: /apis/extensions/v1beta1/namespaces/my-performance-mobile-2/ingresses/redcard-api-ingress
    uid: e9f2f34a-dd4a-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: myperformance.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: redcard-go-proxy-service
            servicePort: 80
          path: /redcard_applications/v1
    - host: myperformance.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: redcard-go-proxy-service
            servicePort: 80
          path: /redcard_applications/v1
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/rewrite-target: /
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/rewrite-target":"/"},"labels":{"name":"store-leader-api-ingress"},"name":"store-leader-api-ingress","namespace":"my-performance-mobile-2"},"spec":{"rules":[{"host":"myperformance.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"store-leader-go-proxy-service","servicePort":80},"path":"/store_leaders/v1"}]}},{"host":"myperformance.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"store-leader-go-proxy-service","servicePort":80},"path":"/store_leaders/v1"}]}}]}}
    creationTimestamp: 2018-11-02T17:51:28Z
    generation: 1
    labels:
      name: store-leader-api-ingress
    name: store-leader-api-ingress
    namespace: my-performance-mobile-2
    resourceVersion: "57837321"
    selfLink: /apis/extensions/v1beta1/namespaces/my-performance-mobile-2/ingresses/store-leader-api-ingress
    uid: ecb18ddf-dec7-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: myperformance.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: store-leader-go-proxy-service
            servicePort: 80
          path: /store_leaders/v1
    - host: myperformance.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: store-leader-go-proxy-service
            servicePort: 80
          path: /store_leaders/v1
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/rewrite-target: /
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/rewrite-target":"/"},"labels":{"name":"top-bottom-api-ingress"},"name":"top-bottom-api-ingress","namespace":"my-performance-mobile-2"},"spec":{"rules":[{"host":"myperformance.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"top-bottom-go-proxy-service","servicePort":80},"path":"/mpm_top_bottom_sales/v1"}]}},{"host":"myperformance.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"top-bottom-go-proxy-service","servicePort":80},"path":"/mpm_top_bottom_sales/v1"}]}}]}}
    creationTimestamp: 2018-10-31T20:24:05Z
    generation: 1
    labels:
      name: top-bottom-api-ingress
    name: top-bottom-api-ingress
    namespace: my-performance-mobile-2
    resourceVersion: "56170577"
    selfLink: /apis/extensions/v1beta1/namespaces/my-performance-mobile-2/ingresses/top-bottom-api-ingress
    uid: e9adb228-dd4a-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: myperformance.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: top-bottom-go-proxy-service
            servicePort: 80
          path: /mpm_top_bottom_sales/v1
    - host: myperformance.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: top-bottom-go-proxy-service
            servicePort: 80
          path: /mpm_top_bottom_sales/v1
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/rewrite-target: /
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/rewrite-target":"/"},"labels":{"name":"tracking-api-ingress"},"name":"tracking-api-ingress","namespace":"my-performance-mobile-2"},"spec":{"rules":[{"host":"myperformance.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"tracking-go-proxy-service","servicePort":80},"path":"/mpm_tracks/v1"}]}},{"host":"myperformance.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"tracking-go-proxy-service","servicePort":80},"path":"/mpm_tracks/v1"}]}}]}}
    creationTimestamp: 2018-10-31T17:35:46Z
    generation: 1
    labels:
      name: tracking-api-ingress
    name: tracking-api-ingress
    namespace: my-performance-mobile-2
    resourceVersion: "56060159"
    selfLink: /apis/extensions/v1beta1/namespaces/my-performance-mobile-2/ingresses/tracking-api-ingress
    uid: 6629a9f1-dd33-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: myperformance.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: tracking-go-proxy-service
            servicePort: 80
          path: /mpm_tracks/v1
    - host: myperformance.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: tracking-go-proxy-service
            servicePort: 80
          path: /mpm_tracks/v1
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/rewrite-target: /
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/rewrite-target":"/"},"labels":{"name":"user-details-api-ingress"},"name":"user-details-api-ingress","namespace":"my-performance-mobile-2"},"spec":{"rules":[{"host":"myperformance.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"user-details-go-proxy-service","servicePort":80},"path":"/mpm_team_members/v1"}]}},{"host":"myperformance.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"user-details-go-proxy-service","servicePort":80},"path":"/mpm_team_members/v1"}]}}]}}
    creationTimestamp: 2018-10-31T20:47:32Z
    generation: 1
    labels:
      name: user-details-api-ingress
    name: user-details-api-ingress
    namespace: my-performance-mobile-2
    resourceVersion: "56188355"
    selfLink: /apis/extensions/v1beta1/namespaces/my-performance-mobile-2/ingresses/user-details-api-ingress
    uid: 3081b5a4-dd4e-11e8-999b-5254008d935f
  spec:
    rules:
    - host: myperformance.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: user-details-go-proxy-service
            servicePort: 80
          path: /mpm_team_members/v1
    - host: myperformance.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: user-details-go-proxy-service
            servicePort: 80
          path: /mpm_team_members/v1
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-02-13T22:09:48Z
    generation: 1
    labels:
      app: adjacency-api
      chart: adjacency-api-1-107-e0f4f283
      version: 1-107-e0f4f283
    name: adjacency-api-ingress
    namespace: neptune-stage
    resourceVersion: "193816078"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-stage/ingresses/adjacency-api-ingress
    uid: 14366589-2fdc-11e9-b42d-5254003b1534
  spec:
    rules:
    - host: neptune-adjacency-api-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: adjacency-api-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-04T21:36:50Z
    generation: 1
    labels:
      app: aisle-api
      chart: aisle-api-1-108-921d764a
      version: 1-108-921d764a
    name: aisle-api-ingress
    namespace: neptune-stage
    resourceVersion: "193821938"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-stage/ingresses/aisle-api-ingress
    uid: 9e9075f6-3ec5-11e9-9130-525400927ab2
  spec:
    rules:
    - host: neptune-aisle-api-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: aisle-api-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-22T18:19:52Z
    generation: 1
    labels:
      app: aisle-location-consumer
      chart: aisle-location-consumer-1-581-f01c8419
      version: 1-581-f01c8419
    name: aisle-location-consumer-ingress
    namespace: neptune-stage
    resourceVersion: "188274202"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-stage/ingresses/aisle-location-consumer-ingress
    uid: 1205fcc4-d627-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: neptune-aisle-location-consumer-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: aisle-location-consumer-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-22T19:24:30Z
    generation: 1
    labels:
      app: department-location-consumer
      chart: department-location-consumer-1-410-12db3f0b
      version: 1-410-12db3f0b
    name: department-location-consumer-ingress
    namespace: neptune-stage
    resourceVersion: "193817968"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-stage/ingresses/department-location-consumer-ingress
    uid: 1905ea8f-d630-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: neptune-department-location-consumer-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: department-location-consumer-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-09-27T16:50:41Z
    generation: 1
    labels:
      app: store-item-coordinates
      chart: store-item-coordinates-1-846-537fa413
      version: 1-846-537fa413
    name: store-item-coordinates-ingress
    namespace: neptune-stage
    resourceVersion: "193720230"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-stage/ingresses/store-item-coordinates-ingress
    uid: 77d63646-c275-11e8-93a6-525400dd15a8
  spec:
    rules:
    - host: neptune-store-item-coordinates-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: store-item-coordinates-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-09-27T16:29:39Z
    generation: 1
    labels:
      app: store-pathing
      chart: store-pathing-1-1542-89d48682
      version: 1-1542-89d48682
    name: store-pathing-ingress
    namespace: neptune-stage
    resourceVersion: "193819938"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-stage/ingresses/store-pathing-ingress
    uid: 88138131-c272-11e8-93a6-525400dd15a8
  spec:
    rules:
    - host: neptune-store-pathing-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: store-pathing-service
            servicePort: 8080
          path: /
        - backend:
            serviceName: store-pathing-direct-service
            servicePort: 1234
          path: /info
    - host: neptune-store-pathing-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: store-pathing-service
            servicePort: 8080
          path: /
        - backend:
            serviceName: store-pathing-direct-service
            servicePort: 1234
          path: /info
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-01-09T21:10:21Z
    generation: 1
    labels:
      app: store-paths-v2
      chart: store-paths-v2-1-910-ef601acc
      version: 1-910-ef601acc
    name: store-paths-v2-ingress
    namespace: neptune-stage
    resourceVersion: "194599678"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-stage/ingresses/store-paths-v2-ingress
    uid: f9425878-1452-11e9-b513-525400493f0a
  spec:
    rules:
    - host: neptune-store-paths-v2-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: store-paths-v2-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-01-30T16:28:25Z
    generation: 2
    labels:
      app: svg-map-api
      chart: svg-map-api-1-311-ec9bbd19
      version: 1-311-ec9bbd19
    name: svg-map-api-ingress
    namespace: neptune-stage
    resourceVersion: "193925893"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-stage/ingresses/svg-map-api-ingress
    uid: 1157952a-24ac-11e9-86c4-525400ed1a2a
  spec:
    rules:
    - host: neptune-svg-map-api-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: svg-map-api-service
            servicePort: 80
          path: /
    - host: neptune-svg-map-api-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: svg-map-api-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"ost-meta-api-ing"},"name":"ost-meta-api-ing","namespace":"ostmeta"},"spec":{"rules":[{"host":"ost-meta-api.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ost-meta-api-svc","servicePort":8000},"path":"/"}]}},{"host":"ost-meta-api.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ost-meta-api-svc","servicePort":8000},"path":"/"}]}},{"host":"ost-meta-api.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ost-meta-api-svc","servicePort":8000},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-04T09:37:46Z
    generation: 1
    labels:
      name: ost-meta-api-ing
    name: ost-meta-api-ing
    namespace: ostmeta
    resourceVersion: "34170978"
    selfLink: /apis/extensions/v1beta1/namespaces/ostmeta/ingresses/ost-meta-api-ing
    uid: 2676e4b6-c7b9-11e8-8a20-5254001e2711
  spec:
    rules:
    - host: ost-meta-api.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ost-meta-api-svc
            servicePort: 8000
          path: /
    - host: ost-meta-api.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ost-meta-api-svc
            servicePort: 8000
          path: /
    - host: ost-meta-api.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ost-meta-api-svc
            servicePort: 8000
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"batch-server-ingress"},"name":"batch-server-ingress","namespace":"pcn-dev"},"spec":{"rules":[{"host":"devpcn-batch.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pcn-batch-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devpcn-batch.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-10T20:16:51Z
    generation: 1
    labels:
      name: batch-server-ingress
    name: batch-server-ingress
    namespace: pcn-dev
    resourceVersion: "20981375"
    selfLink: /apis/extensions/v1beta1/namespaces/pcn-dev/ingresses/batch-server-ingress
    uid: 743f227b-b536-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: devpcn-batch.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pcn-batch-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devpcn-batch.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"edge-server-ingress"},"name":"edge-server-ingress","namespace":"pcn-dev"},"spec":{"rules":[{"host":"devpcn-edge.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pcn-edge-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devpcn-edge.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-10T23:54:18Z
    generation: 1
    labels:
      name: edge-server-ingress
    name: edge-server-ingress
    namespace: pcn-dev
    resourceVersion: "21035013"
    selfLink: /apis/extensions/v1beta1/namespaces/pcn-dev/ingresses/edge-server-ingress
    uid: d4a574ee-b554-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: devpcn-edge.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pcn-edge-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devpcn-edge.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"kafka-server-ingress"},"name":"kafka-server-ingress","namespace":"pcn-dev"},"spec":{"rules":[{"host":"devpcn-kafka.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pcn-kafka-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devpcn-kafka.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-10T23:44:19Z
    generation: 1
    labels:
      name: kafka-server-ingress
    name: kafka-server-ingress
    namespace: pcn-dev
    resourceVersion: "21032530"
    selfLink: /apis/extensions/v1beta1/namespaces/pcn-dev/ingresses/kafka-server-ingress
    uid: 6fce6ab3-b553-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: devpcn-kafka.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pcn-kafka-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devpcn-kafka.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"pcn-ui-pol-ingress"},"name":"pcn-ui-pol-ingress","namespace":"pcn-dev"},"spec":{"rules":[{"host":"devpcn-ui-pol.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pcn-ui-pol-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devpcn-ui-pol.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-12T20:24:22Z
    generation: 2
    labels:
      name: pcn-ui-pol-ingress
    name: pcn-ui-pol-ingress
    namespace: pcn-dev
    resourceVersion: "24459733"
    selfLink: /apis/extensions/v1beta1/namespaces/pcn-dev/ingresses/pcn-ui-pol-ingress
    uid: d5fc029b-b6c9-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: devpcn-ui-pol.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pcn-ui-pol-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devpcn-ui-pol.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"catalog-system"},"name":"catalog-system","namespace":"personalization-dev"},"spec":{"rules":[{"host":"catalog-system-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"catalog-system","servicePort":8080},"path":"/"}]}},{"host":"catalog-system-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"catalog-system","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-08T21:19:54Z
    generation: 1
    labels:
      name: catalog-system
    name: catalog-system
    namespace: personalization-dev
    resourceVersion: "37085869"
    selfLink: /apis/extensions/v1beta1/namespaces/personalization-dev/ingresses/catalog-system
    uid: e650705f-cb3f-11e8-8a20-5254001e2711
  spec:
    rules:
    - host: catalog-system-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: catalog-system
            servicePort: 8080
          path: /
    - host: catalog-system-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: catalog-system
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"rules-engine"},"name":"rules-engine","namespace":"personalization-dev"},"spec":{"rules":[{"host":"rules-engine-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rules-engine","servicePort":8080},"path":"/"}]}},{"host":"rules-engine-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rules-engine","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-01T17:21:11Z
    generation: 2
    labels:
      name: rules-engine
    name: rules-engine
    namespace: personalization-dev
    resourceVersion: "36955562"
    selfLink: /apis/extensions/v1beta1/namespaces/personalization-dev/ingresses/rules-engine
    uid: 64958ae1-c59e-11e8-93f3-5254000c5c7e
  spec:
    rules:
    - host: rules-engine-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rules-engine
            servicePort: 8080
          path: /
    - host: rules-engine-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rules-engine
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"rules-management"},"name":"rules-management","namespace":"personalization-dev"},"spec":{"rules":[{"host":"rules-management-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rules-management","servicePort":8080},"path":"/"}]}},{"host":"rules-management-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rules-management","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-01T17:21:09Z
    generation: 2
    labels:
      name: rules-management
    name: rules-management
    namespace: personalization-dev
    resourceVersion: "36955536"
    selfLink: /apis/extensions/v1beta1/namespaces/personalization-dev/ingresses/rules-management
    uid: 635f2165-c59e-11e8-93f3-5254000c5c7e
  spec:
    rules:
    - host: rules-management-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rules-management
            servicePort: 8080
          path: /
    - host: rules-management-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rules-management
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"serve-ingest"},"name":"serve-ingest","namespace":"personalization-dev"},"spec":{"rules":[{"host":"serve-ingest-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"serve-ingest","servicePort":8080},"path":"/"}]}},{"host":"serve-ingest-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"serve-ingest","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2018-09-24T20:11:28Z
    generation: 1
    labels:
      name: serve-ingest
    name: serve-ingest
    namespace: personalization-dev
    resourceVersion: "27943416"
    selfLink: /apis/extensions/v1beta1/namespaces/personalization-dev/ingresses/serve-ingest
    uid: 052f587f-c036-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: serve-ingest-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: serve-ingest
            servicePort: 8080
          path: /
    - host: serve-ingest-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: serve-ingest
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"ui-ingress"},"name":"ui-ingress","namespace":"personalization-dev"},"spec":{"rules":[{"host":"sift-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ui-service","servicePort":8080},"path":"/"}]}},{"host":"sift-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ui-service","servicePort":8080},"path":"/"}]}},{"host":"sift-dev.target.com","http":{"paths":[{"backend":{"serviceName":"ui-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["sift-dev.target.com"],"secretName":"vanitysecret"}]}}
    creationTimestamp: 2018-10-01T19:09:26Z
    generation: 6
    labels:
      name: ui-ingress
    name: ui-ingress
    namespace: personalization-dev
    resourceVersion: "45143906"
    selfLink: /apis/extensions/v1beta1/namespaces/personalization-dev/ingresses/ui-ingress
    uid: 83ae123f-c5ad-11e8-93f3-5254000c5c7e
  spec:
    rules:
    - host: sift-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ui-service
            servicePort: 8080
          path: /
    - host: sift-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ui-service
            servicePort: 8080
          path: /
    - host: sift-dev.target.com
      http:
        paths:
        - backend:
            serviceName: ui-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - sift-dev.target.com
      secretName: vanitysecret
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"wisdom-loop"},"name":"wisdom-loop","namespace":"personalization-dev"},"spec":{"rules":[{"host":"wisdom-loop-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"wisdom-loop","servicePort":8080},"path":"/"}]}},{"host":"wisdom-loop-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"wisdom-loop","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-04T16:20:58Z
    generation: 3
    labels:
      name: wisdom-loop
    name: wisdom-loop
    namespace: personalization-dev
    resourceVersion: "37781194"
    selfLink: /apis/extensions/v1beta1/namespaces/personalization-dev/ingresses/wisdom-loop
    uid: 7a1b4e3e-c7f1-11e8-8a20-5254001e2711
  spec:
    rules:
    - host: wisdom-loop-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: wisdom-loop
            servicePort: 8080
          path: /
    - host: wisdom-loop-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: wisdom-loop
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"rules-engine"},"name":"rules-engine","namespace":"personalization-stage"},"spec":{"rules":[{"host":"rules-engine-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rules-engine","servicePort":8080},"path":"/"}]}},{"host":"rules-engine-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rules-engine","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-08T16:43:47Z
    generation: 1
    labels:
      name: rules-engine
    name: rules-engine
    namespace: personalization-stage
    resourceVersion: "36959117"
    selfLink: /apis/extensions/v1beta1/namespaces/personalization-stage/ingresses/rules-engine
    uid: 53ba2d48-cb19-11e8-bad5-525400b91df9
  spec:
    rules:
    - host: rules-engine-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rules-engine
            servicePort: 8080
          path: /
    - host: rules-engine-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rules-engine
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"rules-management"},"name":"rules-management","namespace":"personalization-stage"},"spec":{"rules":[{"host":"rules-management-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rules-management","servicePort":8080},"path":"/"}]}},{"host":"rules-management-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rules-management","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-08T16:43:46Z
    generation: 1
    labels:
      name: rules-management
    name: rules-management
    namespace: personalization-stage
    resourceVersion: "36959116"
    selfLink: /apis/extensions/v1beta1/namespaces/personalization-stage/ingresses/rules-management
    uid: 52ea4591-cb19-11e8-bad5-525400b91df9
  spec:
    rules:
    - host: rules-management-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rules-management
            servicePort: 8080
          path: /
    - host: rules-management-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rules-management
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"serve-ingest"},"name":"serve-ingest","namespace":"personalization-stage"},"spec":{"rules":[{"host":"serve-ingest-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"serve-ingest","servicePort":8080},"path":"/"}]}},{"host":"serve-ingest-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"serve-ingest","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2018-09-24T21:00:13Z
    generation: 1
    labels:
      name: serve-ingest
    name: serve-ingest
    namespace: personalization-stage
    resourceVersion: "27964900"
    selfLink: /apis/extensions/v1beta1/namespaces/personalization-stage/ingresses/serve-ingest
    uid: d4ac8c7c-c03c-11e8-bc70-5254004139fa
  spec:
    rules:
    - host: serve-ingest-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: serve-ingest
            servicePort: 8080
          path: /
    - host: serve-ingest-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: serve-ingest
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"ui-ingress"},"name":"ui-ingress","namespace":"personalization-stage"},"spec":{"rules":[{"host":"sift-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ui-service","servicePort":8080},"path":"/"}]}},{"host":"sift-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ui-service","servicePort":8080},"path":"/"}]}},{"host":"sift-stage.target.com","http":{"paths":[{"backend":{"serviceName":"ui-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["sift-stage.target.com"],"secretName":"vanitysecret"}]}}
    creationTimestamp: 2018-10-08T17:52:55Z
    generation: 2
    labels:
      name: ui-ingress
    name: ui-ingress
    namespace: personalization-stage
    resourceVersion: "45156989"
    selfLink: /apis/extensions/v1beta1/namespaces/personalization-stage/ingresses/ui-ingress
    uid: fc478ade-cb22-11e8-8a20-5254001e2711
  spec:
    rules:
    - host: sift-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ui-service
            servicePort: 8080
          path: /
    - host: sift-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ui-service
            servicePort: 8080
          path: /
    - host: sift-stage.target.com
      http:
        paths:
        - backend:
            serviceName: ui-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - sift-stage.target.com
      secretName: vanitysecret
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-19T20:45:43Z
    generation: 1
    labels:
      name: sba
    name: sba
    namespace: pilp-dev
    resourceVersion: "46066707"
    selfLink: /apis/extensions/v1beta1/namespaces/pilp-dev/ingresses/sba
    uid: f2822023-d3df-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: pilp-dev-sba.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: sba
            servicePort: 8999
          path: /
    - host: pilp-dev-sba.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: sba
            servicePort: 8999
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"spadb4"},"name":"spadb4","namespace":"pilp-dev"},"spec":{"rules":[{"host":"pilp-dev-spadb4.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/v1/lively"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/v1/ready"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/swagger-ui.html"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/swagger-resources"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/v2/api-docs"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/webjars"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/actuator"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/salesfloor_presentations"}]}},{"host":"pilp-dev-spadb4.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/v1/lively"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/v1/ready"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/swagger-ui.html"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/swagger-resources"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/v2/api-docs"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/webjars"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/actuator"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/salesfloor_presentations"}]}}],"tls":[{"hosts":["pilp-dev-spadb4.tte-test.k8s.target.com","pilp-dev-spadb4.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-24T20:53:12Z
    generation: 1
    labels:
      name: spadb4
    name: spadb4
    namespace: pilp-dev
    resourceVersion: "51003337"
    selfLink: /apis/extensions/v1beta1/namespaces/pilp-dev/ingresses/spadb4
    uid: d235f6cb-d7ce-11e8-999b-5254008d935f
  spec:
    rules:
    - host: pilp-dev-spadb4.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/v1/lively
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/v1/ready
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/swagger-ui.html
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/swagger-resources
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/v2/api-docs
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/webjars
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/actuator
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /salesfloor_presentations
    - host: pilp-dev-spadb4.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/v1/lively
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/v1/ready
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/swagger-ui.html
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/swagger-resources
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/v2/api-docs
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/webjars
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/actuator
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /salesfloor_presentations
    tls:
    - hosts:
      - pilp-dev-spadb4.tte-test.k8s.target.com
      - pilp-dev-spadb4.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-19T20:50:28Z
    generation: 1
    labels:
      name: sba
    name: sba
    namespace: pilp-stage
    resourceVersion: "46069133"
    selfLink: /apis/extensions/v1beta1/namespaces/pilp-stage/ingresses/sba
    uid: 9c1f72c8-d3e0-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: pilp-stage-sba.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: sba
            servicePort: 8999
          path: /
    - host: pilp-stage-sba.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: sba
            servicePort: 8999
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"spadb4"},"name":"spadb4","namespace":"pilp-stage"},"spec":{"rules":[{"host":"pilp-stage-spadb4.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/v1/lively"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/v1/ready"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/swagger-ui.html"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/swagger-resources"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/v2/api-docs"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/webjars"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/actuator"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/salesfloor_presentations"}]}},{"host":"pilp-stage-spadb4.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/v1/lively"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/v1/ready"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/swagger-ui.html"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/swagger-resources"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/v2/api-docs"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/webjars"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/actuator"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/salesfloor_presentations"}]}}],"tls":[{"hosts":["pilp-stage-spadb4.tte-test.k8s.target.com","pilp-stage-spadb4.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-19T19:10:30Z
    generation: 2
    labels:
      name: spadb4
    name: spadb4
    namespace: pilp-stage
    resourceVersion: "51016052"
    selfLink: /apis/extensions/v1beta1/namespaces/pilp-stage/ingresses/spadb4
    uid: a591a70a-d3d2-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: pilp-stage-spadb4.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/v1/lively
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/v1/ready
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/swagger-ui.html
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/swagger-resources
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/v2/api-docs
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/webjars
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/actuator
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /salesfloor_presentations
    - host: pilp-stage-spadb4.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/v1/lively
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/v1/ready
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/swagger-ui.html
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/swagger-resources
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/v2/api-docs
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/webjars
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/actuator
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /salesfloor_presentations
    tls:
    - hosts:
      - pilp-stage-spadb4.tte-test.k8s.target.com
      - pilp-stage-spadb4.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"ap-discussions-ingress"},"name":"ap-discussions-ingress","namespace":"planning-stage"},"spec":{"rules":[{"host":"ap-discussions-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ap-discussions","servicePort":80},"path":"/"}]}},{"host":"ap-discussions-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ap-discussions","servicePort":80},"path":"/"}]}},{"host":"ap-discussions-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ap-discussions","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-01-29T17:08:41Z
    generation: 1
    labels:
      name: ap-discussions-ingress
    name: ap-discussions-ingress
    namespace: planning-stage
    resourceVersion: "143125149"
    selfLink: /apis/extensions/v1beta1/namespaces/planning-stage/ingresses/ap-discussions-ingress
    uid: 86dbfd32-23e8-11e9-9f4c-52540007c5b2
  spec:
    rules:
    - host: ap-discussions-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ap-discussions
            servicePort: 80
          path: /
    - host: ap-discussions-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ap-discussions
            servicePort: 80
          path: /
    - host: ap-discussions-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ap-discussions
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"notifications-ingress"},"name":"notifications-ingress","namespace":"planning-stage"},"spec":{"rules":[{"host":"pogap-stage-notifications.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"notifications","servicePort":80},"path":"/"}]}},{"host":"pogap-stage-notifications.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"notifications","servicePort":80},"path":"/"}]}},{"host":"pogap-stage-notifications.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"notifications","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-31T19:34:04Z
    generation: 1
    labels:
      name: notifications-ingress
    name: notifications-ingress
    namespace: planning-stage
    resourceVersion: "56135630"
    selfLink: /apis/extensions/v1beta1/namespaces/planning-stage/ingresses/notifications-ingress
    uid: ecd5c557-dd43-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: pogap-stage-notifications.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: notifications
            servicePort: 80
          path: /
    - host: pogap-stage-notifications.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: notifications
            servicePort: 80
          path: /
    - host: pogap-stage-notifications.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: notifications
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"planning-core-ingress"},"name":"planning-core-ingress","namespace":"planning-stage"},"spec":{"rules":[{"host":"apex-stage.target.com","http":{"paths":[{"backend":{"serviceName":"planning-core-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["apex-stage.target.com"],"secretName":"vanitysecretapex"}]}}
    creationTimestamp: 2019-02-06T01:33:15Z
    generation: 1
    labels:
      name: planning-core-ingress
    name: planning-core-ingress
    namespace: planning-stage
    resourceVersion: "150620655"
    selfLink: /apis/extensions/v1beta1/namespaces/planning-stage/ingresses/planning-core-ingress
    uid: 2cc6be85-29af-11e9-ba28-52540054e5ef
  spec:
    rules:
    - host: apex-stage.target.com
      http:
        paths:
        - backend:
            serviceName: planning-core-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - apex-stage.target.com
      secretName: vanitysecretapex
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"size-tables-ingress"},"name":"size-tables-ingress","namespace":"planning-stage"},"spec":{"rules":[{"host":"pogap-stage-size-tables.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"size-tables","servicePort":80},"path":"/"}]}},{"host":"pogap-stage-size-tables.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"size-tables","servicePort":80},"path":"/"}]}},{"host":"pogap-stage-size-tables.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"size-tables","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-11-01T13:10:06Z
    generation: 1
    labels:
      name: size-tables-ingress
    name: size-tables-ingress
    namespace: planning-stage
    resourceVersion: "56771615"
    selfLink: /apis/extensions/v1beta1/namespaces/planning-stage/ingresses/size-tables-ingress
    uid: 73990019-ddd7-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: pogap-stage-size-tables.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: size-tables
            servicePort: 80
          path: /
    - host: pogap-stage-size-tables.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: size-tables
            servicePort: 80
          path: /
    - host: pogap-stage-size-tables.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: size-tables
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"view-service-ingress"},"name":"view-service-ingress","namespace":"planning-stage"},"spec":{"rules":[{"host":"pogap-stage-views.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"view-service","servicePort":80},"path":"/"}]}},{"host":"pogap-stage-views.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"view-service","servicePort":80},"path":"/"}]}},{"host":"pogap-stage-views.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"view-service","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-11-01T13:13:38Z
    generation: 1
    labels:
      name: view-service-ingress
    name: view-service-ingress
    namespace: planning-stage
    resourceVersion: "56773352"
    selfLink: /apis/extensions/v1beta1/namespaces/planning-stage/ingresses/view-service-ingress
    uid: f267a822-ddd7-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: pogap-stage-views.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: view-service
            servicePort: 80
          path: /
    - host: pogap-stage-views.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: view-service
            servicePort: 80
          path: /
    - host: pogap-stage-views.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: view-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"pmc-archive-ingress"},"name":"pmc-archive-ingress","namespace":"pmc-dev"},"spec":{"rules":[{"host":"pmc-dev-archiveservice.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pmc-archive-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["pmc-dev-archiveservice.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-24T08:04:31Z
    generation: 1
    labels:
      name: pmc-archive-ingress
    name: pmc-archive-ingress
    namespace: pmc-dev
    resourceVersion: "27633591"
    selfLink: /apis/extensions/v1beta1/namespaces/pmc-dev/ingresses/pmc-archive-ingress
    uid: 775acecb-bfd0-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: pmc-dev-archiveservice.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pmc-archive-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - pmc-dev-archiveservice.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"pmc-bono-ingress"},"name":"pmc-bono-ingress","namespace":"pmc-dev"},"spec":{"rules":[{"host":"pmc-dev-bonoservice.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pmc-bono-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["pmc-dev-bonoservice.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-25T12:47:46Z
    generation: 1
    labels:
      name: pmc-bono-ingress
    name: pmc-bono-ingress
    namespace: pmc-dev
    resourceVersion: "28335916"
    selfLink: /apis/extensions/v1beta1/namespaces/pmc-dev/ingresses/pmc-bono-ingress
    uid: 339db863-c0c1-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: pmc-dev-bonoservice.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pmc-bono-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - pmc-dev-bonoservice.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"pmc-certificate-ingress"},"name":"pmc-certificate-ingress","namespace":"pmc-dev"},"spec":{"rules":[{"host":"pmc-dev-certificateservice.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pmc-certificate-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["pmc-dev-certificateservice.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-25T11:21:48Z
    generation: 1
    labels:
      name: pmc-certificate-ingress
    name: pmc-certificate-ingress
    namespace: pmc-dev
    resourceVersion: "28301905"
    selfLink: /apis/extensions/v1beta1/namespaces/pmc-dev/ingresses/pmc-certificate-ingress
    uid: 311a38db-c0b5-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: pmc-dev-certificateservice.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pmc-certificate-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - pmc-dev-certificateservice.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"pmc-document-ingress"},"name":"pmc-document-ingress","namespace":"pmc-dev"},"spec":{"rules":[{"host":"pmc-dev-documentservice.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pmc-document-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["pmc-dev-documentservice.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-25T10:33:32Z
    generation: 1
    labels:
      name: pmc-document-ingress
    name: pmc-document-ingress
    namespace: pmc-dev
    resourceVersion: "28281958"
    selfLink: /apis/extensions/v1beta1/namespaces/pmc-dev/ingresses/pmc-document-ingress
    uid: 7386bf9b-c0ae-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: pmc-dev-documentservice.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pmc-document-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - pmc-dev-documentservice.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"pmc-stage-ingress"},"name":"pmc-stage-ingress","namespace":"pmc-dev"},"spec":{"rules":[{"host":"pmc-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pmc-ui-service","servicePort":8001},"path":"/"}]}}],"tls":[{"hosts":["pmc-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-25T12:49:22Z
    generation: 1
    labels:
      name: pmc-stage-ingress
    name: pmc-stage-ingress
    namespace: pmc-dev
    resourceVersion: "28336728"
    selfLink: /apis/extensions/v1beta1/namespaces/pmc-dev/ingresses/pmc-stage-ingress
    uid: 6d303785-c0c1-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: pmc-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pmc-ui-service
            servicePort: 8001
          path: /
    tls:
    - hosts:
      - pmc-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"pmc-workflow-ingress"},"name":"pmc-workflow-ingress","namespace":"pmc-dev"},"spec":{"rules":[{"host":"pmc-dev-workflowservice.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pmc-workflow-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["pmc-dev-workflowservice.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-24T19:34:38Z
    generation: 1
    labels:
      name: pmc-workflow-ingress
    name: pmc-workflow-ingress
    namespace: pmc-dev
    resourceVersion: "27927703"
    selfLink: /apis/extensions/v1beta1/namespaces/pmc-dev/ingresses/pmc-workflow-ingress
    uid: dfc82ab6-c030-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: pmc-dev-workflowservice.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pmc-workflow-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - pmc-dev-workflowservice.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"pmc-archive-ingress"},"name":"pmc-archive-ingress","namespace":"pmc-stage"},"spec":{"rules":[{"host":"pmc-stage-archiveservice.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pmc-archive-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["pmc-stage-archiveservice.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-05T14:01:46Z
    generation: 1
    labels:
      name: pmc-archive-ingress
    name: pmc-archive-ingress
    namespace: pmc-stage
    resourceVersion: "34969991"
    selfLink: /apis/extensions/v1beta1/namespaces/pmc-stage/ingresses/pmc-archive-ingress
    uid: 323c9074-c8a7-11e8-bad5-525400b91df9
  spec:
    rules:
    - host: pmc-stage-archiveservice.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pmc-archive-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - pmc-stage-archiveservice.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"pmc-bono-ingress"},"name":"pmc-bono-ingress","namespace":"pmc-stage"},"spec":{"rules":[{"host":"pmc-stage-bonoservice.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pmc-bono-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["pmc-stage-bonoservice.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-05T14:04:04Z
    generation: 1
    labels:
      name: pmc-bono-ingress
    name: pmc-bono-ingress
    namespace: pmc-stage
    resourceVersion: "34971184"
    selfLink: /apis/extensions/v1beta1/namespaces/pmc-stage/ingresses/pmc-bono-ingress
    uid: 84d6858d-c8a7-11e8-bad5-525400b91df9
  spec:
    rules:
    - host: pmc-stage-bonoservice.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pmc-bono-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - pmc-stage-bonoservice.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"pmc-certificate-ingress"},"name":"pmc-certificate-ingress","namespace":"pmc-stage"},"spec":{"rules":[{"host":"pmc-stage-certificateservice.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pmc-certificate-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["pmc-stage-certificateservice.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-05T14:02:03Z
    generation: 1
    labels:
      name: pmc-certificate-ingress
    name: pmc-certificate-ingress
    namespace: pmc-stage
    resourceVersion: "34969990"
    selfLink: /apis/extensions/v1beta1/namespaces/pmc-stage/ingresses/pmc-certificate-ingress
    uid: 3c5371a3-c8a7-11e8-bad5-525400b91df9
  spec:
    rules:
    - host: pmc-stage-certificateservice.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pmc-certificate-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - pmc-stage-certificateservice.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"pmc-document-ingress"},"name":"pmc-document-ingress","namespace":"pmc-stage"},"spec":{"rules":[{"host":"pmc-stage-documentservice.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pmc-document-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["pmc-stage-documentservice.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-05T14:02:18Z
    generation: 1
    labels:
      name: pmc-document-ingress
    name: pmc-document-ingress
    namespace: pmc-stage
    resourceVersion: "34969989"
    selfLink: /apis/extensions/v1beta1/namespaces/pmc-stage/ingresses/pmc-document-ingress
    uid: 454623d8-c8a7-11e8-bad5-525400b91df9
  spec:
    rules:
    - host: pmc-stage-documentservice.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pmc-document-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - pmc-stage-documentservice.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"pmc-ui-ingress"},"name":"pmc-ui-ingress","namespace":"pmc-stage"},"spec":{"rules":[{"host":"pmc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pmc-ui-service","servicePort":8001},"path":"/"}]}}],"tls":[{"hosts":["pmc-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-05T14:04:19Z
    generation: 1
    labels:
      name: pmc-ui-ingress
    name: pmc-ui-ingress
    namespace: pmc-stage
    resourceVersion: "34971185"
    selfLink: /apis/extensions/v1beta1/namespaces/pmc-stage/ingresses/pmc-ui-ingress
    uid: 8dd36060-c8a7-11e8-bad5-525400b91df9
  spec:
    rules:
    - host: pmc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pmc-ui-service
            servicePort: 8001
          path: /
    tls:
    - hosts:
      - pmc-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"pmc-workflow-ingress"},"name":"pmc-workflow-ingress","namespace":"pmc-stage"},"spec":{"rules":[{"host":"pmc-stage-workflowservice.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pmc-workflow-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["pmc-stage-workflowservice.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-05T14:02:51Z
    generation: 1
    labels:
      name: pmc-workflow-ingress
    name: pmc-workflow-ingress
    namespace: pmc-stage
    resourceVersion: "34970567"
    selfLink: /apis/extensions/v1beta1/namespaces/pmc-stage/ingresses/pmc-workflow-ingress
    uid: 5921d4ae-c8a7-11e8-bad5-525400b91df9
  spec:
    rules:
    - host: pmc-stage-workflowservice.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pmc-workflow-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - pmc-stage-workflowservice.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"ap-discussions-ingress"},"name":"ap-discussions-ingress","namespace":"pog-ap-dev"},"spec":{"rules":[{"host":"ap-discussions-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ap-discussions","servicePort":80},"path":"/"}]}},{"host":"ap-discussions-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ap-discussions","servicePort":80},"path":"/"}]}},{"host":"ap-discussions-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ap-discussions","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-15T16:56:52Z
    generation: 1
    labels:
      name: ap-discussions-ingress
    name: ap-discussions-ingress
    namespace: pog-ap-dev
    resourceVersion: "42291122"
    selfLink: /apis/extensions/v1beta1/namespaces/pog-ap-dev/ingresses/ap-discussions-ingress
    uid: 509ebd25-d09b-11e8-999f-52540096678d
  spec:
    rules:
    - host: ap-discussions-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ap-discussions
            servicePort: 80
          path: /
    - host: ap-discussions-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ap-discussions
            servicePort: 80
          path: /
    - host: ap-discussions-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ap-discussions
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"notifications-ingress"},"name":"notifications-ingress","namespace":"pog-ap-dev"},"spec":{"rules":[{"host":"pogap-dev-notifications.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"notifications","servicePort":80},"path":"/"}]}},{"host":"pogap-dev-notifications.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"notifications","servicePort":80},"path":"/"}]}},{"host":"pogap-dev-notifications.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"notifications","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-18T14:43:34Z
    generation: 2
    labels:
      name: notifications-ingress
    name: notifications-ingress
    namespace: pog-ap-dev
    resourceVersion: "45041407"
    selfLink: /apis/extensions/v1beta1/namespaces/pog-ap-dev/ingresses/notifications-ingress
    uid: 306f2500-d2e4-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: pogap-dev-notifications.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: notifications
            servicePort: 80
          path: /
    - host: pogap-dev-notifications.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: notifications
            servicePort: 80
          path: /
    - host: pogap-dev-notifications.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: notifications
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"pog-ap-apex-ingress"},"name":"pog-ap-apex-ingress","namespace":"pog-ap-dev"},"spec":{"rules":[{"host":"apex-dav.us-central-1ttc.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"pog-ap-apex-service","servicePort":8080},"path":"/"}]}},{"host":"apex-dav.us-central-1tte.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"pog-ap-apex-service","servicePort":8080},"path":"/"}]}},{"host":"apex-dav.us-central-1.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"pog-ap-apex-service","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2019-03-12T13:17:27Z
    generation: 1
    labels:
      name: pog-ap-apex-ingress
    name: pog-ap-apex-ingress
    namespace: pog-ap-dev
    resourceVersion: "185451355"
    selfLink: /apis/extensions/v1beta1/namespaces/pog-ap-dev/ingresses/pog-ap-apex-ingress
    uid: 2e9c8fba-44c9-11e9-b84e-525400cb189a
  spec:
    rules:
    - host: apex-dav.us-central-1ttc.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: pog-ap-apex-service
            servicePort: 8080
          path: /
    - host: apex-dav.us-central-1tte.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: pog-ap-apex-service
            servicePort: 8080
          path: /
    - host: apex-dav.us-central-1.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: pog-ap-apex-service
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"pog-ap-dav-ingress"},"name":"pog-ap-dav-ingress","namespace":"pog-ap-dev"},"spec":{"rules":[{"host":"pogap-dav.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pog-ap-service","servicePort":8080},"path":"/"}]}},{"host":"pogap-dav.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pog-ap-service","servicePort":8080},"path":"/"}]}},{"host":"pogap-dav.target.com","http":{"paths":[{"backend":{"serviceName":"pog-ap-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["pogap-dav.target.com"],"secretName":"vanitysecret"}]}}
    creationTimestamp: 2019-03-12T14:54:43Z
    generation: 1
    labels:
      name: pog-ap-dav-ingress
    name: pog-ap-dav-ingress
    namespace: pog-ap-dev
    resourceVersion: "185517179"
    selfLink: /apis/extensions/v1beta1/namespaces/pog-ap-dev/ingresses/pog-ap-dav-ingress
    uid: c591363d-44d6-11e9-b613-52540007651c
  spec:
    rules:
    - host: pogap-dav.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pog-ap-service
            servicePort: 8080
          path: /
    - host: pogap-dav.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pog-ap-service
            servicePort: 8080
          path: /
    - host: pogap-dav.target.com
      http:
        paths:
        - backend:
            serviceName: pog-ap-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - pogap-dav.target.com
      secretName: vanitysecret
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"pog-ap-ingress"},"name":"pog-ap-ingress","namespace":"pog-ap-dev"},"spec":{"rules":[{"host":"pogap-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pog-ap-service","servicePort":8080},"path":"/"}]}},{"host":"pogap-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pog-ap-service","servicePort":8080},"path":"/"}]}},{"host":"pogap-dev.target.com","http":{"paths":[{"backend":{"serviceName":"pog-ap-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["pogap-dev.target.com"],"secretName":"vanitysecret"}]}}
    creationTimestamp: 2018-10-12T15:05:34Z
    generation: 4
    labels:
      name: pog-ap-ingress
    name: pog-ap-ingress
    namespace: pog-ap-dev
    resourceVersion: "185484018"
    selfLink: /apis/extensions/v1beta1/namespaces/pog-ap-dev/ingresses/pog-ap-ingress
    uid: 44e3debc-ce30-11e8-999f-52540096678d
  spec:
    rules:
    - host: pogap-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pog-ap-service
            servicePort: 8080
          path: /
    - host: pogap-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pog-ap-service
            servicePort: 8080
          path: /
    - host: pogap-dev.target.com
      http:
        paths:
        - backend:
            serviceName: pog-ap-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - pogap-dev.target.com
      secretName: vanitysecret
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"size-tables-ingress"},"name":"size-tables-ingress","namespace":"pog-ap-dev"},"spec":{"rules":[{"host":"pogap-dev-size-tables.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"size-tables","servicePort":80},"path":"/"}]}},{"host":"pogap-dev-size-tables.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"size-tables","servicePort":80},"path":"/"}]}},{"host":"pogap-dev-size-tables.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"size-tables","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-15T16:23:55Z
    generation: 1
    labels:
      name: size-tables-ingress
    name: size-tables-ingress
    namespace: pog-ap-dev
    resourceVersion: "42271980"
    selfLink: /apis/extensions/v1beta1/namespaces/pog-ap-dev/ingresses/size-tables-ingress
    uid: b5ec39aa-d096-11e8-ae94-52540075a812
  spec:
    rules:
    - host: pogap-dev-size-tables.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: size-tables
            servicePort: 80
          path: /
    - host: pogap-dev-size-tables.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: size-tables
            servicePort: 80
          path: /
    - host: pogap-dev-size-tables.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: size-tables
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"view-service-ingress"},"name":"view-service-ingress","namespace":"pog-ap-dev"},"spec":{"rules":[{"host":"pogap-dev-views.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"view-service","servicePort":80},"path":"/"}]}},{"host":"pogap-dev-views.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"view-service","servicePort":80},"path":"/"}]}},{"host":"pogap-dev-views.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"view-service","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-18T14:06:06Z
    generation: 1
    labels:
      name: view-service-ingress
    name: view-service-ingress
    namespace: pog-ap-dev
    resourceVersion: "44936880"
    selfLink: /apis/extensions/v1beta1/namespaces/pog-ap-dev/ingresses/view-service-ingress
    uid: f4ebaa63-d2de-11e8-999b-5254008d935f
  spec:
    rules:
    - host: pogap-dev-views.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: view-service
            servicePort: 80
          path: /
    - host: pogap-dev-views.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: view-service
            servicePort: 80
          path: /
    - host: pogap-dev-views.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: view-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"assortment-plans-ingress"},"name":"assortment-plans-ingress","namespace":"pog-ap-test"},"spec":{"rules":[{"host":"apexplatform-pre-dev-plans.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"assortment-plans","servicePort":80},"path":"/"}]}},{"host":"apexplatform-pre-dev-plans.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"assortment-plans","servicePort":80},"path":"/"}]}},{"host":"apexplatform-pre-dev-plans.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"assortment-plans","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-09-27T19:01:10Z
    generation: 7
    labels:
      name: assortment-plans-ingress
    name: assortment-plans-ingress
    namespace: pog-ap-test
    resourceVersion: "33074860"
    selfLink: /apis/extensions/v1beta1/namespaces/pog-ap-test/ingresses/assortment-plans-ingress
    uid: b23ac55b-c287-11e8-bb02-525400b2fa35
  spec:
    rules:
    - host: apexplatform-pre-dev-plans.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: assortment-plans
            servicePort: 80
          path: /
    - host: apexplatform-pre-dev-plans.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: assortment-plans
            servicePort: 80
          path: /
    - host: apexplatform-pre-dev-plans.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: assortment-plans
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"events-ingress"},"name":"events-ingress","namespace":"pog-ap-test"},"spec":{"rules":[{"host":"apexplatform-pre-dev-events.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"events","servicePort":80},"path":"/"}]}},{"host":"apexplatform-pre-dev-events.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"events","servicePort":80},"path":"/"}]}},{"host":"apexplatform-pre-dev-events.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"events","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-02T19:11:54Z
    generation: 3
    labels:
      name: events-ingress
    name: events-ingress
    namespace: pog-ap-test
    resourceVersion: "33639670"
    selfLink: /apis/extensions/v1beta1/namespaces/pog-ap-test/ingresses/events-ingress
    uid: 0683b88c-c677-11e8-93f3-5254000c5c7e
  spec:
    rules:
    - host: apexplatform-pre-dev-events.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: events
            servicePort: 80
          path: /
    - host: apexplatform-pre-dev-events.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: events
            servicePort: 80
          path: /
    - host: apexplatform-pre-dev-events.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: events
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"potential-items-ingress"},"name":"potential-items-ingress","namespace":"pog-ap-test"},"spec":{"rules":[{"host":"apexplatform-pre-dev-potential-items.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"potential-items","servicePort":80},"path":"/"}]}},{"host":"apexplatform-pre-dev-potential-items.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"potential-items","servicePort":80},"path":"/"}]}},{"host":"apexplatform-pre-dev-potential-items.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"potential-items","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-09-27T18:10:31Z
    generation: 3
    labels:
      name: potential-items-ingress
    name: potential-items-ingress
    namespace: pog-ap-test
    resourceVersion: "33094226"
    selfLink: /apis/extensions/v1beta1/namespaces/pog-ap-test/ingresses/potential-items-ingress
    uid: 9ec9d1ae-c280-11e8-bb02-525400b2fa35
  spec:
    rules:
    - host: apexplatform-pre-dev-potential-items.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: potential-items
            servicePort: 80
          path: /
    - host: apexplatform-pre-dev-potential-items.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: potential-items
            servicePort: 80
          path: /
    - host: apexplatform-pre-dev-potential-items.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: potential-items
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"clair-ingress"},"name":"clair-ingress","namespace":"port-authority"},"spec":{"rules":[{"host":"port-authority-clair.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"clair-service","servicePort":6060},"path":"/"}]}}]}}
    creationTimestamp: 2018-12-04T20:43:01Z
    generation: 1
    labels:
      name: clair-ingress
    name: clair-ingress
    namespace: port-authority
    resourceVersion: "88254569"
    selfLink: /apis/extensions/v1beta1/namespaces/port-authority/ingresses/clair-ingress
    uid: 30cfc585-f805-11e8-999b-5254008d935f
  spec:
    rules:
    - host: port-authority-clair.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: clair-service
            servicePort: 6060
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"port-authority-ingress"},"name":"port-authority-ingress","namespace":"port-authority"},"spec":{"rules":[{"host":"port-authority.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"port-authority-service","servicePort":6100},"path":"/"}]}},{"host":"port-authority.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"port-authority-service","servicePort":6100},"path":"/"}]}}]}}
    creationTimestamp: 2018-11-30T21:24:30Z
    generation: 1
    labels:
      name: port-authority-ingress
    name: port-authority-ingress
    namespace: port-authority
    resourceVersion: "84496051"
    selfLink: /apis/extensions/v1beta1/namespaces/port-authority/ingresses/port-authority-ingress
    uid: 53146743-f4e6-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: port-authority.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: port-authority-service
            servicePort: 6100
          path: /
    - host: port-authority.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: port-authority-service
            servicePort: 6100
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/auth-realm: Authentication Required
      ingress.kubernetes.io/auth-secret: basic-auth
      ingress.kubernetes.io/auth-type: basic
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/auth-realm":"Authentication Required","ingress.kubernetes.io/auth-secret":"basic-auth","ingress.kubernetes.io/auth-type":"basic"},"name":"port-authority-ingress-auth","namespace":"port-authority"},"spec":{"rules":[{"host":"port-authority.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"port-authority-service","servicePort":6100},"path":"/v1/policies"}]}},{"host":"port-authority.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"port-authority-service","servicePort":6100},"path":"/v1/policies"}]}}]}}
    creationTimestamp: 2018-11-30T21:24:27Z
    generation: 1
    name: port-authority-ingress-auth
    namespace: port-authority
    resourceVersion: "84496050"
    selfLink: /apis/extensions/v1beta1/namespaces/port-authority/ingresses/port-authority-ingress-auth
    uid: 5108e820-f4e6-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: port-authority.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: port-authority-service
            servicePort: 6100
          path: /v1/policies
    - host: port-authority.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: port-authority-service
            servicePort: 6100
          path: /v1/policies
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"sample-app-sox-ingress"},"name":"sample-app-sox-ingress","namespace":"port-authority"},"spec":{"rules":[{"host":"sample-app-sox-port-authority.d1cp1-test.k8s.ttc.tgt-pe-test.ost.cloud.target.internal","http":{"paths":[{"backend":{"serviceName":"sample-app-sox-service","servicePort":80},"path":"/"}]}},{"host":"sample-app-sox-port-authority.d1ep1-test.k8s.ttce.tgt-pe-test.ost.cloud.target.internal","http":{"paths":[{"backend":{"serviceName":"sample-app-sox-service","servicePort":80},"path":"/"}]}},{"host":"sample-app-sox-port-authority.test.k8s.global.tgt-pe-test.ost.cloud.target.internal","http":{"paths":[{"backend":{"serviceName":"sample-app-sox-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["sample-app-sox-port-authority.d1cp1-test.k8s.ttc.tgt-pe-test.ost.cloud.target.internal","sample-app-sox-port-authority.d1ep1-test.k8s.ttce.tgt-pe-test.ost.cloud.target.internal","sample-app-sox-port-authority.test.k8s.global.tgt-pe-test.ost.cloud.target.internal"]}]}}
    creationTimestamp: 2018-10-16T10:51:33Z
    generation: 1
    labels:
      name: sample-app-sox-ingress
    name: sample-app-sox-ingress
    namespace: port-authority
    resourceVersion: "42986369"
    selfLink: /apis/extensions/v1beta1/namespaces/port-authority/ingresses/sample-app-sox-ingress
    uid: 7231a097-d131-11e8-ae94-52540075a812
  spec:
    rules:
    - host: sample-app-sox-port-authority.d1cp1-test.k8s.ttc.tgt-pe-test.ost.cloud.target.internal
      http:
        paths:
        - backend:
            serviceName: sample-app-sox-service
            servicePort: 80
          path: /
    - host: sample-app-sox-port-authority.d1ep1-test.k8s.ttce.tgt-pe-test.ost.cloud.target.internal
      http:
        paths:
        - backend:
            serviceName: sample-app-sox-service
            servicePort: 80
          path: /
    - host: sample-app-sox-port-authority.test.k8s.global.tgt-pe-test.ost.cloud.target.internal
      http:
        paths:
        - backend:
            serviceName: sample-app-sox-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - sample-app-sox-port-authority.d1cp1-test.k8s.ttc.tgt-pe-test.ost.cloud.target.internal
      - sample-app-sox-port-authority.d1ep1-test.k8s.ttce.tgt-pe-test.ost.cloud.target.internal
      - sample-app-sox-port-authority.test.k8s.global.tgt-pe-test.ost.cloud.target.internal
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"cm-cpm-esfs-consumer"},"name":"cm-cpm-esfs-consumer-ingress","namespace":"price-clearance-v1"},"spec":{"rules":[{"host":"price-clearance.ttce-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cm-cpm-esfs-consumer-service","servicePort":80},"path":"/clearance/esfs/"}]}},{"host":"price-clearance.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cm-cpm-esfs-consumer-service","servicePort":80},"path":"/clearance/esfs/"}]}}],"tls":[{"hosts":["price-clearance.ttce-test.k8s.target.com","price-clearance.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-03-14T18:03:27Z
    generation: 1
    labels:
      app: cm-cpm-esfs-consumer
    name: cm-cpm-esfs-consumer-ingress
    namespace: price-clearance-v1
    resourceVersion: "187498738"
    selfLink: /apis/extensions/v1beta1/namespaces/price-clearance-v1/ingresses/cm-cpm-esfs-consumer-ingress
    uid: 77db90ef-4683-11e9-b613-52540007651c
  spec:
    rules:
    - host: price-clearance.ttce-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cm-cpm-esfs-consumer-service
            servicePort: 80
          path: /clearance/esfs/
    - host: price-clearance.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cm-cpm-esfs-consumer-service
            servicePort: 80
          path: /clearance/esfs/
    tls:
    - hosts:
      - price-clearance.ttce-test.k8s.target.com
      - price-clearance.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"cm-item-loc-demand-forecast-api-v1"},"name":"cm-item-loc-demand-forecast-api-v1-ingress","namespace":"price-ivy-clearance"},"spec":{"rules":[{"host":"ivy-clearance.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cm-item-loc-demand-forecast-api-v1-service","servicePort":80},"path":"/item_loc_demand_forecast/v1/"}]}}],"tls":[{"hosts":["ivy-clearance.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-21T19:39:45Z
    generation: 1
    labels:
      app: cm-item-loc-demand-forecast-api-v1
    name: cm-item-loc-demand-forecast-api-v1-ingress
    namespace: price-ivy-clearance
    resourceVersion: "165540350"
    selfLink: /apis/extensions/v1beta1/namespaces/price-ivy-clearance/ingresses/cm-item-loc-demand-forecast-api-v1-ingress
    uid: 71297657-3610-11e9-b42d-5254003b1534
  spec:
    rules:
    - host: ivy-clearance.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cm-item-loc-demand-forecast-api-v1-service
            servicePort: 80
          path: /item_loc_demand_forecast/v1/
    tls:
    - hosts:
      - ivy-clearance.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"cm-ivy-actualized-sales-wrapper-api-v1"},"name":"cm-ivy-actualized-sales-wrapper-api-v1-ingress","namespace":"price-ivy-clearance"},"spec":{"rules":[{"host":"ivy-clearance.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cm-ivy-actualized-sales-wrapper-api-v1-service","servicePort":80},"path":"/cm_actualized_sales/v1/"}]}}],"tls":[{"hosts":["ivy-clearance.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-27T10:41:48Z
    generation: 1
    labels:
      app: cm-ivy-actualized-sales-wrapper-api-v1
    name: cm-ivy-actualized-sales-wrapper-api-v1-ingress
    namespace: price-ivy-clearance
    resourceVersion: "172566160"
    selfLink: /apis/extensions/v1beta1/namespaces/price-ivy-clearance/ingresses/cm-ivy-actualized-sales-wrapper-api-v1-ingress
    uid: 490f4c27-3a7c-11e9-b42d-5254003b1534
  spec:
    rules:
    - host: ivy-clearance.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cm-ivy-actualized-sales-wrapper-api-v1-service
            servicePort: 80
          path: /cm_actualized_sales/v1/
    tls:
    - hosts:
      - ivy-clearance.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"cm-ivy-forecast-orchestrator"},"name":"cm-ivy-forecast-orchestrator-ingress","namespace":"price-ivy-clearance"},"spec":{"rules":[{"host":"ivy-clearance.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cm-ivy-forecast-orchestrator-service","servicePort":80},"path":"/forecast_orchestrator/v1/refresh_forecasts"}]}}],"tls":[{"hosts":["ivy-clearance.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-21T19:10:59Z
    generation: 1
    labels:
      app: cm-ivy-forecast-orchestrator
    name: cm-ivy-forecast-orchestrator-ingress
    namespace: price-ivy-clearance
    resourceVersion: "165521560"
    selfLink: /apis/extensions/v1beta1/namespaces/price-ivy-clearance/ingresses/cm-ivy-forecast-orchestrator-ingress
    uid: 6c4db45b-360c-11e9-8c81-525400abdf59
  spec:
    rules:
    - host: ivy-clearance.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cm-ivy-forecast-orchestrator-service
            servicePort: 80
          path: /forecast_orchestrator/v1/refresh_forecasts
    tls:
    - hosts:
      - ivy-clearance.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"cm-ivy-item-loc-pairing-api-v1"},"name":"cm-ivy-item-loc-pairing-api-v1-ingress","namespace":"price-ivy-clearance"},"spec":{"rules":[{"host":"ivy-clearance.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cm-ivy-item-loc-pairing-api-v1-service","servicePort":80},"path":"/markdown_item_loc/v1/pair"}]}},{"host":"ivy-clearance.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cm-ivy-item-loc-pairing-api-v1-service","servicePort":80},"path":"/markdown_item_loc/v1/pairing_errors_summary"}]}},{"host":"ivy-clearance.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cm-ivy-item-loc-pairing-api-v1-service","servicePort":80},"path":"/markdown_item_loc/v1/summary"}]}},{"host":"ivy-clearance.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cm-ivy-item-loc-pairing-api-v1-service","servicePort":80},"path":"/markdown_item_loc/v1/excluded_summary"}]}},{"host":"ivy-clearance.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cm-ivy-item-loc-pairing-api-v1-service","servicePort":80},"path":"/markdown_item_loc/v1/paired_summary"}]}}],"tls":[{"hosts":["ivy-clearance.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-22T10:09:31Z
    generation: 1
    labels:
      app: cm-ivy-item-loc-pairing-api-v1
    name: cm-ivy-item-loc-pairing-api-v1-ingress
    namespace: price-ivy-clearance
    resourceVersion: "166105124"
    selfLink: /apis/extensions/v1beta1/namespaces/price-ivy-clearance/ingresses/cm-ivy-item-loc-pairing-api-v1-ingress
    uid: f248572c-3689-11e9-b42d-5254003b1534
  spec:
    rules:
    - host: ivy-clearance.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cm-ivy-item-loc-pairing-api-v1-service
            servicePort: 80
          path: /markdown_item_loc/v1/pair
    - host: ivy-clearance.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cm-ivy-item-loc-pairing-api-v1-service
            servicePort: 80
          path: /markdown_item_loc/v1/pairing_errors_summary
    - host: ivy-clearance.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cm-ivy-item-loc-pairing-api-v1-service
            servicePort: 80
          path: /markdown_item_loc/v1/summary
    - host: ivy-clearance.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cm-ivy-item-loc-pairing-api-v1-service
            servicePort: 80
          path: /markdown_item_loc/v1/excluded_summary
    - host: ivy-clearance.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cm-ivy-item-loc-pairing-api-v1-service
            servicePort: 80
          path: /markdown_item_loc/v1/paired_summary
    tls:
    - hosts:
      - ivy-clearance.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"cm-ivy-item-loc-relation-wrapper-api-v1"},"name":"cm-ivy-item-loc-relation-wrapper-api-v1-ingress","namespace":"price-ivy-clearance"},"spec":{"rules":[{"host":"ivy-clearance.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cm-ivy-item-loc-relation-wrapper-api-v1-service","servicePort":80},"path":"/markdown_itemloc_relation/v1"}]}},{"host":"ivy-clearance.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cm-ivy-item-loc-relation-wrapper-api-v1-service","servicePort":80},"path":"/markdown_itemloc_relation/v1/location_status"}]}}],"tls":[{"hosts":["ivy-clearance.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-26T03:11:27Z
    generation: 1
    labels:
      app: cm-ivy-item-loc-relation-wrapper-api-v1
    name: cm-ivy-item-loc-relation-wrapper-api-v1-ingress
    namespace: price-ivy-clearance
    resourceVersion: "170530124"
    selfLink: /apis/extensions/v1beta1/namespaces/price-ivy-clearance/ingresses/cm-ivy-item-loc-relation-wrapper-api-v1-ingress
    uid: 3480224c-3974-11e9-8c81-525400abdf59
  spec:
    rules:
    - host: ivy-clearance.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cm-ivy-item-loc-relation-wrapper-api-v1-service
            servicePort: 80
          path: /markdown_itemloc_relation/v1
    - host: ivy-clearance.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cm-ivy-item-loc-relation-wrapper-api-v1-service
            servicePort: 80
          path: /markdown_itemloc_relation/v1/location_status
    tls:
    - hosts:
      - ivy-clearance.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"ivy-program-search"},"name":"ivy-program-search-ingress","namespace":"price-ivy-clearance"},"spec":{"rules":[{"host":"ivy-clearance.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ivy-program-search-service","servicePort":80},"path":"/markdown_programs/v1/program"}]}},{"host":"ivy-clearance.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ivy-program-search-service","servicePort":80},"path":"/markdown_programs/v1/search/export"}]}},{"host":"ivy-clearance.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ivy-program-search-service","servicePort":80},"path":"/markdown_programs/v1/statusfilter"}]}}],"tls":[{"hosts":["ivy-clearance.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-17T05:50:18Z
    generation: 1
    labels:
      app: ivy-program-search
    name: ivy-program-search-ingress
    namespace: price-ivy-clearance
    resourceVersion: "161254345"
    selfLink: /apis/extensions/v1beta1/namespaces/price-ivy-clearance/ingresses/ivy-program-search-ingress
    uid: e813709c-3277-11e9-b42d-5254003b1534
  spec:
    rules:
    - host: ivy-clearance.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ivy-program-search-service
            servicePort: 80
          path: /markdown_programs/v1/program
    - host: ivy-clearance.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ivy-program-search-service
            servicePort: 80
          path: /markdown_programs/v1/search/export
    - host: ivy-clearance.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ivy-program-search-service
            servicePort: 80
          path: /markdown_programs/v1/statusfilter
    tls:
    - hosts:
      - ivy-clearance.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"flex-premium-services-ingress"},"name":"flex-premium-services-ingress","namespace":"price-mgmt"},"spec":{"rules":[{"host":"flex-premium-services-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"flex-premium-services","servicePort":80},"path":"/"}]}},{"host":"flex-premium-services-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"flex-premium-services","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["flex-premium-services-dev.test.k8s.target.com","flex-premium-services-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-03-18T11:25:35Z
    generation: 1
    labels:
      name: flex-premium-services-ingress
    name: flex-premium-services-ingress
    namespace: price-mgmt
    resourceVersion: "190895217"
    selfLink: /apis/extensions/v1beta1/namespaces/price-mgmt/ingresses/flex-premium-services-ingress
    uid: 8c8e2d2c-4970-11e9-b3bf-525400884743
  spec:
    rules:
    - host: flex-premium-services-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: flex-premium-services
            servicePort: 80
          path: /
    - host: flex-premium-services-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: flex-premium-services
            servicePort: 80
          path: /
    tls:
    - hosts:
      - flex-premium-services-dev.test.k8s.target.com
      - flex-premium-services-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"partner-services-api-ingress"},"name":"partner-services-api-ingress","namespace":"price-mgmt"},"spec":{"rules":[{"host":"price-partner-services-api.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"partner-services-api-service","servicePort":80},"path":"/"}]}},{"host":"price-partner-services-api.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"partner-services-api-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["price-partner-services-api.tte-test.k8s.target.com","price-partner-services-api.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-11T08:26:28Z
    generation: 1
    labels:
      name: partner-services-api-ingress
    name: partner-services-api-ingress
    namespace: price-mgmt
    resourceVersion: "155656072"
    selfLink: /apis/extensions/v1beta1/namespaces/price-mgmt/ingresses/partner-services-api-ingress
    uid: ba51bda2-2dd6-11e9-b42d-5254003b1534
  spec:
    rules:
    - host: price-partner-services-api.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: partner-services-api-service
            servicePort: 80
          path: /
    - host: price-partner-services-api.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: partner-services-api-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - price-partner-services-api.tte-test.k8s.target.com
      - price-partner-services-api.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/auth-realm: IvyPrice Authentication Required
      ingress.kubernetes.io/auth-secret: ivyprice-auth
      ingress.kubernetes.io/auth-type: basic
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/auth-realm":"IvyPrice Authentication Required","ingress.kubernetes.io/auth-secret":"ivyprice-auth","ingress.kubernetes.io/auth-type":"basic"},"labels":{"name":"price-metadata-api-ingress"},"name":"price-metadata-api-ingress","namespace":"price-mgmt"},"spec":{"rules":[{"host":"price-metadata-api.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"price-metadata-api-svc","servicePort":80},"path":"/"}]}},{"host":"price-metadata-api.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"price-metadata-api-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["price-metadata-api.tte-test.k8s.target.com","price-metadata-api.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-03-18T10:20:36Z
    generation: 1
    labels:
      name: price-metadata-api-ingress
    name: price-metadata-api-ingress
    namespace: price-mgmt
    resourceVersion: "190856527"
    selfLink: /apis/extensions/v1beta1/namespaces/price-mgmt/ingresses/price-metadata-api-ingress
    uid: 786b2ca8-4967-11e9-b096-525400ca6771
  spec:
    rules:
    - host: price-metadata-api.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: price-metadata-api-svc
            servicePort: 80
          path: /
    - host: price-metadata-api.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: price-metadata-api-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - price-metadata-api.tte-test.k8s.target.com
      - price-metadata-api.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"price-rounding-api-ingress"},"name":"price-rounding-api-ingress","namespace":"price-mgmt"},"spec":{"rules":[{"host":"price-rounding-api.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"price-rounding-api-service","servicePort":80},"path":"/"}]}},{"host":"price-rounding-api.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"price-rounding-api-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["price-rounding-api.tte-test.k8s.target.com","price-rounding-api.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-18T12:39:38Z
    generation: 1
    labels:
      name: price-rounding-api-ingress
    name: price-rounding-api-ingress
    namespace: price-mgmt
    resourceVersion: "162450798"
    selfLink: /apis/extensions/v1beta1/namespaces/price-mgmt/ingresses/price-rounding-api-ingress
    uid: 411f3d6a-337a-11e9-b42d-5254003b1534
  spec:
    rules:
    - host: price-rounding-api.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: price-rounding-api-service
            servicePort: 80
          path: /
    - host: price-rounding-api.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: price-rounding-api-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - price-rounding-api.tte-test.k8s.target.com
      - price-rounding-api.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/auth-realm: IvyPrice Authentication Required
      ingress.kubernetes.io/auth-secret: ivyprice-auth
      ingress.kubernetes.io/auth-type: basic
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/auth-realm":"IvyPrice Authentication Required","ingress.kubernetes.io/auth-secret":"ivyprice-auth","ingress.kubernetes.io/auth-type":"basic"},"labels":{"name":"price-strategy-ingress"},"name":"price-strategy-ingress","namespace":"price-mgmt"},"spec":{"rules":[{"host":"price-strategy-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"price-strategy-service","servicePort":80},"path":"/"}]}},{"host":"price-strategy-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"price-strategy-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["price-strategy-dev.tte-test.k8s.target.com","price-strategy-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-19T03:45:03Z
    generation: 1
    labels:
      name: price-strategy-ingress
    name: price-strategy-ingress
    namespace: price-mgmt
    resourceVersion: "163053199"
    selfLink: /apis/extensions/v1beta1/namespaces/price-mgmt/ingresses/price-strategy-ingress
    uid: bd858bfe-33f8-11e9-b42d-5254003b1534
  spec:
    rules:
    - host: price-strategy-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: price-strategy-service
            servicePort: 80
          path: /
    - host: price-strategy-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: price-strategy-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - price-strategy-dev.tte-test.k8s.target.com
      - price-strategy-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/auth-realm: IvyPrice Authentication Required
      ingress.kubernetes.io/auth-secret: ivyprice-auth
      ingress.kubernetes.io/auth-type: basic
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/auth-realm":"IvyPrice Authentication Required","ingress.kubernetes.io/auth-secret":"ivyprice-auth","ingress.kubernetes.io/auth-type":"basic"},"labels":{"name":"rules-api-ingress"},"name":"rules-api-ingress","namespace":"price-mgmt"},"spec":{"rules":[{"host":"rules-api-dev.us-central-1.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"rules-api-service","servicePort":80},"path":"/"}]}},{"host":"rules-api-dev.us-central-1tte.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"rules-api-service","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-03-13T08:49:46Z
    generation: 1
    labels:
      name: rules-api-ingress
    name: rules-api-ingress
    namespace: price-mgmt
    resourceVersion: "186219988"
    selfLink: /apis/extensions/v1beta1/namespaces/price-mgmt/ingresses/rules-api-ingress
    uid: f400b8e0-456c-11e9-b84e-525400cb189a
  spec:
    rules:
    - host: rules-api-dev.us-central-1.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: rules-api-service
            servicePort: 80
          path: /
    - host: rules-api-dev.us-central-1tte.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: rules-api-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"records-app","name":"records-ingress"},"name":"records-ingress","namespace":"records-dev"},"spec":{"rules":[{"host":"records-t.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"records-service","servicePort":7777},"path":"/"}]}},{"host":"records-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"records-service","servicePort":7777},"path":"/"}]}},{"host":"recordsv1-t.target.com","http":{"paths":[{"backend":{"serviceName":"records-service","servicePort":7777},"path":"/"}]}}],"tls":[{"hosts":["records-t.tte-test.k8s.target.com","records-t.test.k8s.target.com","recordsv1-t.target.com"],"secretName":"vanitysecret-recordsv1-t"}]}}
    creationTimestamp: 2018-10-31T20:30:59Z
    generation: 18
    labels:
      app: records-app
      name: records-ingress
    name: records-ingress
    namespace: records-dev
    resourceVersion: "178506570"
    selfLink: /apis/extensions/v1beta1/namespaces/records-dev/ingresses/records-ingress
    uid: e0d3c9d0-dd4b-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: records-t.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: records-service
            servicePort: 7777
          path: /
    - host: records-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: records-service
            servicePort: 7777
          path: /
    - host: recordsv1-t.target.com
      http:
        paths:
        - backend:
            serviceName: records-service
            servicePort: 7777
          path: /
    tls:
    - hosts:
      - records-t.tte-test.k8s.target.com
      - records-t.test.k8s.target.com
      - recordsv1-t.target.com
      secretName: vanitysecret-recordsv1-t
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"rno-api-authorization-app","name":"rno-api-authorization-ingress"},"name":"rno-api-authorization-ingress","namespace":"records-dev"},"spec":{"rules":[{"host":"rno-api-authorization-t.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-api-authorization-service","servicePort":5050},"path":"/"}]}},{"host":"rno-api-authorization-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-api-authorization-service","servicePort":5050},"path":"/"}]}}],"tls":[{"hosts":["rno-api-authorization-t.tte-test.k8s.target.com","rno-api-authorization-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-10T16:28:55Z
    generation: 1
    labels:
      app: rno-api-authorization-app
      name: rno-api-authorization-ingress
    name: rno-api-authorization-ingress
    namespace: records-dev
    resourceVersion: "38307137"
    selfLink: /apis/extensions/v1beta1/namespaces/records-dev/ingresses/rno-api-authorization-ingress
    uid: 95063d28-cca9-11e8-b5ae-52540017c177
  spec:
    rules:
    - host: rno-api-authorization-t.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-api-authorization-service
            servicePort: 5050
          path: /
    - host: rno-api-authorization-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-api-authorization-service
            servicePort: 5050
          path: /
    tls:
    - hosts:
      - rno-api-authorization-t.tte-test.k8s.target.com
      - rno-api-authorization-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"rno-api-configuration-app","name":"rno-api-configuration-ingress"},"name":"rno-api-configuration-ingress","namespace":"records-dev"},"spec":{"rules":[{"host":"rno-api-configuration-t.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-api-configuration-service","servicePort":5050},"path":"/"}]}},{"host":"rno-api-configuration-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-api-configuration-service","servicePort":5050},"path":"/"}]}}],"tls":[{"hosts":["rno-api-configuration-t.ttc-test.k8s.target.com","rno-api-configuration-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-29T15:17:56Z
    generation: 1
    labels:
      app: rno-api-configuration-app
      name: rno-api-configuration-ingress
    name: rno-api-configuration-ingress
    namespace: records-dev
    resourceVersion: "143055430"
    selfLink: /apis/extensions/v1beta1/namespaces/records-dev/ingresses/rno-api-configuration-ingress
    uid: 0e66af2f-23d9-11e9-86c4-525400ed1a2a
  spec:
    rules:
    - host: rno-api-configuration-t.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-api-configuration-service
            servicePort: 5050
          path: /
    - host: rno-api-configuration-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-api-configuration-service
            servicePort: 5050
          path: /
    tls:
    - hosts:
      - rno-api-configuration-t.ttc-test.k8s.target.com
      - rno-api-configuration-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"rno-api-file-app","name":"rno-api-file-ingress"},"name":"rno-api-file-ingress","namespace":"records-dev"},"spec":{"rules":[{"host":"rno-api-file-t.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-api-file-service","servicePort":5050},"path":"/"}]}},{"host":"rno-api-file-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-api-file-service","servicePort":5050},"path":"/"}]}}],"tls":[{"hosts":["rno-api-file-t.tte-test.k8s.target.com","rno-api-file-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-14T18:36:53Z
    generation: 1
    labels:
      app: rno-api-file-app
      name: rno-api-file-ingress
    name: rno-api-file-ingress
    namespace: records-dev
    resourceVersion: "22525966"
    selfLink: /apis/extensions/v1beta1/namespaces/records-dev/ingresses/rno-api-file-ingress
    uid: 265a3c77-b84d-11e8-88c5-5254004139fa
  spec:
    rules:
    - host: rno-api-file-t.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-api-file-service
            servicePort: 5050
          path: /
    - host: rno-api-file-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-api-file-service
            servicePort: 5050
          path: /
    tls:
    - hosts:
      - rno-api-file-t.tte-test.k8s.target.com
      - rno-api-file-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"rno-api-indices-app","name":"rno-api-indices-ingress"},"name":"rno-api-indices-ingress","namespace":"records-dev"},"spec":{"rules":[{"host":"rno-api-indices-t.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-api-indices-service","servicePort":5050},"path":"/"}]}},{"host":"rno-api-indices-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-api-indices-service","servicePort":5050},"path":"/"}]}}],"tls":[{"hosts":["rno-api-indices-t.tte-test.k8s.target.com","rno-api-indices-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-14T18:37:09Z
    generation: 1
    labels:
      app: rno-api-indices-app
      name: rno-api-indices-ingress
    name: rno-api-indices-ingress
    namespace: records-dev
    resourceVersion: "22525965"
    selfLink: /apis/extensions/v1beta1/namespaces/records-dev/ingresses/rno-api-indices-ingress
    uid: 30144649-b84d-11e8-88c5-5254004139fa
  spec:
    rules:
    - host: rno-api-indices-t.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-api-indices-service
            servicePort: 5050
          path: /
    - host: rno-api-indices-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-api-indices-service
            servicePort: 5050
          path: /
    tls:
    - hosts:
      - rno-api-indices-t.tte-test.k8s.target.com
      - rno-api-indices-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"rno-api-objects-app","name":"rno-api-objects-ingress"},"name":"rno-api-objects-ingress","namespace":"records-dev"},"spec":{"rules":[{"host":"rno-api-objects-t.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-api-objects-service","servicePort":5050},"path":"/"}]}},{"host":"rno-api-objects-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-api-objects-service","servicePort":5050},"path":"/"}]}}],"tls":[{"hosts":["rno-api-objects-t.tte-test.k8s.target.com","rno-api-objects-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-14T18:40:58Z
    generation: 1
    labels:
      app: rno-api-objects-app
      name: rno-api-objects-ingress
    name: rno-api-objects-ingress
    namespace: records-dev
    resourceVersion: "22527178"
    selfLink: /apis/extensions/v1beta1/namespaces/records-dev/ingresses/rno-api-objects-ingress
    uid: b8c1459c-b84d-11e8-88c5-5254004139fa
  spec:
    rules:
    - host: rno-api-objects-t.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-api-objects-service
            servicePort: 5050
          path: /
    - host: rno-api-objects-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-api-objects-service
            servicePort: 5050
          path: /
    tls:
    - hosts:
      - rno-api-objects-t.tte-test.k8s.target.com
      - rno-api-objects-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"rno-api-validation-app","name":"rno-api-validation-ingress"},"name":"rno-api-validation-ingress","namespace":"records-dev"},"spec":{"rules":[{"host":"rno-api-validation-t.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-api-validation-service","servicePort":5050},"path":"/"}]}},{"host":"rno-api-validation-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-api-validation-service","servicePort":5050},"path":"/"}]}}],"tls":[{"hosts":["rno-api-validation-t.tte-test.k8s.target.com","rno-api-validation-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-25T20:45:57Z
    generation: 1
    labels:
      app: rno-api-validation-app
      name: rno-api-validation-ingress
    name: rno-api-validation-ingress
    namespace: records-dev
    resourceVersion: "50987948"
    selfLink: /apis/extensions/v1beta1/namespaces/records-dev/ingresses/rno-api-validation-ingress
    uid: f94e6e39-d896-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: rno-api-validation-t.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-api-validation-service
            servicePort: 5050
          path: /
    - host: rno-api-validation-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-api-validation-service
            servicePort: 5050
          path: /
    tls:
    - hosts:
      - rno-api-validation-t.tte-test.k8s.target.com
      - rno-api-validation-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"rno-client-app","name":"rno-client-ingress"},"name":"rno-client-ingress","namespace":"records-dev"},"spec":{"rules":[{"host":"rhino-t.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-client-service","servicePort":5050},"path":"/"}]}},{"host":"rhino-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-client-service","servicePort":5050},"path":"/"}]}},{"host":"rhino-t.target.com","http":{"paths":[{"backend":{"serviceName":"rno-client-service","servicePort":5050},"path":"/"}]}}],"tls":[{"hosts":["rhino-t.tte-test.k8s.target.com","rhino-t.test.k8s.target.com","rhino-t.target.com"],"secretName":"vanitysecret-rhino-t"}]}}
    creationTimestamp: 2019-03-19T17:44:54Z
    generation: 1
    labels:
      app: rno-client-app
      name: rno-client-ingress
    name: rno-client-ingress
    namespace: records-dev
    resourceVersion: "192018637"
    selfLink: /apis/extensions/v1beta1/namespaces/records-dev/ingresses/rno-client-ingress
    uid: b4375504-4a6e-11e9-b3bf-525400884743
  spec:
    rules:
    - host: rhino-t.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-client-service
            servicePort: 5050
          path: /
    - host: rhino-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-client-service
            servicePort: 5050
          path: /
    - host: rhino-t.target.com
      http:
        paths:
        - backend:
            serviceName: rno-client-service
            servicePort: 5050
          path: /
    tls:
    - hosts:
      - rhino-t.tte-test.k8s.target.com
      - rhino-t.test.k8s.target.com
      - rhino-t.target.com
      secretName: vanitysecret-rhino-t
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"rno-svc-keres-app","name":"rno-svc-keres-ingress"},"name":"rno-svc-keres-ingress","namespace":"records-dev"},"spec":{"rules":[{"host":"rno-svc-keres-t.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-svc-keres-service","servicePort":5050},"path":"/"}]}},{"host":"rno-svc-keres-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-svc-keres-service","servicePort":5050},"path":"/"}]}}],"tls":[{"hosts":["rno-svc-keres-t.tte-test.k8s.target.com","rno-svc-keres-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-11T17:37:10Z
    generation: 1
    labels:
      app: rno-svc-keres-app
      name: rno-svc-keres-ingress
    name: rno-svc-keres-ingress
    namespace: records-dev
    resourceVersion: "125129544"
    selfLink: /apis/extensions/v1beta1/namespaces/records-dev/ingresses/rno-svc-keres-ingress
    uid: 85f9c9a8-15c7-11e9-a7f3-52540072a6ea
  spec:
    rules:
    - host: rno-svc-keres-t.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-svc-keres-service
            servicePort: 5050
          path: /
    - host: rno-svc-keres-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-svc-keres-service
            servicePort: 5050
          path: /
    tls:
    - hosts:
      - rno-svc-keres-t.tte-test.k8s.target.com
      - rno-svc-keres-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"rno-svc-provision-app","name":"rno-svc-provision-ingress"},"name":"rno-svc-provision-ingress","namespace":"records-dev"},"spec":{"rules":[{"host":"rno-svc-provision-t.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-svc-provision-service","servicePort":5050},"path":"/"}]}},{"host":"rno-svc-provision-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-svc-provision-service","servicePort":5050},"path":"/"}]}}],"tls":[{"hosts":["rno-svc-provision-t.tte-test.k8s.target.com","rno-svc-provision-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-07T17:19:24Z
    generation: 1
    labels:
      app: rno-svc-provision-app
      name: rno-svc-provision-ingress
    name: rno-svc-provision-ingress
    namespace: records-dev
    resourceVersion: "62672591"
    selfLink: /apis/extensions/v1beta1/namespaces/records-dev/ingresses/rno-svc-provision-ingress
    uid: 45bcd54b-e2b1-11e8-999b-5254008d935f
  spec:
    rules:
    - host: rno-svc-provision-t.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-svc-provision-service
            servicePort: 5050
          path: /
    - host: rno-svc-provision-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-svc-provision-service
            servicePort: 5050
          path: /
    tls:
    - hosts:
      - rno-svc-provision-t.tte-test.k8s.target.com
      - rno-svc-provision-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"rno-svc-reaper-app","name":"rno-svc-reaper-ingress"},"name":"rno-svc-reaper-ingress","namespace":"records-dev"},"spec":{"rules":[{"host":"rno-svc-reaper-t.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-svc-reaper-service","servicePort":5050},"path":"/"}]}},{"host":"rno-svc-reaper-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-svc-reaper-service","servicePort":5050},"path":"/"}]}}],"tls":[{"hosts":["rno-svc-reaper-t.tte-test.k8s.target.com","rno-svc-reaper-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-28T20:10:17Z
    generation: 1
    labels:
      app: rno-svc-reaper-app
      name: rno-svc-reaper-ingress
    name: rno-svc-reaper-ingress
    namespace: records-dev
    resourceVersion: "174040027"
    selfLink: /apis/extensions/v1beta1/namespaces/records-dev/ingresses/rno-svc-reaper-ingress
    uid: ddfcb281-3b94-11e9-81c2-52540003963e
  spec:
    rules:
    - host: rno-svc-reaper-t.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-svc-reaper-service
            servicePort: 5050
          path: /
    - host: rno-svc-reaper-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-svc-reaper-service
            servicePort: 5050
          path: /
    tls:
    - hosts:
      - rno-svc-reaper-t.tte-test.k8s.target.com
      - rno-svc-reaper-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"rno-svc-reporting-app","name":"rno-svc-reporting-ingress"},"name":"rno-svc-reporting-ingress","namespace":"records-dev"},"spec":{"rules":[{"host":"rno-svc-reporting-t.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-svc-reporting-service","servicePort":5050},"path":"/"}]}},{"host":"rno-svc-reporting-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-svc-reporting-service","servicePort":5050},"path":"/"}]}}],"tls":[{"hosts":["rno-svc-reporting-t.ttc-test.k8s.target.com","rno-svc-reporting-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-03T16:39:17Z
    generation: 1
    labels:
      app: rno-svc-reporting-app
      name: rno-svc-reporting-ingress
    name: rno-svc-reporting-ingress
    namespace: records-dev
    resourceVersion: "33695739"
    selfLink: /apis/extensions/v1beta1/namespaces/records-dev/ingresses/rno-svc-reporting-ingress
    uid: deb20aaf-c72a-11e8-bad5-525400b91df9
  spec:
    rules:
    - host: rno-svc-reporting-t.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-svc-reporting-service
            servicePort: 5050
          path: /
    - host: rno-svc-reporting-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-svc-reporting-service
            servicePort: 5050
          path: /
    tls:
    - hosts:
      - rno-svc-reporting-t.ttc-test.k8s.target.com
      - rno-svc-reporting-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"records-app","name":"records-ingress"},"name":"records-ingress","namespace":"records-stage"},"spec":{"rules":[{"host":"records.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"records-service","servicePort":7777},"path":"/"}]}},{"host":"records.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"records-service","servicePort":7777},"path":"/"}]}},{"host":"recordsv1-s.target.com","http":{"paths":[{"backend":{"serviceName":"records-service","servicePort":7777},"path":"/"}]}}],"tls":[{"hosts":["records.tte-test.k8s.target.com","records.test.k8s.target.com","recordsv1-s.target.com"],"secretName":"vanitysecret-recordsv1-s"}]}}
    creationTimestamp: 2018-09-17T18:49:24Z
    generation: 3
    labels:
      app: records-app
      name: records-ingress
    name: records-ingress
    namespace: records-stage
    resourceVersion: "149989084"
    selfLink: /apis/extensions/v1beta1/namespaces/records-stage/ingresses/records-ingress
    uid: 65605991-baaa-11e8-842d-525400df3355
  spec:
    rules:
    - host: records.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: records-service
            servicePort: 7777
          path: /
    - host: records.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: records-service
            servicePort: 7777
          path: /
    - host: recordsv1-s.target.com
      http:
        paths:
        - backend:
            serviceName: records-service
            servicePort: 7777
          path: /
    tls:
    - hosts:
      - records.tte-test.k8s.target.com
      - records.test.k8s.target.com
      - recordsv1-s.target.com
      secretName: vanitysecret-recordsv1-s
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"rno-client-app","name":"rno-client-ingress"},"name":"rno-client-ingress","namespace":"records-stage"},"spec":{"rules":[{"host":"rhino.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-client-service","servicePort":5050},"path":"/"}]}},{"host":"rhino.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-client-service","servicePort":5050},"path":"/"}]}},{"host":"rhino-s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-client-service","servicePort":5050},"path":"/"}]}}],"tls":[{"hosts":["rhino.tte-test.k8s.target.com","rhino.test.k8s.target.com","rhino-s.target.com"],"secretName":"vanitysecret-rhino-s"}]}}
    creationTimestamp: 2019-03-19T19:42:18Z
    generation: 1
    labels:
      app: rno-client-app
      name: rno-client-ingress
    name: rno-client-ingress
    namespace: records-stage
    resourceVersion: "192098188"
    selfLink: /apis/extensions/v1beta1/namespaces/records-stage/ingresses/rno-client-ingress
    uid: 1b012b2d-4a7f-11e9-b3bf-525400884743
  spec:
    rules:
    - host: rhino.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-client-service
            servicePort: 5050
          path: /
    - host: rhino.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-client-service
            servicePort: 5050
          path: /
    - host: rhino-s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-client-service
            servicePort: 5050
          path: /
    tls:
    - hosts:
      - rhino.tte-test.k8s.target.com
      - rhino.test.k8s.target.com
      - rhino-s.target.com
      secretName: vanitysecret-rhino-s
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-02-11T14:46:44Z
    generation: 1
    labels:
      app: request-tm-consumer
      chart: redsky-1.1.0
    name: request-tm-consumer
    namespace: redsky
    resourceVersion: "155902391"
    selfLink: /apis/extensions/v1beta1/namespaces/redsky/ingresses/request-tm-consumer
    uid: d9c8ae6e-2e0b-11e9-b42d-5254003b1534
  spec:
    rules:
    - host: redsky-request-tm-consumer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: request-tm-consumer-service
            servicePort: 80
          path: /
    - host: redsky-request-tm-consumer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: request-tm-consumer-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - redsky-request-tm-consumer.tte-test.k8s.target.com
      - redsky-request-tm-consumer.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-08-22T01:34:16Z
    generation: 2
    labels:
      app: ship-aggregator-api
      chart: ratpack-1.1.0
    name: ship-aggregator-api
    namespace: redsky
    resourceVersion: "16454741"
    selfLink: /apis/extensions/v1beta1/namespaces/redsky/ingresses/ship-aggregator-api
    uid: 7b4a8031-a5ab-11e8-8dd4-5254004139fa
  spec:
    rules:
    - host: redsky-ship-aggregator-api.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ship-aggregator-api
            servicePort: 80
          path: /
    - host: redsky-ship-aggregator-api.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ship-aggregator-api
            servicePort: 80
          path: /
    tls:
    - hosts:
      - redsky-ship-aggregator-api.tte-test.k8s.target.com
      - redsky-ship-aggregator-api.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"run":"inr-distribution-v2"},"name":"inr-distribution-v2","namespace":"ree-test-env"},"spec":{"rules":[{"host":"ree-test-env-inr-distribution-v2.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"inr-distribution-v2","servicePort":80},"path":"/"}]}},{"host":"ree-test-env-inr-distribution-v2.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"inr-distribution-v2","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-09T15:51:02Z
    generation: 1
    labels:
      run: inr-distribution-v2
    name: inr-distribution-v2
    namespace: ree-test-env
    resourceVersion: "37592723"
    selfLink: /apis/extensions/v1beta1/namespaces/ree-test-env/ingresses/inr-distribution-v2
    uid: 1fcb8224-cbdb-11e8-bad5-525400b91df9
  spec:
    rules:
    - host: ree-test-env-inr-distribution-v2.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: inr-distribution-v2
            servicePort: 80
          path: /
    - host: ree-test-env-inr-distribution-v2.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: inr-distribution-v2
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"retention-policies-app","name":"retention-policies-ingress"},"name":"retention-policies-ingress","namespace":"retention-dev"},"spec":{"rules":[{"host":"retention-policies-t.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"retention-policies-service","servicePort":7777},"path":"/"}]}},{"host":"retention-policies-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"retention-policies-service","servicePort":7777},"path":"/"}]}}],"tls":[{"hosts":["retention-policies-t.tte-test.k8s.target.com","retention-policies-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-18T19:04:51Z
    generation: 1
    labels:
      app: retention-policies-app
      name: retention-policies-ingress
    name: retention-policies-ingress
    namespace: retention-dev
    resourceVersion: "24527191"
    selfLink: /apis/extensions/v1beta1/namespaces/retention-dev/ingresses/retention-policies-ingress
    uid: b83aca22-bb75-11e8-88c5-5254004139fa
  spec:
    rules:
    - host: retention-policies-t.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: retention-policies-service
            servicePort: 7777
          path: /
    - host: retention-policies-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: retention-policies-service
            servicePort: 7777
          path: /
    tls:
    - hosts:
      - retention-policies-t.tte-test.k8s.target.com
      - retention-policies-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"retention-policies-app","name":"retention-policies-ingress"},"name":"retention-policies-ingress","namespace":"retention-stage"},"spec":{"rules":[{"host":"retention-policies-s.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"retention-policies-service","servicePort":7777},"path":"/"}]}},{"host":"retention-policies-s.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"retention-policies-service","servicePort":7777},"path":"/"}]}}],"tls":[{"hosts":["retention-policies-s.tte-test.k8s.target.com","retention-policies-s.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-18T19:12:46Z
    generation: 1
    labels:
      app: retention-policies-app
      name: retention-policies-ingress
    name: retention-policies-ingress
    namespace: retention-stage
    resourceVersion: "24531169"
    selfLink: /apis/extensions/v1beta1/namespaces/retention-stage/ingresses/retention-policies-ingress
    uid: d3b2344f-bb76-11e8-88c5-5254004139fa
  spec:
    rules:
    - host: retention-policies-s.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: retention-policies-service
            servicePort: 7777
          path: /
    - host: retention-policies-s.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: retention-policies-service
            servicePort: 7777
          path: /
    tls:
    - hosts:
      - retention-policies-s.tte-test.k8s.target.com
      - retention-policies-s.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"scmdpackrounder-prep-ingress-stage-tte"},"name":"scmdpackrounder-prep-ingress-stage-tte","namespace":"scmd-ent"},"spec":{"rules":[{"host":"scmdpackrounder-prep.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"scmdpackrounder-prep-service-stage","servicePort":80},"path":"/"}]}},{"host":"scmdpackrounder-prep.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"scmdpackrounder-prep-service-stage","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["scmdpackrounder-prep.tte-test.k8s.target.com","scmdpackrounder-prep.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-05T09:30:45Z
    generation: 1
    labels:
      name: scmdpackrounder-prep-ingress-stage-tte
    name: scmdpackrounder-prep-ingress-stage-tte
    namespace: scmd-ent
    resourceVersion: "19231568"
    selfLink: /apis/extensions/v1beta1/namespaces/scmd-ent/ingresses/scmdpackrounder-prep-ingress-stage-tte
    uid: 5dd60345-b0ee-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: scmdpackrounder-prep.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: scmdpackrounder-prep-service-stage
            servicePort: 80
          path: /
    - host: scmdpackrounder-prep.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: scmdpackrounder-prep-service-stage
            servicePort: 80
          path: /
    tls:
    - hosts:
      - scmdpackrounder-prep.tte-test.k8s.target.com
      - scmdpackrounder-prep.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"darwin-api-ingress"},"name":"darwin-api-ingress","namespace":"smartbuildings-dev"},"spec":{"rules":[{"host":"darwin-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"darwin-api-service","servicePort":80},"path":"/"}]}},{"host":"darwin-api-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"darwin-api-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["darwin-api-dev.test.k8s.target.com","darwin-api-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-10T16:20:45Z
    generation: 3
    labels:
      name: darwin-api-ingress
    name: darwin-api-ingress
    namespace: smartbuildings-dev
    resourceVersion: "21377706"
    selfLink: /apis/extensions/v1beta1/namespaces/smartbuildings-dev/ingresses/darwin-api-ingress
    uid: 784366e7-b515-11e8-842d-525400df3355
  spec:
    rules:
    - host: darwin-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: darwin-api-service
            servicePort: 80
          path: /
    - host: darwin-api-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: darwin-api-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - darwin-api-dev.test.k8s.target.com
      - darwin-api-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"darwinui-ingress","namespace":"smartbuildings-dev"},"spec":{"rules":[{"host":"darwinui-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"darwinui-service","servicePort":80},"path":"/"}]}},{"host":"darwinui-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"darwinui-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["darwinui-dev.test.k8s.target.com","darwinui-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-13T14:48:28Z
    generation: 2
    name: darwinui-ingress
    namespace: smartbuildings-dev
    resourceVersion: "25610523"
    selfLink: /apis/extensions/v1beta1/namespaces/smartbuildings-dev/ingresses/darwinui-ingress
    uid: 13274ba2-b764-11e8-842d-525400df3355
  spec:
    rules:
    - host: darwinui-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: darwinui-service
            servicePort: 80
          path: /
    - host: darwinui-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: darwinui-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - darwinui-dev.test.k8s.target.com
      - darwinui-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"eagle-ingress"},"name":"eagle-ingress","namespace":"smartbuildings-dev"},"spec":{"rules":[{"host":"eagle-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"eagle-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["eagle-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-25T18:52:10Z
    generation: 1
    labels:
      name: eagle-ingress
    name: eagle-ingress
    namespace: smartbuildings-dev
    resourceVersion: "139612929"
    selfLink: /apis/extensions/v1beta1/namespaces/smartbuildings-dev/ingresses/eagle-ingress
    uid: 520976a1-20d2-11e9-9460-52540039ed49
  spec:
    rules:
    - host: eagle-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: eagle-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - eagle-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"flamingo-ingress"},"name":"flamingo-ingress","namespace":"smartbuildings-dev"},"spec":{"rules":[{"host":"flamingo-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"flamingo-service","servicePort":80},"path":"/"}]}},{"host":"flamingo-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"flamingo-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["flamingo-dev.test.k8s.target.com","flamingo-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-11T16:32:19Z
    generation: 1
    labels:
      name: flamingo-ingress
    name: flamingo-ingress
    namespace: smartbuildings-dev
    resourceVersion: "39175101"
    selfLink: /apis/extensions/v1beta1/namespaces/smartbuildings-dev/ingresses/flamingo-ingress
    uid: 38d320c5-cd73-11e8-8770-525400a7f06e
  spec:
    rules:
    - host: flamingo-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: flamingo-service
            servicePort: 80
          path: /
    - host: flamingo-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: flamingo-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - flamingo-dev.test.k8s.target.com
      - flamingo-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"toucan-ingress"},"name":"toucan-ingress","namespace":"smartbuildings-dev"},"spec":{"rules":[{"host":"toucan-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"toucan-service","servicePort":80},"path":"/"}]}},{"host":"toucan-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"toucan-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["toucan-dev.test.k8s.target.com","toucan-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-12T19:30:11Z
    generation: 1
    labels:
      name: toucan-ingress
    name: toucan-ingress
    namespace: smartbuildings-dev
    resourceVersion: "40038997"
    selfLink: /apis/extensions/v1beta1/namespaces/smartbuildings-dev/ingresses/toucan-ingress
    uid: 3c95a13e-ce55-11e8-b121-525400340d56
  spec:
    rules:
    - host: toucan-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: toucan-service
            servicePort: 80
          path: /
    - host: toucan-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: toucan-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - toucan-dev.test.k8s.target.com
      - toucan-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"darwinui-ingress","namespace":"smartbuildings-stg"},"spec":{"rules":[{"host":"darwinui-stg.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"darwinui-service","servicePort":80},"path":"/"}]}},{"host":"darwinui-stg.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"darwinui-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["darwinui-stg.test.k8s.target.com","darwinui-stg.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-18T16:04:46Z
    generation: 3
    name: darwinui-ingress
    namespace: smartbuildings-stg
    resourceVersion: "25619598"
    selfLink: /apis/extensions/v1beta1/namespaces/smartbuildings-stg/ingresses/darwinui-ingress
    uid: 8feb00d4-bb5c-11e8-88c5-5254004139fa
  spec:
    rules:
    - host: darwinui-stg.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: darwinui-service
            servicePort: 80
          path: /
    - host: darwinui-stg.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: darwinui-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - darwinui-stg.test.k8s.target.com
      - darwinui-stg.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"eagle-ingress"},"name":"eagle-ingress","namespace":"smartbuildings-stg"},"spec":{"rules":[{"host":"eagle-stg.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"eagle-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["eagle-stg.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-25T20:44:13Z
    generation: 1
    labels:
      name: eagle-ingress
    name: eagle-ingress
    namespace: smartbuildings-stg
    resourceVersion: "192111085"
    selfLink: /apis/extensions/v1beta1/namespaces/smartbuildings-stg/ingresses/eagle-ingress
    uid: f96fa246-20e1-11e9-9460-52540039ed49
  spec:
    rules:
    - host: eagle-stg.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: eagle-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - eagle-stg.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"flamingo-ingress"},"name":"flamingo-ingress","namespace":"smartbuildings-stg"},"spec":{"rules":[{"host":"flamingo-stg.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"flamingo-service","servicePort":80},"path":"/"}]}},{"host":"flamingo-stg.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"flamingo-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["flamingo-stg.test.k8s.target.com","flamingo-stg.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-26T20:22:37Z
    generation: 1
    labels:
      name: flamingo-ingress
    name: flamingo-ingress
    namespace: smartbuildings-stg
    resourceVersion: "51836714"
    selfLink: /apis/extensions/v1beta1/namespaces/smartbuildings-stg/ingresses/flamingo-ingress
    uid: e1495157-d95c-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: flamingo-stg.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: flamingo-service
            servicePort: 80
          path: /
    - host: flamingo-stg.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: flamingo-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - flamingo-stg.test.k8s.target.com
      - flamingo-stg.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"toucan-ingress"},"name":"toucan-ingress","namespace":"smartbuildings-stg"},"spec":{"rules":[{"host":"toucan-stg.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"toucan-service","servicePort":80},"path":"/"}]}},{"host":"toucan-stg.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"toucan-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["toucan-stg.test.k8s.target.com","toucan-stg.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-26T18:25:31Z
    generation: 1
    labels:
      name: toucan-ingress
    name: toucan-ingress
    namespace: smartbuildings-stg
    resourceVersion: "51759138"
    selfLink: /apis/extensions/v1beta1/namespaces/smartbuildings-stg/ingresses/toucan-ingress
    uid: 85c6d196-d94c-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: toucan-stg.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: toucan-service
            servicePort: 80
          path: /
    - host: toucan-stg.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: toucan-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - toucan-stg.test.k8s.target.com
      - toucan-stg.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"acm-oauth"},"name":"acm-oauth-ingress","namespace":"snp-common-dev"},"spec":{"rules":[{"host":"acm-oauth-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"acm-oauth-svc","servicePort":80},"path":"/"}]}},{"host":"acm-oauth-api-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"acm-oauth-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["acm-oauth-api-dev.test.k8s.target.com","acm-oauth-api-dev.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-19T14:31:54Z
    generation: 1
    labels:
      app: acm-oauth
    name: acm-oauth-ingress
    namespace: snp-common-dev
    resourceVersion: "25013175"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-dev/ingresses/acm-oauth-ingress
    uid: c14b945b-bc18-11e8-8fe0-525400bc6d51
  spec:
    rules:
    - host: acm-oauth-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: acm-oauth-svc
            servicePort: 80
          path: /
    - host: acm-oauth-api-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: acm-oauth-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - acm-oauth-api-dev.test.k8s.target.com
      - acm-oauth-api-dev.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planogram-swap-items-svc"},"name":"planogram-swap-items-svc-ingress","namespace":"snp-common-dev"},"spec":{"rules":[{"host":"planogram-swap-items-svc-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-swap-items-svc","servicePort":80},"path":"/"}]}},{"host":"planogram-swap-items-svc-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-swap-items-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planogram-swap-items-svc-dev.test.k8s.target.com","planogram-swap-items-svc-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-08T18:30:34Z
    generation: 1
    labels:
      app: planogram-swap-items-svc
    name: planogram-swap-items-svc-ingress
    namespace: snp-common-dev
    resourceVersion: "122196772"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-dev/ingresses/planogram-swap-items-svc-ingress
    uid: 7c986873-1373-11e9-a3f2-525400a6ba56
  spec:
    rules:
    - host: planogram-swap-items-svc-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-swap-items-svc
            servicePort: 80
          path: /
    - host: planogram-swap-items-svc-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-swap-items-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planogram-swap-items-svc-dev.test.k8s.target.com
      - planogram-swap-items-svc-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planograms-assist-svc"},"name":"planograms-assist-svc-ingress","namespace":"snp-common-dev"},"spec":{"rules":[{"host":"planograms-assist-svc-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planograms-assist-svc-svc","servicePort":80},"path":"/"}]}},{"host":"planograms-assist-svc-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planograms-assist-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planograms-assist-svc-dev.test.k8s.target.com","planograms-assist-svc-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T20:52:28Z
    generation: 6
    labels:
      app: planograms-assist-svc
    name: planograms-assist-svc-ingress
    namespace: snp-common-dev
    resourceVersion: "75000157"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-dev/ingresses/planograms-assist-svc-ingress
    uid: 15d48b54-bd17-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: planograms-assist-svc-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planograms-assist-svc-svc
            servicePort: 80
          path: /
    - host: planograms-assist-svc-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planograms-assist-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planograms-assist-svc-dev.test.k8s.target.com
      - planograms-assist-svc-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-planogram-assist-ingress"},"name":"singularity-planogram-assist-ingress","namespace":"snp-common-dev"},"spec":{"rules":[{"host":"singularity-planogram-assist-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-assist-service","servicePort":80},"path":"/"}]}},{"host":"singularity-planogram-assist-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-assist-service","servicePort":80},"path":"/"}]}},{"host":"singularity-planogram-assist-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-assist-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-planogram-assist-dev.ttc-test.k8s.target.com","singularity-planogram-assist-dev.tte-test.k8s.target.com","singularity-planogram-assist-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-16T18:03:35Z
    generation: 1
    labels:
      name: singularity-planogram-assist-ingress
    name: singularity-planogram-assist-ingress
    namespace: snp-common-dev
    resourceVersion: "71041760"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-dev/ingresses/singularity-planogram-assist-ingress
    uid: ef9a34bb-e9c9-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: singularity-planogram-assist-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-assist-service
            servicePort: 80
          path: /
    - host: singularity-planogram-assist-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-assist-service
            servicePort: 80
          path: /
    - host: singularity-planogram-assist-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-assist-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-planogram-assist-dev.ttc-test.k8s.target.com
      - singularity-planogram-assist-dev.tte-test.k8s.target.com
      - singularity-planogram-assist-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-planogram-autofill-ingress"},"name":"singularity-planogram-autofill-ingress","namespace":"snp-common-dev"},"spec":{"rules":[{"host":"singularity-planogram-autofill-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-autofill-service","servicePort":80},"path":"/"}]}},{"host":"singularity-planogram-autofill-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-autofill-service","servicePort":80},"path":"/"}]}},{"host":"singularity-planogram-autofill-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-autofill-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-planogram-autofill-dev.ttc-test.k8s.target.com","singularity-planogram-autofill-dev.tte-test.k8s.target.com","singularity-planogram-autofill-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-15T17:29:08Z
    generation: 1
    labels:
      name: singularity-planogram-autofill-ingress
    name: singularity-planogram-autofill-ingress
    namespace: snp-common-dev
    resourceVersion: "70040242"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-dev/ingresses/singularity-planogram-autofill-ingress
    uid: f55b65d6-e8fb-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: singularity-planogram-autofill-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-autofill-service
            servicePort: 80
          path: /
    - host: singularity-planogram-autofill-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-autofill-service
            servicePort: 80
          path: /
    - host: singularity-planogram-autofill-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-autofill-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-planogram-autofill-dev.ttc-test.k8s.target.com
      - singularity-planogram-autofill-dev.tte-test.k8s.target.com
      - singularity-planogram-autofill-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-planogram-update-ingress"},"name":"singularity-planogram-update-ingress","namespace":"snp-common-dev"},"spec":{"rules":[{"host":"singularity-planogram-update-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-update-service","servicePort":80},"path":"/"}]}},{"host":"singularity-planogram-update-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-update-service","servicePort":80},"path":"/"}]}},{"host":"singularity-planogram-update-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-update-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-planogram-update-dev.ttc-test.k8s.target.com","singularity-planogram-update-dev.tte-test.k8s.target.com","singularity-planogram-update-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-05T14:25:25Z
    generation: 1
    labels:
      name: singularity-planogram-update-ingress
    name: singularity-planogram-update-ingress
    namespace: snp-common-dev
    resourceVersion: "34981583"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-dev/ingresses/singularity-planogram-update-ingress
    uid: 804a8e28-c8aa-11e8-bad5-525400b91df9
  spec:
    rules:
    - host: singularity-planogram-update-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-update-service
            servicePort: 80
          path: /
    - host: singularity-planogram-update-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-update-service
            servicePort: 80
          path: /
    - host: singularity-planogram-update-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-update-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-planogram-update-dev.ttc-test.k8s.target.com
      - singularity-planogram-update-dev.tte-test.k8s.target.com
      - singularity-planogram-update-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-pog-assist-ingress"},"name":"singularity-pog-assist-ingress","namespace":"snp-common-dev"},"spec":{"rules":[{"host":"singularity-pog-assist-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-pog-assist-service","servicePort":80},"path":"/"}]}},{"host":"singularity-pog-assist-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-pog-assist-service","servicePort":80},"path":"/"}]}},{"host":"singularity-pog-assist-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-pog-assist-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-pog-assist-dev.ttc-test.k8s.target.com","singularity-pog-assist-dev.tte-test.k8s.target.com","singularity-pog-assist-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-01T14:25:09Z
    generation: 2
    labels:
      name: singularity-pog-assist-ingress
    name: singularity-pog-assist-ingress
    namespace: snp-common-dev
    resourceVersion: "33807307"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-dev/ingresses/singularity-pog-assist-ingress
    uid: ccdad9f4-c585-11e8-93a6-525400dd15a8
  spec:
    rules:
    - host: singularity-pog-assist-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-pog-assist-service
            servicePort: 80
          path: /
    - host: singularity-pog-assist-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-pog-assist-service
            servicePort: 80
          path: /
    - host: singularity-pog-assist-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-pog-assist-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-pog-assist-dev.ttc-test.k8s.target.com
      - singularity-pog-assist-dev.tte-test.k8s.target.com
      - singularity-pog-assist-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"space-analytics-api"},"name":"space-analytics-api-ingress","namespace":"snp-common-dev"},"spec":{"rules":[{"host":"space-analytics-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"space-analytics-api-svc","servicePort":80},"path":"/"}]}},{"host":"space-analytics-api-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"space-analytics-api-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["space-analytics-api-dev.test.k8s.target.com","space-analytics-api-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T18:47:01Z
    generation: 1
    labels:
      app: space-analytics-api
    name: space-analytics-api-ingress
    namespace: snp-common-dev
    resourceVersion: "25662450"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-dev/ingresses/space-analytics-api-ingress
    uid: 8fa23ac8-bd05-11e8-8bab-525400df3355
  spec:
    rules:
    - host: space-analytics-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: space-analytics-api-svc
            servicePort: 80
          path: /
    - host: space-analytics-api-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: space-analytics-api-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - space-analytics-api-dev.test.k8s.target.com
      - space-analytics-api-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"space-analytics"},"name":"space-analytics-ingress","namespace":"snp-common-dev"},"spec":{"rules":[{"host":"space-analytics-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"space-analytics-svc","servicePort":80},"path":"/"}]}},{"host":"space-analytics-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"space-analytics-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["space-analytics-dev.test.k8s.target.com","space-analytics-dev.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-24T14:13:14Z
    generation: 1
    labels:
      app: space-analytics
    name: space-analytics-ingress
    namespace: snp-common-dev
    resourceVersion: "27784475"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-dev/ingresses/space-analytics-ingress
    uid: fa15b26b-c003-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: space-analytics-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: space-analytics-svc
            servicePort: 80
          path: /
    - host: space-analytics-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: space-analytics-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - space-analytics-dev.test.k8s.target.com
      - space-analytics-dev.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"space-analytics-oauth"},"name":"space-analytics-oauth-ingress","namespace":"snp-common-dev"},"spec":{"rules":[{"host":"space-analytics-oauth-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"space-analytics-oauth-svc","servicePort":80},"path":"/"}]}},{"host":"space-analytics-oauth-api-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"space-analytics-oauth-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["space-analytics-oauth-api-dev.test.k8s.target.com","space-analytics-oauth-api-dev.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-19T14:31:54Z
    generation: 1
    labels:
      app: space-analytics-oauth
    name: space-analytics-oauth-ingress
    namespace: snp-common-dev
    resourceVersion: "25013176"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-dev/ingresses/space-analytics-oauth-ingress
    uid: c19b1611-bc18-11e8-8fe0-525400bc6d51
  spec:
    rules:
    - host: space-analytics-oauth-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: space-analytics-oauth-svc
            servicePort: 80
          path: /
    - host: space-analytics-oauth-api-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: space-analytics-oauth-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - space-analytics-oauth-api-dev.test.k8s.target.com
      - space-analytics-oauth-api-dev.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"acm-oauth"},"name":"acm-oauth-ingress","namespace":"snp-common-stage"},"spec":{"rules":[{"host":"acm-oauth-api-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"acm-oauth-svc","servicePort":80},"path":"/"}]}},{"host":"acm-oauth-api-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"acm-oauth-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["acm-oauth-api-stage.test.k8s.target.com","acm-oauth-api-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-24T17:12:50Z
    generation: 1
    labels:
      app: acm-oauth
    name: acm-oauth-ingress
    namespace: snp-common-stage
    resourceVersion: "27866667"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-stage/ingresses/acm-oauth-ingress
    uid: 10ea45d7-c01d-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: acm-oauth-api-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: acm-oauth-svc
            servicePort: 80
          path: /
    - host: acm-oauth-api-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: acm-oauth-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - acm-oauth-api-stage.test.k8s.target.com
      - acm-oauth-api-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planogram-swap-items-svc"},"name":"planogram-swap-items-svc-ingress","namespace":"snp-common-stage"},"spec":{"rules":[{"host":"planogram-swap-items-svc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-swap-items-svc","servicePort":80},"path":"/"}]}},{"host":"planogram-swap-items-svc-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-swap-items-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planogram-swap-items-svc-stage.test.k8s.target.com","planogram-swap-items-svc-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-08T18:34:27Z
    generation: 1
    labels:
      app: planogram-swap-items-svc
    name: planogram-swap-items-svc-ingress
    namespace: snp-common-stage
    resourceVersion: "122199981"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-stage/ingresses/planogram-swap-items-svc-ingress
    uid: 07c7d391-1374-11e9-a3f2-525400a6ba56
  spec:
    rules:
    - host: planogram-swap-items-svc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-swap-items-svc
            servicePort: 80
          path: /
    - host: planogram-swap-items-svc-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-swap-items-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planogram-swap-items-svc-stage.test.k8s.target.com
      - planogram-swap-items-svc-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planograms-assist-svc"},"name":"planograms-assist-svc-ingress","namespace":"snp-common-stage"},"spec":{"rules":[{"host":"planograms-assist-svc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planograms-assist-svc-svc","servicePort":80},"path":"/"}]}},{"host":"planograms-assist-svc-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planograms-assist-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planograms-assist-svc-stage.test.k8s.target.com","planograms-assist-svc-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T13:58:07Z
    generation: 1
    labels:
      app: planograms-assist-svc
    name: planograms-assist-svc-ingress
    namespace: snp-common-stage
    resourceVersion: "26070636"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-stage/ingresses/planograms-assist-svc-ingress
    uid: 5de378bf-bda6-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: planograms-assist-svc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planograms-assist-svc-svc
            servicePort: 80
          path: /
    - host: planograms-assist-svc-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planograms-assist-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planograms-assist-svc-stage.test.k8s.target.com
      - planograms-assist-svc-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-planogram-assist-ingress"},"name":"singularity-planogram-assist-ingress","namespace":"snp-common-stage"},"spec":{"rules":[{"host":"singularity-planogram-assist-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-assist-service","servicePort":80},"path":"/"}]}},{"host":"singularity-planogram-assist-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-assist-service","servicePort":80},"path":"/"}]}},{"host":"singularity-planogram-assist-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-assist-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-planogram-assist-stage.ttc-test.k8s.target.com","singularity-planogram-assist-stage.tte-test.k8s.target.com","singularity-planogram-assist-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-16T18:28:38Z
    generation: 1
    labels:
      name: singularity-planogram-assist-ingress
    name: singularity-planogram-assist-ingress
    namespace: snp-common-stage
    resourceVersion: "71058901"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-stage/ingresses/singularity-planogram-assist-ingress
    uid: 6fd55597-e9cd-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: singularity-planogram-assist-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-assist-service
            servicePort: 80
          path: /
    - host: singularity-planogram-assist-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-assist-service
            servicePort: 80
          path: /
    - host: singularity-planogram-assist-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-assist-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-planogram-assist-stage.ttc-test.k8s.target.com
      - singularity-planogram-assist-stage.tte-test.k8s.target.com
      - singularity-planogram-assist-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-planogram-autofill-ingress"},"name":"singularity-planogram-autofill-ingress","namespace":"snp-common-stage"},"spec":{"rules":[{"host":"singularity-planogram-autofill-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-autofill-service","servicePort":80},"path":"/"}]}},{"host":"singularity-planogram-autofill-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-autofill-service","servicePort":80},"path":"/"}]}},{"host":"singularity-planogram-autofill-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-autofill-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-planogram-autofill-stage.ttc-test.k8s.target.com","singularity-planogram-autofill-stage.tte-test.k8s.target.com","singularity-planogram-autofill-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-15T17:56:37Z
    generation: 1
    labels:
      name: singularity-planogram-autofill-ingress
    name: singularity-planogram-autofill-ingress
    namespace: snp-common-stage
    resourceVersion: "70058378"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-stage/ingresses/singularity-planogram-autofill-ingress
    uid: cc1f8704-e8ff-11e8-999b-5254008d935f
  spec:
    rules:
    - host: singularity-planogram-autofill-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-autofill-service
            servicePort: 80
          path: /
    - host: singularity-planogram-autofill-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-autofill-service
            servicePort: 80
          path: /
    - host: singularity-planogram-autofill-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-autofill-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-planogram-autofill-stage.ttc-test.k8s.target.com
      - singularity-planogram-autofill-stage.tte-test.k8s.target.com
      - singularity-planogram-autofill-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-planogram-update-ingress"},"name":"singularity-planogram-update-ingress","namespace":"snp-common-stage"},"spec":{"rules":[{"host":"singularity-planogram-update-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-update-service","servicePort":80},"path":"/"}]}},{"host":"singularity-planogram-update-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-update-service","servicePort":80},"path":"/"}]}},{"host":"singularity-planogram-update-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-update-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-planogram-update-stage.ttc-test.k8s.target.com","singularity-planogram-update-stage.tte-test.k8s.target.com","singularity-planogram-update-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-05T16:55:39Z
    generation: 1
    labels:
      name: singularity-planogram-update-ingress
    name: singularity-planogram-update-ingress
    namespace: snp-common-stage
    resourceVersion: "35053137"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-stage/ingresses/singularity-planogram-update-ingress
    uid: 7d0c23b1-c8bf-11e8-93f3-5254000c5c7e
  spec:
    rules:
    - host: singularity-planogram-update-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-update-service
            servicePort: 80
          path: /
    - host: singularity-planogram-update-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-update-service
            servicePort: 80
          path: /
    - host: singularity-planogram-update-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-update-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-planogram-update-stage.ttc-test.k8s.target.com
      - singularity-planogram-update-stage.tte-test.k8s.target.com
      - singularity-planogram-update-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-pog-assist-ingress"},"name":"singularity-pog-assist-ingress","namespace":"snp-common-stage"},"spec":{"rules":[{"host":"singularity-pog-assist-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-pog-assist-service","servicePort":80},"path":"/"}]}},{"host":"singularity-pog-assist-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-pog-assist-service","servicePort":80},"path":"/"}]}},{"host":"singularity-pog-assist-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-pog-assist-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-pog-assist-stage.ttc-test.k8s.target.com","singularity-pog-assist-stage.tte-test.k8s.target.com","singularity-pog-assist-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-01T14:39:20Z
    generation: 2
    labels:
      name: singularity-pog-assist-ingress
    name: singularity-pog-assist-ingress
    namespace: snp-common-stage
    resourceVersion: "33813576"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-stage/ingresses/singularity-pog-assist-ingress
    uid: c843b17f-c587-11e8-93a6-525400dd15a8
  spec:
    rules:
    - host: singularity-pog-assist-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-pog-assist-service
            servicePort: 80
          path: /
    - host: singularity-pog-assist-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-pog-assist-service
            servicePort: 80
          path: /
    - host: singularity-pog-assist-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-pog-assist-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-pog-assist-stage.ttc-test.k8s.target.com
      - singularity-pog-assist-stage.tte-test.k8s.target.com
      - singularity-pog-assist-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"space-analytics-api"},"name":"space-analytics-api-ingress","namespace":"snp-common-stage"},"spec":{"rules":[{"host":"space-analytics-api-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"space-analytics-api-svc","servicePort":80},"path":"/"}]}},{"host":"space-analytics-api-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"space-analytics-api-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["space-analytics-api-stage.test.k8s.target.com","space-analytics-api-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-24T17:11:31Z
    generation: 1
    labels:
      app: space-analytics-api
    name: space-analytics-api-ingress
    namespace: snp-common-stage
    resourceVersion: "27866067"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-stage/ingresses/space-analytics-api-ingress
    uid: e1889947-c01c-11e8-bc70-5254004139fa
  spec:
    rules:
    - host: space-analytics-api-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: space-analytics-api-svc
            servicePort: 80
          path: /
    - host: space-analytics-api-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: space-analytics-api-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - space-analytics-api-stage.test.k8s.target.com
      - space-analytics-api-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"space-analytics"},"name":"space-analytics-ingress","namespace":"snp-common-stage"},"spec":{"rules":[{"host":"space-analytics-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"space-analytics-svc","servicePort":80},"path":"/"}]}},{"host":"space-analytics-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"space-analytics-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["space-analytics-stage.test.k8s.target.com","space-analytics-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-24T17:21:53Z
    generation: 1
    labels:
      app: space-analytics
    name: space-analytics-ingress
    namespace: snp-common-stage
    resourceVersion: "27871141"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-stage/ingresses/space-analytics-ingress
    uid: 5486bef5-c01e-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: space-analytics-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: space-analytics-svc
            servicePort: 80
          path: /
    - host: space-analytics-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: space-analytics-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - space-analytics-stage.test.k8s.target.com
      - space-analytics-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"space-analytics-oauth"},"name":"space-analytics-oauth-ingress","namespace":"snp-common-stage"},"spec":{"rules":[{"host":"space-analytics-oauth-api-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"space-analytics-oauth-svc","servicePort":80},"path":"/"}]}},{"host":"space-analytics-oauth-api-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"space-analytics-oauth-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["space-analytics-oauth-api-stage.test.k8s.target.com","space-analytics-oauth-api-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-24T17:12:52Z
    generation: 1
    labels:
      app: space-analytics-oauth
    name: space-analytics-oauth-ingress
    namespace: snp-common-stage
    resourceVersion: "27867154"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-stage/ingresses/space-analytics-oauth-ingress
    uid: 1226d46b-c01d-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: space-analytics-oauth-api-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: space-analytics-oauth-svc
            servicePort: 80
          path: /
    - host: space-analytics-oauth-api-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: space-analytics-oauth-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - space-analytics-oauth-api-stage.test.k8s.target.com
      - space-analytics-oauth-api-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planogram-swap-items-svc"},"name":"planogram-swap-items-svc-ingress","namespace":"snp-common-test"},"spec":{"rules":[{"host":"planogram-swap-items-svc-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-swap-items-svc","servicePort":80},"path":"/"}]}},{"host":"planogram-swap-items-svc-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-swap-items-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planogram-swap-items-svc-test.test.k8s.target.com","planogram-swap-items-svc-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-08T18:32:29Z
    generation: 1
    labels:
      app: planogram-swap-items-svc
    name: planogram-swap-items-svc-ingress
    namespace: snp-common-test
    resourceVersion: "122198466"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-test/ingresses/planogram-swap-items-svc-ingress
    uid: c175a950-1373-11e9-a3f2-525400a6ba56
  spec:
    rules:
    - host: planogram-swap-items-svc-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-swap-items-svc
            servicePort: 80
          path: /
    - host: planogram-swap-items-svc-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-swap-items-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planogram-swap-items-svc-test.test.k8s.target.com
      - planogram-swap-items-svc-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planograms-assist-svc"},"name":"planograms-assist-svc-ingress","namespace":"snp-common-test"},"spec":{"rules":[{"host":"planograms-assist-svc-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planograms-assist-svc-svc","servicePort":80},"path":"/"}]}},{"host":"planograms-assist-svc-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planograms-assist-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planograms-assist-svc-test.test.k8s.target.com","planograms-assist-svc-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T13:56:11Z
    generation: 1
    labels:
      app: planograms-assist-svc
    name: planograms-assist-svc-ingress
    namespace: snp-common-test
    resourceVersion: "26069828"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-test/ingresses/planograms-assist-svc-ingress
    uid: 18fabf79-bda6-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: planograms-assist-svc-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planograms-assist-svc-svc
            servicePort: 80
          path: /
    - host: planograms-assist-svc-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planograms-assist-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planograms-assist-svc-test.test.k8s.target.com
      - planograms-assist-svc-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-planogram-assist-ingress"},"name":"singularity-planogram-assist-ingress","namespace":"snp-common-test"},"spec":{"rules":[{"host":"singularity-planogram-assist-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-assist-service","servicePort":80},"path":"/"}]}},{"host":"singularity-planogram-assist-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-assist-service","servicePort":80},"path":"/"}]}},{"host":"singularity-planogram-assist-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-assist-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-planogram-assist-test.ttc-test.k8s.target.com","singularity-planogram-assist-test.tte-test.k8s.target.com","singularity-planogram-assist-test.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-16T18:25:23Z
    generation: 1
    labels:
      name: singularity-planogram-assist-ingress
    name: singularity-planogram-assist-ingress
    namespace: snp-common-test
    resourceVersion: "71056786"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-test/ingresses/singularity-planogram-assist-ingress
    uid: fb5791bf-e9cc-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: singularity-planogram-assist-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-assist-service
            servicePort: 80
          path: /
    - host: singularity-planogram-assist-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-assist-service
            servicePort: 80
          path: /
    - host: singularity-planogram-assist-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-assist-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-planogram-assist-test.ttc-test.k8s.target.com
      - singularity-planogram-assist-test.tte-test.k8s.target.com
      - singularity-planogram-assist-test.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-planogram-autofill-ingress"},"name":"singularity-planogram-autofill-ingress","namespace":"snp-common-test"},"spec":{"rules":[{"host":"singularity-planogram-autofill-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-autofill-service","servicePort":80},"path":"/"}]}},{"host":"singularity-planogram-autofill-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-autofill-service","servicePort":80},"path":"/"}]}},{"host":"singularity-planogram-autofill-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-autofill-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-planogram-autofill-test.ttc-test.k8s.target.com","singularity-planogram-autofill-test.tte-test.k8s.target.com","singularity-planogram-autofill-test.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-15T17:54:17Z
    generation: 1
    labels:
      name: singularity-planogram-autofill-ingress
    name: singularity-planogram-autofill-ingress
    namespace: snp-common-test
    resourceVersion: "70057056"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-test/ingresses/singularity-planogram-autofill-ingress
    uid: 7887764d-e8ff-11e8-999b-5254008d935f
  spec:
    rules:
    - host: singularity-planogram-autofill-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-autofill-service
            servicePort: 80
          path: /
    - host: singularity-planogram-autofill-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-autofill-service
            servicePort: 80
          path: /
    - host: singularity-planogram-autofill-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-autofill-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-planogram-autofill-test.ttc-test.k8s.target.com
      - singularity-planogram-autofill-test.tte-test.k8s.target.com
      - singularity-planogram-autofill-test.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-planogram-update-ingress"},"name":"singularity-planogram-update-ingress","namespace":"snp-common-test"},"spec":{"rules":[{"host":"singularity-planogram-update-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-update-service","servicePort":80},"path":"/"}]}},{"host":"singularity-planogram-update-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-update-service","servicePort":80},"path":"/"}]}},{"host":"singularity-planogram-update-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-update-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-planogram-update-test.ttc-test.k8s.target.com","singularity-planogram-update-test.tte-test.k8s.target.com","singularity-planogram-update-test.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-05T16:52:02Z
    generation: 1
    labels:
      name: singularity-planogram-update-ingress
    name: singularity-planogram-update-ingress
    namespace: snp-common-test
    resourceVersion: "35051135"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-test/ingresses/singularity-planogram-update-ingress
    uid: fb601b19-c8be-11e8-93f3-5254000c5c7e
  spec:
    rules:
    - host: singularity-planogram-update-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-update-service
            servicePort: 80
          path: /
    - host: singularity-planogram-update-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-update-service
            servicePort: 80
          path: /
    - host: singularity-planogram-update-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-update-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-planogram-update-test.ttc-test.k8s.target.com
      - singularity-planogram-update-test.tte-test.k8s.target.com
      - singularity-planogram-update-test.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-pog-assist-ingress"},"name":"singularity-pog-assist-ingress","namespace":"snp-common-test"},"spec":{"rules":[{"host":"singularity-pog-assist-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-pog-assist-service","servicePort":80},"path":"/"}]}},{"host":"singularity-pog-assist-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-pog-assist-service","servicePort":80},"path":"/"}]}},{"host":"singularity-pog-assist-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-pog-assist-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-pog-assist-test.ttc-test.k8s.target.com","singularity-pog-assist-test.tte-test.k8s.target.com","singularity-pog-assist-test.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-01T14:36:02Z
    generation: 2
    labels:
      name: singularity-pog-assist-ingress
    name: singularity-pog-assist-ingress
    namespace: snp-common-test
    resourceVersion: "33811833"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-test/ingresses/singularity-pog-assist-ingress
    uid: 5221f1d2-c587-11e8-93a6-525400dd15a8
  spec:
    rules:
    - host: singularity-pog-assist-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-pog-assist-service
            servicePort: 80
          path: /
    - host: singularity-pog-assist-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-pog-assist-service
            servicePort: 80
          path: /
    - host: singularity-pog-assist-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-pog-assist-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-pog-assist-test.ttc-test.k8s.target.com
      - singularity-pog-assist-test.tte-test.k8s.target.com
      - singularity-pog-assist-test.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"space-analytics-api"},"name":"space-analytics-api-ingress","namespace":"snp-common-test"},"spec":{"rules":[{"host":"space-analytics-api-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"space-analytics-api-svc","servicePort":80},"path":"/"}]}},{"host":"space-analytics-api-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"space-analytics-api-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["space-analytics-api-test.test.k8s.target.com","space-analytics-api-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T19:59:25Z
    generation: 1
    labels:
      app: space-analytics-api
    name: space-analytics-api-ingress
    namespace: snp-common-test
    resourceVersion: "25690063"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-test/ingresses/space-analytics-api-ingress
    uid: acf3e6b3-bd0f-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: space-analytics-api-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: space-analytics-api-svc
            servicePort: 80
          path: /
    - host: space-analytics-api-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: space-analytics-api-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - space-analytics-api-test.test.k8s.target.com
      - space-analytics-api-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"space-analytics"},"name":"space-analytics-ingress","namespace":"snp-common-test"},"spec":{"rules":[{"host":"space-analytics-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"space-analytics-svc","servicePort":80},"path":"/"}]}},{"host":"space-analytics-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"space-analytics-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["space-analytics-test.test.k8s.target.com","space-analytics-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-24T14:16:46Z
    generation: 1
    labels:
      app: space-analytics
    name: space-analytics-ingress
    namespace: snp-common-test
    resourceVersion: "27785746"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-test/ingresses/space-analytics-ingress
    uid: 781dda8f-c004-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: space-analytics-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: space-analytics-svc
            servicePort: 80
          path: /
    - host: space-analytics-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: space-analytics-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - space-analytics-test.test.k8s.target.com
      - space-analytics-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"space-analytics-oauth"},"name":"space-analytics-oauth-ingress","namespace":"snp-common-test"},"spec":{"rules":[{"host":"space-analytics-oauth-api-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"space-analytics-oauth-svc","servicePort":80},"path":"/"}]}},{"host":"space-analytics-oauth-api-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"space-analytics-oauth-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["space-analytics-oauth-api-test.test.k8s.target.com","space-analytics-oauth-api-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-19T15:19:28Z
    generation: 1
    labels:
      app: space-analytics-oauth
    name: space-analytics-oauth-ingress
    namespace: snp-common-test
    resourceVersion: "25030996"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-test/ingresses/space-analytics-oauth-ingress
    uid: 66b15dc8-bc1f-11e8-8fe0-525400bc6d51
  spec:
    rules:
    - host: space-analytics-oauth-api-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: space-analytics-oauth-svc
            servicePort: 80
          path: /
    - host: space-analytics-oauth-api-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: space-analytics-oauth-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - space-analytics-oauth-api-test.test.k8s.target.com
      - space-analytics-oauth-api-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"hubble-locations-svc"},"name":"hubble-locations-svc-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"hubble-locations-svc-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"hubble-locations-svc-svc","servicePort":80},"path":"/"}]}},{"host":"hubble-locations-svc-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"hubble-locations-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["hubble-locations-svc-dev.test.k8s.target.com","hubble-locations-svc-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-19T13:17:55Z
    generation: 1
    labels:
      app: hubble-locations-svc
    name: hubble-locations-svc-ingress
    namespace: snp-core-api-dev
    resourceVersion: "24987899"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/hubble-locations-svc-ingress
    uid: 6b61ec25-bc0e-11e8-8fe0-525400bc6d51
  spec:
    rules:
    - host: hubble-locations-svc-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: hubble-locations-svc-svc
            servicePort: 80
          path: /
    - host: hubble-locations-svc-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: hubble-locations-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - hubble-locations-svc-dev.test.k8s.target.com
      - hubble-locations-svc-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-adjacency-svc"},"name":"merch-adjacency-svc-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"merch-adjacency-svc-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-adjacency-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-adjacency-svc-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-adjacency-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-adjacency-svc-dev.test.k8s.target.com","merch-adjacency-svc-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-19T15:22:38Z
    generation: 1
    labels:
      app: merch-adjacency-svc
    name: merch-adjacency-svc-ingress
    namespace: snp-core-api-dev
    resourceVersion: "25032706"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/merch-adjacency-svc-ingress
    uid: d7de78f1-bc1f-11e8-8fe0-525400bc6d51
  spec:
    rules:
    - host: merch-adjacency-svc-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-adjacency-svc-svc
            servicePort: 80
          path: /
    - host: merch-adjacency-svc-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-adjacency-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-adjacency-svc-dev.test.k8s.target.com
      - merch-adjacency-svc-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-cad-inputs-svc"},"name":"merch-cad-inputs-svc-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"merch-cad-inputs-svc-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-cad-inputs-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-cad-inputs-svc-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-cad-inputs-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-cad-inputs-svc-dev.test.k8s.target.com","merch-cad-inputs-svc-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-23T18:29:18Z
    generation: 1
    labels:
      app: merch-cad-inputs-svc
    name: merch-cad-inputs-svc-ingress
    namespace: snp-core-api-dev
    resourceVersion: "137204856"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/merch-cad-inputs-svc-ingress
    uid: cb882019-1f3c-11e9-9827-525400b2c783
  spec:
    rules:
    - host: merch-cad-inputs-svc-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-cad-inputs-svc-svc
            servicePort: 80
          path: /
    - host: merch-cad-inputs-svc-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-cad-inputs-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-cad-inputs-svc-dev.test.k8s.target.com
      - merch-cad-inputs-svc-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-category-svc-v3"},"name":"merch-category-svc-v3-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"merch-category-svc-v3-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-category-svc-v3-svc","servicePort":80},"path":"/"}]}},{"host":"merch-category-svc-v3-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-category-svc-v3-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-category-svc-v3-dev.test.k8s.target.com","merch-category-svc-v3-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T14:20:54Z
    generation: 1
    labels:
      app: merch-category-svc-v3
    name: merch-category-svc-v3-ingress
    namespace: snp-core-api-dev
    resourceVersion: "25556493"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/merch-category-svc-v3-ingress
    uid: 62af36a0-bce0-11e8-8bab-525400df3355
  spec:
    rules:
    - host: merch-category-svc-v3-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-category-svc-v3-svc
            servicePort: 80
          path: /
    - host: merch-category-svc-v3-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-category-svc-v3-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-category-svc-v3-dev.test.k8s.target.com
      - merch-category-svc-v3-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-project-reports-svc-v2"},"name":"merch-project-reports-svc-v2-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"merch-project-reports-svc-v2-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-project-reports-svc-v2-svc","servicePort":80},"path":"/"}]}},{"host":"merch-project-reports-svc-v2-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-project-reports-svc-v2-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-project-reports-svc-v2-dev.test.k8s.target.com","merch-project-reports-svc-v2-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-07T14:54:10Z
    generation: 1
    labels:
      app: merch-project-reports-svc-v2
    name: merch-project-reports-svc-v2-ingress
    namespace: snp-core-api-dev
    resourceVersion: "62576368"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/merch-project-reports-svc-v2-ingress
    uid: fc44c30e-e29c-11e8-999b-5254008d935f
  spec:
    rules:
    - host: merch-project-reports-svc-v2-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-project-reports-svc-v2-svc
            servicePort: 80
          path: /
    - host: merch-project-reports-svc-v2-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-project-reports-svc-v2-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-project-reports-svc-v2-dev.test.k8s.target.com
      - merch-project-reports-svc-v2-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-project-svc-v3"},"name":"merch-project-svc-v3-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"merch-project-svc-v3-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-project-svc-v3-svc","servicePort":80},"path":"/"}]}},{"host":"merch-project-svc-v3-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-project-svc-v3-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-project-svc-v3-dev.test.k8s.target.com","merch-project-svc-v3-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-12T19:21:22Z
    generation: 1
    labels:
      app: merch-project-svc-v3
    name: merch-project-svc-v3-ingress
    namespace: snp-core-api-dev
    resourceVersion: "40033401"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/merch-project-svc-v3-ingress
    uid: 013a8459-ce54-11e8-999f-52540096678d
  spec:
    rules:
    - host: merch-project-svc-v3-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-project-svc-v3-svc
            servicePort: 80
          path: /
    - host: merch-project-svc-v3-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-project-svc-v3-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-project-svc-v3-dev.test.k8s.target.com
      - merch-project-svc-v3-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-remodels-svc"},"name":"merch-remodels-svc-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"merch-remodels-svc-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-remodels-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-remodels-svc-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-remodels-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-remodels-svc-dev.test.k8s.target.com","merch-remodels-svc-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-07T15:34:10Z
    generation: 1
    labels:
      app: merch-remodels-svc
    name: merch-remodels-svc-ingress
    namespace: snp-core-api-dev
    resourceVersion: "90980298"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/merch-remodels-svc-ingress
    uid: 8aadc178-fa35-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: merch-remodels-svc-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-remodels-svc-svc
            servicePort: 80
          path: /
    - host: merch-remodels-svc-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-remodels-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-remodels-svc-dev.test.k8s.target.com
      - merch-remodels-svc-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-ties-svc"},"name":"merch-ties-svc-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"merch-ties-svc-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-ties-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-ties-svc-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-ties-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-ties-svc-dev.test.k8s.target.com","merch-ties-svc-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-05T18:16:28Z
    generation: 1
    labels:
      app: merch-ties-svc
    name: merch-ties-svc-ingress
    namespace: snp-core-api-dev
    resourceVersion: "89124301"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/merch-ties-svc-ingress
    uid: e28cf22e-f8b9-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: merch-ties-svc-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-ties-svc-svc
            servicePort: 80
          path: /
    - host: merch-ties-svc-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-ties-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-ties-svc-dev.test.k8s.target.com
      - merch-ties-svc-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-transition-store-placements-svc"},"name":"merch-transition-store-placements-svc-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"merch-transition-store-placements-svc-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-transition-store-placements-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-transition-store-placements-svc-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-transition-store-placements-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-transition-store-placements-svc-dev.test.k8s.target.com","merch-transition-store-placements-svc-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-25T17:05:38Z
    generation: 1
    labels:
      app: merch-transition-store-placements-svc
    name: merch-transition-store-placements-svc-ingress
    namespace: snp-core-api-dev
    resourceVersion: "139545293"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/merch-transition-store-placements-svc-ingress
    uid: 70191a78-20c3-11e9-98b3-525400592674
  spec:
    rules:
    - host: merch-transition-store-placements-svc-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-transition-store-placements-svc-svc
            servicePort: 80
          path: /
    - host: merch-transition-store-placements-svc-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-transition-store-placements-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-transition-store-placements-svc-dev.test.k8s.target.com
      - merch-transition-store-placements-svc-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-transition-stores-svc"},"name":"merch-transition-stores-svc-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"merch-transition-stores-svc-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-transition-stores-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-transition-stores-svc-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-transition-stores-svc-svc","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-01-16T14:08:33Z
    generation: 1
    labels:
      app: merch-transition-stores-svc
    name: merch-transition-stores-svc-ingress
    namespace: snp-core-api-dev
    resourceVersion: "129902571"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/merch-transition-stores-svc-ingress
    uid: 35bfc3d5-1998-11e9-a7f3-52540072a6ea
  spec:
    rules:
    - host: merch-transition-stores-svc-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-transition-stores-svc-svc
            servicePort: 80
          path: /
    - host: merch-transition-stores-svc-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-transition-stores-svc-svc
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-workers"},"name":"merch-workers-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"merch-workers-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-workers-svc","servicePort":80},"path":"/"}]}},{"host":"merch-workers-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-workers-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-workers-dev.test.k8s.target.com","merch-workers-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-25T19:34:10Z
    generation: 1
    labels:
      app: merch-workers
    name: merch-workers-ingress
    namespace: snp-core-api-dev
    resourceVersion: "50941795"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/merch-workers-ingress
    uid: f256379a-d88c-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: merch-workers-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-workers-svc
            servicePort: 80
          path: /
    - host: merch-workers-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-workers-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-workers-dev.test.k8s.target.com
      - merch-workers-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planogram-drawings-api"},"name":"planogram-drawings-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"planogram-drawings-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-drawings-svc","servicePort":80},"path":"/"}]}},{"host":"planogram-drawings-api-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-drawings-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planogram-drawings-api-dev.test.k8s.target.com","planogram-drawings-api-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-19T20:47:00Z
    generation: 1
    labels:
      app: planogram-drawings-api
    name: planogram-drawings-ingress
    namespace: snp-core-api-dev
    resourceVersion: "25166103"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/planogram-drawings-ingress
    uid: 283c3497-bc4d-11e8-b40e-5254004139fa
  spec:
    rules:
    - host: planogram-drawings-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-drawings-svc
            servicePort: 80
          path: /
    - host: planogram-drawings-api-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-drawings-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planogram-drawings-api-dev.test.k8s.target.com
      - planogram-drawings-api-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planogram-fixtures-api"},"name":"planogram-fixtures-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"planogram-fixtures-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-fixtures-svc","servicePort":80},"path":"/"}]}},{"host":"planogram-fixtures-api-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-fixtures-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planogram-fixtures-api-dev.test.k8s.target.com","planogram-fixtures-api-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-18T05:31:42Z
    generation: 1
    labels:
      app: planogram-fixtures-api
    name: planogram-fixtures-ingress
    namespace: snp-core-api-dev
    resourceVersion: "24187521"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/planogram-fixtures-ingress
    uid: 1ff371ed-bb04-11e8-88c5-5254004139fa
  spec:
    rules:
    - host: planogram-fixtures-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-fixtures-svc
            servicePort: 80
          path: /
    - host: planogram-fixtures-api-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-fixtures-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planogram-fixtures-api-dev.test.k8s.target.com
      - planogram-fixtures-api-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planogram-generations-api"},"name":"planogram-generations-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"planogram-generations-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-generations-svc","servicePort":80},"path":"/"}]}},{"host":"planogram-generations-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-generations-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planogram-generations-dev.test.k8s.target.com","planogram-generations-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T07:12:49Z
    generation: 1
    labels:
      app: planogram-generations-api
    name: planogram-generations-ingress
    namespace: snp-core-api-dev
    resourceVersion: "25410171"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/planogram-generations-ingress
    uid: 952c4641-bca4-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: planogram-generations-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-generations-svc
            servicePort: 80
          path: /
    - host: planogram-generations-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-generations-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planogram-generations-dev.test.k8s.target.com
      - planogram-generations-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planogram-items-api"},"name":"planogram-items-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"planogram-items-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-items-svc","servicePort":80},"path":"/"}]}},{"host":"planogram-items-api-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-items-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planogram-items-api-dev.test.k8s.target.com","planogram-items-api-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-19T16:54:05Z
    generation: 1
    labels:
      app: planogram-items-api
    name: planogram-items-ingress
    namespace: snp-core-api-dev
    resourceVersion: "25067073"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/planogram-items-ingress
    uid: 9e0b2008-bc2c-11e8-b40e-5254004139fa
  spec:
    rules:
    - host: planogram-items-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-items-svc
            servicePort: 80
          path: /
    - host: planogram-items-api-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-items-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planogram-items-api-dev.test.k8s.target.com
      - planogram-items-api-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planogram-stores-api"},"name":"planogram-stores-api-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"planogram-stores-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-stores-api","servicePort":80},"path":"/"}]}},{"host":"planogram-stores-api-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-stores-api","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planogram-stores-api-dev.test.k8s.target.com","planogram-stores-api-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T05:53:05Z
    generation: 1
    labels:
      app: planogram-stores-api
    name: planogram-stores-api-ingress
    namespace: snp-core-api-dev
    resourceVersion: "25898107"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/planogram-stores-api-ingress
    uid: 9bfd6c70-bd62-11e8-bc70-5254004139fa
  spec:
    rules:
    - host: planogram-stores-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-stores-api
            servicePort: 80
          path: /
    - host: planogram-stores-api-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-stores-api
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planogram-stores-api-dev.test.k8s.target.com
      - planogram-stores-api-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planograms-api"},"name":"planograms-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"planograms-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planograms-svc","servicePort":80},"path":"/"}]}},{"host":"planograms-api-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planograms-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planograms-api-dev.test.k8s.target.com","planograms-api-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T01:31:06Z
    generation: 1
    labels:
      app: planograms-api
    name: planograms-ingress
    namespace: snp-core-api-dev
    resourceVersion: "25290329"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/planograms-ingress
    uid: d862d3e1-bc74-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: planograms-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planograms-svc
            servicePort: 80
          path: /
    - host: planograms-api-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planograms-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planograms-api-dev.test.k8s.target.com
      - planograms-api-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-department-svc"},"name":"presentation-department-svc-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"presentation-department-svc-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-department-svc-svc","servicePort":80},"path":"/"}]}},{"host":"presentation-department-svc-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-department-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-department-svc-dev.test.k8s.target.com","presentation-department-svc-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-18T15:00:10Z
    generation: 2
    labels:
      app: presentation-department-svc
    name: presentation-department-svc-ingress
    namespace: snp-core-api-dev
    resourceVersion: "24432532"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/presentation-department-svc-ingress
    uid: 89f10358-bb53-11e8-88c5-5254004139fa
  spec:
    rules:
    - host: presentation-department-svc-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-department-svc-svc
            servicePort: 80
          path: /
    - host: presentation-department-svc-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-department-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-department-svc-dev.test.k8s.target.com
      - presentation-department-svc-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-display-stores-api"},"name":"presentation-display-stores-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"presentation-display-stores-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pres-display-stores-svc","servicePort":80},"path":"/"}]}},{"host":"presentation-display-stores-api-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pres-display-stores-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-display-stores-api-dev.test.k8s.target.com","presentation-display-stores-api-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T01:38:10Z
    generation: 1
    labels:
      app: presentation-display-stores-api
    name: presentation-display-stores-ingress
    namespace: snp-core-api-dev
    resourceVersion: "25292929"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/presentation-display-stores-ingress
    uid: d4f6343d-bc75-11e8-bc70-5254004139fa
  spec:
    rules:
    - host: presentation-display-stores-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pres-display-stores-svc
            servicePort: 80
          path: /
    - host: presentation-display-stores-api-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pres-display-stores-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-display-stores-api-dev.test.k8s.target.com
      - presentation-display-stores-api-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-item-checkins-api"},"name":"presentation-item-checkins-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"presentation-item-checkins-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-item-checkins-svc","servicePort":80},"path":"/"}]}},{"host":"presentation-item-checkins-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-item-checkins-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-item-checkins-api-dev.test.k8s.target.com","presentation-item-checkins-api-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T01:56:55Z
    generation: 1
    labels:
      app: presentation-item-checkins-api
    name: presentation-item-checkins-ingress
    namespace: snp-core-api-dev
    resourceVersion: "25815464"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/presentation-item-checkins-ingress
    uid: 9da51e21-bd41-11e8-bc70-5254004139fa
  spec:
    rules:
    - host: presentation-item-checkins-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-item-checkins-svc
            servicePort: 80
          path: /
    - host: presentation-item-checkins-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-item-checkins-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-item-checkins-api-dev.test.k8s.target.com
      - presentation-item-checkins-api-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-items-api"},"name":"presentation-items-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"presentation-items-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-items-svc","servicePort":80},"path":"/"}]}},{"host":"presentation-items-api-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-items-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-items-api-dev.test.k8s.target.com","presentation-items-api-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T18:39:20Z
    generation: 1
    labels:
      app: presentation-items-api
    name: presentation-items-ingress
    namespace: snp-core-api-dev
    resourceVersion: "25659225"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/presentation-items-ingress
    uid: 7ce552c9-bd04-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: presentation-items-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-items-svc
            servicePort: 80
          path: /
    - host: presentation-items-api-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-items-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-items-api-dev.test.k8s.target.com
      - presentation-items-api-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-subgroups-api"},"name":"presentation-subgroups-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"presentation-subgroups-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-subgroups-svc","servicePort":80},"path":"/"}]}},{"host":"presentation-subgroups-api-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-subgroups-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-subgroups-api-dev.test.k8s.target.com","presentation-subgroups-api-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T02:35:49Z
    generation: 1
    labels:
      app: presentation-subgroups-api
    name: presentation-subgroups-ingress
    namespace: snp-core-api-dev
    resourceVersion: "25829643"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/presentation-subgroups-ingress
    uid: 0d079fa8-bd47-11e8-8bab-525400df3355
  spec:
    rules:
    - host: presentation-subgroups-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-subgroups-svc
            servicePort: 80
          path: /
    - host: presentation-subgroups-api-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-subgroups-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-subgroups-api-dev.test.k8s.target.com
      - presentation-subgroups-api-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"hubble-locations-svc"},"name":"hubble-locations-svc-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"hubble-locations-svc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"hubble-locations-svc-svc","servicePort":80},"path":"/"}]}},{"host":"hubble-locations-svc-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"hubble-locations-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["hubble-locations-svc-stage.test.k8s.target.com","hubble-locations-svc-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-02T17:11:31Z
    generation: 1
    labels:
      app: hubble-locations-svc
    name: hubble-locations-svc-ingress
    namespace: snp-core-api-stage
    resourceVersion: "33060280"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/hubble-locations-svc-ingress
    uid: 34fbe4f3-c666-11e8-bad5-525400b91df9
  spec:
    rules:
    - host: hubble-locations-svc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: hubble-locations-svc-svc
            servicePort: 80
          path: /
    - host: hubble-locations-svc-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: hubble-locations-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - hubble-locations-svc-stage.test.k8s.target.com
      - hubble-locations-svc-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-adjacency-svc"},"name":"merch-adjacency-svc-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"merch-adjacency-svc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-adjacency-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-adjacency-svc-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-adjacency-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-adjacency-svc-stage.test.k8s.target.com","merch-adjacency-svc-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-19T19:21:08Z
    generation: 1
    labels:
      app: merch-adjacency-svc
    name: merch-adjacency-svc-ingress
    namespace: snp-core-api-stage
    resourceVersion: "25120608"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/merch-adjacency-svc-ingress
    uid: 290302c2-bc41-11e8-8fe0-525400bc6d51
  spec:
    rules:
    - host: merch-adjacency-svc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-adjacency-svc-svc
            servicePort: 80
          path: /
    - host: merch-adjacency-svc-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-adjacency-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-adjacency-svc-stage.test.k8s.target.com
      - merch-adjacency-svc-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-cad-inputs-svc"},"name":"merch-cad-inputs-svc-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"merch-cad-inputs-svc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-cad-inputs-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-cad-inputs-svc-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-cad-inputs-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-cad-inputs-svc-stage.test.k8s.target.com","merch-cad-inputs-svc-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-24T18:51:51Z
    generation: 1
    labels:
      app: merch-cad-inputs-svc
    name: merch-cad-inputs-svc-ingress
    namespace: snp-core-api-stage
    resourceVersion: "138172208"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/merch-cad-inputs-svc-ingress
    uid: 1c762d79-2009-11e9-a834-525400f586f1
  spec:
    rules:
    - host: merch-cad-inputs-svc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-cad-inputs-svc-svc
            servicePort: 80
          path: /
    - host: merch-cad-inputs-svc-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-cad-inputs-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-cad-inputs-svc-stage.test.k8s.target.com
      - merch-cad-inputs-svc-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-category-svc-v3"},"name":"merch-category-svc-v3-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"merch-category-svc-v3-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-category-svc-v3-svc","servicePort":80},"path":"/"}]}},{"host":"merch-category-svc-v3-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-category-svc-v3-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-category-svc-v3-stage.test.k8s.target.com","merch-category-svc-v3-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T15:32:39Z
    generation: 1
    labels:
      app: merch-category-svc-v3
    name: merch-category-svc-v3-ingress
    namespace: snp-core-api-stage
    resourceVersion: "25585141"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/merch-category-svc-v3-ingress
    uid: 68679797-bcea-11e8-bc70-5254004139fa
  spec:
    rules:
    - host: merch-category-svc-v3-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-category-svc-v3-svc
            servicePort: 80
          path: /
    - host: merch-category-svc-v3-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-category-svc-v3-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-category-svc-v3-stage.test.k8s.target.com
      - merch-category-svc-v3-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-project-reports-svc-v2"},"name":"merch-project-reports-svc-v2-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"merch-project-reports-svc-v2-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-project-reports-svc-v2-svc","servicePort":80},"path":"/"}]}},{"host":"merch-project-reports-svc-v2-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-project-reports-svc-v2-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-project-reports-svc-v2-stage.test.k8s.target.com","merch-project-reports-svc-v2-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-08T21:43:19Z
    generation: 1
    labels:
      app: merch-project-reports-svc-v2
    name: merch-project-reports-svc-v2-ingress
    namespace: snp-core-api-stage
    resourceVersion: "63770558"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/merch-project-reports-svc-v2-ingress
    uid: 4f00e346-e39f-11e8-999b-5254008d935f
  spec:
    rules:
    - host: merch-project-reports-svc-v2-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-project-reports-svc-v2-svc
            servicePort: 80
          path: /
    - host: merch-project-reports-svc-v2-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-project-reports-svc-v2-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-project-reports-svc-v2-stage.test.k8s.target.com
      - merch-project-reports-svc-v2-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-project-svc-v3"},"name":"merch-project-svc-v3-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"merch-project-svc-v3-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-project-svc-v3-svc","servicePort":80},"path":"/"}]}},{"host":"merch-project-svc-v3-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-project-svc-v3-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-project-svc-v3-stage.test.k8s.target.com","merch-project-svc-v3-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-12T19:27:51Z
    generation: 1
    labels:
      app: merch-project-svc-v3
    name: merch-project-svc-v3-ingress
    namespace: snp-core-api-stage
    resourceVersion: "40037108"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/merch-project-svc-v3-ingress
    uid: e92ae40a-ce54-11e8-999f-52540096678d
  spec:
    rules:
    - host: merch-project-svc-v3-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-project-svc-v3-svc
            servicePort: 80
          path: /
    - host: merch-project-svc-v3-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-project-svc-v3-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-project-svc-v3-stage.test.k8s.target.com
      - merch-project-svc-v3-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-remodels-svc"},"name":"merch-remodels-svc-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"merch-remodels-svc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-remodels-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-remodels-svc-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-remodels-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-remodels-svc-stage.test.k8s.target.com","merch-remodels-svc-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-07T18:57:59Z
    generation: 1
    labels:
      app: merch-remodels-svc
    name: merch-remodels-svc-ingress
    namespace: snp-core-api-stage
    resourceVersion: "91124887"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/merch-remodels-svc-ingress
    uid: 0421c589-fa52-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: merch-remodels-svc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-remodels-svc-svc
            servicePort: 80
          path: /
    - host: merch-remodels-svc-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-remodels-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-remodels-svc-stage.test.k8s.target.com
      - merch-remodels-svc-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-ties-svc"},"name":"merch-ties-svc-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"merch-ties-svc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-ties-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-ties-svc-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-ties-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-ties-svc-stage.test.k8s.target.com","merch-ties-svc-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-05T20:02:17Z
    generation: 1
    labels:
      app: merch-ties-svc
    name: merch-ties-svc-ingress
    namespace: snp-core-api-stage
    resourceVersion: "89200514"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/merch-ties-svc-ingress
    uid: aa772ff1-f8c8-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: merch-ties-svc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-ties-svc-svc
            servicePort: 80
          path: /
    - host: merch-ties-svc-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-ties-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-ties-svc-stage.test.k8s.target.com
      - merch-ties-svc-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-transition-store-placements-svc"},"name":"merch-transition-store-placements-svc-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"merch-transition-store-placements-svc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-transition-store-placements-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-transition-store-placements-svc-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-transition-store-placements-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-transition-store-placements-svc-stage.test.k8s.target.com","merch-transition-store-placements-svc-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-28T15:58:40Z
    generation: 1
    labels:
      app: merch-transition-store-placements-svc
    name: merch-transition-store-placements-svc-ingress
    namespace: snp-core-api-stage
    resourceVersion: "142208225"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/merch-transition-store-placements-svc-ingress
    uid: 94ba29da-2315-11e9-9f4c-52540007c5b2
  spec:
    rules:
    - host: merch-transition-store-placements-svc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-transition-store-placements-svc-svc
            servicePort: 80
          path: /
    - host: merch-transition-store-placements-svc-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-transition-store-placements-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-transition-store-placements-svc-stage.test.k8s.target.com
      - merch-transition-store-placements-svc-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-transition-stores-svc"},"name":"merch-transition-stores-svc-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"merch-transition-stores-svc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-transition-stores-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-transition-stores-svc-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-transition-stores-svc-svc","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-01-16T14:56:31Z
    generation: 1
    labels:
      app: merch-transition-stores-svc
    name: merch-transition-stores-svc-ingress
    namespace: snp-core-api-stage
    resourceVersion: "129936217"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/merch-transition-stores-svc-ingress
    uid: e90605d0-199e-11e9-a7f3-52540072a6ea
  spec:
    rules:
    - host: merch-transition-stores-svc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-transition-stores-svc-svc
            servicePort: 80
          path: /
    - host: merch-transition-stores-svc-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-transition-stores-svc-svc
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-workers"},"name":"merch-workers-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"merch-workers-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-workers-svc","servicePort":80},"path":"/"}]}},{"host":"merch-workers-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-workers-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-workers-stage.test.k8s.target.com","merch-workers-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-25T19:56:51Z
    generation: 1
    labels:
      app: merch-workers
    name: merch-workers-ingress
    namespace: snp-core-api-stage
    resourceVersion: "50957123"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/merch-workers-ingress
    uid: 1d81256e-d890-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: merch-workers-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-workers-svc
            servicePort: 80
          path: /
    - host: merch-workers-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-workers-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-workers-stage.test.k8s.target.com
      - merch-workers-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planogram-drawings-api"},"name":"planogram-drawings-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"planogram-drawings-api-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-drawings-svc","servicePort":80},"path":"/"}]}},{"host":"planogram-drawings-api-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-drawings-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planogram-drawings-api-stage.test.k8s.target.com","planogram-drawings-api-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-19T20:56:57Z
    generation: 1
    labels:
      app: planogram-drawings-api
    name: planogram-drawings-ingress
    namespace: snp-core-api-stage
    resourceVersion: "25170288"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/planogram-drawings-ingress
    uid: 8c2208ca-bc4e-11e8-b40e-5254004139fa
  spec:
    rules:
    - host: planogram-drawings-api-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-drawings-svc
            servicePort: 80
          path: /
    - host: planogram-drawings-api-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-drawings-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planogram-drawings-api-stage.test.k8s.target.com
      - planogram-drawings-api-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planogram-fixtures-api"},"name":"planogram-fixtures-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"planogram-fixtures-api-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-fixtures-svc","servicePort":80},"path":"/"}]}},{"host":"planogram-fixtures-api-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-fixtures-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planogram-fixtures-api-stage.test.k8s.target.com","planogram-fixtures-api-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-18T06:12:07Z
    generation: 1
    labels:
      app: planogram-fixtures-api
    name: planogram-fixtures-ingress
    namespace: snp-core-api-stage
    resourceVersion: "24202732"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/planogram-fixtures-ingress
    uid: c57a2558-bb09-11e8-842d-525400df3355
  spec:
    rules:
    - host: planogram-fixtures-api-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-fixtures-svc
            servicePort: 80
          path: /
    - host: planogram-fixtures-api-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-fixtures-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planogram-fixtures-api-stage.test.k8s.target.com
      - planogram-fixtures-api-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planogram-generations-api"},"name":"planogram-generations-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"planogram-generations-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-generations-svc","servicePort":80},"path":"/"}]}},{"host":"planogram-generations-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-generations-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planogram-generations-stage.test.k8s.target.com","planogram-generations-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T07:18:58Z
    generation: 1
    labels:
      app: planogram-generations-api
    name: planogram-generations-ingress
    namespace: snp-core-api-stage
    resourceVersion: "25412399"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/planogram-generations-ingress
    uid: 712d9eeb-bca5-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: planogram-generations-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-generations-svc
            servicePort: 80
          path: /
    - host: planogram-generations-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-generations-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planogram-generations-stage.test.k8s.target.com
      - planogram-generations-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planogram-items-api"},"name":"planogram-items-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"planogram-items-api-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-items-svc","servicePort":80},"path":"/"}]}},{"host":"planogram-items-api-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-items-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planogram-items-api-stage.test.k8s.target.com","planogram-items-api-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-19T19:05:44Z
    generation: 1
    labels:
      app: planogram-items-api
    name: planogram-items-ingress
    namespace: snp-core-api-stage
    resourceVersion: "25115053"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/planogram-items-ingress
    uid: 027bbee9-bc3f-11e8-9cda-525400df3355
  spec:
    rules:
    - host: planogram-items-api-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-items-svc
            servicePort: 80
          path: /
    - host: planogram-items-api-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-items-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planogram-items-api-stage.test.k8s.target.com
      - planogram-items-api-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planogram-segments-api"},"name":"planogram-segments-api","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"planogram-segments-api-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-segments-api-k8svc","servicePort":80},"path":"/"}]}},{"host":"planogram-segments-api-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-segments-api-k8svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planogram-segments-api-stage.test.k8s.target.com","planogram-segments-api-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-24T09:40:46Z
    generation: 1
    labels:
      app: planogram-segments-api
    name: planogram-segments-api
    namespace: snp-core-api-stage
    resourceVersion: "27672736"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/planogram-segments-api
    uid: e989e0d2-bfdd-11e8-8bab-525400df3355
  spec:
    rules:
    - host: planogram-segments-api-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-segments-api-k8svc
            servicePort: 80
          path: /
    - host: planogram-segments-api-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-segments-api-k8svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planogram-segments-api-stage.test.k8s.target.com
      - planogram-segments-api-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planogram-stores-api"},"name":"planogram-stores-api-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"planogram-stores-api-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-stores-api","servicePort":80},"path":"/"}]}},{"host":"planogram-stores-api-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-stores-api","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planogram-stores-api-stage.test.k8s.target.com","planogram-stores-api-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T06:00:22Z
    generation: 1
    labels:
      app: planogram-stores-api
    name: planogram-stores-api-ingress
    namespace: snp-core-api-stage
    resourceVersion: "25900698"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/planogram-stores-api-ingress
    uid: a0457f78-bd63-11e8-bc70-5254004139fa
  spec:
    rules:
    - host: planogram-stores-api-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-stores-api
            servicePort: 80
          path: /
    - host: planogram-stores-api-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-stores-api
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planogram-stores-api-stage.test.k8s.target.com
      - planogram-stores-api-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planograms-api"},"name":"planograms-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"planograms-api-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planograms-svc","servicePort":80},"path":"/"}]}},{"host":"planograms-api-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planograms-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planograms-api-stage.test.k8s.target.com","planograms-api-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T10:50:33Z
    generation: 1
    labels:
      app: planograms-api
    name: planograms-ingress
    namespace: snp-core-api-stage
    resourceVersion: "25483775"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/planograms-ingress
    uid: ffab9363-bcc2-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: planograms-api-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planograms-svc
            servicePort: 80
          path: /
    - host: planograms-api-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planograms-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planograms-api-stage.test.k8s.target.com
      - planograms-api-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-department-svc"},"name":"presentation-department-svc-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"presentation-department-svc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-department-svc-svc","servicePort":80},"path":"/"}]}},{"host":"presentation-department-svc-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-department-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-department-svc-stage.test.k8s.target.com","presentation-department-svc-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-18T18:11:37Z
    generation: 1
    labels:
      app: presentation-department-svc
    name: presentation-department-svc-ingress
    namespace: snp-core-api-stage
    resourceVersion: "24494034"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/presentation-department-svc-ingress
    uid: 48d67843-bb6e-11e8-88c5-5254004139fa
  spec:
    rules:
    - host: presentation-department-svc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-department-svc-svc
            servicePort: 80
          path: /
    - host: presentation-department-svc-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-department-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-department-svc-stage.test.k8s.target.com
      - presentation-department-svc-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-display-stores-api"},"name":"presentation-display-stores-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"presentation-display-stores-api-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pres-display-stores-svc","servicePort":80},"path":"/"}]}},{"host":"presentation-display-stores-api-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pres-display-stores-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-display-stores-api-stage.test.k8s.target.com","presentation-display-stores-api-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T14:27:30Z
    generation: 1
    labels:
      app: presentation-display-stores-api
    name: presentation-display-stores-ingress
    namespace: snp-core-api-stage
    resourceVersion: "25558851"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/presentation-display-stores-ingress
    uid: 4ebb4834-bce1-11e8-bc70-5254004139fa
  spec:
    rules:
    - host: presentation-display-stores-api-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pres-display-stores-svc
            servicePort: 80
          path: /
    - host: presentation-display-stores-api-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pres-display-stores-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-display-stores-api-stage.test.k8s.target.com
      - presentation-display-stores-api-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-item-checkins-api"},"name":"presentation-item-checkins-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"presentation-item-checkins-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-item-checkins-svc","servicePort":80},"path":"/"}]}},{"host":"presentation-item-checkins-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-item-checkins-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-item-checkins-stage.test.k8s.target.com","presentation-item-checkins-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T02:06:28Z
    generation: 1
    labels:
      app: presentation-item-checkins-api
    name: presentation-item-checkins-ingress
    namespace: snp-core-api-stage
    resourceVersion: "25818842"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/presentation-item-checkins-ingress
    uid: f3749c84-bd42-11e8-bc70-5254004139fa
  spec:
    rules:
    - host: presentation-item-checkins-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-item-checkins-svc
            servicePort: 80
          path: /
    - host: presentation-item-checkins-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-item-checkins-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-item-checkins-stage.test.k8s.target.com
      - presentation-item-checkins-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-items-api"},"name":"presentation-items-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"presentation-items-api-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-items-svc","servicePort":80},"path":"/"}]}},{"host":"presentation-items-api-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-items-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-items-api-stage.test.k8s.target.com","presentation-items-api-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T18:45:44Z
    generation: 1
    labels:
      app: presentation-items-api
    name: presentation-items-ingress
    namespace: snp-core-api-stage
    resourceVersion: "25661603"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/presentation-items-ingress
    uid: 61721ba2-bd05-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: presentation-items-api-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-items-svc
            servicePort: 80
          path: /
    - host: presentation-items-api-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-items-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-items-api-stage.test.k8s.target.com
      - presentation-items-api-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-subgroups-api"},"name":"presentation-subgroups-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"presentation-subgroups-api-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-subgroups-svc","servicePort":80},"path":"/"}]}},{"host":"presentation-subgroups-api-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-subgroups-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-subgroups-api-stage.test.k8s.target.com","presentation-subgroups-api-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T02:40:25Z
    generation: 1
    labels:
      app: presentation-subgroups-api
    name: presentation-subgroups-ingress
    namespace: snp-core-api-stage
    resourceVersion: "25831601"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/presentation-subgroups-ingress
    uid: b1958dfb-bd47-11e8-8bab-525400df3355
  spec:
    rules:
    - host: presentation-subgroups-api-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-subgroups-svc
            servicePort: 80
          path: /
    - host: presentation-subgroups-api-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-subgroups-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-subgroups-api-stage.test.k8s.target.com
      - presentation-subgroups-api-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"hubble-locations-svc"},"name":"hubble-locations-svc-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"hubble-locations-svc-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"hubble-locations-svc-svc","servicePort":80},"path":"/"}]}},{"host":"hubble-locations-svc-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"hubble-locations-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["hubble-locations-svc-test.test.k8s.target.com","hubble-locations-svc-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-02T16:40:21Z
    generation: 1
    labels:
      app: hubble-locations-svc
    name: hubble-locations-svc-ingress
    namespace: snp-core-api-test
    resourceVersion: "33046363"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/hubble-locations-svc-ingress
    uid: da7e286a-c661-11e8-8a20-5254001e2711
  spec:
    rules:
    - host: hubble-locations-svc-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: hubble-locations-svc-svc
            servicePort: 80
          path: /
    - host: hubble-locations-svc-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: hubble-locations-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - hubble-locations-svc-test.test.k8s.target.com
      - hubble-locations-svc-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-adjacency-svc"},"name":"merch-adjacency-svc-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"merch-adjacency-svc-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-adjacency-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-adjacency-svc-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-adjacency-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-adjacency-svc-test.test.k8s.target.com","merch-adjacency-svc-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-19T17:37:58Z
    generation: 1
    labels:
      app: merch-adjacency-svc
    name: merch-adjacency-svc-ingress
    namespace: snp-core-api-test
    resourceVersion: "25082838"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/merch-adjacency-svc-ingress
    uid: bfa50734-bc32-11e8-8fe0-525400bc6d51
  spec:
    rules:
    - host: merch-adjacency-svc-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-adjacency-svc-svc
            servicePort: 80
          path: /
    - host: merch-adjacency-svc-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-adjacency-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-adjacency-svc-test.test.k8s.target.com
      - merch-adjacency-svc-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-cad-inputs-svc"},"name":"merch-cad-inputs-svc-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"merch-cad-inputs-svc-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-cad-inputs-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-cad-inputs-svc-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-cad-inputs-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-cad-inputs-svc-test.test.k8s.target.com","merch-cad-inputs-svc-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-24T17:48:28Z
    generation: 2
    labels:
      app: merch-cad-inputs-svc
    name: merch-cad-inputs-svc-ingress
    namespace: snp-core-api-test
    resourceVersion: "138167559"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/merch-cad-inputs-svc-ingress
    uid: 41694eaf-2000-11e9-a834-525400f586f1
  spec:
    rules:
    - host: merch-cad-inputs-svc-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-cad-inputs-svc-svc
            servicePort: 80
          path: /
    - host: merch-cad-inputs-svc-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-cad-inputs-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-cad-inputs-svc-test.test.k8s.target.com
      - merch-cad-inputs-svc-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-category-svc-v3"},"name":"merch-category-svc-v3-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"merch-category-svc-v3-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-category-svc-v3-svc","servicePort":80},"path":"/"}]}},{"host":"merch-category-svc-v3-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-category-svc-v3-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-category-svc-v3-test.test.k8s.target.com","merch-category-svc-v3-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T15:15:42Z
    generation: 1
    labels:
      app: merch-category-svc-v3
    name: merch-category-svc-v3-ingress
    namespace: snp-core-api-test
    resourceVersion: "25577791"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/merch-category-svc-v3-ingress
    uid: 0a50f2f7-bce8-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: merch-category-svc-v3-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-category-svc-v3-svc
            servicePort: 80
          path: /
    - host: merch-category-svc-v3-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-category-svc-v3-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-category-svc-v3-test.test.k8s.target.com
      - merch-category-svc-v3-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-project-reports-svc-v2"},"name":"merch-project-reports-svc-v2-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"merch-project-reports-svc-v2-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-project-reports-svc-v2-svc","servicePort":80},"path":"/"}]}},{"host":"merch-project-reports-svc-v2-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-project-reports-svc-v2-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-project-reports-svc-v2-test.test.k8s.target.com","merch-project-reports-svc-v2-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-08T21:38:49Z
    generation: 1
    labels:
      app: merch-project-reports-svc-v2
    name: merch-project-reports-svc-v2-ingress
    namespace: snp-core-api-test
    resourceVersion: "63766794"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/merch-project-reports-svc-v2-ingress
    uid: add40a49-e39e-11e8-999b-5254008d935f
  spec:
    rules:
    - host: merch-project-reports-svc-v2-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-project-reports-svc-v2-svc
            servicePort: 80
          path: /
    - host: merch-project-reports-svc-v2-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-project-reports-svc-v2-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-project-reports-svc-v2-test.test.k8s.target.com
      - merch-project-reports-svc-v2-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-project-svc-v3"},"name":"merch-project-svc-v3-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"merch-project-svc-v3-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-project-svc-v3-svc","servicePort":80},"path":"/"}]}},{"host":"merch-project-svc-v3-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-project-svc-v3-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-project-svc-v3-test.test.k8s.target.com","merch-project-svc-v3-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-12T19:24:40Z
    generation: 1
    labels:
      app: merch-project-svc-v3
    name: merch-project-svc-v3-ingress
    namespace: snp-core-api-test
    resourceVersion: "40035213"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/merch-project-svc-v3-ingress
    uid: 7723fc3e-ce54-11e8-999f-52540096678d
  spec:
    rules:
    - host: merch-project-svc-v3-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-project-svc-v3-svc
            servicePort: 80
          path: /
    - host: merch-project-svc-v3-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-project-svc-v3-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-project-svc-v3-test.test.k8s.target.com
      - merch-project-svc-v3-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-remodels-svc"},"name":"merch-remodels-svc-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"merch-remodels-svc-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-remodels-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-remodels-svc-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-remodels-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-remodels-svc-test.test.k8s.target.com","merch-remodels-svc-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-07T18:52:11Z
    generation: 1
    labels:
      app: merch-remodels-svc
    name: merch-remodels-svc-ingress
    namespace: snp-core-api-test
    resourceVersion: "91120811"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/merch-remodels-svc-ingress
    uid: 34692200-fa51-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: merch-remodels-svc-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-remodels-svc-svc
            servicePort: 80
          path: /
    - host: merch-remodels-svc-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-remodels-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-remodels-svc-test.test.k8s.target.com
      - merch-remodels-svc-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-ties-svc"},"name":"merch-ties-svc-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"merch-ties-svc-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-ties-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-ties-svc-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-ties-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-ties-svc-test.test.k8s.target.com","merch-ties-svc-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-05T19:57:10Z
    generation: 1
    labels:
      app: merch-ties-svc
    name: merch-ties-svc-ingress
    namespace: snp-core-api-test
    resourceVersion: "89194849"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/merch-ties-svc-ingress
    uid: f36a6c99-f8c7-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: merch-ties-svc-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-ties-svc-svc
            servicePort: 80
          path: /
    - host: merch-ties-svc-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-ties-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-ties-svc-test.test.k8s.target.com
      - merch-ties-svc-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-transition-store-placements-svc"},"name":"merch-transition-store-placements-svc-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"merch-transition-store-placements-svc-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-transition-store-placements-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-transition-store-placements-svc-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-transition-store-placements-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-transition-store-placements-svc-test.test.k8s.target.com","merch-transition-store-placements-svc-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-28T15:00:18Z
    generation: 1
    labels:
      app: merch-transition-store-placements-svc
    name: merch-transition-store-placements-svc-ingress
    namespace: snp-core-api-test
    resourceVersion: "142171500"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/merch-transition-store-placements-svc-ingress
    uid: 6d3126a5-230d-11e9-8180-525400143763
  spec:
    rules:
    - host: merch-transition-store-placements-svc-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-transition-store-placements-svc-svc
            servicePort: 80
          path: /
    - host: merch-transition-store-placements-svc-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-transition-store-placements-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-transition-store-placements-svc-test.test.k8s.target.com
      - merch-transition-store-placements-svc-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-transition-stores-svc"},"name":"merch-transition-stores-svc-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"merch-transition-stores-svc-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-transition-stores-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-transition-stores-svc-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-transition-stores-svc-svc","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-01-16T14:18:00Z
    generation: 1
    labels:
      app: merch-transition-stores-svc
    name: merch-transition-stores-svc-ingress
    namespace: snp-core-api-test
    resourceVersion: "129909815"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/merch-transition-stores-svc-ingress
    uid: 87bee0d4-1999-11e9-a7f3-52540072a6ea
  spec:
    rules:
    - host: merch-transition-stores-svc-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-transition-stores-svc-svc
            servicePort: 80
          path: /
    - host: merch-transition-stores-svc-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-transition-stores-svc-svc
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-workers"},"name":"merch-workers-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"merch-workers-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-workers-svc","servicePort":80},"path":"/"}]}},{"host":"merch-workers-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-workers-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-workers-test.test.k8s.target.com","merch-workers-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-25T19:46:42Z
    generation: 1
    labels:
      app: merch-workers
    name: merch-workers-ingress
    namespace: snp-core-api-test
    resourceVersion: "50950720"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/merch-workers-ingress
    uid: b2441381-d88e-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: merch-workers-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-workers-svc
            servicePort: 80
          path: /
    - host: merch-workers-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-workers-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-workers-test.test.k8s.target.com
      - merch-workers-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planogram-drawings-api"},"name":"planogram-drawings-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"planogram-drawings-api-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-drawings-svc","servicePort":80},"path":"/"}]}},{"host":"planogram-drawings-api-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-drawings-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planogram-drawings-api-test.test.k8s.target.com","planogram-drawings-api-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-19T20:53:26Z
    generation: 1
    labels:
      app: planogram-drawings-api
    name: planogram-drawings-ingress
    namespace: snp-core-api-test
    resourceVersion: "25168671"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/planogram-drawings-ingress
    uid: 0e160c2b-bc4e-11e8-b40e-5254004139fa
  spec:
    rules:
    - host: planogram-drawings-api-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-drawings-svc
            servicePort: 80
          path: /
    - host: planogram-drawings-api-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-drawings-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planogram-drawings-api-test.test.k8s.target.com
      - planogram-drawings-api-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planogram-fixtures-api"},"name":"planogram-fixtures-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"planogram-fixtures-api-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-fixtures-svc","servicePort":80},"path":"/"}]}},{"host":"planogram-fixtures-api-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-fixtures-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planogram-fixtures-api-test.test.k8s.target.com","planogram-fixtures-api-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-18T12:35:16Z
    generation: 1
    labels:
      app: planogram-fixtures-api
    name: planogram-fixtures-ingress
    namespace: snp-core-api-test
    resourceVersion: "24345722"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/planogram-fixtures-ingress
    uid: 4c1e10d7-bb3f-11e8-842d-525400df3355
  spec:
    rules:
    - host: planogram-fixtures-api-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-fixtures-svc
            servicePort: 80
          path: /
    - host: planogram-fixtures-api-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-fixtures-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planogram-fixtures-api-test.test.k8s.target.com
      - planogram-fixtures-api-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planogram-generations-api"},"name":"planogram-generations-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"planogram-generations-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-generations-svc","servicePort":80},"path":"/"}]}},{"host":"planogram-generations-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-generations-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planogram-generations-test.test.k8s.target.com","planogram-generations-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T07:17:02Z
    generation: 1
    labels:
      app: planogram-generations-api
    name: planogram-generations-ingress
    namespace: snp-core-api-test
    resourceVersion: "25411642"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/planogram-generations-ingress
    uid: 2bb591a6-bca5-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: planogram-generations-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-generations-svc
            servicePort: 80
          path: /
    - host: planogram-generations-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-generations-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planogram-generations-test.test.k8s.target.com
      - planogram-generations-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planogram-items-api"},"name":"planogram-items-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"planogram-items-api-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-items-svc","servicePort":80},"path":"/"}]}},{"host":"planogram-items-api-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-items-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planogram-items-api-test.test.k8s.target.com","planogram-items-api-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-19T17:03:41Z
    generation: 1
    labels:
      app: planogram-items-api
    name: planogram-items-ingress
    namespace: snp-core-api-test
    resourceVersion: "25071003"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/planogram-items-ingress
    uid: f5b4c71f-bc2d-11e8-b40e-5254004139fa
  spec:
    rules:
    - host: planogram-items-api-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-items-svc
            servicePort: 80
          path: /
    - host: planogram-items-api-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-items-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planogram-items-api-test.test.k8s.target.com
      - planogram-items-api-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planogram-stores-api"},"name":"planogram-stores-api-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"planogram-stores-api-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-stores-api","servicePort":80},"path":"/"}]}},{"host":"planogram-stores-api-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-stores-api","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planogram-stores-api-test.test.k8s.target.com","planogram-stores-api-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T05:57:03Z
    generation: 1
    labels:
      app: planogram-stores-api
    name: planogram-stores-api-ingress
    namespace: snp-core-api-test
    resourceVersion: "25899559"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/planogram-stores-api-ingress
    uid: 298abf7d-bd63-11e8-bc70-5254004139fa
  spec:
    rules:
    - host: planogram-stores-api-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-stores-api
            servicePort: 80
          path: /
    - host: planogram-stores-api-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-stores-api
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planogram-stores-api-test.test.k8s.target.com
      - planogram-stores-api-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planograms-api"},"name":"planograms-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"planograms-api-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planograms-svc","servicePort":80},"path":"/"}]}},{"host":"planograms-api-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planograms-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planograms-api-test.test.k8s.target.com","planograms-api-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T10:48:48Z
    generation: 1
    labels:
      app: planograms-api
    name: planograms-ingress
    namespace: snp-core-api-test
    resourceVersion: "25483362"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/planograms-ingress
    uid: c151cb51-bcc2-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: planograms-api-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planograms-svc
            servicePort: 80
          path: /
    - host: planograms-api-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planograms-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planograms-api-test.test.k8s.target.com
      - planograms-api-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-department-svc"},"name":"presentation-department-svc-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"presentation-department-svc-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-department-svc-svc","servicePort":80},"path":"/"}]}},{"host":"presentation-department-svc-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-department-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-department-svc-test.test.k8s.target.com","presentation-department-svc-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-18T15:41:10Z
    generation: 1
    labels:
      app: presentation-department-svc
    name: presentation-department-svc-ingress
    namespace: snp-core-api-test
    resourceVersion: "24435790"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/presentation-department-svc-ingress
    uid: 4475f699-bb59-11e8-88c5-5254004139fa
  spec:
    rules:
    - host: presentation-department-svc-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-department-svc-svc
            servicePort: 80
          path: /
    - host: presentation-department-svc-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-department-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-department-svc-test.test.k8s.target.com
      - presentation-department-svc-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-display-stores-api"},"name":"presentation-display-stores-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"presentation-display-stores-api-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pres-display-stores-svc","servicePort":80},"path":"/"}]}},{"host":"presentation-display-stores-api-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pres-display-stores-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-display-stores-api-test.test.k8s.target.com","presentation-display-stores-api-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T14:25:49Z
    generation: 1
    labels:
      app: presentation-display-stores-api
    name: presentation-display-stores-ingress
    namespace: snp-core-api-test
    resourceVersion: "25558418"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/presentation-display-stores-ingress
    uid: 123166db-bce1-11e8-bc70-5254004139fa
  spec:
    rules:
    - host: presentation-display-stores-api-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pres-display-stores-svc
            servicePort: 80
          path: /
    - host: presentation-display-stores-api-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pres-display-stores-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-display-stores-api-test.test.k8s.target.com
      - presentation-display-stores-api-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-item-checkins-api"},"name":"presentation-item-checkins-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"presentation-item-checkins-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-item-checkins-svc","servicePort":80},"path":"/"}]}},{"host":"presentation-item-checkins-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-item-checkins-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-item-checkins-test.test.k8s.target.com","presentation-item-checkins-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T02:03:03Z
    generation: 1
    labels:
      app: presentation-item-checkins-api
    name: presentation-item-checkins-ingress
    namespace: snp-core-api-test
    resourceVersion: "25817725"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/presentation-item-checkins-ingress
    uid: 791daf95-bd42-11e8-bc70-5254004139fa
  spec:
    rules:
    - host: presentation-item-checkins-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-item-checkins-svc
            servicePort: 80
          path: /
    - host: presentation-item-checkins-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-item-checkins-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-item-checkins-test.test.k8s.target.com
      - presentation-item-checkins-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-items-api"},"name":"presentation-items-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"presentation-items-api-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-items-svc","servicePort":80},"path":"/"}]}},{"host":"presentation-items-api-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-items-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-items-api-test.test.k8s.target.com","presentation-items-api-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T18:43:24Z
    generation: 1
    labels:
      app: presentation-items-api
    name: presentation-items-ingress
    namespace: snp-core-api-test
    resourceVersion: "25660755"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/presentation-items-ingress
    uid: 0e42900b-bd05-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: presentation-items-api-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-items-svc
            servicePort: 80
          path: /
    - host: presentation-items-api-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-items-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-items-api-test.test.k8s.target.com
      - presentation-items-api-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-subgroups-api"},"name":"presentation-subgroups-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"presentation-subgroups-api-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-subgroups-svc","servicePort":80},"path":"/"}]}},{"host":"presentation-subgroups-api-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-subgroups-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-subgroups-api-test.test.k8s.target.com","presentation-subgroups-api-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T02:39:07Z
    generation: 1
    labels:
      app: presentation-subgroups-api
    name: presentation-subgroups-ingress
    namespace: snp-core-api-test
    resourceVersion: "25831184"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/presentation-subgroups-ingress
    uid: 82f1732b-bd47-11e8-8bab-525400df3355
  spec:
    rules:
    - host: presentation-subgroups-api-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-subgroups-svc
            servicePort: 80
          path: /
    - host: presentation-subgroups-api-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-subgroups-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-subgroups-api-test.test.k8s.target.com
      - presentation-subgroups-api-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-category-manager-ingress"},"name":"singularity-category-manager-ingress","namespace":"snp-hubble-dev"},"spec":{"rules":[{"host":"singularity-category-manager-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-category-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-category-manager-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-category-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-category-manager-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-category-manager-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-category-manager-dev.ttc-test.k8s.target.com","singularity-category-manager-dev.tte-test.k8s.target.com","singularity-category-manager-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-01T16:53:05Z
    generation: 3
    labels:
      name: singularity-category-manager-ingress
    name: singularity-category-manager-ingress
    namespace: snp-hubble-dev
    resourceVersion: "33854926"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-dev/ingresses/singularity-category-manager-ingress
    uid: 77619d44-c59a-11e8-93f3-5254000c5c7e
  spec:
    rules:
    - host: singularity-category-manager-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-category-manager-service
            servicePort: 80
          path: /
    - host: singularity-category-manager-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-category-manager-service
            servicePort: 80
          path: /
    - host: singularity-category-manager-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-category-manager-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-category-manager-dev.ttc-test.k8s.target.com
      - singularity-category-manager-dev.tte-test.k8s.target.com
      - singularity-category-manager-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-department-manager-ingress"},"name":"singularity-department-manager-ingress","namespace":"snp-hubble-dev"},"spec":{"rules":[{"host":"singularity-department-manager-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-department-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-department-manager-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-department-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-department-manager-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-department-manager-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-department-manager-dev.ttc-test.k8s.target.com","singularity-department-manager-dev.tte-test.k8s.target.com","singularity-department-manager-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-01T13:40:33Z
    generation: 1
    labels:
      name: singularity-department-manager-ingress
    name: singularity-department-manager-ingress
    namespace: snp-hubble-dev
    resourceVersion: "32303634"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-dev/ingresses/singularity-department-manager-ingress
    uid: 91b04598-c57f-11e8-b583-525400d3319b
  spec:
    rules:
    - host: singularity-department-manager-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-department-manager-service
            servicePort: 80
          path: /
    - host: singularity-department-manager-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-department-manager-service
            servicePort: 80
          path: /
    - host: singularity-department-manager-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-department-manager-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-department-manager-dev.ttc-test.k8s.target.com
      - singularity-department-manager-dev.tte-test.k8s.target.com
      - singularity-department-manager-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-hubble-oauth-ingress"},"name":"singularity-hubble-oauth-ingress","namespace":"snp-hubble-dev"},"spec":{"rules":[{"host":"singularity-hubble-oauth-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-hubble-oauth-service","servicePort":80},"path":"/"}]}},{"host":"singularity-hubble-oauth-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-hubble-oauth-service","servicePort":80},"path":"/"}]}},{"host":"singularity-hubble-oauth-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-hubble-oauth-service","servicePort":80},"path":"/"}]}},{"host":"hubble-dev.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-hubble-oauth-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-hubble-oauth-dev.ttc-test.k8s.target.com","singularity-hubble-oauth-dev.tte-test.k8s.target.com","singularity-hubble-oauth-dev.test.k8s.target.com","hubble-dev.target.com"],"secretName":"vanitysecret"}]}}
    creationTimestamp: 2018-09-28T21:00:34Z
    generation: 5
    labels:
      name: singularity-hubble-oauth-ingress
    name: singularity-hubble-oauth-ingress
    namespace: snp-hubble-dev
    resourceVersion: "33865694"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-dev/ingresses/singularity-hubble-oauth-ingress
    uid: 8b23326a-c361-11e8-b583-525400d3319b
  spec:
    rules:
    - host: singularity-hubble-oauth-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-hubble-oauth-service
            servicePort: 80
          path: /
    - host: singularity-hubble-oauth-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-hubble-oauth-service
            servicePort: 80
          path: /
    - host: singularity-hubble-oauth-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-hubble-oauth-service
            servicePort: 80
          path: /
    - host: hubble-dev.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-hubble-oauth-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-hubble-oauth-dev.ttc-test.k8s.target.com
      - singularity-hubble-oauth-dev.tte-test.k8s.target.com
      - singularity-hubble-oauth-dev.test.k8s.target.com
      - hubble-dev.target.com
      secretName: vanitysecret
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-tie-manager-ingress"},"name":"singularity-tie-manager-ingress","namespace":"snp-hubble-dev"},"spec":{"rules":[{"host":"singularity-tie-manager-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-tie-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-tie-manager-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-tie-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-tie-manager-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-tie-manager-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-tie-manager-dev.ttc-test.k8s.target.com","singularity-tie-manager-dev.tte-test.k8s.target.com","singularity-tie-manager-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-27T15:41:44Z
    generation: 1
    labels:
      name: singularity-tie-manager-ingress
    name: singularity-tie-manager-ingress
    namespace: snp-hubble-dev
    resourceVersion: "81331174"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-dev/ingresses/singularity-tie-manager-ingress
    uid: f1375138-f25a-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: singularity-tie-manager-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-tie-manager-service
            servicePort: 80
          path: /
    - host: singularity-tie-manager-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-tie-manager-service
            servicePort: 80
          path: /
    - host: singularity-tie-manager-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-tie-manager-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-tie-manager-dev.ttc-test.k8s.target.com
      - singularity-tie-manager-dev.tte-test.k8s.target.com
      - singularity-tie-manager-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-transition-manager-ingress"},"name":"singularity-transition-manager-ingress","namespace":"snp-hubble-dev"},"spec":{"rules":[{"host":"singularity-transition-manager-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-transition-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-transition-manager-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-transition-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-transition-manager-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-transition-manager-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-transition-manager-dev.ttc-test.k8s.target.com","singularity-transition-manager-dev.tte-test.k8s.target.com","singularity-transition-manager-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-01T16:56:30Z
    generation: 3
    labels:
      name: singularity-transition-manager-ingress
    name: singularity-transition-manager-ingress
    namespace: snp-hubble-dev
    resourceVersion: "33856793"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-dev/ingresses/singularity-transition-manager-ingress
    uid: f1d90c41-c59a-11e8-8a20-5254001e2711
  spec:
    rules:
    - host: singularity-transition-manager-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-transition-manager-service
            servicePort: 80
          path: /
    - host: singularity-transition-manager-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-transition-manager-service
            servicePort: 80
          path: /
    - host: singularity-transition-manager-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-transition-manager-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-transition-manager-dev.ttc-test.k8s.target.com
      - singularity-transition-manager-dev.tte-test.k8s.target.com
      - singularity-transition-manager-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"hubble-locations-svc"},"name":"hubble-locations-svc-ingress","namespace":"snp-hubble-prod-demo"},"spec":{"rules":[{"host":"hubble-locations-svc-prod-demo.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"hubble-locations-svc-svc","servicePort":80},"path":"/"}]}},{"host":"hubble-locations-svc-prod-demo.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"hubble-locations-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["hubble-locations-svc-prod-demo.test.k8s.target.com","hubble-locations-svc-prod-demo.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-02T23:29:23Z
    generation: 1
    labels:
      app: hubble-locations-svc
    name: hubble-locations-svc-ingress
    namespace: snp-hubble-prod-demo
    resourceVersion: "33233914"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-demo/ingresses/hubble-locations-svc-ingress
    uid: fed96215-c69a-11e8-93f3-5254000c5c7e
  spec:
    rules:
    - host: hubble-locations-svc-prod-demo.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: hubble-locations-svc-svc
            servicePort: 80
          path: /
    - host: hubble-locations-svc-prod-demo.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: hubble-locations-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - hubble-locations-svc-prod-demo.test.k8s.target.com
      - hubble-locations-svc-prod-demo.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-adjacency-svc"},"name":"merch-adjacency-svc-ingress","namespace":"snp-hubble-prod-demo"},"spec":{"rules":[{"host":"merch-adjacency-svc-prod-demo.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-adjacency-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-adjacency-svc-prod-demo.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-adjacency-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-adjacency-svc-prod-demo.test.k8s.target.com","merch-adjacency-svc-prod-demo.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T13:15:47Z
    generation: 2
    labels:
      app: merch-adjacency-svc
    name: merch-adjacency-svc-ingress
    namespace: snp-hubble-prod-demo
    resourceVersion: "25553697"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-demo/ingresses/merch-adjacency-svc-ingress
    uid: 498d6e41-bcd7-11e8-bc70-5254004139fa
  spec:
    rules:
    - host: merch-adjacency-svc-prod-demo.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-adjacency-svc-svc
            servicePort: 80
          path: /
    - host: merch-adjacency-svc-prod-demo.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-adjacency-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-adjacency-svc-prod-demo.test.k8s.target.com
      - merch-adjacency-svc-prod-demo.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-cad-inputs-svc"},"name":"merch-cad-inputs-svc-ingress","namespace":"snp-hubble-prod-demo"},"spec":{"rules":[{"host":"merch-cad-inputs-svc-prod-demo.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-cad-inputs-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-cad-inputs-svc-prod-demo.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-cad-inputs-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-cad-inputs-svc-prod-demo.test.k8s.target.com","merch-cad-inputs-svc-prod-demo.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-24T19:12:15Z
    generation: 1
    labels:
      app: merch-cad-inputs-svc
    name: merch-cad-inputs-svc-ingress
    namespace: snp-hubble-prod-demo
    resourceVersion: "138187023"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-demo/ingresses/merch-cad-inputs-svc-ingress
    uid: f6069aaf-200b-11e9-a834-525400f586f1
  spec:
    rules:
    - host: merch-cad-inputs-svc-prod-demo.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-cad-inputs-svc-svc
            servicePort: 80
          path: /
    - host: merch-cad-inputs-svc-prod-demo.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-cad-inputs-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-cad-inputs-svc-prod-demo.test.k8s.target.com
      - merch-cad-inputs-svc-prod-demo.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-category-svc-v3"},"name":"merch-category-svc-v3-ingress","namespace":"snp-hubble-prod-demo"},"spec":{"rules":[{"host":"merch-category-svc-v3-prod-demo.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-category-svc-v3-svc","servicePort":80},"path":"/"}]}},{"host":"merch-category-svc-v3-prod-demo.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-category-svc-v3-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-category-svc-v3-prod-demo.test.k8s.target.com","merch-category-svc-v3-prod-demo.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T19:22:42Z
    generation: 2
    labels:
      app: merch-category-svc-v3
    name: merch-category-svc-v3-ingress
    namespace: snp-hubble-prod-demo
    resourceVersion: "25723222"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-demo/ingresses/merch-category-svc-v3-ingress
    uid: 8bae1cf1-bd0a-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: merch-category-svc-v3-prod-demo.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-category-svc-v3-svc
            servicePort: 80
          path: /
    - host: merch-category-svc-v3-prod-demo.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-category-svc-v3-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-category-svc-v3-prod-demo.test.k8s.target.com
      - merch-category-svc-v3-prod-demo.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-project-reports-svc-v2"},"name":"merch-project-reports-svc-v2-ingress","namespace":"snp-hubble-prod-demo"},"spec":{"rules":[{"host":"merch-project-reports-svc-v2-prod-demo.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-project-reports-svc-v2-svc","servicePort":80},"path":"/"}]}},{"host":"merch-project-reports-svc-v2-prod-demo.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-project-reports-svc-v2-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-project-reports-svc-v2-prod-demo.test.k8s.target.com","merch-project-reports-svc-v2-prod-demo.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-13T19:21:02Z
    generation: 1
    labels:
      app: merch-project-reports-svc-v2
    name: merch-project-reports-svc-v2-ingress
    namespace: snp-hubble-prod-demo
    resourceVersion: "68249527"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-demo/ingresses/merch-project-reports-svc-v2-ingress
    uid: 420e4580-e779-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: merch-project-reports-svc-v2-prod-demo.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-project-reports-svc-v2-svc
            servicePort: 80
          path: /
    - host: merch-project-reports-svc-v2-prod-demo.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-project-reports-svc-v2-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-project-reports-svc-v2-prod-demo.test.k8s.target.com
      - merch-project-reports-svc-v2-prod-demo.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-project-svc-v3"},"name":"merch-project-svc-v3-ingress","namespace":"snp-hubble-prod-demo"},"spec":{"rules":[{"host":"merch-project-svc-v3-prod-demo.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-project-svc-v3-svc","servicePort":80},"path":"/"}]}},{"host":"merch-project-svc-v3-prod-demo.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-project-svc-v3-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-project-svc-v3-prod-demo.test.k8s.target.com","merch-project-svc-v3-prod-demo.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-22T14:20:30Z
    generation: 1
    labels:
      app: merch-project-svc-v3
    name: merch-project-svc-v3-ingress
    namespace: snp-hubble-prod-demo
    resourceVersion: "48310562"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-demo/ingresses/merch-project-svc-v3-ingress
    uid: a17f7f98-d605-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: merch-project-svc-v3-prod-demo.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-project-svc-v3-svc
            servicePort: 80
          path: /
    - host: merch-project-svc-v3-prod-demo.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-project-svc-v3-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-project-svc-v3-prod-demo.test.k8s.target.com
      - merch-project-svc-v3-prod-demo.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-remodels-svc"},"name":"merch-remodels-svc-ingress","namespace":"snp-hubble-prod-demo"},"spec":{"rules":[{"host":"merch-remodels-svc-prod-demo.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-remodels-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-remodels-svc-prod-demo.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-remodels-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-remodels-svc-prod-demo.test.k8s.target.com","merch-remodels-svc-prod-demo.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-07T19:51:17Z
    generation: 1
    labels:
      app: merch-remodels-svc
    name: merch-remodels-svc-ingress
    namespace: snp-hubble-prod-demo
    resourceVersion: "91163453"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-demo/ingresses/merch-remodels-svc-ingress
    uid: 75eed9d6-fa59-11e8-999b-5254008d935f
  spec:
    rules:
    - host: merch-remodels-svc-prod-demo.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-remodels-svc-svc
            servicePort: 80
          path: /
    - host: merch-remodels-svc-prod-demo.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-remodels-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-remodels-svc-prod-demo.test.k8s.target.com
      - merch-remodels-svc-prod-demo.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-ties-svc"},"name":"merch-ties-svc-ingress","namespace":"snp-hubble-prod-demo"},"spec":{"rules":[{"host":"merch-ties-svc-prod-demo.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-ties-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-ties-svc-prod-demo.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-ties-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-ties-svc-prod-demo.test.k8s.target.com","merch-ties-svc-prod-demo.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-05T22:36:45Z
    generation: 1
    labels:
      app: merch-ties-svc
    name: merch-ties-svc-ingress
    namespace: snp-hubble-prod-demo
    resourceVersion: "89310811"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-demo/ingresses/merch-ties-svc-ingress
    uid: 3e917c8e-f8de-11e8-999b-5254008d935f
  spec:
    rules:
    - host: merch-ties-svc-prod-demo.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-ties-svc-svc
            servicePort: 80
          path: /
    - host: merch-ties-svc-prod-demo.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-ties-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-ties-svc-prod-demo.test.k8s.target.com
      - merch-ties-svc-prod-demo.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-transition-store-placements-svc"},"name":"merch-transition-store-placements-svc-ingress","namespace":"snp-hubble-prod-demo"},"spec":{"rules":[{"host":"merch-transition-store-placements-svc-prod-demo.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-transition-store-placements-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-transition-store-placements-svc-prod-demo.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-transition-store-placements-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-transition-store-placements-svc-prod-demo.test.k8s.target.com","merch-transition-store-placements-svc-prod-demo.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-20T17:51:11Z
    generation: 1
    labels:
      app: merch-transition-store-placements-svc
    name: merch-transition-store-placements-svc-ingress
    namespace: snp-hubble-prod-demo
    resourceVersion: "164544032"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-demo/ingresses/merch-transition-store-placements-svc-ingress
    uid: 1be0346b-3538-11e9-b42d-5254003b1534
  spec:
    rules:
    - host: merch-transition-store-placements-svc-prod-demo.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-transition-store-placements-svc-svc
            servicePort: 80
          path: /
    - host: merch-transition-store-placements-svc-prod-demo.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-transition-store-placements-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-transition-store-placements-svc-prod-demo.test.k8s.target.com
      - merch-transition-store-placements-svc-prod-demo.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-transition-stores-svc"},"name":"merch-transition-stores-svc-ingress","namespace":"snp-hubble-prod-demo"},"spec":{"rules":[{"host":"merch-transition-stores-svc-prod-demo.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-transition-stores-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-transition-stores-svc-prod-demo.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-transition-stores-svc-svc","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-01-18T15:16:26Z
    generation: 1
    labels:
      app: merch-transition-stores-svc
    name: merch-transition-stores-svc-ingress
    namespace: snp-hubble-prod-demo
    resourceVersion: "132340426"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-demo/ingresses/merch-transition-stores-svc-ingress
    uid: 061ffbc6-1b34-11e9-b998-525400bb6b25
  spec:
    rules:
    - host: merch-transition-stores-svc-prod-demo.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-transition-stores-svc-svc
            servicePort: 80
          path: /
    - host: merch-transition-stores-svc-prod-demo.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-transition-stores-svc-svc
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-workers"},"name":"merch-workers-ingress","namespace":"snp-hubble-prod-demo"},"spec":{"rules":[{"host":"merch-workers-prod-demo.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-workers-svc","servicePort":80},"path":"/"}]}},{"host":"merch-workers-prod-demo.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-workers-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-workers-prod-demo.test.k8s.target.com","merch-workers-prod-demo.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-25T20:07:22Z
    generation: 1
    labels:
      app: merch-workers
    name: merch-workers-ingress
    namespace: snp-hubble-prod-demo
    resourceVersion: "50963595"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-demo/ingresses/merch-workers-ingress
    uid: 95957ae0-d891-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: merch-workers-prod-demo.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-workers-svc
            servicePort: 80
          path: /
    - host: merch-workers-prod-demo.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-workers-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-workers-prod-demo.test.k8s.target.com
      - merch-workers-prod-demo.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-department-svc"},"name":"presentation-department-svc-ingress","namespace":"snp-hubble-prod-demo"},"spec":{"rules":[{"host":"presentation-department-svc-prod-demo.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-department-svc-svc","servicePort":80},"path":"/"}]}},{"host":"presentation-department-svc-prod-demo.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-department-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-department-svc-prod-demo.test.k8s.target.com","presentation-department-svc-prod-demo.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-19T19:32:06Z
    generation: 1
    labels:
      app: presentation-department-svc
    name: presentation-department-svc-ingress
    namespace: snp-hubble-prod-demo
    resourceVersion: "25124693"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-demo/ingresses/presentation-department-svc-ingress
    uid: b14c695a-bc42-11e8-b40e-5254004139fa
  spec:
    rules:
    - host: presentation-department-svc-prod-demo.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-department-svc-svc
            servicePort: 80
          path: /
    - host: presentation-department-svc-prod-demo.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-department-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-department-svc-prod-demo.test.k8s.target.com
      - presentation-department-svc-prod-demo.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-category-manager-ingress"},"name":"singularity-category-manager-ingress","namespace":"snp-hubble-prod-demo"},"spec":{"rules":[{"host":"singularity-category-manager-prod-demo.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-category-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-category-manager-prod-demo.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-category-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-category-manager-prod-demo.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-category-manager-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-category-manager-prod-demo.ttc-test.k8s.target.com","singularity-category-manager-prod-demo.tte-test.k8s.target.com","singularity-category-manager-prod-demo.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-03T16:35:18Z
    generation: 1
    labels:
      name: singularity-category-manager-ingress
    name: singularity-category-manager-ingress
    namespace: snp-hubble-prod-demo
    resourceVersion: "33694008"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-demo/ingresses/singularity-category-manager-ingress
    uid: 5098c333-c72a-11e8-8a20-5254001e2711
  spec:
    rules:
    - host: singularity-category-manager-prod-demo.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-category-manager-service
            servicePort: 80
          path: /
    - host: singularity-category-manager-prod-demo.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-category-manager-service
            servicePort: 80
          path: /
    - host: singularity-category-manager-prod-demo.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-category-manager-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-category-manager-prod-demo.ttc-test.k8s.target.com
      - singularity-category-manager-prod-demo.tte-test.k8s.target.com
      - singularity-category-manager-prod-demo.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-department-manager-ingress"},"name":"singularity-department-manager-ingress","namespace":"snp-hubble-prod-demo"},"spec":{"rules":[{"host":"singularity-department-manager-prod-demo.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-department-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-department-manager-prod-demo.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-department-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-department-manager-prod-demo.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-department-manager-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-department-manager-prod-demo.ttc-test.k8s.target.com","singularity-department-manager-prod-demo.tte-test.k8s.target.com","singularity-department-manager-prod-demo.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-03T16:44:16Z
    generation: 1
    labels:
      name: singularity-department-manager-ingress
    name: singularity-department-manager-ingress
    namespace: snp-hubble-prod-demo
    resourceVersion: "33697839"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-demo/ingresses/singularity-department-manager-ingress
    uid: 911f1f61-c72b-11e8-8a20-5254001e2711
  spec:
    rules:
    - host: singularity-department-manager-prod-demo.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-department-manager-service
            servicePort: 80
          path: /
    - host: singularity-department-manager-prod-demo.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-department-manager-service
            servicePort: 80
          path: /
    - host: singularity-department-manager-prod-demo.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-department-manager-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-department-manager-prod-demo.ttc-test.k8s.target.com
      - singularity-department-manager-prod-demo.tte-test.k8s.target.com
      - singularity-department-manager-prod-demo.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-hubble-oauth-ingress"},"name":"singularity-hubble-oauth-ingress","namespace":"snp-hubble-prod-demo"},"spec":{"rules":[{"host":"singularity-hubble-oauth-prod-demo.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-hubble-oauth-service","servicePort":80},"path":"/"}]}},{"host":"singularity-hubble-oauth-prod-demo.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-hubble-oauth-service","servicePort":80},"path":"/"}]}},{"host":"singularity-hubble-oauth-prod-demo.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-hubble-oauth-service","servicePort":80},"path":"/"}]}},{"host":"hubble-prod-demo.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-hubble-oauth-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-hubble-oauth-prod-demo.ttc-test.k8s.target.com","singularity-hubble-oauth-prod-demo.tte-test.k8s.target.com","singularity-hubble-oauth-prod-demo.test.k8s.target.com","hubble-prod-demo.target.com"],"secretName":"vanitysecret"}]}}
    creationTimestamp: 2018-10-03T16:34:55Z
    generation: 2
    labels:
      name: singularity-hubble-oauth-ingress
    name: singularity-hubble-oauth-ingress
    namespace: snp-hubble-prod-demo
    resourceVersion: "33988092"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-demo/ingresses/singularity-hubble-oauth-ingress
    uid: 427f09d7-c72a-11e8-8a20-5254001e2711
  spec:
    rules:
    - host: singularity-hubble-oauth-prod-demo.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-hubble-oauth-service
            servicePort: 80
          path: /
    - host: singularity-hubble-oauth-prod-demo.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-hubble-oauth-service
            servicePort: 80
          path: /
    - host: singularity-hubble-oauth-prod-demo.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-hubble-oauth-service
            servicePort: 80
          path: /
    - host: hubble-prod-demo.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-hubble-oauth-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-hubble-oauth-prod-demo.ttc-test.k8s.target.com
      - singularity-hubble-oauth-prod-demo.tte-test.k8s.target.com
      - singularity-hubble-oauth-prod-demo.test.k8s.target.com
      - hubble-prod-demo.target.com
      secretName: vanitysecret
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-tie-manager-ingress"},"name":"singularity-tie-manager-ingress","namespace":"snp-hubble-prod-demo"},"spec":{"rules":[{"host":"singularity-tie-manager-prod-demo.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-tie-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-tie-manager-prod-demo.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-tie-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-tie-manager-prod-demo.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-tie-manager-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-tie-manager-prod-demo.ttc-test.k8s.target.com","singularity-tie-manager-prod-demo.tte-test.k8s.target.com","singularity-tie-manager-prod-demo.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-14T19:17:55Z
    generation: 1
    labels:
      name: singularity-tie-manager-ingress
    name: singularity-tie-manager-ingress
    namespace: snp-hubble-prod-demo
    resourceVersion: "128007534"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-demo/ingresses/singularity-tie-manager-ingress
    uid: 18aff7a4-1831-11e9-a7f3-52540072a6ea
  spec:
    rules:
    - host: singularity-tie-manager-prod-demo.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-tie-manager-service
            servicePort: 80
          path: /
    - host: singularity-tie-manager-prod-demo.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-tie-manager-service
            servicePort: 80
          path: /
    - host: singularity-tie-manager-prod-demo.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-tie-manager-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-tie-manager-prod-demo.ttc-test.k8s.target.com
      - singularity-tie-manager-prod-demo.tte-test.k8s.target.com
      - singularity-tie-manager-prod-demo.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-transition-manager-ingress"},"name":"singularity-transition-manager-ingress","namespace":"snp-hubble-prod-demo"},"spec":{"rules":[{"host":"singularity-transition-manager-prod-demo.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-transition-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-transition-manager-prod-demo.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-transition-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-transition-manager-prod-demo.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-transition-manager-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-transition-manager-prod-demo.ttc-test.k8s.target.com","singularity-transition-manager-prod-demo.tte-test.k8s.target.com","singularity-transition-manager-prod-demo.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-03T16:35:34Z
    generation: 1
    labels:
      name: singularity-transition-manager-ingress
    name: singularity-transition-manager-ingress
    namespace: snp-hubble-prod-demo
    resourceVersion: "33694102"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-demo/ingresses/singularity-transition-manager-ingress
    uid: 59bd8a6b-c72a-11e8-93f3-5254000c5c7e
  spec:
    rules:
    - host: singularity-transition-manager-prod-demo.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-transition-manager-service
            servicePort: 80
          path: /
    - host: singularity-transition-manager-prod-demo.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-transition-manager-service
            servicePort: 80
          path: /
    - host: singularity-transition-manager-prod-demo.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-transition-manager-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-transition-manager-prod-demo.ttc-test.k8s.target.com
      - singularity-transition-manager-prod-demo.tte-test.k8s.target.com
      - singularity-transition-manager-prod-demo.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"hubble-locations-svc"},"name":"hubble-locations-svc-ingress","namespace":"snp-hubble-prod-training"},"spec":{"rules":[{"host":"hubble-locations-svc-prod-training.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"hubble-locations-svc-svc","servicePort":80},"path":"/"}]}},{"host":"hubble-locations-svc-prod-training.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"hubble-locations-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["hubble-locations-svc-prod-training.test.k8s.target.com","hubble-locations-svc-prod-training.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-02T23:29:25Z
    generation: 1
    labels:
      app: hubble-locations-svc
    name: hubble-locations-svc-ingress
    namespace: snp-hubble-prod-training
    resourceVersion: "33233913"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-training/ingresses/hubble-locations-svc-ingress
    uid: 0026fbf7-c69b-11e8-93f3-5254000c5c7e
  spec:
    rules:
    - host: hubble-locations-svc-prod-training.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: hubble-locations-svc-svc
            servicePort: 80
          path: /
    - host: hubble-locations-svc-prod-training.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: hubble-locations-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - hubble-locations-svc-prod-training.test.k8s.target.com
      - hubble-locations-svc-prod-training.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-adjacency-svc"},"name":"merch-adjacency-svc-ingress","namespace":"snp-hubble-prod-training"},"spec":{"rules":[{"host":"merch-adjacency-svc-prod-training.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-adjacency-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-adjacency-svc-prod-training.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-adjacency-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-adjacency-svc-prod-training.test.k8s.target.com","merch-adjacency-svc-prod-training.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T13:15:45Z
    generation: 2
    labels:
      app: merch-adjacency-svc
    name: merch-adjacency-svc-ingress
    namespace: snp-hubble-prod-training
    resourceVersion: "25553649"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-training/ingresses/merch-adjacency-svc-ingress
    uid: 485b9f98-bcd7-11e8-bc70-5254004139fa
  spec:
    rules:
    - host: merch-adjacency-svc-prod-training.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-adjacency-svc-svc
            servicePort: 80
          path: /
    - host: merch-adjacency-svc-prod-training.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-adjacency-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-adjacency-svc-prod-training.test.k8s.target.com
      - merch-adjacency-svc-prod-training.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-cad-inputs-svc"},"name":"merch-cad-inputs-svc-ingress","namespace":"snp-hubble-prod-training"},"spec":{"rules":[{"host":"merch-cad-inputs-svc-prod-training.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-cad-inputs-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-cad-inputs-svc-prod-training.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-cad-inputs-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-cad-inputs-svc-prod-training.test.k8s.target.com","merch-cad-inputs-svc-prod-training.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-24T19:12:15Z
    generation: 1
    labels:
      app: merch-cad-inputs-svc
    name: merch-cad-inputs-svc-ingress
    namespace: snp-hubble-prod-training
    resourceVersion: "138187024"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-training/ingresses/merch-cad-inputs-svc-ingress
    uid: f60116da-200b-11e9-a834-525400f586f1
  spec:
    rules:
    - host: merch-cad-inputs-svc-prod-training.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-cad-inputs-svc-svc
            servicePort: 80
          path: /
    - host: merch-cad-inputs-svc-prod-training.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-cad-inputs-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-cad-inputs-svc-prod-training.test.k8s.target.com
      - merch-cad-inputs-svc-prod-training.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-category-svc-v3"},"name":"merch-category-svc-v3-ingress","namespace":"snp-hubble-prod-training"},"spec":{"rules":[{"host":"merch-category-svc-v3-prod-training.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-category-svc-v3-svc","servicePort":80},"path":"/"}]}},{"host":"merch-category-svc-v3-prod-training.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-category-svc-v3-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-category-svc-v3-prod-training.test.k8s.target.com","merch-category-svc-v3-prod-training.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T19:22:43Z
    generation: 2
    labels:
      app: merch-category-svc-v3
    name: merch-category-svc-v3-ingress
    namespace: snp-hubble-prod-training
    resourceVersion: "25723226"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-training/ingresses/merch-category-svc-v3-ingress
    uid: 8c1d92d7-bd0a-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: merch-category-svc-v3-prod-training.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-category-svc-v3-svc
            servicePort: 80
          path: /
    - host: merch-category-svc-v3-prod-training.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-category-svc-v3-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-category-svc-v3-prod-training.test.k8s.target.com
      - merch-category-svc-v3-prod-training.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-project-reports-svc-v2"},"name":"merch-project-reports-svc-v2-ingress","namespace":"snp-hubble-prod-training"},"spec":{"rules":[{"host":"merch-project-reports-svc-v2-prod-training.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-project-reports-svc-v2-svc","servicePort":80},"path":"/"}]}},{"host":"merch-project-reports-svc-v2-prod-training.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-project-reports-svc-v2-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-project-reports-svc-v2-prod-training.test.k8s.target.com","merch-project-reports-svc-v2-prod-training.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-13T19:25:16Z
    generation: 1
    labels:
      app: merch-project-reports-svc-v2
    name: merch-project-reports-svc-v2-ingress
    namespace: snp-hubble-prod-training
    resourceVersion: "68253045"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-training/ingresses/merch-project-reports-svc-v2-ingress
    uid: d991899d-e779-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: merch-project-reports-svc-v2-prod-training.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-project-reports-svc-v2-svc
            servicePort: 80
          path: /
    - host: merch-project-reports-svc-v2-prod-training.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-project-reports-svc-v2-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-project-reports-svc-v2-prod-training.test.k8s.target.com
      - merch-project-reports-svc-v2-prod-training.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-project-svc-v3"},"name":"merch-project-svc-v3-ingress","namespace":"snp-hubble-prod-training"},"spec":{"rules":[{"host":"merch-project-svc-v3-prod-training.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-project-svc-v3-svc","servicePort":80},"path":"/"}]}},{"host":"merch-project-svc-v3-prod-training.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-project-svc-v3-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-project-svc-v3-prod-training.test.k8s.target.com","merch-project-svc-v3-prod-training.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-22T14:25:33Z
    generation: 1
    labels:
      app: merch-project-svc-v3
    name: merch-project-svc-v3-ingress
    namespace: snp-hubble-prod-training
    resourceVersion: "48313540"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-training/ingresses/merch-project-svc-v3-ingress
    uid: 55b3e78c-d606-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: merch-project-svc-v3-prod-training.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-project-svc-v3-svc
            servicePort: 80
          path: /
    - host: merch-project-svc-v3-prod-training.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-project-svc-v3-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-project-svc-v3-prod-training.test.k8s.target.com
      - merch-project-svc-v3-prod-training.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-remodels-svc"},"name":"merch-remodels-svc-ingress","namespace":"snp-hubble-prod-training"},"spec":{"rules":[{"host":"merch-remodels-svc-prod-training.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-remodels-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-remodels-svc-prod-training.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-remodels-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-remodels-svc-prod-training.test.k8s.target.com","merch-remodels-svc-prod-training.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-10T20:42:23Z
    generation: 1
    labels:
      app: merch-remodels-svc
    name: merch-remodels-svc-ingress
    namespace: snp-hubble-prod-training
    resourceVersion: "94045457"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-training/ingresses/merch-remodels-svc-ingress
    uid: 18cb8532-fcbc-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: merch-remodels-svc-prod-training.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-remodels-svc-svc
            servicePort: 80
          path: /
    - host: merch-remodels-svc-prod-training.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-remodels-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-remodels-svc-prod-training.test.k8s.target.com
      - merch-remodels-svc-prod-training.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-ties-svc"},"name":"merch-ties-svc-ingress","namespace":"snp-hubble-prod-training"},"spec":{"rules":[{"host":"merch-ties-svc-prod-training.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-ties-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-ties-svc-prod-training.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-ties-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-ties-svc-prod-training.test.k8s.target.com","merch-ties-svc-prod-training.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-10T20:19:21Z
    generation: 1
    labels:
      app: merch-ties-svc
    name: merch-ties-svc-ingress
    namespace: snp-hubble-prod-training
    resourceVersion: "94028438"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-training/ingresses/merch-ties-svc-ingress
    uid: e1273f45-fcb8-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: merch-ties-svc-prod-training.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-ties-svc-svc
            servicePort: 80
          path: /
    - host: merch-ties-svc-prod-training.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-ties-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-ties-svc-prod-training.test.k8s.target.com
      - merch-ties-svc-prod-training.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-transition-store-placements-svc"},"name":"merch-transition-store-placements-svc-ingress","namespace":"snp-hubble-prod-training"},"spec":{"rules":[{"host":"merch-transition-store-placements-svc-prod-training.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-transition-store-placements-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-transition-store-placements-svc-prod-training.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-transition-store-placements-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-transition-store-placements-svc-prod-training.test.k8s.target.com","merch-transition-store-placements-svc-prod-training.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-20T20:17:01Z
    generation: 1
    labels:
      app: merch-transition-store-placements-svc
    name: merch-transition-store-placements-svc-ingress
    namespace: snp-hubble-prod-training
    resourceVersion: "164642818"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-training/ingresses/merch-transition-store-placements-svc-ingress
    uid: 7b48adab-354c-11e9-b42d-5254003b1534
  spec:
    rules:
    - host: merch-transition-store-placements-svc-prod-training.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-transition-store-placements-svc-svc
            servicePort: 80
          path: /
    - host: merch-transition-store-placements-svc-prod-training.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-transition-store-placements-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-transition-store-placements-svc-prod-training.test.k8s.target.com
      - merch-transition-store-placements-svc-prod-training.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-transition-stores-svc"},"name":"merch-transition-stores-svc-ingress","namespace":"snp-hubble-prod-training"},"spec":{"rules":[{"host":"merch-transition-stores-svc-prod-training.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-transition-stores-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-transition-stores-svc-prod-training.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-transition-stores-svc-svc","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-01-18T15:16:26Z
    generation: 1
    labels:
      app: merch-transition-stores-svc
    name: merch-transition-stores-svc-ingress
    namespace: snp-hubble-prod-training
    resourceVersion: "132340427"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-training/ingresses/merch-transition-stores-svc-ingress
    uid: 062480c0-1b34-11e9-b998-525400bb6b25
  spec:
    rules:
    - host: merch-transition-stores-svc-prod-training.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-transition-stores-svc-svc
            servicePort: 80
          path: /
    - host: merch-transition-stores-svc-prod-training.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-transition-stores-svc-svc
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-department-svc"},"name":"presentation-department-svc-ingress","namespace":"snp-hubble-prod-training"},"spec":{"rules":[{"host":"presentation-department-svc-prod-training.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-department-svc-svc","servicePort":80},"path":"/"}]}},{"host":"presentation-department-svc-prod-training.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-department-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-department-svc-prod-training.test.k8s.target.com","presentation-department-svc-prod-training.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-19T19:32:08Z
    generation: 1
    labels:
      app: presentation-department-svc
    name: presentation-department-svc-ingress
    namespace: snp-hubble-prod-training
    resourceVersion: "25124692"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-training/ingresses/presentation-department-svc-ingress
    uid: b2783752-bc42-11e8-b40e-5254004139fa
  spec:
    rules:
    - host: presentation-department-svc-prod-training.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-department-svc-svc
            servicePort: 80
          path: /
    - host: presentation-department-svc-prod-training.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-department-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-department-svc-prod-training.test.k8s.target.com
      - presentation-department-svc-prod-training.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-category-manager-ingress"},"name":"singularity-category-manager-ingress","namespace":"snp-hubble-prod-training"},"spec":{"rules":[{"host":"singularity-category-manager-prod-training.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-category-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-category-manager-prod-training.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-category-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-category-manager-prod-training.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-category-manager-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-category-manager-prod-training.ttc-test.k8s.target.com","singularity-category-manager-prod-training.tte-test.k8s.target.com","singularity-category-manager-prod-training.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-03T16:44:46Z
    generation: 1
    labels:
      name: singularity-category-manager-ingress
    name: singularity-category-manager-ingress
    namespace: snp-hubble-prod-training
    resourceVersion: "33698443"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-training/ingresses/singularity-category-manager-ingress
    uid: a2d32285-c72b-11e8-8a20-5254001e2711
  spec:
    rules:
    - host: singularity-category-manager-prod-training.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-category-manager-service
            servicePort: 80
          path: /
    - host: singularity-category-manager-prod-training.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-category-manager-service
            servicePort: 80
          path: /
    - host: singularity-category-manager-prod-training.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-category-manager-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-category-manager-prod-training.ttc-test.k8s.target.com
      - singularity-category-manager-prod-training.tte-test.k8s.target.com
      - singularity-category-manager-prod-training.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-department-manager-ingress"},"name":"singularity-department-manager-ingress","namespace":"snp-hubble-prod-training"},"spec":{"rules":[{"host":"singularity-department-manager-prod-training.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-department-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-department-manager-prod-training.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-department-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-department-manager-prod-training.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-department-manager-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-department-manager-prod-training.ttc-test.k8s.target.com","singularity-department-manager-prod-training.tte-test.k8s.target.com","singularity-department-manager-prod-training.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-04T02:58:25Z
    generation: 1
    labels:
      name: singularity-department-manager-ingress
    name: singularity-department-manager-ingress
    namespace: snp-hubble-prod-training
    resourceVersion: "33988287"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-training/ingresses/singularity-department-manager-ingress
    uid: 5c98cbd7-c781-11e8-8a20-5254001e2711
  spec:
    rules:
    - host: singularity-department-manager-prod-training.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-department-manager-service
            servicePort: 80
          path: /
    - host: singularity-department-manager-prod-training.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-department-manager-service
            servicePort: 80
          path: /
    - host: singularity-department-manager-prod-training.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-department-manager-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-department-manager-prod-training.ttc-test.k8s.target.com
      - singularity-department-manager-prod-training.tte-test.k8s.target.com
      - singularity-department-manager-prod-training.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-hubble-oauth-ingress"},"name":"singularity-hubble-oauth-ingress","namespace":"snp-hubble-prod-training"},"spec":{"rules":[{"host":"singularity-hubble-oauth-prod-training.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-hubble-oauth-service","servicePort":80},"path":"/"}]}},{"host":"singularity-hubble-oauth-prod-training.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-hubble-oauth-service","servicePort":80},"path":"/"}]}},{"host":"singularity-hubble-oauth-prod-training.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-hubble-oauth-service","servicePort":80},"path":"/"}]}},{"host":"hubble-prod-training.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-hubble-oauth-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-hubble-oauth-prod-training.ttc-test.k8s.target.com","singularity-hubble-oauth-prod-training.tte-test.k8s.target.com","singularity-hubble-oauth-prod-training.test.k8s.target.com","hubble-prod-training.target.com"],"secretName":"vanitysecret"}]}}
    creationTimestamp: 2018-10-03T16:44:32Z
    generation: 2
    labels:
      name: singularity-hubble-oauth-ingress
    name: singularity-hubble-oauth-ingress
    namespace: snp-hubble-prod-training
    resourceVersion: "33988119"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-training/ingresses/singularity-hubble-oauth-ingress
    uid: 9a56a8e9-c72b-11e8-93f3-5254000c5c7e
  spec:
    rules:
    - host: singularity-hubble-oauth-prod-training.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-hubble-oauth-service
            servicePort: 80
          path: /
    - host: singularity-hubble-oauth-prod-training.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-hubble-oauth-service
            servicePort: 80
          path: /
    - host: singularity-hubble-oauth-prod-training.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-hubble-oauth-service
            servicePort: 80
          path: /
    - host: hubble-prod-training.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-hubble-oauth-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-hubble-oauth-prod-training.ttc-test.k8s.target.com
      - singularity-hubble-oauth-prod-training.tte-test.k8s.target.com
      - singularity-hubble-oauth-prod-training.test.k8s.target.com
      - hubble-prod-training.target.com
      secretName: vanitysecret
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-tie-manager-ingress"},"name":"singularity-tie-manager-ingress","namespace":"snp-hubble-prod-training"},"spec":{"rules":[{"host":"singularity-tie-manager-prod-training.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-tie-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-tie-manager-prod-training.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-tie-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-tie-manager-prod-training.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-tie-manager-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-tie-manager-prod-training.ttc-test.k8s.target.com","singularity-tie-manager-prod-training.tte-test.k8s.target.com","singularity-tie-manager-prod-training.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-14T19:18:09Z
    generation: 1
    labels:
      name: singularity-tie-manager-ingress
    name: singularity-tie-manager-ingress
    namespace: snp-hubble-prod-training
    resourceVersion: "128007533"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-training/ingresses/singularity-tie-manager-ingress
    uid: 209481d0-1831-11e9-a7f3-52540072a6ea
  spec:
    rules:
    - host: singularity-tie-manager-prod-training.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-tie-manager-service
            servicePort: 80
          path: /
    - host: singularity-tie-manager-prod-training.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-tie-manager-service
            servicePort: 80
          path: /
    - host: singularity-tie-manager-prod-training.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-tie-manager-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-tie-manager-prod-training.ttc-test.k8s.target.com
      - singularity-tie-manager-prod-training.tte-test.k8s.target.com
      - singularity-tie-manager-prod-training.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-transition-manager-ingress"},"name":"singularity-transition-manager-ingress","namespace":"snp-hubble-prod-training"},"spec":{"rules":[{"host":"singularity-transition-manager-prod-training.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-transition-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-transition-manager-prod-training.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-transition-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-transition-manager-prod-training.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-transition-manager-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-transition-manager-prod-training.ttc-test.k8s.target.com","singularity-transition-manager-prod-training.tte-test.k8s.target.com","singularity-transition-manager-prod-training.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-03T17:15:39Z
    generation: 1
    labels:
      name: singularity-transition-manager-ingress
    name: singularity-transition-manager-ingress
    namespace: snp-hubble-prod-training
    resourceVersion: "33712625"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-training/ingresses/singularity-transition-manager-ingress
    uid: f34f4207-c72f-11e8-8a20-5254001e2711
  spec:
    rules:
    - host: singularity-transition-manager-prod-training.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-transition-manager-service
            servicePort: 80
          path: /
    - host: singularity-transition-manager-prod-training.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-transition-manager-service
            servicePort: 80
          path: /
    - host: singularity-transition-manager-prod-training.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-transition-manager-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-transition-manager-prod-training.ttc-test.k8s.target.com
      - singularity-transition-manager-prod-training.tte-test.k8s.target.com
      - singularity-transition-manager-prod-training.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-category-manager-ingress"},"name":"singularity-category-manager-ingress","namespace":"snp-hubble-stage"},"spec":{"rules":[{"host":"singularity-category-manager-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-category-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-category-manager-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-category-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-category-manager-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-category-manager-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-category-manager-stage.ttc-test.k8s.target.com","singularity-category-manager-stage.tte-test.k8s.target.com","singularity-category-manager-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-03T15:59:49Z
    generation: 1
    labels:
      name: singularity-category-manager-ingress
    name: singularity-category-manager-ingress
    namespace: snp-hubble-stage
    resourceVersion: "33678376"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-stage/ingresses/singularity-category-manager-ingress
    uid: 5b64b6cb-c725-11e8-bad5-525400b91df9
  spec:
    rules:
    - host: singularity-category-manager-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-category-manager-service
            servicePort: 80
          path: /
    - host: singularity-category-manager-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-category-manager-service
            servicePort: 80
          path: /
    - host: singularity-category-manager-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-category-manager-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-category-manager-stage.ttc-test.k8s.target.com
      - singularity-category-manager-stage.tte-test.k8s.target.com
      - singularity-category-manager-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-department-manager-ingress"},"name":"singularity-department-manager-ingress","namespace":"snp-hubble-stage"},"spec":{"rules":[{"host":"singularity-department-manager-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-department-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-department-manager-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-department-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-department-manager-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-department-manager-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-department-manager-stage.ttc-test.k8s.target.com","singularity-department-manager-stage.tte-test.k8s.target.com","singularity-department-manager-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-03T15:59:27Z
    generation: 1
    labels:
      name: singularity-department-manager-ingress
    name: singularity-department-manager-ingress
    namespace: snp-hubble-stage
    resourceVersion: "33677646"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-stage/ingresses/singularity-department-manager-ingress
    uid: 4e79fe76-c725-11e8-8a20-5254001e2711
  spec:
    rules:
    - host: singularity-department-manager-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-department-manager-service
            servicePort: 80
          path: /
    - host: singularity-department-manager-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-department-manager-service
            servicePort: 80
          path: /
    - host: singularity-department-manager-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-department-manager-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-department-manager-stage.ttc-test.k8s.target.com
      - singularity-department-manager-stage.tte-test.k8s.target.com
      - singularity-department-manager-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-hubble-oauth-ingress"},"name":"singularity-hubble-oauth-ingress","namespace":"snp-hubble-stage"},"spec":{"rules":[{"host":"singularity-hubble-oauth-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-hubble-oauth-service","servicePort":80},"path":"/"}]}},{"host":"singularity-hubble-oauth-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-hubble-oauth-service","servicePort":80},"path":"/"}]}},{"host":"singularity-hubble-oauth-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-hubble-oauth-service","servicePort":80},"path":"/"}]}},{"host":"hubble-stage.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-hubble-oauth-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-hubble-oauth-stage.ttc-test.k8s.target.com","singularity-hubble-oauth-stage.tte-test.k8s.target.com","singularity-hubble-oauth-stage.test.k8s.target.com","hubble-stage.target.com"],"secretName":"vanitysecret"}]}}
    creationTimestamp: 2018-10-03T15:59:59Z
    generation: 2
    labels:
      name: singularity-hubble-oauth-ingress
    name: singularity-hubble-oauth-ingress
    namespace: snp-hubble-stage
    resourceVersion: "33984686"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-stage/ingresses/singularity-hubble-oauth-ingress
    uid: 615eed90-c725-11e8-8a20-5254001e2711
  spec:
    rules:
    - host: singularity-hubble-oauth-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-hubble-oauth-service
            servicePort: 80
          path: /
    - host: singularity-hubble-oauth-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-hubble-oauth-service
            servicePort: 80
          path: /
    - host: singularity-hubble-oauth-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-hubble-oauth-service
            servicePort: 80
          path: /
    - host: hubble-stage.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-hubble-oauth-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-hubble-oauth-stage.ttc-test.k8s.target.com
      - singularity-hubble-oauth-stage.tte-test.k8s.target.com
      - singularity-hubble-oauth-stage.test.k8s.target.com
      - hubble-stage.target.com
      secretName: vanitysecret
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-tie-manager-ingress"},"name":"singularity-tie-manager-ingress","namespace":"snp-hubble-stage"},"spec":{"rules":[{"host":"singularity-tie-manager-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-tie-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-tie-manager-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-tie-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-tie-manager-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-tie-manager-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-tie-manager-stage.ttc-test.k8s.target.com","singularity-tie-manager-stage.tte-test.k8s.target.com","singularity-tie-manager-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-11T21:23:16Z
    generation: 1
    labels:
      name: singularity-tie-manager-ingress
    name: singularity-tie-manager-ingress
    namespace: snp-hubble-stage
    resourceVersion: "125290961"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-stage/ingresses/singularity-tie-manager-ingress
    uid: 1c176e08-15e7-11e9-82a9-5254003cfc52
  spec:
    rules:
    - host: singularity-tie-manager-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-tie-manager-service
            servicePort: 80
          path: /
    - host: singularity-tie-manager-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-tie-manager-service
            servicePort: 80
          path: /
    - host: singularity-tie-manager-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-tie-manager-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-tie-manager-stage.ttc-test.k8s.target.com
      - singularity-tie-manager-stage.tte-test.k8s.target.com
      - singularity-tie-manager-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-transition-manager-ingress"},"name":"singularity-transition-manager-ingress","namespace":"snp-hubble-stage"},"spec":{"rules":[{"host":"singularity-transition-manager-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-transition-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-transition-manager-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-transition-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-transition-manager-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-transition-manager-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-transition-manager-stage.ttc-test.k8s.target.com","singularity-transition-manager-stage.tte-test.k8s.target.com","singularity-transition-manager-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-03T15:59:16Z
    generation: 1
    labels:
      name: singularity-transition-manager-ingress
    name: singularity-transition-manager-ingress
    namespace: snp-hubble-stage
    resourceVersion: "33677647"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-stage/ingresses/singularity-transition-manager-ingress
    uid: 47743527-c725-11e8-bad5-525400b91df9
  spec:
    rules:
    - host: singularity-transition-manager-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-transition-manager-service
            servicePort: 80
          path: /
    - host: singularity-transition-manager-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-transition-manager-service
            servicePort: 80
          path: /
    - host: singularity-transition-manager-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-transition-manager-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-transition-manager-stage.ttc-test.k8s.target.com
      - singularity-transition-manager-stage.tte-test.k8s.target.com
      - singularity-transition-manager-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-category-manager-ingress"},"name":"singularity-category-manager-ingress","namespace":"snp-hubble-test"},"spec":{"rules":[{"host":"singularity-category-manager-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-category-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-category-manager-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-category-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-category-manager-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-category-manager-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-category-manager-test.ttc-test.k8s.target.com","singularity-category-manager-test.tte-test.k8s.target.com","singularity-category-manager-test.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-01T21:30:27Z
    generation: 1
    labels:
      name: singularity-category-manager-ingress
    name: singularity-category-manager-ingress
    namespace: snp-hubble-test
    resourceVersion: "32544390"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-test/ingresses/singularity-category-manager-ingress
    uid: 36d58cf6-c5c1-11e8-8a20-5254001e2711
  spec:
    rules:
    - host: singularity-category-manager-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-category-manager-service
            servicePort: 80
          path: /
    - host: singularity-category-manager-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-category-manager-service
            servicePort: 80
          path: /
    - host: singularity-category-manager-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-category-manager-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-category-manager-test.ttc-test.k8s.target.com
      - singularity-category-manager-test.tte-test.k8s.target.com
      - singularity-category-manager-test.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-department-manager-ingress"},"name":"singularity-department-manager-ingress","namespace":"snp-hubble-test"},"spec":{"rules":[{"host":"singularity-department-manager-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-department-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-department-manager-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-department-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-department-manager-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-department-manager-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-department-manager-test.ttc-test.k8s.target.com","singularity-department-manager-test.tte-test.k8s.target.com","singularity-department-manager-test.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-01T21:31:08Z
    generation: 1
    labels:
      name: singularity-department-manager-ingress
    name: singularity-department-manager-ingress
    namespace: snp-hubble-test
    resourceVersion: "32544896"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-test/ingresses/singularity-department-manager-ingress
    uid: 4f5d4821-c5c1-11e8-93f3-5254000c5c7e
  spec:
    rules:
    - host: singularity-department-manager-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-department-manager-service
            servicePort: 80
          path: /
    - host: singularity-department-manager-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-department-manager-service
            servicePort: 80
          path: /
    - host: singularity-department-manager-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-department-manager-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-department-manager-test.ttc-test.k8s.target.com
      - singularity-department-manager-test.tte-test.k8s.target.com
      - singularity-department-manager-test.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-hubble-oauth-ingress"},"name":"singularity-hubble-oauth-ingress","namespace":"snp-hubble-test"},"spec":{"rules":[{"host":"singularity-hubble-oauth-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-hubble-oauth-service","servicePort":80},"path":"/"}]}},{"host":"singularity-hubble-oauth-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-hubble-oauth-service","servicePort":80},"path":"/"}]}},{"host":"singularity-hubble-oauth-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-hubble-oauth-service","servicePort":80},"path":"/"}]}},{"host":"hubble-test.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-hubble-oauth-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-hubble-oauth-test.ttc-test.k8s.target.com","singularity-hubble-oauth-test.tte-test.k8s.target.com","singularity-hubble-oauth-test.test.k8s.target.com","hubble-test.target.com"],"secretName":"vanitysecret"}]}}
    creationTimestamp: 2018-10-01T21:28:34Z
    generation: 2
    labels:
      name: singularity-hubble-oauth-ingress
    name: singularity-hubble-oauth-ingress
    namespace: snp-hubble-test
    resourceVersion: "33984789"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-test/ingresses/singularity-hubble-oauth-ingress
    uid: f373c152-c5c0-11e8-bad5-525400b91df9
  spec:
    rules:
    - host: singularity-hubble-oauth-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-hubble-oauth-service
            servicePort: 80
          path: /
    - host: singularity-hubble-oauth-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-hubble-oauth-service
            servicePort: 80
          path: /
    - host: singularity-hubble-oauth-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-hubble-oauth-service
            servicePort: 80
          path: /
    - host: hubble-test.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-hubble-oauth-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-hubble-oauth-test.ttc-test.k8s.target.com
      - singularity-hubble-oauth-test.tte-test.k8s.target.com
      - singularity-hubble-oauth-test.test.k8s.target.com
      - hubble-test.target.com
      secretName: vanitysecret
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-tie-manager-ingress"},"name":"singularity-tie-manager-ingress","namespace":"snp-hubble-test"},"spec":{"rules":[{"host":"singularity-tie-manager-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-tie-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-tie-manager-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-tie-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-tie-manager-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-tie-manager-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-tie-manager-test.ttc-test.k8s.target.com","singularity-tie-manager-test.tte-test.k8s.target.com","singularity-tie-manager-test.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-11T21:14:07Z
    generation: 1
    labels:
      name: singularity-tie-manager-ingress
    name: singularity-tie-manager-ingress
    namespace: snp-hubble-test
    resourceVersion: "125284249"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-test/ingresses/singularity-tie-manager-ingress
    uid: d4fdf48e-15e5-11e9-9770-525400b66b60
  spec:
    rules:
    - host: singularity-tie-manager-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-tie-manager-service
            servicePort: 80
          path: /
    - host: singularity-tie-manager-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-tie-manager-service
            servicePort: 80
          path: /
    - host: singularity-tie-manager-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-tie-manager-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-tie-manager-test.ttc-test.k8s.target.com
      - singularity-tie-manager-test.tte-test.k8s.target.com
      - singularity-tie-manager-test.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-transition-manager-ingress"},"name":"singularity-transition-manager-ingress","namespace":"snp-hubble-test"},"spec":{"rules":[{"host":"singularity-transition-manager-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-transition-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-transition-manager-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-transition-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-transition-manager-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-transition-manager-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-transition-manager-test.ttc-test.k8s.target.com","singularity-transition-manager-test.tte-test.k8s.target.com","singularity-transition-manager-test.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-01T21:33:02Z
    generation: 1
    labels:
      name: singularity-transition-manager-ingress
    name: singularity-transition-manager-ingress
    namespace: snp-hubble-test
    resourceVersion: "32545873"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-test/ingresses/singularity-transition-manager-ingress
    uid: 930b2be2-c5c1-11e8-93f3-5254000c5c7e
  spec:
    rules:
    - host: singularity-transition-manager-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-transition-manager-service
            servicePort: 80
          path: /
    - host: singularity-transition-manager-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-transition-manager-service
            servicePort: 80
          path: /
    - host: singularity-transition-manager-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-transition-manager-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-transition-manager-test.ttc-test.k8s.target.com
      - singularity-transition-manager-test.tte-test.k8s.target.com
      - singularity-transition-manager-test.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-ids-api"},"name":"presentation-ids-api","namespace":"snp-pog-management-dev"},"spec":{"rules":[{"host":"presentation-ids-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-ids-api","servicePort":80},"path":"/"}]}},{"host":"presentation-ids-api-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-ids-api","servicePort":80},"path":"/"}]}},{"host":"presentation-ids-api-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-ids-api","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-ids-api-dev.test.k8s.target.com","presentation-ids-api-dev.ttc-test.k8s.target.com","presentation-ids-api-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-03-13T16:14:40Z
    generation: 1
    labels:
      app: presentation-ids-api
    name: presentation-ids-api
    namespace: snp-pog-management-dev
    resourceVersion: "186509595"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-pog-management-dev/ingresses/presentation-ids-api
    uid: 1b0a8a1b-45ab-11e9-aff2-525400dba923
  spec:
    rules:
    - host: presentation-ids-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-ids-api
            servicePort: 80
          path: /
    - host: presentation-ids-api-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-ids-api
            servicePort: 80
          path: /
    - host: presentation-ids-api-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-ids-api
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-ids-api-dev.test.k8s.target.com
      - presentation-ids-api-dev.ttc-test.k8s.target.com
      - presentation-ids-api-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-strategies-api"},"name":"presentation-strategies-api","namespace":"snp-pog-management-dev"},"spec":{"rules":[{"host":"presentation-strategies-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-strategies-api","servicePort":80},"path":"/"}]}},{"host":"presentation-strategies-api-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-strategies-api","servicePort":80},"path":"/"}]}},{"host":"presentation-strategies-api-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-strategies-api","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-strategies-api-dev.test.k8s.target.com","presentation-strategies-api-dev.ttc-test.k8s.target.com","presentation-strategies-api-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-03-12T21:14:01Z
    generation: 1
    labels:
      app: presentation-strategies-api
    name: presentation-strategies-api
    namespace: snp-pog-management-dev
    resourceVersion: "185770839"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-pog-management-dev/ingresses/presentation-strategies-api
    uid: c1f46a3c-450b-11e9-aff2-525400dba923
  spec:
    rules:
    - host: presentation-strategies-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-strategies-api
            servicePort: 80
          path: /
    - host: presentation-strategies-api-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-strategies-api
            servicePort: 80
          path: /
    - host: presentation-strategies-api-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-strategies-api
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-strategies-api-dev.test.k8s.target.com
      - presentation-strategies-api-dev.ttc-test.k8s.target.com
      - presentation-strategies-api-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-ids-api"},"name":"presentation-ids-api","namespace":"snp-pog-management-stage"},"spec":{"rules":[{"host":"presentation-ids-api-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-ids-api","servicePort":80},"path":"/"}]}},{"host":"presentation-ids-api-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-ids-api","servicePort":80},"path":"/"}]}},{"host":"presentation-ids-api-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-ids-api","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-ids-api-stage.test.k8s.target.com","presentation-ids-api-stage.ttc-test.k8s.target.com","presentation-ids-api-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-03-13T16:51:35Z
    generation: 1
    labels:
      app: presentation-ids-api
    name: presentation-ids-api
    namespace: snp-pog-management-stage
    resourceVersion: "186534445"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-pog-management-stage/ingresses/presentation-ids-api
    uid: 4366b018-45b0-11e9-b613-52540007651c
  spec:
    rules:
    - host: presentation-ids-api-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-ids-api
            servicePort: 80
          path: /
    - host: presentation-ids-api-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-ids-api
            servicePort: 80
          path: /
    - host: presentation-ids-api-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-ids-api
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-ids-api-stage.test.k8s.target.com
      - presentation-ids-api-stage.ttc-test.k8s.target.com
      - presentation-ids-api-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-strategies-api"},"name":"presentation-strategies-api","namespace":"snp-pog-management-stage"},"spec":{"rules":[{"host":"presentation-strategies-api-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-strategies-api","servicePort":80},"path":"/"}]}},{"host":"presentation-strategies-api-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-strategies-api","servicePort":80},"path":"/"}]}},{"host":"presentation-strategies-api-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-strategies-api","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-strategies-api-stage.test.k8s.target.com","presentation-strategies-api-stage.ttc-test.k8s.target.com","presentation-strategies-api-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-03-12T21:55:33Z
    generation: 1
    labels:
      app: presentation-strategies-api
    name: presentation-strategies-api
    namespace: snp-pog-management-stage
    resourceVersion: "185798240"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-pog-management-stage/ingresses/presentation-strategies-api
    uid: 8f42c945-4511-11e9-b84e-525400cb189a
  spec:
    rules:
    - host: presentation-strategies-api-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-strategies-api
            servicePort: 80
          path: /
    - host: presentation-strategies-api-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-strategies-api
            servicePort: 80
          path: /
    - host: presentation-strategies-api-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-strategies-api
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-strategies-api-stage.test.k8s.target.com
      - presentation-strategies-api-stage.ttc-test.k8s.target.com
      - presentation-strategies-api-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-ids-api"},"name":"presentation-ids-api","namespace":"snp-pog-management-test"},"spec":{"rules":[{"host":"presentation-ids-api-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-ids-api","servicePort":80},"path":"/"}]}},{"host":"presentation-ids-api-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-ids-api","servicePort":80},"path":"/"}]}},{"host":"presentation-ids-api-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-ids-api","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-ids-api-test.test.k8s.target.com","presentation-ids-api-test.ttc-test.k8s.target.com","presentation-ids-api-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-03-13T16:16:09Z
    generation: 1
    labels:
      app: presentation-ids-api
    name: presentation-ids-api
    namespace: snp-pog-management-test
    resourceVersion: "186511123"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-pog-management-test/ingresses/presentation-ids-api
    uid: 4fe75d56-45ab-11e9-aff2-525400dba923
  spec:
    rules:
    - host: presentation-ids-api-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-ids-api
            servicePort: 80
          path: /
    - host: presentation-ids-api-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-ids-api
            servicePort: 80
          path: /
    - host: presentation-ids-api-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-ids-api
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-ids-api-test.test.k8s.target.com
      - presentation-ids-api-test.ttc-test.k8s.target.com
      - presentation-ids-api-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-strategies-api"},"name":"presentation-strategies-api","namespace":"snp-pog-management-test"},"spec":{"rules":[{"host":"presentation-strategies-api-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-strategies-api","servicePort":80},"path":"/"}]}},{"host":"presentation-strategies-api-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-strategies-api","servicePort":80},"path":"/"}]}},{"host":"presentation-strategies-api-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-strategies-api","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-strategies-api-test.test.k8s.target.com","presentation-strategies-api-test.ttc-test.k8s.target.com","presentation-strategies-api-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-03-12T21:49:22Z
    generation: 1
    labels:
      app: presentation-strategies-api
    name: presentation-strategies-api
    namespace: snp-pog-management-test
    resourceVersion: "185794265"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-pog-management-test/ingresses/presentation-strategies-api
    uid: b2640c77-4510-11e9-b84e-525400cb189a
  spec:
    rules:
    - host: presentation-strategies-api-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-strategies-api
            servicePort: 80
          path: /
    - host: presentation-strategies-api-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-strategies-api
            servicePort: 80
          path: /
    - host: presentation-strategies-api-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-strategies-api
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-strategies-api-test.test.k8s.target.com
      - presentation-strategies-api-test.ttc-test.k8s.target.com
      - presentation-strategies-api-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentations-elastic-api"},"name":"presentations-elastic-api-ingress","namespace":"snp-presentations-dev"},"spec":{"rules":[{"host":"presentations-elastic-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentations-elastic-api-svc","servicePort":80},"path":"/"}]}},{"host":"presentations-elastic-api-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentations-elastic-api-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentations-elastic-api-dev.test.k8s.target.com","presentations-elastic-api-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-16T10:47:41Z
    generation: 2
    labels:
      app: presentations-elastic-api
    name: presentations-elastic-api-ingress
    namespace: snp-presentations-dev
    resourceVersion: "129911827"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-presentations-dev/ingresses/presentations-elastic-api-ingress
    uid: 25f522cb-197c-11e9-9770-525400b66b60
  spec:
    rules:
    - host: presentations-elastic-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentations-elastic-api-svc
            servicePort: 80
          path: /
    - host: presentations-elastic-api-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentations-elastic-api-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentations-elastic-api-dev.test.k8s.target.com
      - presentations-elastic-api-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentations-api"},"name":"presentations-history-ingress","namespace":"snp-presentations-dev"},"spec":{"rules":[{"host":"presentations-history-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentations-svc","servicePort":7777},"path":"/"}]}},{"host":"presentations-history-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentations-svc","servicePort":7777},"path":"/"}]}}],"tls":[{"hosts":["presentations-history-dev.test.k8s.target.com","presentations-history-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-29T07:22:20Z
    generation: 1
    labels:
      app: presentations-api
    name: presentations-history-ingress
    namespace: snp-presentations-dev
    resourceVersion: "82946963"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-presentations-dev/ingresses/presentations-history-ingress
    uid: 8204dec1-f3a7-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: presentations-history-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentations-svc
            servicePort: 7777
          path: /
    - host: presentations-history-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentations-svc
            servicePort: 7777
          path: /
    tls:
    - hosts:
      - presentations-history-dev.test.k8s.target.com
      - presentations-history-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentations-api"},"name":"presentations-hollow-ingress","namespace":"snp-presentations-dev"},"spec":{"rules":[{"host":"presentations-hollow-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentations-svc","servicePort":7778},"path":"/"}]}},{"host":"presentations-hollow-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentations-svc","servicePort":7778},"path":"/"}]}}],"tls":[{"hosts":["presentations-hollow-dev.test.k8s.target.com","presentations-hollow-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T03:07:55Z
    generation: 1
    labels:
      app: presentations-api
    name: presentations-hollow-ingress
    namespace: snp-presentations-dev
    resourceVersion: "25841740"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-presentations-dev/ingresses/presentations-hollow-ingress
    uid: 8900313f-bd4b-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: presentations-hollow-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentations-svc
            servicePort: 7778
          path: /
    - host: presentations-hollow-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentations-svc
            servicePort: 7778
          path: /
    tls:
    - hosts:
      - presentations-hollow-dev.test.k8s.target.com
      - presentations-hollow-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentations-api"},"name":"presentations-ingress","namespace":"snp-presentations-dev"},"spec":{"rules":[{"host":"presentations-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentations-svc","servicePort":80},"path":"/"}]}},{"host":"presentations-api-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentations-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentations-api-dev.test.k8s.target.com","presentations-api-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T03:07:53Z
    generation: 2
    labels:
      app: presentations-api
    name: presentations-ingress
    namespace: snp-presentations-dev
    resourceVersion: "25907368"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-presentations-dev/ingresses/presentations-ingress
    uid: 8799fca1-bd4b-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: presentations-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentations-svc
            servicePort: 80
          path: /
    - host: presentations-api-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentations-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentations-api-dev.test.k8s.target.com
      - presentations-api-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentations-api"},"name":"presentations-noproxy-ingress","namespace":"snp-presentations-dev"},"spec":{"rules":[{"host":"presentations-api-noproxy-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentations-svc","servicePort":8080},"path":"/"}]}},{"host":"presentations-api-noproxy-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentations-svc","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["presentations-api-noproxy-dev.test.k8s.target.com","presentations-api-noproxy-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T03:07:54Z
    generation: 1
    labels:
      app: presentations-api
    name: presentations-noproxy-ingress
    namespace: snp-presentations-dev
    resourceVersion: "25841739"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-presentations-dev/ingresses/presentations-noproxy-ingress
    uid: 8849c964-bd4b-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: presentations-api-noproxy-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentations-svc
            servicePort: 8080
          path: /
    - host: presentations-api-noproxy-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentations-svc
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - presentations-api-noproxy-dev.test.k8s.target.com
      - presentations-api-noproxy-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentations-api"},"name":"presentations-history-ingress","namespace":"snp-presentations-stage"},"spec":{"rules":[{"host":"presentations-history-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentations-svc","servicePort":7777},"path":"/"}]}},{"host":"presentations-history-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentations-svc","servicePort":7777},"path":"/"}]}}],"tls":[{"hosts":["presentations-history-stage.test.k8s.target.com","presentations-history-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-03T15:48:31Z
    generation: 1
    labels:
      app: presentations-api
    name: presentations-history-ingress
    namespace: snp-presentations-stage
    resourceVersion: "87057928"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-presentations-stage/ingresses/presentations-history-ingress
    uid: e29979b6-f712-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: presentations-history-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentations-svc
            servicePort: 7777
          path: /
    - host: presentations-history-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentations-svc
            servicePort: 7777
          path: /
    tls:
    - hosts:
      - presentations-history-stage.test.k8s.target.com
      - presentations-history-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentations-api"},"name":"presentations-hollow-ingress","namespace":"snp-presentations-stage"},"spec":{"rules":[{"host":"presentations-hollow-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentations-svc","servicePort":7778},"path":"/"}]}},{"host":"presentations-hollow-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentations-svc","servicePort":7778},"path":"/"}]}}],"tls":[{"hosts":["presentations-hollow-stage.test.k8s.target.com","presentations-hollow-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T04:28:47Z
    generation: 1
    labels:
      app: presentations-api
    name: presentations-hollow-ingress
    namespace: snp-presentations-stage
    resourceVersion: "25868999"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-presentations-stage/ingresses/presentations-hollow-ingress
    uid: d500f1fc-bd56-11e8-bc70-5254004139fa
  spec:
    rules:
    - host: presentations-hollow-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentations-svc
            servicePort: 7778
          path: /
    - host: presentations-hollow-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentations-svc
            servicePort: 7778
          path: /
    tls:
    - hosts:
      - presentations-hollow-stage.test.k8s.target.com
      - presentations-hollow-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentations-api"},"name":"presentations-ingress","namespace":"snp-presentations-stage"},"spec":{"rules":[{"host":"presentations-api-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentations-svc","servicePort":80},"path":"/"}]}},{"host":"presentations-api-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentations-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentations-api-stage.test.k8s.target.com","presentations-api-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T04:28:45Z
    generation: 2
    labels:
      app: presentations-api
    name: presentations-ingress
    namespace: snp-presentations-stage
    resourceVersion: "25908651"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-presentations-stage/ingresses/presentations-ingress
    uid: d3f97b0e-bd56-11e8-bc70-5254004139fa
  spec:
    rules:
    - host: presentations-api-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentations-svc
            servicePort: 80
          path: /
    - host: presentations-api-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentations-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentations-api-stage.test.k8s.target.com
      - presentations-api-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentations-api"},"name":"presentations-noproxy-ingress","namespace":"snp-presentations-stage"},"spec":{"rules":[{"host":"presentations-api-noproxy-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentations-svc","servicePort":8080},"path":"/"}]}},{"host":"presentations-api-noproxy-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentations-svc","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["presentations-api-noproxy-stage.test.k8s.target.com","presentations-api-noproxy-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T04:28:46Z
    generation: 1
    labels:
      app: presentations-api
    name: presentations-noproxy-ingress
    namespace: snp-presentations-stage
    resourceVersion: "25868997"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-presentations-stage/ingresses/presentations-noproxy-ingress
    uid: d486bd75-bd56-11e8-bc70-5254004139fa
  spec:
    rules:
    - host: presentations-api-noproxy-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentations-svc
            servicePort: 8080
          path: /
    - host: presentations-api-noproxy-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentations-svc
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - presentations-api-noproxy-stage.test.k8s.target.com
      - presentations-api-noproxy-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"mm-attachscan-svc"},"name":"mm-attachscan-svc-ingress","namespace":"snp-print-stage"},"spec":{"rules":[{"host":"mm-attachscan-svc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-attachscan-svc-k8svc","servicePort":80},"path":"/"}]}},{"host":"mm-attachscan-svc-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-attachscan-svc-k8svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["mm-attachscan-svc-stage.test.k8s.target.com","mm-attachscan-svc-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-24T05:44:02Z
    generation: 1
    labels:
      app: mm-attachscan-svc
    name: mm-attachscan-svc-ingress
    namespace: snp-print-stage
    resourceVersion: "27578652"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-print-stage/ingresses/mm-attachscan-svc-ingress
    uid: d7913c67-bfbc-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: mm-attachscan-svc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-attachscan-svc-k8svc
            servicePort: 80
          path: /
    - host: mm-attachscan-svc-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-attachscan-svc-k8svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - mm-attachscan-svc-stage.test.k8s.target.com
      - mm-attachscan-svc-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"mm-attachscan-ui"},"name":"mm-attachscan-ui-ingress","namespace":"snp-print-stage"},"spec":{"rules":[{"host":"mm-attachscan-ui-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-attachscan-ui-k8svc","servicePort":80},"path":"/"}]}},{"host":"mm-attachscan-ui-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-attachscan-ui-k8svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["mm-attachscan-ui-stage.test.k8s.target.com","mm-attachscan-ui-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-24T09:31:28Z
    generation: 1
    labels:
      app: mm-attachscan-ui
    name: mm-attachscan-ui-ingress
    namespace: snp-print-stage
    resourceVersion: "27669110"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-print-stage/ingresses/mm-attachscan-ui-ingress
    uid: 9d5bd80e-bfdc-11e8-8bab-525400df3355
  spec:
    rules:
    - host: mm-attachscan-ui-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-attachscan-ui-k8svc
            servicePort: 80
          path: /
    - host: mm-attachscan-ui-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-attachscan-ui-k8svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - mm-attachscan-ui-stage.test.k8s.target.com
      - mm-attachscan-ui-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"mm-label-formatter-svc"},"name":"mm-label-formatter-svc-ingress","namespace":"snp-print-stage"},"spec":{"rules":[{"host":"mm-label-formatter-svc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-label-formatter-svc-k8svc","servicePort":80},"path":"/"}]}},{"host":"mm-label-formatter-svc-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-label-formatter-svc-k8svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["mm-label-formatter-svc-stage.test.k8s.target.com","mm-label-formatter-svc-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T05:01:06Z
    generation: 1
    labels:
      app: mm-label-formatter-svc
    name: mm-label-formatter-svc-ingress
    namespace: snp-print-stage
    resourceVersion: "25880029"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-print-stage/ingresses/mm-label-formatter-svc-ingress
    uid: 5902d508-bd5b-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: mm-label-formatter-svc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-label-formatter-svc-k8svc
            servicePort: 80
          path: /
    - host: mm-label-formatter-svc-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-label-formatter-svc-k8svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - mm-label-formatter-svc-stage.test.k8s.target.com
      - mm-label-formatter-svc-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"mm-label-host-svc"},"name":"mm-label-host-svc-ingress","namespace":"snp-print-stage"},"spec":{"rules":[{"host":"mm-label-host-svc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-label-host-svc-k8svc","servicePort":80},"path":"/"}]}},{"host":"mm-label-host-svc-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-label-host-svc-k8svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["mm-label-host-svc-stage.test.k8s.target.com","mm-label-host-svc-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T09:31:49Z
    generation: 1
    labels:
      app: mm-label-host-svc
    name: mm-label-host-svc-ingress
    namespace: snp-print-stage
    resourceVersion: "25973291"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-print-stage/ingresses/mm-label-host-svc-ingress
    uid: 2a8de595-bd81-11e8-bc70-5254004139fa
  spec:
    rules:
    - host: mm-label-host-svc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-label-host-svc-k8svc
            servicePort: 80
          path: /
    - host: mm-label-host-svc-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-label-host-svc-k8svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - mm-label-host-svc-stage.test.k8s.target.com
      - mm-label-host-svc-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"mm-label-processor-svc"},"name":"mm-label-processor-svc-ingress","namespace":"snp-print-stage"},"spec":{"rules":[{"host":"mm-label-processor-svc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-label-processor-svc-k8svc","servicePort":80},"path":"/"}]}},{"host":"mm-label-processor-svc-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-label-processor-svc-k8svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["mm-label-processor-svc-stage.test.k8s.target.com","mm-label-processor-svc-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-25T06:25:18Z
    generation: 1
    labels:
      app: mm-label-processor-svc
    name: mm-label-processor-svc-ingress
    namespace: snp-print-stage
    resourceVersion: "28185179"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-print-stage/ingresses/mm-label-processor-svc-ingress
    uid: c5954410-c08b-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: mm-label-processor-svc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-label-processor-svc-k8svc
            servicePort: 80
          path: /
    - host: mm-label-processor-svc-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-label-processor-svc-k8svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - mm-label-processor-svc-stage.test.k8s.target.com
      - mm-label-processor-svc-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"mm-label-writer-svc"},"name":"mm-label-writer-svc-ingress","namespace":"snp-print-stage"},"spec":{"rules":[{"host":"mm-label-writer-svc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-label-writer-svc-k8svc","servicePort":80},"path":"/"}]}},{"host":"mm-label-writer-svc-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-label-writer-svc-k8svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["mm-label-writer-svc-stage.test.k8s.target.com","mm-label-writer-svc-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T07:29:32Z
    generation: 2
    labels:
      app: mm-label-writer-svc
    name: mm-label-writer-svc-ingress
    namespace: snp-print-stage
    resourceVersion: "27567266"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-print-stage/ingresses/mm-label-writer-svc-ingress
    uid: 15445a9f-bd70-11e8-bc70-5254004139fa
  spec:
    rules:
    - host: mm-label-writer-svc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-label-writer-svc-k8svc
            servicePort: 80
          path: /
    - host: mm-label-writer-svc-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-label-writer-svc-k8svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - mm-label-writer-svc-stage.test.k8s.target.com
      - mm-label-writer-svc-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"mm-mass-maintenance-svc"},"name":"mm-mass-maintenance-svc-ingress","namespace":"snp-print-stage"},"spec":{"rules":[{"host":"mm-mass-maintenance-svc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-mass-maintenance-svc-k8svc","servicePort":80},"path":"/"}]}},{"host":"mm-mass-maintenance-svc-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-mass-maintenance-svc-k8svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["mm-mass-maintenance-svc-stage.test.k8s.target.com","mm-mass-maintenance-svc-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-04T10:48:54Z
    generation: 1
    labels:
      app: mm-mass-maintenance-svc
    name: mm-mass-maintenance-svc-ingress
    namespace: snp-print-stage
    resourceVersion: "148688529"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-print-stage/ingresses/mm-mass-maintenance-svc-ingress
    uid: 7706d113-286a-11e9-898c-525400270885
  spec:
    rules:
    - host: mm-mass-maintenance-svc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-mass-maintenance-svc-k8svc
            servicePort: 80
          path: /
    - host: mm-mass-maintenance-svc-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-mass-maintenance-svc-k8svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - mm-mass-maintenance-svc-stage.test.k8s.target.com
      - mm-mass-maintenance-svc-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"mm-mass-maintenance-ui"},"name":"mm-mass-maintenance-ui-ingress","namespace":"snp-print-stage"},"spec":{"rules":[{"host":"mm-mass-maintenance-ui-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-mass-maintenance-ui-k8svc","servicePort":80},"path":"/"}]}},{"host":"mm-mass-maintenance-ui-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-mass-maintenance-ui-k8svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["mm-mass-maintenance-ui-stage.test.k8s.target.com","mm-mass-maintenance-ui-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-03-18T08:33:48Z
    generation: 1
    labels:
      app: mm-mass-maintenance-ui
    name: mm-mass-maintenance-ui-ingress
    namespace: snp-print-stage
    resourceVersion: "190792311"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-print-stage/ingresses/mm-mass-maintenance-ui-ingress
    uid: 8cea3b73-4958-11e9-b096-525400ca6771
  spec:
    rules:
    - host: mm-mass-maintenance-ui-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-mass-maintenance-ui-k8svc
            servicePort: 80
          path: /
    - host: mm-mass-maintenance-ui-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-mass-maintenance-ui-k8svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - mm-mass-maintenance-ui-stage.test.k8s.target.com
      - mm-mass-maintenance-ui-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"mm-poglbl-purge-svc"},"name":"mm-poglbl-purge-svc-ingress","namespace":"snp-print-stage"},"spec":{"rules":[{"host":"mm-poglbl-purge-svc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-poglbl-purge-svc-k8svc","servicePort":80},"path":"/"}]}},{"host":"mm-poglbl-purge-svc-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-poglbl-purge-svc-k8svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["mm-poglbl-purge-svc-stage.test.k8s.target.com","mm-poglbl-purge-svc-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-24T06:01:03Z
    generation: 1
    labels:
      app: mm-poglbl-purge-svc
    name: mm-poglbl-purge-svc-ingress
    namespace: snp-print-stage
    resourceVersion: "27585437"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-print-stage/ingresses/mm-poglbl-purge-svc-ingress
    uid: 37e3ea7c-bfbf-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: mm-poglbl-purge-svc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-poglbl-purge-svc-k8svc
            servicePort: 80
          path: /
    - host: mm-poglbl-purge-svc-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-poglbl-purge-svc-k8svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - mm-poglbl-purge-svc-stage.test.k8s.target.com
      - mm-poglbl-purge-svc-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"mm-print-formatter-svc"},"name":"mm-print-formatter-svc-ingress","namespace":"snp-print-stage"},"spec":{"rules":[{"host":"mm-print-formatter-svc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-print-formatter-svc-k8svc","servicePort":1007},"path":"/"}]}},{"host":"mm-print-formatter-svc-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-print-formatter-svc-k8svc","servicePort":1007},"path":"/"}]}}],"tls":[{"hosts":["mm-print-formatter-svc-stage.test.k8s.target.com","mm-print-formatter-svc-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-24T03:37:51Z
    generation: 1
    labels:
      app: mm-print-formatter-svc
    name: mm-print-formatter-svc-ingress
    namespace: snp-print-stage
    resourceVersion: "27529090"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-print-stage/ingresses/mm-print-formatter-svc-ingress
    uid: 36e48549-bfab-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: mm-print-formatter-svc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-print-formatter-svc-k8svc
            servicePort: 1007
          path: /
    - host: mm-print-formatter-svc-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-print-formatter-svc-k8svc
            servicePort: 1007
          path: /
    tls:
    - hosts:
      - mm-print-formatter-svc-stage.test.k8s.target.com
      - mm-print-formatter-svc-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"mm-print-monitor-ui"},"name":"mm-print-monitor-ui-ingress","namespace":"snp-print-stage"},"spec":{"rules":[{"host":"mm-print-monitor-ui-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-print-monitor-ui-k8svc","servicePort":80},"path":"/"}]}},{"host":"mm-print-monitor-ui-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-print-monitor-ui-k8svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["mm-print-monitor-ui-stage.test.k8s.target.com","mm-print-monitor-ui-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-24T08:51:30Z
    generation: 1
    labels:
      app: mm-print-monitor-ui
    name: mm-print-monitor-ui-ingress
    namespace: snp-print-stage
    resourceVersion: "27652237"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-print-stage/ingresses/mm-print-monitor-ui-ingress
    uid: 07a5613f-bfd7-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: mm-print-monitor-ui-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-print-monitor-ui-k8svc
            servicePort: 80
          path: /
    - host: mm-print-monitor-ui-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-print-monitor-ui-k8svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - mm-print-monitor-ui-stage.test.k8s.target.com
      - mm-print-monitor-ui-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"mm-print-processor-svc"},"name":"mm-print-processor-svc-ingress","namespace":"snp-print-stage"},"spec":{"rules":[{"host":"mm-print-processor-svc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-print-processor-svc-k8svc","servicePort":1014},"path":"/"}]}},{"host":"mm-print-processor-svc-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-print-processor-svc-k8svc","servicePort":1014},"path":"/"}]}}],"tls":[{"hosts":["mm-print-processor-svc-stage.test.k8s.target.com","mm-print-processor-svc-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-24T04:09:59Z
    generation: 1
    labels:
      app: mm-print-processor-svc
    name: mm-print-processor-svc-ingress
    namespace: snp-print-stage
    resourceVersion: "27541883"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-print-stage/ingresses/mm-print-processor-svc-ingress
    uid: b4308ec3-bfaf-11e8-bc70-5254004139fa
  spec:
    rules:
    - host: mm-print-processor-svc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-print-processor-svc-k8svc
            servicePort: 1014
          path: /
    - host: mm-print-processor-svc-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-print-processor-svc-k8svc
            servicePort: 1014
          path: /
    tls:
    - hosts:
      - mm-print-processor-svc-stage.test.k8s.target.com
      - mm-print-processor-svc-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"mm-revhist-loader"},"name":"mm-revhist-loader-ingress","namespace":"snp-print-stage"},"spec":{"rules":[{"host":"mm-revhist-loader-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-revhist-loader-k8svc","servicePort":80},"path":"/"}]}},{"host":"mm-revhist-loader-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-revhist-loader-k8svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["mm-revhist-loader-stage.test.k8s.target.com","mm-revhist-loader-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-01T08:33:56Z
    generation: 1
    labels:
      app: mm-revhist-loader
    name: mm-revhist-loader-ingress
    namespace: snp-print-stage
    resourceVersion: "32162099"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-print-stage/ingresses/mm-revhist-loader-ingress
    uid: bc9ef76c-c554-11e8-93a6-525400dd15a8
  spec:
    rules:
    - host: mm-revhist-loader-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-revhist-loader-k8svc
            servicePort: 80
          path: /
    - host: mm-revhist-loader-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-revhist-loader-k8svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - mm-revhist-loader-stage.test.k8s.target.com
      - mm-revhist-loader-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"mm-store-label-styles-ui"},"name":"mm-store-label-styles-ui-ingress","namespace":"snp-print-stage"},"spec":{"rules":[{"host":"mm-store-label-styles-ui-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-store-label-styles-ui-k8svc","servicePort":80},"path":"/"}]}},{"host":"mm-store-label-styles-ui-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-store-label-styles-ui-k8svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["mm-store-label-styles-ui-stage.test.k8s.target.com","mm-store-label-styles-ui-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-23T06:41:14Z
    generation: 1
    labels:
      app: mm-store-label-styles-ui
    name: mm-store-label-styles-ui-ingress
    namespace: snp-print-stage
    resourceVersion: "77296442"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-print-stage/ingresses/mm-store-label-styles-ui-ingress
    uid: c60d8a7a-eeea-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: mm-store-label-styles-ui-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-store-label-styles-ui-k8svc
            servicePort: 80
          path: /
    - host: mm-store-label-styles-ui-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-store-label-styles-ui-k8svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - mm-store-label-styles-ui-stage.test.k8s.target.com
      - mm-store-label-styles-ui-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"mm-utility-svc"},"name":"mm-utility-svc-ingress","namespace":"snp-print-stage"},"spec":{"rules":[{"host":"mm-utility-svc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-utility-svc-k8svc","servicePort":80},"path":"/"}]}},{"host":"mm-utility-svc-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-utility-svc-k8svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["mm-utility-svc-stage.test.k8s.target.com","mm-utility-svc-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-30T13:39:57Z
    generation: 1
    labels:
      app: mm-utility-svc
    name: mm-utility-svc-ingress
    namespace: snp-print-stage
    resourceVersion: "55029416"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-print-stage/ingresses/mm-utility-svc-ingress
    uid: 4a892136-dc49-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: mm-utility-svc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-utility-svc-k8svc
            servicePort: 80
          path: /
    - host: mm-utility-svc-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-utility-svc-k8svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - mm-utility-svc-stage.test.k8s.target.com
      - mm-utility-svc-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"snp-mm-mainmenu"},"name":"snp-mm-mainmenu-ingress","namespace":"snp-print-stage"},"spec":{"rules":[{"host":"snp-mm-mainmenu-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"snp-mm-mainmenu-k8svc","servicePort":80},"path":"/"}]}},{"host":"snp-mm-mainmenu-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"snp-mm-mainmenu-k8svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["snp-mm-mainmenu-stage.test.k8s.target.com","snp-mm-mainmenu-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-17T09:27:55Z
    generation: 1
    labels:
      app: snp-mm-mainmenu
    name: snp-mm-mainmenu-ingress
    namespace: snp-print-stage
    resourceVersion: "43823305"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-print-stage/ingresses/snp-mm-mainmenu-ingress
    uid: ed73f979-d1ee-11e8-ae94-52540075a812
  spec:
    rules:
    - host: snp-mm-mainmenu-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: snp-mm-mainmenu-k8svc
            servicePort: 80
          path: /
    - host: snp-mm-mainmenu-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: snp-mm-mainmenu-k8svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - snp-mm-mainmenu-stage.test.k8s.target.com
      - snp-mm-mainmenu-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-10T20:32:53Z
    generation: 1
    labels:
      app: softcell-helm
      chart: softcell-helm-0.0.693
      heritage: Tiller
      release: softcell
    name: softcell-softcell-helm
    namespace: softcell-dev
    resourceVersion: "70001040"
    selfLink: /apis/extensions/v1beta1/namespaces/softcell-dev/ingresses/softcell-softcell-helm
    uid: aa1d226b-cccb-11e8-8d6d-525400d3db1b
  spec:
    rules:
    - host: softcell-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: softcell-softcell-helm
            servicePort: http
          path: /metrics
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-16T20:15:39Z
    generation: 1
    labels:
      app: softcell-helm
      chart: softcell-helm-0.4.7
      heritage: Tiller
      release: softcell
    name: softcell-softcell-helm
    namespace: softcell
    resourceVersion: "81519343"
    selfLink: /apis/extensions/v1beta1/namespaces/softcell/ingresses/softcell-softcell-helm
    uid: 40149a93-d180-11e8-b121-525400340d56
  spec:
    rules:
    - host: softcell.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: softcell-softcell-helm
            servicePort: http
          path: /metrics
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"hello"},"name":"hello","namespace":"spa-dev"},"spec":{"rules":[{"host":"spa-dev-hello.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"hello","servicePort":8080},"path":"/hello"},{"backend":{"serviceName":"hello","servicePort":8080},"path":"/hello"}]}},{"host":"spa-dev-hello.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"hello","servicePort":8080},"path":"/hello"},{"backend":{"serviceName":"hello","servicePort":8080},"path":"/hello"}]}}],"tls":[{"hosts":["spa-dev-hello.tte-test.k8s.target.com","spa-dev-hello.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-17T22:10:02Z
    generation: 1
    labels:
      name: hello
    name: hello
    namespace: spa-dev
    resourceVersion: "50971406"
    selfLink: /apis/extensions/v1beta1/namespaces/spa-dev/ingresses/hello
    uid: 64f5d80c-d259-11e8-999b-5254008d935f
  spec:
    rules:
    - host: spa-dev-hello.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: hello
            servicePort: 8080
          path: /hello
        - backend:
            serviceName: hello
            servicePort: 8080
          path: /hello
    - host: spa-dev-hello.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: hello
            servicePort: 8080
          path: /hello
        - backend:
            serviceName: hello
            servicePort: 8080
          path: /hello
    tls:
    - hosts:
      - spa-dev-hello.tte-test.k8s.target.com
      - spa-dev-hello.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-19T14:26:42Z
    generation: 1
    labels:
      name: sba
    name: sba
    namespace: spa-dev
    resourceVersion: "45829979"
    selfLink: /apis/extensions/v1beta1/namespaces/spa-dev/ingresses/sba
    uid: ffb43e96-d3aa-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: spa-dev-sba.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: sba
            servicePort: 8999
          path: /
    - host: spa-dev-sba.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: sba
            servicePort: 8999
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"spa4"},"name":"spa4","namespace":"spa-dev"},"spec":{"rules":[{"host":"spa-dev-spa4.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spa4","servicePort":8512},"path":"/spa4"},{"backend":{"serviceName":"spa4","servicePort":8512},"path":"/spa4"}]}},{"host":"spa-dev-spa4.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spa4","servicePort":8512},"path":"/spa4"},{"backend":{"serviceName":"spa4","servicePort":8512},"path":"/spa4"}]}}],"tls":[{"hosts":["spa-dev-spa4.tte-test.k8s.target.com","spa-dev-spa4.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-17T23:21:22Z
    generation: 1
    labels:
      name: spa4
    name: spa4
    namespace: spa-dev
    resourceVersion: "51001376"
    selfLink: /apis/extensions/v1beta1/namespaces/spa-dev/ingresses/spa4
    uid: 5c082603-d263-11e8-999b-5254008d935f
  spec:
    rules:
    - host: spa-dev-spa4.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spa4
            servicePort: 8512
          path: /spa4
        - backend:
            serviceName: spa4
            servicePort: 8512
          path: /spa4
    - host: spa-dev-spa4.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spa4
            servicePort: 8512
          path: /spa4
        - backend:
            serviceName: spa4
            servicePort: 8512
          path: /spa4
    tls:
    - hosts:
      - spa-dev-spa4.tte-test.k8s.target.com
      - spa-dev-spa4.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-19T15:36:02Z
    generation: 1
    labels:
      name: sba
    name: sba
    namespace: spa-stage
    resourceVersion: "45871755"
    selfLink: /apis/extensions/v1beta1/namespaces/spa-stage/ingresses/sba
    uid: af60d81d-d3b4-11e8-999b-5254008d935f
  spec:
    rules:
    - host: spa-stage-sba.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: sba
            servicePort: 8999
          path: /
    - host: spa-stage-sba.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: sba
            servicePort: 8999
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"spa4"},"name":"spa4","namespace":"spa-stage"},"spec":{"rules":[{"host":"spa-stage-spa4.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spa4","servicePort":8512},"path":"/spa4"},{"backend":{"serviceName":"spa4","servicePort":8512},"path":"/spa4"}]}},{"host":"spa-stage-spa4.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spa4","servicePort":8512},"path":"/spa4"},{"backend":{"serviceName":"spa4","servicePort":8512},"path":"/spa4"}]}}],"tls":[{"hosts":["spa-stage-spa4.tte-test.k8s.target.com","spa-stage-spa4.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-18T20:03:51Z
    generation: 1
    labels:
      name: spa4
    name: spa4
    namespace: spa-stage
    resourceVersion: "61806294"
    selfLink: /apis/extensions/v1beta1/namespaces/spa-stage/ingresses/spa4
    uid: eebf4c87-d310-11e8-999b-5254008d935f
  spec:
    rules:
    - host: spa-stage-spa4.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spa4
            servicePort: 8512
          path: /spa4
        - backend:
            serviceName: spa4
            servicePort: 8512
          path: /spa4
    - host: spa-stage-spa4.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spa4
            servicePort: 8512
          path: /spa4
        - backend:
            serviceName: spa4
            servicePort: 8512
          path: /spa4
    tls:
    - hosts:
      - spa-stage-spa4.tte-test.k8s.target.com
      - spa-stage-spa4.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"spark-access-control-ingress"},"name":"spark-access-control-ingress","namespace":"spark-common-dev"},"spec":{"rules":[{"host":"devspark-access-control.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-access-control-svc","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-15T19:03:38Z
    generation: 1
    labels:
      name: spark-access-control-ingress
    name: spark-access-control-ingress
    namespace: spark-common-dev
    resourceVersion: "42363090"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-common-dev/ingresses/spark-access-control-ingress
    uid: 061a74f1-d0ad-11e8-b121-525400340d56
  spec:
    rules:
    - host: devspark-access-control.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-access-control-svc
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"spark-access-control-load-ingress"},"name":"spark-access-control-load-ingress","namespace":"spark-common-dev"},"spec":{"rules":[{"host":"devspark-access-control-load.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-access-control-load-svc","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-12-13T22:52:38Z
    generation: 1
    labels:
      name: spark-access-control-load-ingress
    name: spark-access-control-load-ingress
    namespace: spark-common-dev
    resourceVersion: "97088752"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-common-dev/ingresses/spark-access-control-load-ingress
    uid: ca372842-ff29-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: devspark-access-control-load.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-access-control-load-svc
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-attachment-ingress","namespace":"spark-common-dev"},"spec":{"rules":[{"host":"devspark-attachment.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-attachment-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-attachment.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-24T14:28:23Z
    generation: 1
    name: spark-attachment-ingress
    namespace: spark-common-dev
    resourceVersion: "27790742"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-common-dev/ingresses/spark-attachment-ingress
    uid: 177aef6f-c006-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: devspark-attachment.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-attachment-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-attachment.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"spark-elastic-search-hub-ingress"},"name":"spark-elastic-search-hub-ingress","namespace":"spark-common-dev"},"spec":{"rules":[{"host":"devspark-es-search-hub.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-elastic-search-hub-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-es-search-hub.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-24T20:01:04Z
    generation: 1
    labels:
      name: spark-elastic-search-hub-ingress
    name: spark-elastic-search-hub-ingress
    namespace: spark-common-dev
    resourceVersion: "27939174"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-common-dev/ingresses/spark-elastic-search-hub-ingress
    uid: 9192f2bc-c034-11e8-bc70-5254004139fa
  spec:
    rules:
    - host: devspark-es-search-hub.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-elastic-search-hub-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-es-search-hub.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-graphql-ingress","namespace":"spark-common-dev"},"spec":{"rules":[{"host":"devspark-graphql.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-graphql-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-graphql.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-28T14:18:07Z
    generation: 7
    name: spark-graphql-ingress
    namespace: spark-common-dev
    resourceVersion: "39137537"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-common-dev/ingresses/spark-graphql-ingress
    uid: 2f8dc48b-aacd-11e8-842d-525400df3355
  spec:
    rules:
    - host: devspark-graphql.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-graphql-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-graphql.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-graphql-ingress-e","namespace":"spark-common-dev"},"spec":{"rules":[{"host":"devspark-graphql.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-graphql-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-graphql.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-11T15:31:20Z
    generation: 1
    name: spark-graphql-ingress-e
    namespace: spark-common-dev
    resourceVersion: "39137695"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-common-dev/ingresses/spark-graphql-ingress-e
    uid: b3b71f3f-cd6a-11e8-8770-525400a7f06e
  spec:
    rules:
    - host: devspark-graphql.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-graphql-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-graphql.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-graphql-ingress-test-tte","namespace":"spark-common-dev"},"spec":{"rules":[{"host":"testspark-graphql.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-graphql-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["testspark-graphql.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-19T20:14:17Z
    generation: 2
    name: spark-graphql-ingress-test-tte
    namespace: spark-common-dev
    resourceVersion: "25145338"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-common-dev/ingresses/spark-graphql-ingress-test-tte
    uid: 963efdd2-bc48-11e8-9cda-525400df3355
  spec:
    rules:
    - host: testspark-graphql.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-graphql-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - testspark-graphql.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-kibana-ingress","namespace":"spark-common-dev"},"spec":{"rules":[{"host":"devspark-kibana.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-kibana-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-kibana.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-27T14:53:19Z
    generation: 1
    name: spark-kibana-ingress
    namespace: spark-common-dev
    resourceVersion: "81299245"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-common-dev/ingresses/spark-kibana-ingress
    uid: 2df93795-f254-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: devspark-kibana.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-kibana-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-kibana.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-notifications-ingress","namespace":"spark-common-dev"},"spec":{"rules":[{"host":"devspark-notifications.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-notifications-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-notifications.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-16T19:07:51Z
    generation: 1
    name: spark-notifications-ingress
    namespace: spark-common-dev
    resourceVersion: "71087294"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-common-dev/ingresses/spark-notifications-ingress
    uid: ea3e8aa4-e9d2-11e8-999b-5254008d935f
  spec:
    rules:
    - host: devspark-notifications.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-notifications-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-notifications.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"spark-relationship-ingress"},"name":"spark-relationship-ingress","namespace":"spark-common-dev"},"spec":{"rules":[{"host":"devspark-relationship.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-relationship-svc","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-11-07T16:03:22Z
    generation: 1
    labels:
      name: spark-relationship-ingress
    name: spark-relationship-ingress
    namespace: spark-common-dev
    resourceVersion: "62622659"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-common-dev/ingresses/spark-relationship-ingress
    uid: a6c68f06-e2a6-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: devspark-relationship.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-relationship-svc
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"spark-sample-ingress"},"name":"spark-sample-ingress","namespace":"spark-common-dev"},"spec":{"rules":[{"host":"devspark-sample-v2.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-sample-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-sample-v2.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-03-02T01:24:56Z
    generation: 1
    labels:
      name: spark-sample-ingress
    name: spark-sample-ingress
    namespace: spark-common-dev
    resourceVersion: "175536897"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-common-dev/ingresses/spark-sample-ingress
    uid: fd037b8f-3c89-11e9-81c2-52540003963e
  spec:
    rules:
    - host: devspark-sample-v2.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-sample-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-sample-v2.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-sample-ingress-e","namespace":"spark-common-dev"},"spec":{"rules":[{"host":"devspark-sample-v2.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-sample-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-sample-v2.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-03-02T01:24:58Z
    generation: 1
    name: spark-sample-ingress-e
    namespace: spark-common-dev
    resourceVersion: "175536898"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-common-dev/ingresses/spark-sample-ingress-e
    uid: fe74da1f-3c89-11e9-81c2-52540003963e
  spec:
    rules:
    - host: devspark-sample-v2.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-sample-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-sample-v2.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-activity-center-ingress","namespace":"spark-dev"},"spec":{"rules":[{"host":"devspark-activity-center.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-activity-center-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-activity-center.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-21T18:02:49Z
    generation: 1
    name: spark-activity-center-ingress
    namespace: spark-dev
    resourceVersion: "14628202"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-dev/ingresses/spark-activity-center-ingress
    uid: 6a2c941d-a56c-11e8-8dd4-5254004139fa
  spec:
    rules:
    - host: devspark-activity-center.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-activity-center-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-activity-center.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-discussion-ingress","namespace":"spark-dev"},"spec":{"rules":[{"host":"devspark-discussion.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-discussion-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-discussion.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-28T18:33:44Z
    generation: 47
    name: spark-discussion-ingress
    namespace: spark-dev
    resourceVersion: "29027389"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-dev/ingresses/spark-discussion-ingress
    uid: e4d79199-aaf0-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: devspark-discussion.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-discussion-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-discussion.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-discussion-ingress-e","namespace":"spark-dev"},"spec":{"rules":[{"host":"devspark-discussion.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-discussion-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-discussion.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-26T17:03:38Z
    generation: 1
    name: spark-discussion-ingress-e
    namespace: spark-dev
    resourceVersion: "29027497"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-dev/ingresses/spark-discussion-ingress-e
    uid: 1ceeae73-c1ae-11e8-bc70-5254004139fa
  spec:
    rules:
    - host: devspark-discussion.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-discussion-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-discussion.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-edge-ingress","namespace":"spark-dev"},"spec":{"rules":[{"host":"devspark-edge.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-edge-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-edge.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-28T13:05:42Z
    generation: 7
    name: spark-edge-ingress
    namespace: spark-dev
    resourceVersion: "16779713"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-dev/ingresses/spark-edge-ingress
    uid: 115eed2c-aac3-11e8-88c5-5254004139fa
  spec:
    rules:
    - host: devspark-edge.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-edge-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-edge.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-edge-ingress-e","namespace":"spark-dev"},"spec":{"rules":[{"host":"devspark-edge.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-edge-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-edge.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-28T16:22:45Z
    generation: 1
    name: spark-edge-ingress-e
    namespace: spark-dev
    resourceVersion: "16779885"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-dev/ingresses/spark-edge-ingress-e
    uid: 98872f2e-aade-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: devspark-edge.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-edge-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-edge.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-pdf-ingress","namespace":"spark-dev"},"spec":{"rules":[{"host":"devspark-pdf.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-pdf-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-pdf.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-22T05:22:38Z
    generation: 1
    name: spark-pdf-ingress
    namespace: spark-dev
    resourceVersion: "26438524"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-dev/ingresses/spark-pdf-ingress
    uid: 856f89e2-be27-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: devspark-pdf.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-pdf-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-pdf.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-product-ingress","namespace":"spark-dev"},"spec":{"rules":[{"host":"devspark-product.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-product-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-product.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-23T14:14:19Z
    generation: 38
    name: spark-product-ingress
    namespace: spark-dev
    resourceVersion: "21662000"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-dev/ingresses/spark-product-ingress
    uid: d35ed0d3-a6de-11e8-8dd4-5254004139fa
  spec:
    rules:
    - host: devspark-product.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-product-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-product.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-product-ingress-e","namespace":"spark-dev"},"spec":{"rules":[{"host":"devspark-status-app.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-status-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-status-app.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-10T20:30:02Z
    generation: 1
    name: spark-product-ingress-e
    namespace: spark-dev
    resourceVersion: "38517563"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-dev/ingresses/spark-product-ingress-e
    uid: 43d16138-cccb-11e8-8d6d-525400d3db1b
  spec:
    rules:
    - host: devspark-status-app.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-status-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-status-app.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-sample-ingress","namespace":"spark-dev"},"spec":{"rules":[{"host":"devspark-sample.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-sample-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-sample.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-27T20:02:31Z
    generation: 31
    name: spark-sample-ingress
    namespace: spark-dev
    resourceVersion: "24467199"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-dev/ingresses/spark-sample-ingress
    uid: 216f0bd6-aa34-11e8-8dd4-5254004139fa
  spec:
    rules:
    - host: devspark-sample.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-sample-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-sample.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-sample-ingress-e","namespace":"spark-dev"},"spec":{"rules":[{"host":"devspark-sample.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-sample-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-sample.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-18T17:01:04Z
    generation: 1
    name: spark-sample-ingress-e
    namespace: spark-dev
    resourceVersion: "24467412"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-dev/ingresses/spark-sample-ingress-e
    uid: 6dade3e9-bb64-11e8-88c5-5254004139fa
  spec:
    rules:
    - host: devspark-sample.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-sample-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-sample.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"spark-security-ingress"},"name":"spark-security-ingress","namespace":"spark-dev"},"spec":{"rules":[{"host":"devspark-security.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-security-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-security.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-15T16:25:12Z
    generation: 1
    labels:
      name: spark-security-ingress
    name: spark-security-ingress
    namespace: spark-dev
    resourceVersion: "42272592"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-dev/ingresses/spark-security-ingress
    uid: e4496c5a-d096-11e8-b121-525400340d56
  spec:
    rules:
    - host: devspark-security.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-security-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-security.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-tag-ingress","namespace":"spark-dev"},"spec":{"rules":[{"host":"devspark-tag.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-tag-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-tag.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-28T13:06:01Z
    generation: 3
    name: spark-tag-ingress
    namespace: spark-dev
    resourceVersion: "17458986"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-dev/ingresses/spark-tag-ingress
    uid: 1c9e6f4f-aac3-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: devspark-tag.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-tag-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-tag.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-user-profile-ingress","namespace":"spark-dev"},"spec":{"rules":[{"host":"devspark-user-profile.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-user-profile-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-user-profile.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-28T13:09:20Z
    generation: 3
    name: spark-user-profile-ingress
    namespace: spark-dev
    resourceVersion: "16757547"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-dev/ingresses/spark-user-profile-ingress
    uid: 9384a958-aac3-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: devspark-user-profile.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-user-profile-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-user-profile.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-user-profile-ingress-e","namespace":"spark-dev"},"spec":{"rules":[{"host":"devspark-user-profile.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-user-profile-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-user-profile.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-28T15:02:42Z
    generation: 1
    name: spark-user-profile-ingress-e
    namespace: spark-dev
    resourceVersion: "16761916"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-dev/ingresses/spark-user-profile-ingress-e
    uid: 69fb297f-aad3-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: devspark-user-profile.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-user-profile-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-user-profile.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-workspace-ingress","namespace":"spark-dev"},"spec":{"rules":[{"host":"devspark-workspace.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-workspace-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-workspace.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-28T18:45:50Z
    generation: 35
    name: spark-workspace-ingress
    namespace: spark-dev
    resourceVersion: "38344726"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-dev/ingresses/spark-workspace-ingress
    uid: 9596d643-aaf2-11e8-88c5-5254004139fa
  spec:
    rules:
    - host: devspark-workspace.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-workspace-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-workspace.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-workspace-ingress-e","namespace":"spark-dev"},"spec":{"rules":[{"host":"devspark-workspace.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-workspace-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-workspace.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-10T17:46:37Z
    generation: 1
    name: spark-workspace-ingress-e
    namespace: spark-dev
    resourceVersion: "38344769"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-dev/ingresses/spark-workspace-ingress-e
    uid: 6f84a0e4-ccb4-11e8-9ae6-5254005969a8
  spec:
    rules:
    - host: devspark-workspace.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-workspace-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-workspace.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"spark-artwork-ingress"},"name":"spark-artwork-ingress","namespace":"spark-material-dev"},"spec":{"rules":[{"host":"devspark-artwork.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-artwork-svc","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-09-24T18:26:41Z
    generation: 1
    labels:
      name: spark-artwork-ingress
    name: spark-artwork-ingress
    namespace: spark-material-dev
    resourceVersion: "27898807"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-material-dev/ingresses/spark-artwork-ingress
    uid: 61fffd00-c027-11e8-8bab-525400df3355
  spec:
    rules:
    - host: devspark-artwork.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-artwork-svc
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"spark-color-ingress"},"name":"spark-color-ingress","namespace":"spark-material-dev"},"spec":{"rules":[{"host":"devspark-color.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-color-svc","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-09-24T18:40:54Z
    generation: 1
    labels:
      name: spark-color-ingress
    name: spark-color-ingress
    namespace: spark-material-dev
    resourceVersion: "27905050"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-material-dev/ingresses/spark-color-ingress
    uid: 5e7f6676-c029-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: devspark-color.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-color-svc
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"spark-fabric-ingress"},"name":"spark-fabric-ingress","namespace":"spark-material-dev"},"spec":{"rules":[{"host":"devspark-fabric.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-fabric-svc","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-01-17T21:47:37Z
    generation: 2
    labels:
      name: spark-fabric-ingress
    name: spark-fabric-ingress
    namespace: spark-material-dev
    resourceVersion: "137241094"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-material-dev/ingresses/spark-fabric-ingress
    uid: 81587ce9-1aa1-11e9-a834-525400f586f1
  spec:
    rules:
    - host: devspark-fabric.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-fabric-svc
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"spark-palette-ingress"},"name":"spark-palette-ingress","namespace":"spark-material-dev"},"spec":{"rules":[{"host":"devspark-palette.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-palette-svc","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-09-24T15:18:25Z
    generation: 1
    labels:
      name: spark-palette-ingress
    name: spark-palette-ingress
    namespace: spark-material-dev
    resourceVersion: "27811455"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-material-dev/ingresses/spark-palette-ingress
    uid: 15287a12-c00d-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: devspark-palette.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-palette-svc
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"spark-ui-admin-ingress"},"name":"spark-ui-admin-ingress","namespace":"spark-ui-dev"},"spec":{"rules":[{"host":"devspark-ui-admin.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-ui-admin-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-ui-admin.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-20T19:59:10Z
    generation: 1
    labels:
      name: spark-ui-admin-ingress
    name: spark-ui-admin-ingress
    namespace: spark-ui-dev
    resourceVersion: "134431782"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-ui-dev/ingresses/spark-ui-admin-ingress
    uid: da037381-1ced-11e9-b998-525400bb6b25
  spec:
    rules:
    - host: devspark-ui-admin.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-ui-admin-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-ui-admin.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"spark-ui-admin-ingress-e"},"name":"spark-ui-admin-ingress-e","namespace":"spark-ui-dev"},"spec":{"rules":[{"host":"devspark-ui-admin.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-ui-admin-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-ui-admin.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-20T19:59:12Z
    generation: 1
    labels:
      name: spark-ui-admin-ingress-e
    name: spark-ui-admin-ingress-e
    namespace: spark-ui-dev
    resourceVersion: "134431783"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-ui-dev/ingresses/spark-ui-admin-ingress-e
    uid: db3eb550-1ced-11e9-b998-525400bb6b25
  spec:
    rules:
    - host: devspark-ui-admin.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-ui-admin-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-ui-admin.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"spark-ui-ingress"},"name":"spark-ui-ingress","namespace":"spark-ui-dev"},"spec":{"rules":[{"host":"devspark-ui.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-ui-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-ui.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-19T19:47:35Z
    generation: 1
    labels:
      name: spark-ui-ingress
    name: spark-ui-ingress
    namespace: spark-ui-dev
    resourceVersion: "25130365"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-ui-dev/ingresses/spark-ui-ingress
    uid: db65a63a-bc44-11e8-9cda-525400df3355
  spec:
    rules:
    - host: devspark-ui.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-ui-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-ui.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"spark-ui-ingress-e"},"name":"spark-ui-ingress-e","namespace":"spark-ui-dev"},"spec":{"rules":[{"host":"devspark-ui.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-ui-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-ui.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-19T19:47:28Z
    generation: 1
    labels:
      name: spark-ui-ingress-e
    name: spark-ui-ingress-e
    namespace: spark-ui-dev
    resourceVersion: "25129961"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-ui-dev/ingresses/spark-ui-ingress-e
    uid: d70aed7e-bc44-11e8-9cda-525400df3355
  spec:
    rules:
    - host: devspark-ui.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-ui-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-ui.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"spark-ui-ingress-e-test"},"name":"spark-ui-ingress-e-test","namespace":"spark-ui-dev"},"spec":{"rules":[{"host":"testspark-ui.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-ui-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["testspark-ui.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-19T19:53:12Z
    generation: 1
    labels:
      name: spark-ui-ingress-e-test
    name: spark-ui-ingress-e-test
    namespace: spark-ui-dev
    resourceVersion: "25132138"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-ui-dev/ingresses/spark-ui-ingress-e-test
    uid: a42f1f7c-bc45-11e8-9cda-525400df3355
  spec:
    rules:
    - host: testspark-ui.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-ui-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - testspark-ui.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"storelabels"},"name":"storelabels","namespace":"storesprint"},"spec":{"rules":[{"host":"storelabels.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"storelabels","servicePort":80},"path":"/"}]}},{"host":"storelabels.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"storelabels","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["storelabels.test.k8s.target.com","storelabels.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-16T03:15:33Z
    generation: 1
    labels:
      app: storelabels
    name: storelabels
    namespace: storesprint
    resourceVersion: "70441770"
    selfLink: /apis/extensions/v1beta1/namespaces/storesprint/ingresses/storelabels
    uid: e119cc63-e94d-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: storelabels.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: storelabels
            servicePort: 80
          path: /
    - host: storelabels.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: storelabels
            servicePort: 80
          path: /
    tls:
    - hosts:
      - storelabels.test.k8s.target.com
      - storelabels.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"admin-api-ingress"},"name":"admin-api-ingress","namespace":"streaming-platform"},"spec":{"rules":[{"host":"kafka-admin-api.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"go-proxy-service-admin-api","servicePort":8888},"path":"/"}]}},{"host":"kafka-admin-api.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"go-proxy-service-admin-api","servicePort":8888},"path":"/"}]}}],"tls":[{"hosts":["kafka-admin-api.test.k8s.target.com","kafka-admin-api.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-14T19:39:07Z
    generation: 3
    labels:
      name: admin-api-ingress
    name: admin-api-ingress
    namespace: streaming-platform
    resourceVersion: "24402116"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/admin-api-ingress
    uid: d8558e72-b855-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: kafka-admin-api.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: go-proxy-service-admin-api
            servicePort: 8888
          path: /
    - host: kafka-admin-api.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: go-proxy-service-admin-api
            servicePort: 8888
          path: /
    tls:
    - hosts:
      - kafka-admin-api.test.k8s.target.com
      - kafka-admin-api.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-12-06T14:26:17Z
    generation: 1
    labels:
      name: app-ttc-stg
    name: app-ttc-stg
    namespace: streaming-platform
    resourceVersion: "89955541"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/app-ttc-stg
    uid: e4799e3d-f962-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: app-ttce-stg.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cruisecontrol-service-app
            servicePort: 9090
          path: /
    tls:
    - hosts:
      - app-ttce-stg.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-19T11:34:02Z
    generation: 1
    labels:
      name: atp-ttc-stg
    name: atp-ttc-stg
    namespace: streaming-platform
    resourceVersion: "191784437"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/atp-ttc-stg
    uid: e5127801-4a3a-11e9-ad83-525400a854be
  spec:
    rules:
    - host: atp-ttce-stg.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cruisecontrol-service-atp
            servicePort: 9090
          path: /
    tls:
    - hosts:
      - atp-ttce-stg.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-gcpshr-east-measurement-test"},"name":"burrow-gcpshr-east-measurement-test","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-gcpshr-east-measurement-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-gcpshr-east-measurement-test","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-gcpshr-east-measurement-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-01T20:16:20Z
    generation: 2
    labels:
      name: burrow-gcpshr-east-measurement-test
    name: burrow-gcpshr-east-measurement-test
    namespace: streaming-platform
    resourceVersion: "32526306"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-gcpshr-east-measurement-test
    uid: dc73d170-c5b6-11e8-8a20-5254001e2711
  spec:
    rules:
    - host: burrow-gcpshr-east-measurement-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-gcpshr-east-measurement-test
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-gcpshr-east-measurement-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-gcpshr-east1-test-app"},"name":"burrow-ingress-gcpshr-east1-test-app","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-gcpshr-east1-test-app.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-gcpshr-east1-test-app","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-gcpshr-east1-test-app.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-15T21:56:01Z
    generation: 1
    labels:
      name: burrow-ingress-gcpshr-east1-test-app
    name: burrow-ingress-gcpshr-east1-test-app
    namespace: streaming-platform
    resourceVersion: "42471087"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-gcpshr-east1-test-app
    uid: 1b0f0152-d0c5-11e8-ae94-52540075a812
  spec:
    rules:
    - host: burrow-gcpshr-east1-test-app.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-gcpshr-east1-test-app
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-gcpshr-east1-test-app.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-gcpshr-east1-test-checkout"},"name":"burrow-ingress-gcpshr-east1-test-checkout","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-gcpshr-east1-test-checkout.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-gcpshr-east1-test-checkout","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-gcpshr-east1-test-checkout.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-15T21:59:08Z
    generation: 1
    labels:
      name: burrow-ingress-gcpshr-east1-test-checkout
    name: burrow-ingress-gcpshr-east1-test-checkout
    namespace: streaming-platform
    resourceVersion: "42472824"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-gcpshr-east1-test-checkout
    uid: 8a65593c-d0c5-11e8-ae94-52540075a812
  spec:
    rules:
    - host: burrow-gcpshr-east1-test-checkout.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-gcpshr-east1-test-checkout
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-gcpshr-east1-test-checkout.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-gcpshr-east1-test-measurement"},"name":"burrow-ingress-gcpshr-east1-test-measurement","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-gcpshr-east1-test-measurement.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-gcpshr-east1-test-measurement","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-gcpshr-east1-test-measurement.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-15T22:02:58Z
    generation: 1
    labels:
      name: burrow-ingress-gcpshr-east1-test-measurement
    name: burrow-ingress-gcpshr-east1-test-measurement
    namespace: streaming-platform
    resourceVersion: "42475802"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-gcpshr-east1-test-measurement
    uid: 135d7b9b-d0c6-11e8-ae94-52540075a812
  spec:
    rules:
    - host: burrow-gcpshr-east1-test-measurement.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-gcpshr-east1-test-measurement
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-gcpshr-east1-test-measurement.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-ost-ttce-test-app"},"name":"burrow-ingress-ost-ttce-test-app","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-ost-ttce-test-app.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-ost-ttce-test-app","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-ost-ttce-test-app.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-16T22:07:04Z
    generation: 1
    labels:
      name: burrow-ingress-ost-ttce-test-app
    name: burrow-ingress-ost-ttce-test-app
    namespace: streaming-platform
    resourceVersion: "43420293"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-ost-ttce-test-app
    uid: d0a729c7-d18f-11e8-ae94-52540075a812
  spec:
    rules:
    - host: burrow-ost-ttce-test-app.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-ost-ttce-test-app
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-ost-ttce-test-app.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-ost-ttce-test-atp"},"name":"burrow-ingress-ost-ttce-test-atp","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-ost-ttce-test-atp.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-ost-ttce-test-atp","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-ost-ttce-test-atp.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-16T22:36:09Z
    generation: 1
    labels:
      name: burrow-ingress-ost-ttce-test-atp
    name: burrow-ingress-ost-ttce-test-atp
    namespace: streaming-platform
    resourceVersion: "43436899"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-ost-ttce-test-atp
    uid: e0b1c946-d193-11e8-b121-525400340d56
  spec:
    rules:
    - host: burrow-ost-ttce-test-atp.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-ost-ttce-test-atp
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-ost-ttce-test-atp.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-ost-ttce-test-checkout"},"name":"burrow-ingress-ost-ttce-test-checkout","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-ost-ttce-test-checkout.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-ost-ttce-test-checkout","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-ost-ttce-test-checkout.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-17T01:00:12Z
    generation: 1
    labels:
      name: burrow-ingress-ost-ttce-test-checkout
    name: burrow-ingress-ost-ttce-test-checkout
    namespace: streaming-platform
    resourceVersion: "43522424"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-ost-ttce-test-checkout
    uid: 006376cb-d1a8-11e8-999f-52540096678d
  spec:
    rules:
    - host: burrow-ost-ttce-test-checkout.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-ost-ttce-test-checkout
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-ost-ttce-test-checkout.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-ost-ttce-test-corona"},"name":"burrow-ingress-ost-ttce-test-corona","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-ost-ttce-test-corona.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-ost-ttce-test-corona","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-ost-ttce-test-corona.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-03-06T21:31:49Z
    generation: 1
    labels:
      name: burrow-ingress-ost-ttce-test-corona
    name: burrow-ingress-ost-ttce-test-corona
    namespace: streaming-platform
    resourceVersion: "180066180"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-ost-ttce-test-corona
    uid: 4035bf56-4057-11e9-ae3d-52540007651c
  spec:
    rules:
    - host: burrow-ost-ttce-test-corona.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-ost-ttce-test-corona
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-ost-ttce-test-corona.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-ost-ttce-test-d2g"},"name":"burrow-ingress-ost-ttce-test-d2g","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-ost-ttce-test-d2g.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-ost-ttce-test-d2g","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-ost-ttce-test-d2g.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-16T17:04:48Z
    generation: 1
    labels:
      name: burrow-ingress-ost-ttce-test-d2g
    name: burrow-ingress-ost-ttce-test-d2g
    namespace: streaming-platform
    resourceVersion: "130027476"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-ost-ttce-test-d2g
    uid: d4c38cd3-19b0-11e9-9770-525400b66b60
  spec:
    rules:
    - host: burrow-ost-ttce-test-d2g.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-ost-ttce-test-d2g
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-ost-ttce-test-d2g.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-ost-ttce-test-echo"},"name":"burrow-ingress-ost-ttce-test-echo","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-ost-ttce-test-echo.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-ost-ttce-test-echo","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-ost-ttce-test-echo.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-17T02:11:43Z
    generation: 1
    labels:
      name: burrow-ingress-ost-ttce-test-echo
    name: burrow-ingress-ost-ttce-test-echo
    namespace: streaming-platform
    resourceVersion: "43563886"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-ost-ttce-test-echo
    uid: fdaf6b6f-d1b1-11e8-ae94-52540075a812
  spec:
    rules:
    - host: burrow-ost-ttce-test-echo.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-ost-ttce-test-echo
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-ost-ttce-test-echo.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-ost-ttce-test-ffods"},"name":"burrow-ingress-ost-ttce-test-ffods","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-ost-ttce-test-ffods.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-ost-ttce-test-ffods","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-ost-ttce-test-ffods.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-26T20:30:50Z
    generation: 1
    labels:
      name: burrow-ingress-ost-ttce-test-ffods
    name: burrow-ingress-ost-ttce-test-ffods
    namespace: streaming-platform
    resourceVersion: "171750444"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-ost-ttce-test-ffods
    uid: 67db8772-3a05-11e9-b42d-5254003b1534
  spec:
    rules:
    - host: burrow-ost-ttce-test-ffods.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-ost-ttce-test-ffods
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-ost-ttce-test-ffods.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-ost-ttce-test-firefly"},"name":"burrow-ingress-ost-ttce-test-firefly","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-ost-ttce-test-firefly.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-ost-ttce-test-firefly","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-ost-ttce-test-firefly.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-17T02:35:32Z
    generation: 1
    labels:
      name: burrow-ingress-ost-ttce-test-firefly
    name: burrow-ingress-ost-ttce-test-firefly
    namespace: streaming-platform
    resourceVersion: "43578079"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-ost-ttce-test-firefly
    uid: 51a04c8c-d1b5-11e8-999f-52540096678d
  spec:
    rules:
    - host: burrow-ost-ttce-test-firefly.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-ost-ttce-test-firefly
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-ost-ttce-test-firefly.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-ost-ttce-test-gom"},"name":"burrow-ingress-ost-ttce-test-gom","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-ost-ttce-test-gom.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-ost-ttce-test-gom","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-ost-ttce-test-gom.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-17T02:39:46Z
    generation: 1
    labels:
      name: burrow-ingress-ost-ttce-test-gom
    name: burrow-ingress-ost-ttce-test-gom
    namespace: streaming-platform
    resourceVersion: "43581041"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-ost-ttce-test-gom
    uid: e91cadc2-d1b5-11e8-999f-52540096678d
  spec:
    rules:
    - host: burrow-ost-ttce-test-gom.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-ost-ttce-test-gom
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-ost-ttce-test-gom.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-ost-ttce-test-inr"},"name":"burrow-ingress-ost-ttce-test-inr","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-ost-ttce-test-inr.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-ost-ttce-test-inr","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-ost-ttce-test-inr.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-17T02:40:55Z
    generation: 1
    labels:
      name: burrow-ingress-ost-ttce-test-inr
    name: burrow-ingress-ost-ttce-test-inr
    namespace: streaming-platform
    resourceVersion: "43581685"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-ost-ttce-test-inr
    uid: 122370f6-d1b6-11e8-999f-52540096678d
  spec:
    rules:
    - host: burrow-ost-ttce-test-inr.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-ost-ttce-test-inr
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-ost-ttce-test-inr.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-ost-ttce-test-internal"},"name":"burrow-ingress-ost-ttce-test-internal","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-ost-ttce-test-internal.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-ost-ttce-test-internal","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-ost-ttce-test-internal.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-17T02:41:39Z
    generation: 1
    labels:
      name: burrow-ingress-ost-ttce-test-internal
    name: burrow-ingress-ost-ttce-test-internal
    namespace: streaming-platform
    resourceVersion: "43581686"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-ost-ttce-test-internal
    uid: 2c515821-d1b6-11e8-999f-52540096678d
  spec:
    rules:
    - host: burrow-ost-ttce-test-internal.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-ost-ttce-test-internal
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-ost-ttce-test-internal.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-ost-ttce-test-measurement"},"name":"burrow-ingress-ost-ttce-test-measurement","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-ost-ttce-test-measurement.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-ost-ttce-test-measurement","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-ost-ttce-test-measurement.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-17T02:42:30Z
    generation: 1
    labels:
      name: burrow-ingress-ost-ttce-test-measurement
    name: burrow-ingress-ost-ttce-test-measurement
    namespace: streaming-platform
    resourceVersion: "43582291"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-ost-ttce-test-measurement
    uid: 4aa7f06f-d1b6-11e8-999f-52540096678d
  spec:
    rules:
    - host: burrow-ost-ttce-test-measurement.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-ost-ttce-test-measurement
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-ost-ttce-test-measurement.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-ost-ttce-test-ndii"},"name":"burrow-ingress-ost-ttce-test-ndii","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-ost-ttce-test-ndii.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-ost-ttce-test-ndii","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-ost-ttce-test-ndii.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-26T20:36:09Z
    generation: 1
    labels:
      name: burrow-ingress-ost-ttce-test-ndii
    name: burrow-ingress-ost-ttce-test-ndii
    namespace: streaming-platform
    resourceVersion: "171756479"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-ost-ttce-test-ndii
    uid: 25f20e3e-3a06-11e9-b42d-5254003b1534
  spec:
    rules:
    - host: burrow-ost-ttce-test-ndii.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-ost-ttce-test-ndii
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-ost-ttce-test-ndii.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-ost-ttce-test-ole"},"name":"burrow-ingress-ost-ttce-test-ole","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-ost-ttce-test-ole.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-ost-ttce-test-ole","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-ost-ttce-test-ole.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-17T02:43:03Z
    generation: 1
    labels:
      name: burrow-ingress-ost-ttce-test-ole
    name: burrow-ingress-ost-ttce-test-ole
    namespace: streaming-platform
    resourceVersion: "43582939"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-ost-ttce-test-ole
    uid: 5eca221f-d1b6-11e8-999f-52540096678d
  spec:
    rules:
    - host: burrow-ost-ttce-test-ole.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-ost-ttce-test-ole
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-ost-ttce-test-ole.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-ost-ttce-test-pci"},"name":"burrow-ingress-ost-ttce-test-pci","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-ost-ttce-test-pci.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-ost-ttce-test-pci","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-ost-ttce-test-pci.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-26T20:38:31Z
    generation: 1
    labels:
      name: burrow-ingress-ost-ttce-test-pci
    name: burrow-ingress-ost-ttce-test-pci
    namespace: streaming-platform
    resourceVersion: "171758132"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-ost-ttce-test-pci
    uid: 7acf900a-3a06-11e9-b42d-5254003b1534
  spec:
    rules:
    - host: burrow-ost-ttce-test-pci.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-ost-ttce-test-pci
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-ost-ttce-test-pci.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-ost-ttce-test-sdm"},"name":"burrow-ingress-ost-ttce-test-sdm","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-ost-ttce-test-sdm.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-ost-ttce-test-sdm","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-ost-ttce-test-sdm.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-11T22:09:07Z
    generation: 1
    labels:
      name: burrow-ingress-ost-ttce-test-sdm
    name: burrow-ingress-ost-ttce-test-sdm
    namespace: streaming-platform
    resourceVersion: "95082639"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-ost-ttce-test-sdm
    uid: 60d23ece-fd91-11e8-999b-5254008d935f
  spec:
    rules:
    - host: burrow-ost-ttce-test-sdm.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-ost-ttce-test-sdm
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-ost-ttce-test-sdm.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-ost-ttce-test-search"},"name":"burrow-ingress-ost-ttce-test-search","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-ost-ttce-test-search.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-ost-ttce-test-search","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-ost-ttce-test-search.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-26T21:01:16Z
    generation: 1
    labels:
      name: burrow-ingress-ost-ttce-test-search
    name: burrow-ingress-ost-ttce-test-search
    namespace: streaming-platform
    resourceVersion: "171779684"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-ost-ttce-test-search
    uid: a87d009d-3a09-11e9-b42d-5254003b1534
  spec:
    rules:
    - host: burrow-ost-ttce-test-search.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-ost-ttce-test-search
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-ost-ttce-test-search.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-ost-ttce-test-stores"},"name":"burrow-ingress-ost-ttce-test-stores","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-ost-ttce-test-stores.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-ost-ttce-test-stores","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-ost-ttce-test-stores.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-17T02:43:48Z
    generation: 1
    labels:
      name: burrow-ingress-ost-ttce-test-stores
    name: burrow-ingress-ost-ttce-test-stores
    namespace: streaming-platform
    resourceVersion: "43583620"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-ost-ttce-test-stores
    uid: 795242fe-d1b6-11e8-999f-52540096678d
  spec:
    rules:
    - host: burrow-ost-ttce-test-stores.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-ost-ttce-test-stores
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-ost-ttce-test-stores.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-ost-ttce-test-tap"},"name":"burrow-ingress-ost-ttce-test-tap","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-ost-ttce-test-tap.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-ost-ttce-test-tap","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-ost-ttce-test-tap.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-17T02:44:22Z
    generation: 1
    labels:
      name: burrow-ingress-ost-ttce-test-tap
    name: burrow-ingress-ost-ttce-test-tap
    namespace: streaming-platform
    resourceVersion: "43583619"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-ost-ttce-test-tap
    uid: 8d955192-d1b6-11e8-999f-52540096678d
  spec:
    rules:
    - host: burrow-ost-ttce-test-tap.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-ost-ttce-test-tap
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-ost-ttce-test-tap.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-ost-ttce-test-tracing"},"name":"burrow-ingress-ost-ttce-test-tracing","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-ost-ttce-test-tracing.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-ost-ttce-test-tracing","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-ost-ttce-test-tracing.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-17T02:45:24Z
    generation: 1
    labels:
      name: burrow-ingress-ost-ttce-test-tracing
    name: burrow-ingress-ost-ttce-test-tracing
    namespace: streaming-platform
    resourceVersion: "43584383"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-ost-ttce-test-tracing
    uid: b2539fbf-d1b6-11e8-999f-52540096678d
  spec:
    rules:
    - host: burrow-ost-ttce-test-tracing.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-ost-ttce-test-tracing
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-ost-ttce-test-tracing.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-11T10:33:11Z
    generation: 1
    labels:
      name: cc-ttc-stg
    name: cc-ttc-stg
    namespace: streaming-platform
    resourceVersion: "184391875"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/cc-ttc-stg
    uid: 11afac8a-43e9-11e9-ae3d-52540007651c
  spec:
    rules:
    - host: c-ui-ttce-stg.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cc-service-ui
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - c-ui-ttce-stg.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-05T05:10:45Z
    generation: 1
    labels:
      name: cc-ttce-stg
    name: cc-ttce-stg
    namespace: streaming-platform
    resourceVersion: "178454356"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/cc-ttce-stg
    uid: 0862bd08-3f05-11e9-9130-525400927ab2
  spec:
    rules:
    - host: cc-ui-ttce-stg.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cc-service-ui
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - cc-ui-ttce-stg.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-12-10T14:49:23Z
    generation: 1
    labels:
      name: checkout-ttc-stg
    name: checkout-ttc-stg
    namespace: streaming-platform
    resourceVersion: "93803314"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/checkout-ttc-stg
    uid: c8408097-fc8a-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: checkout-ttce-stg.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cruisecontrol-service-checkout
            servicePort: 9090
          path: /
    tls:
    - hosts:
      - checkout-ttce-stg.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cluster-admin-api-ingress"},"name":"cluster-admin-api-ingress","namespace":"streaming-platform"},"spec":{"rules":[{"host":"cluster-admin-api.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"go-proxy-service-admin-api","servicePort":8888},"path":"/"}]}},{"host":"cluster-admin-api.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"go-proxy-service-admin-api","servicePort":8888},"path":"/"}]}}],"tls":[{"hosts":["cluster-admin-api.test.k8s.target.com","cluster-admin-api.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-27T16:49:25Z
    generation: 1
    labels:
      name: cluster-admin-api-ingress
    name: cluster-admin-api-ingress
    namespace: streaming-platform
    resourceVersion: "81376987"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/cluster-admin-api-ingress
    uid: 65ea60f4-f264-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: cluster-admin-api.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: go-proxy-service-admin-api
            servicePort: 8888
          path: /
    - host: cluster-admin-api.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: go-proxy-service-admin-api
            servicePort: 8888
          path: /
    tls:
    - hosts:
      - cluster-admin-api.test.k8s.target.com
      - cluster-admin-api.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-19T12:08:18Z
    generation: 1
    labels:
      name: corona-ttc-stg
    name: corona-ttc-stg
    namespace: streaming-platform
    resourceVersion: "191805259"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/corona-ttc-stg
    uid: aeea92ff-4a3f-11e9-ad83-525400a854be
  spec:
    rules:
    - host: corona-ttce-stg.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cruisecontrol-service-corona
            servicePort: 9090
          path: /
    tls:
    - hosts:
      - corona-ttce-stg.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cruisecontrol-ttc-stg"},"name":"cruisecontrol-ttc-stg","namespace":"streaming-platform"},"spec":{"rules":[{"host":"cruisecontrol-ttce-stg.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cruisecontrol-service-cruisecontrol","servicePort":9090},"path":"/"}]}}],"tls":[{"hosts":["cruisecontrol-ttce-stg.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-07T15:17:08Z
    generation: 1
    labels:
      name: cruisecontrol-ttc-stg
    name: cruisecontrol-ttc-stg
    namespace: streaming-platform
    resourceVersion: "19953258"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/cruisecontrol-ttc-stg
    uid: 15e6aa83-b2b1-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: cruisecontrol-ttce-stg.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cruisecontrol-service-cruisecontrol
            servicePort: 9090
          path: /
    tls:
    - hosts:
      - cruisecontrol-ttce-stg.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-06T05:36:42Z
    generation: 1
    labels:
      name: d2g-ttc-stg
    name: d2g-ttc-stg
    namespace: streaming-platform
    resourceVersion: "179421553"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/d2g-ttc-stg
    uid: d263263f-3fd1-11e9-8f23-525400cb189a
  spec:
    rules:
    - host: d2g-ttce-stg.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cruisecontrol-service-d2g
            servicePort: 9090
          path: /
    tls:
    - hosts:
      - d2g-ttce-stg.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-12-12T10:53:33Z
    generation: 1
    labels:
      name: ffods-ttc-stg
    name: ffods-ttc-stg
    namespace: streaming-platform
    resourceVersion: "95604142"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/ffods-ttc-stg
    uid: 2b68e00d-fdfc-11e8-999b-5254008d935f
  spec:
    rules:
    - host: ffods-ttce-stg.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cruisecontrol-service-ffods
            servicePort: 9090
          path: /
    tls:
    - hosts:
      - ffods-ttce-stg.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"firefly-ttc-stg"},"name":"firefly-ttc-stg","namespace":"streaming-platform"},"spec":{"rules":[{"host":"firefly-ttce-stg.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cruisecontrol-service-firefly","servicePort":9090},"path":"/"}]}}],"tls":[{"hosts":["firefly-ttce-stg.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-03-01T05:53:17Z
    generation: 1
    labels:
      name: firefly-ttc-stg
    name: firefly-ttc-stg
    namespace: streaming-platform
    resourceVersion: "180447852"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/firefly-ttc-stg
    uid: 4f472a46-3be6-11e9-81c2-52540003963e
  spec:
    rules:
    - host: firefly-ttce-stg.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cruisecontrol-service-firefly
            servicePort: 9090
          path: /
    tls:
    - hosts:
      - firefly-ttce-stg.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"gcpshr-east-test-app"},"name":"gcpshr-east-test-app","namespace":"streaming-platform"},"spec":{"rules":[{"host":"kafka-monitor-gcpshr-east-test-app.tte-prod.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"kafka-monitor-service-gcpshr-east-test-app","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["kafka-monitor-gcpshr-east-test-app.tte-prod.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-06T19:02:34Z
    generation: 2
    labels:
      name: gcpshr-east-test-app
    name: gcpshr-east-test-app
    namespace: streaming-platform
    resourceVersion: "156069462"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/gcpshr-east-test-app
    uid: c315518d-2a41-11e9-b42d-5254003b1534
  spec:
    rules:
    - host: kafka-monitor-gcpshr-east-test-app.tte-prod.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: kafka-monitor-service-gcpshr-east-test-app
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - kafka-monitor-gcpshr-east-test-app.tte-prod.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"gcpshr-east-test-checkout"},"name":"gcpshr-east-test-checkout","namespace":"streaming-platform"},"spec":{"rules":[{"host":"kafka-monitor-gcpshr-east-test-checkout.k8s-test.us-east1.tgt-pe-test.gcp.cloud.target.internal","http":{"paths":[{"backend":{"serviceName":"kafka-monitor-service-gcpshr-east-test-checkout","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["kafka-monitor-gcpshr-east-test-checkout.k8s-test.us-east1.tgt-pe-test.gcp.cloud.target.internal"]}]}}
    creationTimestamp: 2019-02-07T15:33:23Z
    generation: 1
    labels:
      name: gcpshr-east-test-checkout
    name: gcpshr-east-test-checkout
    namespace: streaming-platform
    resourceVersion: "152182836"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/gcpshr-east-test-checkout
    uid: b44e2762-2aed-11e9-ba28-52540054e5ef
  spec:
    rules:
    - host: kafka-monitor-gcpshr-east-test-checkout.k8s-test.us-east1.tgt-pe-test.gcp.cloud.target.internal
      http:
        paths:
        - backend:
            serviceName: kafka-monitor-service-gcpshr-east-test-checkout
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - kafka-monitor-gcpshr-east-test-checkout.k8s-test.us-east1.tgt-pe-test.gcp.cloud.target.internal
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"gcpshr-east-test-measurement"},"name":"gcpshr-east-test-measurement","namespace":"streaming-platform"},"spec":{"rules":[{"host":"kafka-monitor-gcpshr-east-test-measurement.tte-prod.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"kafka-monitor-service-gcpshr-east-test-measurement","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["kafka-monitor-gcpshr-east-test-measurement.tte-prod.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-07T16:54:27Z
    generation: 1
    labels:
      name: gcpshr-east-test-measurement
    name: gcpshr-east-test-measurement
    namespace: streaming-platform
    resourceVersion: "152240649"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/gcpshr-east-test-measurement
    uid: 07d024eb-2af9-11e9-8c81-525400abdf59
  spec:
    rules:
    - host: kafka-monitor-gcpshr-east-test-measurement.tte-prod.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: kafka-monitor-service-gcpshr-east-test-measurement
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - kafka-monitor-gcpshr-east-test-measurement.tte-prod.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-12-13T09:22:28Z
    generation: 1
    labels:
      name: gom-ttc-stg
    name: gom-ttc-stg
    namespace: streaming-platform
    resourceVersion: "96534640"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/gom-ttc-stg
    uid: 9c8793f4-feb8-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: gom-ttce-stg.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cruisecontrol-service-gom
            servicePort: 9090
          path: /
    tls:
    - hosts:
      - gom-ttce-stg.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-12-06T07:06:32Z
    generation: 1
    labels:
      name: inr-ttc-stg
    name: inr-ttc-stg
    namespace: streaming-platform
    resourceVersion: "89657698"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/inr-ttc-stg
    uid: 75daed69-f925-11e8-999b-5254008d935f
  spec:
    rules:
    - host: inr-ttce-stg.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cruisecontrol-service-inr
            servicePort: 9090
          path: /
    tls:
    - hosts:
      - inr-ttce-stg.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-09-05T20:51:38Z
    generation: 1
    labels:
      name: internal-ttc-stg
    name: internal-ttc-stg
    namespace: streaming-platform
    resourceVersion: "19384430"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/internal-ttc-stg
    uid: 7c2e1f93-b14d-11e8-842d-525400df3355
  spec:
    rules:
    - host: internal-ttc-stg.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cruisecontrol-service-internal
            servicePort: 9090
          path: /
    tls:
    - hosts:
      - internal-ttc-stg.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-12-10T15:53:58Z
    generation: 1
    labels:
      name: internal-ttce-stg
    name: internal-ttce-stg
    namespace: streaming-platform
    resourceVersion: "93846913"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/internal-ttce-stg
    uid: ce33790a-fc93-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: internal-ttce-stg.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cruisecontrol-service-internal
            servicePort: 9090
          path: /
    tls:
    - hosts:
      - internal-ttce-stg.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"kafka-rest-ost-ttce-test-app"},"name":"kafka-rest-ost-ttce-test-app","namespace":"streaming-platform"},"spec":{"rules":[{"host":"kafka-rest-ost-ttce-test-app.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"go-proxy-service-ost-ttce-test-app","servicePort":8888},"path":"/"}]}}],"tls":[{"hosts":["kafka-rest-ost-ttce-test-app.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-13T12:50:36Z
    generation: 2
    labels:
      name: kafka-rest-ost-ttce-test-app
    name: kafka-rest-ost-ttce-test-app
    namespace: streaming-platform
    resourceVersion: "22042835"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/kafka-rest-ost-ttce-test-app
    uid: 9c389719-b753-11e8-88c5-5254004139fa
  spec:
    rules:
    - host: kafka-rest-ost-ttce-test-app.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: go-proxy-service-ost-ttce-test-app
            servicePort: 8888
          path: /
    tls:
    - hosts:
      - kafka-rest-ost-ttce-test-app.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"kafka-rest-ost-tte-test-app"},"name":"kafka-rest-ost-tte-test-app","namespace":"streaming-platform"},"spec":{"rules":[{"host":"kafka-rest-ost-tte-test-app.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"go-proxy-service-ost-tte-test-app","servicePort":8888},"path":"/"}]}}],"tls":[{"hosts":["kafka-rest-ost-tte-test-app.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-31T16:52:41Z
    generation: 1
    labels:
      name: kafka-rest-ost-tte-test-app
    name: kafka-rest-ost-tte-test-app
    namespace: streaming-platform
    resourceVersion: "17742573"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/kafka-rest-ost-tte-test-app
    uid: 461c679e-ad3e-11e8-88c5-5254004139fa
  spec:
    rules:
    - host: kafka-rest-ost-tte-test-app.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: go-proxy-service-ost-tte-test-app
            servicePort: 8888
          path: /
    tls:
    - hosts:
      - kafka-rest-ost-tte-test-app.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"kafka-rest-ttce-stg"},"name":"kafka-rest-ttce-stg","namespace":"streaming-platform"},"spec":{"rules":[{"host":"kafka-rest-ttce-stg.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"go-proxy-service-ttce-stg","servicePort":8888},"path":"/"}]}}],"tls":[{"hosts":["kafka-rest-ttce-stg.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-16T23:15:42Z
    generation: 1
    labels:
      name: kafka-rest-ttce-stg
    name: kafka-rest-ttce-stg
    namespace: streaming-platform
    resourceVersion: "13151473"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/kafka-rest-ttce-stg
    uid: 4bc90086-a1aa-11e8-8dd4-5254004139fa
  spec:
    rules:
    - host: kafka-rest-ttce-stg.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: go-proxy-service-ttce-stg
            servicePort: 8888
          path: /
    tls:
    - hosts:
      - kafka-rest-ttce-stg.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-11-12T05:43:13Z
    generation: 1
    labels:
      name: measurement-ttc-stg
    name: measurement-ttc-stg
    namespace: streaming-platform
    resourceVersion: "66794413"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/measurement-ttc-stg
    uid: d8a5df9e-e63d-11e8-999b-5254008d935f
  spec:
    rules:
    - host: measurement-ttce-stg.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cruisecontrol-service-measurement
            servicePort: 9090
          path: /
    tls:
    - hosts:
      - measurement-ttce-stg.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-12-10T15:30:51Z
    generation: 1
    labels:
      name: ole-ttc-stg
    name: ole-ttc-stg
    namespace: streaming-platform
    resourceVersion: "93831471"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/ole-ttc-stg
    uid: 934a473b-fc90-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: ole-ttce-stg.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cruisecontrol-service-ole
            servicePort: 9090
          path: /
    tls:
    - hosts:
      - ole-ttce-stg.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"ost-ttc-test-internal"},"name":"ost-ttc-test-internal","namespace":"streaming-platform"},"spec":{"rules":[{"host":"kafka-monitor-ost-ttc-test-internal.ttc-prod.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"kafka-monitor-service-ost-ttc-test-internal","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["kafka-monitor-ost-ttc-test-internal.ttc-prod.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-07T16:21:29Z
    generation: 1
    labels:
      name: ost-ttc-test-internal
    name: ost-ttc-test-internal
    namespace: streaming-platform
    resourceVersion: "62634223"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/ost-ttc-test-internal
    uid: 2e87d40b-e2a9-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: kafka-monitor-ost-ttc-test-internal.ttc-prod.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: kafka-monitor-service-ost-ttc-test-internal
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - kafka-monitor-ost-ttc-test-internal.ttc-prod.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"ost-ttce-prod-k8measurement"},"name":"ost-ttce-prod-k8measurement","namespace":"streaming-platform"},"spec":{"rules":[{"host":"kafka-monitor-ost-ttce-prod-k8measurement.ttc-prod.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"kafka-monitor-service-ost-ttce-prod-k8measurement","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["kafka-monitor-ost-ttce-prod-k8measurement.ttc-prod.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-17T22:17:08Z
    generation: 1
    labels:
      name: ost-ttce-prod-k8measurement
    name: ost-ttce-prod-k8measurement
    namespace: streaming-platform
    resourceVersion: "100959351"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/ost-ttce-prod-k8measurement
    uid: 7e0c3dd4-0249-11e9-baf5-525400dc2748
  spec:
    rules:
    - host: kafka-monitor-ost-ttce-prod-k8measurement.ttc-prod.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: kafka-monitor-service-ost-ttce-prod-k8measurement
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - kafka-monitor-ost-ttce-prod-k8measurement.ttc-prod.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"ost-ttce-test-internal"},"name":"ost-ttce-test-internal","namespace":"streaming-platform"},"spec":{"rules":[{"host":"kafka-monitor-ost-ttce-test-internal.ttc-prod.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"kafka-monitor-service-ost-ttce-test-internal","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["kafka-monitor-ost-ttce-test-internal.ttc-prod.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-07T16:27:30Z
    generation: 1
    labels:
      name: ost-ttce-test-internal
    name: ost-ttce-test-internal
    namespace: streaming-platform
    resourceVersion: "62638078"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/ost-ttce-test-internal
    uid: 05ca15c6-e2aa-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: kafka-monitor-ost-ttce-test-internal.ttc-prod.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: kafka-monitor-service-ost-ttce-test-internal
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - kafka-monitor-ost-ttce-test-internal.ttc-prod.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-12-14T08:19:10Z
    generation: 1
    labels:
      name: sdm-ttc-stg
    name: sdm-ttc-stg
    namespace: streaming-platform
    resourceVersion: "97478629"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/sdm-ttc-stg
    uid: ef3e1967-ff78-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: sdm-ttce-stg.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cruisecontrol-service-sdm
            servicePort: 9090
          path: /
    tls:
    - hosts:
      - sdm-ttce-stg.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-12-12T09:41:37Z
    generation: 1
    labels:
      name: stores-ttc-stg
    name: stores-ttc-stg
    namespace: streaming-platform
    resourceVersion: "95555314"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/stores-ttc-stg
    uid: 1ed56a84-fdf2-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: stores-ttce-stg.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cruisecontrol-service-stores
            servicePort: 9090
          path: /
    tls:
    - hosts:
      - stores-ttce-stg.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-12-07T04:49:05Z
    generation: 1
    labels:
      name: tap-ttc-stg
    name: tap-ttc-stg
    namespace: streaming-platform
    resourceVersion: "90547631"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/tap-ttc-stg
    uid: 6ce5f3aa-f9db-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: tap-ttce-stg.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cruisecontrol-service-tap
            servicePort: 9090
          path: /
    tls:
    - hosts:
      - tap-ttce-stg.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"tacalertsbatchprocessor-ingress"},"name":"tacalertsbatchprocessor-ingress","namespace":"tac-platform"},"spec":{"rules":[{"host":"tacalertsbatchprocessor-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"tacalertsbatchprocessor-service","servicePort":80},"path":"/"}]}},{"host":"tacalertsbatchprocessor.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"tacalertsbatchprocessor-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["tacalertsprocessor-test.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-17T16:28:03Z
    generation: 3
    labels:
      name: tacalertsbatchprocessor-ingress
    name: tacalertsbatchprocessor-ingress
    namespace: tac-platform
    resourceVersion: "24499058"
    selfLink: /apis/extensions/v1beta1/namespaces/tac-platform/ingresses/tacalertsbatchprocessor-ingress
    uid: a67295f7-ba96-11e8-88c5-5254004139fa
  spec:
    rules:
    - host: tacalertsbatchprocessor-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: tacalertsbatchprocessor-service
            servicePort: 80
          path: /
    - host: tacalertsbatchprocessor.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: tacalertsbatchprocessor-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - tacalertsprocessor-test.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"tacalertserrorprocessor-ingress"},"name":"tacalertserrorprocessor-ingress","namespace":"tac-platform"},"spec":{"rules":[{"host":"tacalertserrorprocessor-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"tacalertserrorprocessor-service","servicePort":80},"path":"/"}]}},{"host":"tacalertserrorprocessor.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"tacalertserrorprocessor-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["tacalertserrorprocessor-test.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-18T15:09:01Z
    generation: 3
    labels:
      name: tacalertserrorprocessor-ingress
    name: tacalertserrorprocessor-ingress
    namespace: tac-platform
    resourceVersion: "24560223"
    selfLink: /apis/extensions/v1beta1/namespaces/tac-platform/ingresses/tacalertserrorprocessor-ingress
    uid: c637cdc6-bb54-11e8-88c5-5254004139fa
  spec:
    rules:
    - host: tacalertserrorprocessor-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: tacalertserrorprocessor-service
            servicePort: 80
          path: /
    - host: tacalertserrorprocessor.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: tacalertserrorprocessor-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - tacalertserrorprocessor-test.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"tacalertsprocessor-ingress"},"name":"tacalertsprocessor-ingress","namespace":"tac-platform"},"spec":{"rules":[{"host":"tacalertsprocessor-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"tacalertsprocessor-service","servicePort":80},"path":"/"}]}},{"host":"tacalertsprocessor.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"tacalertsprocessor-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["tacalertsprocessor-test.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-10T16:45:12Z
    generation: 2
    labels:
      name: tacalertsprocessor-ingress
    name: tacalertsprocessor-ingress
    namespace: tac-platform
    resourceVersion: "24463570"
    selfLink: /apis/extensions/v1beta1/namespaces/tac-platform/ingresses/tacalertsprocessor-ingress
    uid: e2b3ed43-b518-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: tacalertsprocessor-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: tacalertsprocessor-service
            servicePort: 80
          path: /
    - host: tacalertsprocessor.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: tacalertsprocessor-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - tacalertsprocessor-test.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"tacalertsreceiver-api-ingress"},"name":"tacalertsreceiver-api-ingress","namespace":"tac-platform"},"spec":{"rules":[{"host":"tacalertsreceiver-api-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"tacalertsreceiver-api-service","servicePort":80},"path":"/"}]}},{"host":"tacalertsreceiver-api.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"tacalertsreceiver-api-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["tacalertsreceiver-api-test.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-26T02:47:02Z
    generation: 1
    labels:
      name: tacalertsreceiver-api-ingress
    name: tacalertsreceiver-api-ingress
    namespace: tac-platform
    resourceVersion: "28679347"
    selfLink: /apis/extensions/v1beta1/namespaces/tac-platform/ingresses/tacalertsreceiver-api-ingress
    uid: 72790b83-c136-11e8-b3a5-525400bc6d51
  spec:
    rules:
    - host: tacalertsreceiver-api-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: tacalertsreceiver-api-service
            servicePort: 80
          path: /
    - host: tacalertsreceiver-api.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: tacalertsreceiver-api-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - tacalertsreceiver-api-test.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"tactoken-api-ingress"},"name":"tactoken-api-ingress","namespace":"tac-platform"},"spec":{"rules":[{"host":"tactoken-v1-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"tactoken-api-service","servicePort":80},"path":"/"}]}},{"host":"tactoken-v1.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"tactoken-api-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["tactoken-v1-test.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T15:11:32Z
    generation: 8
    labels:
      name: tactoken-api-ingress
    name: tactoken-api-ingress
    namespace: tac-platform
    resourceVersion: "28080318"
    selfLink: /apis/extensions/v1beta1/namespaces/tac-platform/ingresses/tactoken-api-ingress
    uid: 9f7a96f7-bdb0-11e8-8bab-525400df3355
  spec:
    rules:
    - host: tactoken-v1-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: tactoken-api-service
            servicePort: 80
          path: /
    - host: tactoken-v1.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: tactoken-api-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - tactoken-v1-test.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"content-ingress"},"name":"content-ingress","namespace":"tc-ivrnp"},"spec":{"rules":[{"host":"content-api.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"content-service","servicePort":8080},"path":"/"}]}},{"host":"content-api.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"content-service","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2018-11-21T08:19:26Z
    generation: 1
    labels:
      name: content-ingress
    name: content-ingress
    namespace: tc-ivrnp
    resourceVersion: "75483174"
    selfLink: /apis/extensions/v1beta1/namespaces/tc-ivrnp/ingresses/content-ingress
    uid: 291eb872-ed66-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: content-api.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: content-service
            servicePort: 8080
          path: /
    - host: content-api.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: content-service
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"ddustore-api"},"name":"ddustore-api","namespace":"tfm-stage"},"spec":{"rules":[{"host":"ddustore-api.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ddustore-api","servicePort":8080},"path":"/"}]}},{"host":"ddustore-api.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ddustore-api","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["ddustore-api.test.k8s.target.com","ddustore-api.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-13T22:12:55Z
    generation: 1
    labels:
      name: ddustore-api
    name: ddustore-api
    namespace: tfm-stage
    resourceVersion: "22188329"
    selfLink: /apis/extensions/v1beta1/namespaces/tfm-stage/ingresses/ddustore-api
    uid: 2a07dd3d-b7a2-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: ddustore-api.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ddustore-api
            servicePort: 8080
          path: /
    - host: ddustore-api.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ddustore-api
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - ddustore-api.test.k8s.target.com
      - ddustore-api.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"tgtv-filters-edge-v1-ingress"},"name":"tgtv-filters-edge-v1-ingress","namespace":"tgtv"},"spec":{"rules":[{"host":"tgtv-filters-edge-v1.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"tgtv-filters-edge-v1-service","servicePort":80},"path":"/"}]}},{"host":"tgtv-filters-edge-v1.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"tgtv-filters-edge-v1-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["tgtv-filters-edge-v1.tte-test.k8s.target.com","tgtv-filters-edge-v1.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-03-07T18:30:57Z
    generation: 1
    labels:
      name: tgtv-filters-edge-v1-ingress
    name: tgtv-filters-edge-v1-ingress
    namespace: tgtv
    resourceVersion: "180903115"
    selfLink: /apis/extensions/v1beta1/namespaces/tgtv/ingresses/tgtv-filters-edge-v1-ingress
    uid: 26559ebf-4107-11e9-8f23-525400cb189a
  spec:
    rules:
    - host: tgtv-filters-edge-v1.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: tgtv-filters-edge-v1-service
            servicePort: 80
          path: /
    - host: tgtv-filters-edge-v1.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: tgtv-filters-edge-v1-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - tgtv-filters-edge-v1.tte-test.k8s.target.com
      - tgtv-filters-edge-v1.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"tgtv-superset-ingress"},"name":"tgtv-superset-ingress","namespace":"tgtv"},"spec":{"rules":[{"host":"tgtv-superset.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"tgtv-superset-service","servicePort":80},"path":"/"}]}},{"host":"tgtv-superset.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"tgtv-superset-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["tgtv-superset.tte-test.k8s.target.com","tgtv-superset.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-11T17:14:40Z
    generation: 1
    labels:
      name: tgtv-superset-ingress
    name: tgtv-superset-ingress
    namespace: tgtv
    resourceVersion: "21298352"
    selfLink: /apis/extensions/v1beta1/namespaces/tgtv/ingresses/tgtv-superset-ingress
    uid: 2b3c3916-b5e6-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: tgtv-superset.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: tgtv-superset-service
            servicePort: 80
          path: /
    - host: tgtv-superset.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: tgtv-superset-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - tgtv-superset.tte-test.k8s.target.com
      - tgtv-superset.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"tgtv-vizceral-ingress"},"name":"tgtv-vizceral-ingress","namespace":"tgtv"},"spec":{"rules":[{"host":"tgtv-vizceral.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"tgtv-vizceral-service","servicePort":80},"path":"/"}]}},{"host":"tgtv-vizceral.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"tgtv-vizceral-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["tgtv-vizceral.tte-test.k8s.target.com","tgtv-vizceral.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-19T13:56:45Z
    generation: 1
    labels:
      name: tgtv-vizceral-ingress
    name: tgtv-vizceral-ingress
    namespace: tgtv
    resourceVersion: "25001020"
    selfLink: /apis/extensions/v1beta1/namespaces/tgtv/ingresses/tgtv-vizceral-ingress
    uid: d880687e-bc13-11e8-b40e-5254004139fa
  spec:
    rules:
    - host: tgtv-vizceral.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: tgtv-vizceral-service
            servicePort: 80
          path: /
    - host: tgtv-vizceral.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: tgtv-vizceral-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - tgtv-vizceral.tte-test.k8s.target.com
      - tgtv-vizceral.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"priorityclassmapping","namespace":"ti-test"},"spec":{"rules":[{"host":"unimatrix-priority-class-kannan.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"priorityclassmapping","servicePort":80},"path":"/"}]}},{"host":"unimatrix-priority-class-kannan.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"priorityclassmapping","servicePort":80},"path":"/"}]}},{"host":"unimatrix-priority-class-kannan.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"priorityclassmapping","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["unimatrix-priority-class-kannan.tte-test.k8s.target.com","unimatrix-priority-class-kannan.ttc-test.k8s.target.com","unimatrix-priority-class-kannan.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-20T08:41:19Z
    generation: 1
    name: priorityclassmapping
    namespace: ti-test
    resourceVersion: "103352968"
    selfLink: /apis/extensions/v1beta1/namespaces/ti-test/ingresses/priorityclassmapping
    uid: 05a88a48-0433-11e9-baf5-525400dc2748
  spec:
    rules:
    - host: unimatrix-priority-class-kannan.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: priorityclassmapping
            servicePort: 80
          path: /
    - host: unimatrix-priority-class-kannan.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: priorityclassmapping
            servicePort: 80
          path: /
    - host: unimatrix-priority-class-kannan.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: priorityclassmapping
            servicePort: 80
          path: /
    tls:
    - hosts:
      - unimatrix-priority-class-kannan.tte-test.k8s.target.com
      - unimatrix-priority-class-kannan.ttc-test.k8s.target.com
      - unimatrix-priority-class-kannan.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"3d-receive-event-processor"},"name":"3d-receive-event-processor","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"3d-receive-event-processor-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ddd-receive-event-processor","servicePort":9314},"path":"/"}]}},{"host":"3d-receive-event-processor-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ddd-receive-event-processor","servicePort":9314},"path":"/"}]}}],"tls":[{"hosts":["3d-receive-event-processor-stage.test.k8s.target.com","3d-receive-event-processor-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-29T16:30:13Z
    generation: 1
    labels:
      app: 3d-receive-event-processor
    name: 3d-receive-event-processor
    namespace: transfer-order-stage
    resourceVersion: "17099505"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/3d-receive-event-processor
    uid: cddfc346-aba8-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: 3d-receive-event-processor-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ddd-receive-event-processor
            servicePort: 9314
          path: /
    - host: 3d-receive-event-processor-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ddd-receive-event-processor
            servicePort: 9314
          path: /
    tls:
    - hosts:
      - 3d-receive-event-processor-stage.test.k8s.target.com
      - 3d-receive-event-processor-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"3d-receive-event-processor-release-2-4-0"},"name":"3d-receive-event-processor-release-2-4-0","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"3d-receive-event-processor-release-2-4-0.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"svc-3d-receive-event-processor-release-2-4-0","servicePort":9314},"path":"/"}]}},{"host":"3d-receive-event-processor-release-2-4-0.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"svc-3d-receive-event-processor-release-2-4-0","servicePort":9314},"path":"/"}]}}],"tls":[{"hosts":["3d-receive-event-processor-release-2-4-0.test.k8s.target.com","3d-receive-event-processor-release-2-4-0.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-29T20:28:33Z
    generation: 1
    labels:
      app: 3d-receive-event-processor-release-2-4-0
    name: 3d-receive-event-processor-release-2-4-0
    namespace: transfer-order-stage
    resourceVersion: "54383025"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/3d-receive-event-processor-release-2-4-0
    uid: 34bfcadc-dbb9-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: 3d-receive-event-processor-release-2-4-0.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: svc-3d-receive-event-processor-release-2-4-0
            servicePort: 9314
          path: /
    - host: 3d-receive-event-processor-release-2-4-0.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: svc-3d-receive-event-processor-release-2-4-0
            servicePort: 9314
          path: /
    tls:
    - hosts:
      - 3d-receive-event-processor-release-2-4-0.test.k8s.target.com
      - 3d-receive-event-processor-release-2-4-0.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"3d-ship-event-processor"},"name":"3d-ship-event-processor","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"3d-ship-event-processor-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ddd-ship-event-processor","servicePort":9310},"path":"/"}]}},{"host":"3d-ship-event-processor-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ddd-ship-event-processor","servicePort":9310},"path":"/"}]}}],"tls":[{"hosts":["3d-ship-event-processor-stage.test.k8s.target.com","3d-ship-event-processor-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-29T16:10:34Z
    generation: 1
    labels:
      app: 3d-ship-event-processor
    name: 3d-ship-event-processor
    namespace: transfer-order-stage
    resourceVersion: "17095003"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/3d-ship-event-processor
    uid: 0f610c32-aba6-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: 3d-ship-event-processor-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ddd-ship-event-processor
            servicePort: 9310
          path: /
    - host: 3d-ship-event-processor-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ddd-ship-event-processor
            servicePort: 9310
          path: /
    tls:
    - hosts:
      - 3d-ship-event-processor-stage.test.k8s.target.com
      - 3d-ship-event-processor-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"3pl-event-consumer"},"name":"3pl-event-consumer","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"3pl-event-consumer-stage.us-central-1.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"threepl-event-consumer","servicePort":9309},"path":"/"}]}},{"host":"3pl-event-consumer-stage.us-central-1tte.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"threepl-event-consumer","servicePort":9309},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-09T17:59:03Z
    generation: 1
    labels:
      app: 3pl-event-consumer
    name: 3pl-event-consumer
    namespace: transfer-order-stage
    resourceVersion: "37651619"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/3pl-event-consumer
    uid: 01e104de-cbed-11e8-8a20-5254001e2711
  spec:
    rules:
    - host: 3pl-event-consumer-stage.us-central-1.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: threepl-event-consumer
            servicePort: 9309
          path: /
    - host: 3pl-event-consumer-stage.us-central-1tte.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: threepl-event-consumer
            servicePort: 9309
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"3pl-event-consumer-release-1-0-0"},"name":"3pl-event-consumer-release-1-0-0","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"3pl-event-consumer-release-1-0-0.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"svc-3pl-event-consumer-release-1-0-0","servicePort":9309},"path":"/"}]}},{"host":"3pl-event-consumer-release-1-0-0.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"svc-3pl-event-consumer-release-1-0-0","servicePort":9309},"path":"/"}]}}],"tls":[{"hosts":["3pl-event-consumer-release-1-0-0.test.k8s.target.com","3pl-event-consumer-release-1-0-0.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T20:38:54Z
    generation: 1
    labels:
      app: 3pl-event-consumer-release-1-0-0
    name: 3pl-event-consumer-release-1-0-0
    namespace: transfer-order-stage
    resourceVersion: "26230525"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/3pl-event-consumer-release-1-0-0
    uid: 5b4cd0b8-bdde-11e8-8bab-525400df3355
  spec:
    rules:
    - host: 3pl-event-consumer-release-1-0-0.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: svc-3pl-event-consumer-release-1-0-0
            servicePort: 9309
          path: /
    - host: 3pl-event-consumer-release-1-0-0.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: svc-3pl-event-consumer-release-1-0-0
            servicePort: 9309
          path: /
    tls:
    - hosts:
      - 3pl-event-consumer-release-1-0-0.test.k8s.target.com
      - 3pl-event-consumer-release-1-0-0.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"3pl-event-publisher"},"name":"3pl-event-publisher","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"3pl-event-publisher-stage.us-central-1.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"threepl-event-publisher","servicePort":9310},"path":"/"}]}},{"host":"3pl-event-publisher-stage.us-central-1tte.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"threepl-event-publisher","servicePort":9310},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-08T16:10:16Z
    generation: 1
    labels:
      app: 3pl-event-publisher
    name: 3pl-event-publisher
    namespace: transfer-order-stage
    resourceVersion: "36943062"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/3pl-event-publisher
    uid: a51c2259-cb14-11e8-8a20-5254001e2711
  spec:
    rules:
    - host: 3pl-event-publisher-stage.us-central-1.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: threepl-event-publisher
            servicePort: 9310
          path: /
    - host: 3pl-event-publisher-stage.us-central-1tte.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: threepl-event-publisher
            servicePort: 9310
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"3pl-event-publisher-release-1-0-0"},"name":"3pl-event-publisher-release-1-0-0","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"3pl-event-publisher-release-1-0-0.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"svc-3pl-event-publisher-release-1-0-0","servicePort":9310},"path":"/"}]}},{"host":"3pl-event-publisher-release-1-0-0.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"svc-3pl-event-publisher-release-1-0-0","servicePort":9310},"path":"/"}]}}],"tls":[{"hosts":["3pl-event-publisher-release-1-0-0.test.k8s.target.com","3pl-event-publisher-release-1-0-0.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T19:13:32Z
    generation: 1
    labels:
      app: 3pl-event-publisher-release-1-0-0
    name: 3pl-event-publisher-release-1-0-0
    namespace: transfer-order-stage
    resourceVersion: "26192504"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/3pl-event-publisher-release-1-0-0
    uid: 6dfec9e4-bdd2-11e8-bc70-5254004139fa
  spec:
    rules:
    - host: 3pl-event-publisher-release-1-0-0.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: svc-3pl-event-publisher-release-1-0-0
            servicePort: 9310
          path: /
    - host: 3pl-event-publisher-release-1-0-0.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: svc-3pl-event-publisher-release-1-0-0
            servicePort: 9310
          path: /
    tls:
    - hosts:
      - 3pl-event-publisher-release-1-0-0.test.k8s.target.com
      - 3pl-event-publisher-release-1-0-0.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"adjustment-event-processor"},"name":"adjustment-event-processor","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"adjustment-event-processor-stage.us-central-1.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"adjustment-event-processor","servicePort":9313},"path":"/"}]}},{"host":"adjustment-event-processor-stage.us-central-1tte.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"adjustment-event-processor","servicePort":9313},"path":"/"}]}}]}}
    creationTimestamp: 2018-09-25T16:31:34Z
    generation: 1
    labels:
      app: adjustment-event-processor
    name: adjustment-event-processor
    namespace: transfer-order-stage
    resourceVersion: "28429010"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/adjustment-event-processor
    uid: 7750cca7-c0e0-11e8-8bab-525400df3355
  spec:
    rules:
    - host: adjustment-event-processor-stage.us-central-1.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: adjustment-event-processor
            servicePort: 9313
          path: /
    - host: adjustment-event-processor-stage.us-central-1tte.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: adjustment-event-processor
            servicePort: 9313
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"crc-receive-event-processor"},"name":"crc-receive-event-processor","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"crc-receive-event-processor-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"crc-receive-event-processor","servicePort":9305},"path":"/"}]}},{"host":"crc-receive-event-processor-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"crc-receive-event-processor","servicePort":9305},"path":"/"}]}}],"tls":[{"hosts":["crc-receive-event-processor-stage.test.k8s.target.com","crc-receive-event-processor-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-30T20:18:40Z
    generation: 1
    labels:
      app: crc-receive-event-processor
    name: crc-receive-event-processor
    namespace: transfer-order-stage
    resourceVersion: "17465370"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/crc-receive-event-processor
    uid: e242ae93-ac91-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: crc-receive-event-processor-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: crc-receive-event-processor
            servicePort: 9305
          path: /
    - host: crc-receive-event-processor-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: crc-receive-event-processor
            servicePort: 9305
          path: /
    tls:
    - hosts:
      - crc-receive-event-processor-stage.test.k8s.target.com
      - crc-receive-event-processor-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"3d-ship-event-processor-release-3-7-0"},"name":"ing-3d-ship-event-processor-release-3-7-0","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"ing-3d-ship-event-processor-release-3-7-0.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"svc-3d-ship-event-processor-release-3-7-0","servicePort":9310},"path":"/"}]}},{"host":"ing-3d-ship-event-processor-release-3-7-0.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"svc-3d-ship-event-processor-release-3-7-0","servicePort":9310},"path":"/"}]}}],"tls":[{"hosts":["ing-3d-ship-event-processor-release-3-7-0.test.k8s.target.com","ing-3d-ship-event-processor-release-3-7-0.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-06T20:27:03Z
    generation: 1
    labels:
      app: 3d-ship-event-processor-release-3-7-0
    name: ing-3d-ship-event-processor-release-3-7-0
    namespace: transfer-order-stage
    resourceVersion: "90972155"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/ing-3d-ship-event-processor-release-3-7-0
    uid: 4a8dd89c-f995-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: ing-3d-ship-event-processor-release-3-7-0.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: svc-3d-ship-event-processor-release-3-7-0
            servicePort: 9310
          path: /
    - host: ing-3d-ship-event-processor-release-3-7-0.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: svc-3d-ship-event-processor-release-3-7-0
            servicePort: 9310
          path: /
    tls:
    - hosts:
      - ing-3d-ship-event-processor-release-3-7-0.test.k8s.target.com
      - ing-3d-ship-event-processor-release-3-7-0.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"3d-ship-event-processor-release-3-9-0"},"name":"ing-3d-ship-event-processor-release-3-9-0","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"ing-3d-ship-event-processor-release-3-9-0.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"svc-3d-ship-event-processor-release-3-9-0","servicePort":9310},"path":"/"}]}},{"host":"ing-3d-ship-event-processor-release-3-9-0.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"svc-3d-ship-event-processor-release-3-9-0","servicePort":9310},"path":"/"}]}}],"tls":[{"hosts":["ing-3d-ship-event-processor-release-3-9-0.test.k8s.target.com","ing-3d-ship-event-processor-release-3-9-0.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-12T19:53:10Z
    generation: 1
    labels:
      app: 3d-ship-event-processor-release-3-9-0
    name: ing-3d-ship-event-processor-release-3-9-0
    namespace: transfer-order-stage
    resourceVersion: "157060944"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/ing-3d-ship-event-processor-release-3-9-0
    uid: d33f653f-2eff-11e9-b42d-5254003b1534
  spec:
    rules:
    - host: ing-3d-ship-event-processor-release-3-9-0.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: svc-3d-ship-event-processor-release-3-9-0
            servicePort: 9310
          path: /
    - host: ing-3d-ship-event-processor-release-3-9-0.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: svc-3d-ship-event-processor-release-3-9-0
            servicePort: 9310
          path: /
    tls:
    - hosts:
      - ing-3d-ship-event-processor-release-3-9-0.test.k8s.target.com
      - ing-3d-ship-event-processor-release-3-9-0.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"3d-ship-event-processor-release-4-0-0"},"name":"ing-3d-ship-event-processor-release-4-0-0","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"ing-3d-ship-event-processor-release-4-0-0.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"svc-3d-ship-event-processor-release-4-0-0","servicePort":9310},"path":"/"}]}},{"host":"ing-3d-ship-event-processor-release-4-0-0.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"svc-3d-ship-event-processor-release-4-0-0","servicePort":9310},"path":"/"}]}}],"tls":[{"hosts":["ing-3d-ship-event-processor-release-4-0-0.test.k8s.target.com","ing-3d-ship-event-processor-release-4-0-0.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-13T14:37:59Z
    generation: 1
    labels:
      app: 3d-ship-event-processor-release-4-0-0
    name: ing-3d-ship-event-processor-release-4-0-0
    namespace: transfer-order-stage
    resourceVersion: "157795007"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/ing-3d-ship-event-processor-release-4-0-0
    uid: f5c7e811-2f9c-11e9-b42d-5254003b1534
  spec:
    rules:
    - host: ing-3d-ship-event-processor-release-4-0-0.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: svc-3d-ship-event-processor-release-4-0-0
            servicePort: 9310
          path: /
    - host: ing-3d-ship-event-processor-release-4-0-0.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: svc-3d-ship-event-processor-release-4-0-0
            servicePort: 9310
          path: /
    tls:
    - hosts:
      - ing-3d-ship-event-processor-release-4-0-0.test.k8s.target.com
      - ing-3d-ship-event-processor-release-4-0-0.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"lifecycle-event-processor"},"name":"lifecycle-event-processor","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"lifecycle-event-processor-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lifecycle-event-processor","servicePort":9306},"path":"/"}]}},{"host":"lifecycle-event-processor-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lifecycle-event-processor","servicePort":9306},"path":"/"}]}}],"tls":[{"hosts":["lifecycle-event-processor-stage.test.k8s.target.com","lifecycle-event-processor-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-12T12:44:59Z
    generation: 1
    labels:
      app: lifecycle-event-processor
    name: lifecycle-event-processor
    namespace: transfer-order-stage
    resourceVersion: "39800398"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/lifecycle-event-processor
    uid: a145fca3-ce1c-11e8-b121-525400340d56
  spec:
    rules:
    - host: lifecycle-event-processor-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lifecycle-event-processor
            servicePort: 9306
          path: /
    - host: lifecycle-event-processor-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lifecycle-event-processor
            servicePort: 9306
          path: /
    tls:
    - hosts:
      - lifecycle-event-processor-stage.test.k8s.target.com
      - lifecycle-event-processor-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"lifecycle-event-processor-release-1-0-0"},"name":"lifecycle-event-processor-release-1-0-0","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"lifecycle-event-processor-release-1-0-0.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lifecycle-event-processor-release-1-0-0","servicePort":9315},"path":"/"}]}},{"host":"lifecycle-event-processor-release-1-0-0.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lifecycle-event-processor-release-1-0-0","servicePort":9315},"path":"/"}]}}],"tls":[{"hosts":["lifecycle-event-processor-release-1-0-0.test.k8s.target.com","lifecycle-event-processor-release-1-0-0.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-02T20:30:05Z
    generation: 2
    labels:
      app: lifecycle-event-processor-release-1-0-0
    name: lifecycle-event-processor-release-1-0-0
    namespace: transfer-order-stage
    resourceVersion: "36354384"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/lifecycle-event-processor-release-1-0-0
    uid: f2309500-c681-11e8-bad5-525400b91df9
  spec:
    rules:
    - host: lifecycle-event-processor-release-1-0-0.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lifecycle-event-processor-release-1-0-0
            servicePort: 9315
          path: /
    - host: lifecycle-event-processor-release-1-0-0.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lifecycle-event-processor-release-1-0-0
            servicePort: 9315
          path: /
    tls:
    - hosts:
      - lifecycle-event-processor-release-1-0-0.test.k8s.target.com
      - lifecycle-event-processor-release-1-0-0.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"lifecycle-event-processor-release-1-0-1"},"name":"lifecycle-event-processor-release-1-0-1","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"lifecycle-event-processor-release-1-0-1.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lifecycle-event-processor-release-1-0-1","servicePort":9315},"path":"/"}]}},{"host":"lifecycle-event-processor-release-1-0-1.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lifecycle-event-processor-release-1-0-1","servicePort":9315},"path":"/"}]}}],"tls":[{"hosts":["lifecycle-event-processor-release-1-0-1.test.k8s.target.com","lifecycle-event-processor-release-1-0-1.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-31T03:08:07Z
    generation: 1
    labels:
      app: lifecycle-event-processor-release-1-0-1
    name: lifecycle-event-processor-release-1-0-1
    namespace: transfer-order-stage
    resourceVersion: "55535558"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/lifecycle-event-processor-release-1-0-1
    uid: 30fbc7f6-dcba-11e8-999b-5254008d935f
  spec:
    rules:
    - host: lifecycle-event-processor-release-1-0-1.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lifecycle-event-processor-release-1-0-1
            servicePort: 9315
          path: /
    - host: lifecycle-event-processor-release-1-0-1.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lifecycle-event-processor-release-1-0-1
            servicePort: 9315
          path: /
    tls:
    - hosts:
      - lifecycle-event-processor-release-1-0-1.test.k8s.target.com
      - lifecycle-event-processor-release-1-0-1.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"lifecycle-event-processor-release-1-1-0"},"name":"lifecycle-event-processor-release-1-1-0","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"lifecycle-event-processor-release-1-1-0.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lifecycle-event-processor-release-1-1-0","servicePort":9306},"path":"/"}]}},{"host":"lifecycle-event-processor-release-1-1-0.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lifecycle-event-processor-release-1-1-0","servicePort":9306},"path":"/"}]}}],"tls":[{"hosts":["lifecycle-event-processor-release-1-1-0.test.k8s.target.com","lifecycle-event-processor-release-1-1-0.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-04T18:54:46Z
    generation: 1
    labels:
      app: lifecycle-event-processor-release-1-1-0
    name: lifecycle-event-processor-release-1-1-0
    namespace: transfer-order-stage
    resourceVersion: "34446415"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/lifecycle-event-processor-release-1-1-0
    uid: f66cd8e4-c806-11e8-8a20-5254001e2711
  spec:
    rules:
    - host: lifecycle-event-processor-release-1-1-0.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lifecycle-event-processor-release-1-1-0
            servicePort: 9306
          path: /
    - host: lifecycle-event-processor-release-1-1-0.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lifecycle-event-processor-release-1-1-0
            servicePort: 9306
          path: /
    tls:
    - hosts:
      - lifecycle-event-processor-release-1-1-0.test.k8s.target.com
      - lifecycle-event-processor-release-1-1-0.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"lifecycle-event-processor-release-2-0-0"},"name":"lifecycle-event-processor-release-2-0-0","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"lifecycle-event-processor-release-2-0-0.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lifecycle-event-processor-release-2-0-0","servicePort":9315},"path":"/"}]}},{"host":"lifecycle-event-processor-release-2-0-0.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lifecycle-event-processor-release-2-0-0","servicePort":9315},"path":"/"}]}}],"tls":[{"hosts":["lifecycle-event-processor-release-2-0-0.test.k8s.target.com","lifecycle-event-processor-release-2-0-0.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-30T01:51:07Z
    generation: 1
    labels:
      app: lifecycle-event-processor-release-2-0-0
    name: lifecycle-event-processor-release-2-0-0
    namespace: transfer-order-stage
    resourceVersion: "112753982"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/lifecycle-event-processor-release-2-0-0
    uid: 5fd61cd8-0bd5-11e9-b513-525400493f0a
  spec:
    rules:
    - host: lifecycle-event-processor-release-2-0-0.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lifecycle-event-processor-release-2-0-0
            servicePort: 9315
          path: /
    - host: lifecycle-event-processor-release-2-0-0.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lifecycle-event-processor-release-2-0-0
            servicePort: 9315
          path: /
    tls:
    - hosts:
      - lifecycle-event-processor-release-2-0-0.test.k8s.target.com
      - lifecycle-event-processor-release-2-0-0.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"logstash-ing"},"name":"logstash-ing","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"transfer-order-logstash-stage.prod.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"transfer-order-logstash-svc","servicePort":9302},"path":"/"}]}},{"host":"transfer-order-logstash-stage.tte-prod.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"transfer-order-logstash-svc","servicePort":9302},"path":"/"}]}}],"tls":[{"hosts":["transfer-order-logstash-stage.prod.k8s.target.com","transfer-order-logstash-stage.tte-prod.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-06T15:40:01Z
    generation: 2
    labels:
      app: logstash-ing
    name: logstash-ing
    namespace: transfer-order-stage
    resourceVersion: "20909987"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/logstash-ing
    uid: 1e36a7b3-b1eb-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: transfer-order-logstash-stage.prod.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: transfer-order-logstash-svc
            servicePort: 9302
          path: /
    - host: transfer-order-logstash-stage.tte-prod.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: transfer-order-logstash-svc
            servicePort: 9302
          path: /
    tls:
    - hosts:
      - transfer-order-logstash-stage.prod.k8s.target.com
      - transfer-order-logstash-stage.tte-prod.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"manhattan-receive-event-processor"},"name":"manhattan-receive-event-processor","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"manhattan-receive-event-processor-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"manhattan-receive-event-processor","servicePort":9310},"path":"/"}]}},{"host":"manhattan-receive-event-processor-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"manhattan-receive-event-processor","servicePort":9310},"path":"/"}]}}],"tls":[{"hosts":["manhattan-receive-event-processor-stage.test.k8s.target.com","manhattan-receive-event-processor-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-24T17:09:46Z
    generation: 1
    labels:
      app: manhattan-receive-event-processor
    name: manhattan-receive-event-processor
    namespace: transfer-order-stage
    resourceVersion: "15541496"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/manhattan-receive-event-processor
    uid: 807d0b43-a7c0-11e8-8dd4-5254004139fa
  spec:
    rules:
    - host: manhattan-receive-event-processor-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: manhattan-receive-event-processor
            servicePort: 9310
          path: /
    - host: manhattan-receive-event-processor-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: manhattan-receive-event-processor
            servicePort: 9310
          path: /
    tls:
    - hosts:
      - manhattan-receive-event-processor-stage.test.k8s.target.com
      - manhattan-receive-event-processor-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"manhattan-ship-event-processor"},"name":"manhattan-ship-event-processor","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"manhattan-ship-event-processor-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"manhattan-ship-event-processor","servicePort":9309},"path":"/"}]}},{"host":"manhattan-ship-event-processor-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"manhattan-ship-event-processor","servicePort":9309},"path":"/"}]}}],"tls":[{"hosts":["manhattan-ship-event-processor-stage.test.k8s.target.com","manhattan-ship-event-processor-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-23T18:09:58Z
    generation: 1
    labels:
      app: manhattan-ship-event-processor
    name: manhattan-ship-event-processor
    namespace: transfer-order-stage
    resourceVersion: "15243664"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/manhattan-ship-event-processor
    uid: bee748ff-a6ff-11e8-8dd4-5254004139fa
  spec:
    rules:
    - host: manhattan-ship-event-processor-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: manhattan-ship-event-processor
            servicePort: 9309
          path: /
    - host: manhattan-ship-event-processor-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: manhattan-ship-event-processor
            servicePort: 9309
          path: /
    tls:
    - hosts:
      - manhattan-ship-event-processor-stage.test.k8s.target.com
      - manhattan-ship-event-processor-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"move-complete-aggregator"},"name":"move-complete-aggregator","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"move-complete-aggregator-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"move-complete-aggregator","servicePort":9306},"path":"/"}]}},{"host":"move-complete-aggregator-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"move-complete-aggregator","servicePort":9306},"path":"/"}]}}],"tls":[{"hosts":["move-complete-aggregator-stage.test.k8s.target.com","move-complete-aggregator-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-30T15:18:44Z
    generation: 1
    labels:
      app: move-complete-aggregator
    name: move-complete-aggregator
    namespace: transfer-order-stage
    resourceVersion: "17398446"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/move-complete-aggregator
    uid: fc36cf5f-ac67-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: move-complete-aggregator-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: move-complete-aggregator
            servicePort: 9306
          path: /
    - host: move-complete-aggregator-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: move-complete-aggregator
            servicePort: 9306
          path: /
    tls:
    - hosts:
      - move-complete-aggregator-stage.test.k8s.target.com
      - move-complete-aggregator-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"move-complete-prep"},"name":"move-complete-prep","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"move-complete-prep-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"move-complete-prep","servicePort":9306},"path":"/"}]}},{"host":"move-complete-prep-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"move-complete-prep","servicePort":9306},"path":"/"}]}}],"tls":[{"hosts":["move-complete-prep-stage.test.k8s.target.com","move-complete-prep-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-30T14:33:08Z
    generation: 1
    labels:
      app: move-complete-prep
    name: move-complete-prep
    namespace: transfer-order-stage
    resourceVersion: "17388212"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/move-complete-prep
    uid: 9d111798-ac61-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: move-complete-prep-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: move-complete-prep
            servicePort: 9306
          path: /
    - host: move-complete-prep-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: move-complete-prep
            servicePort: 9306
          path: /
    tls:
    - hosts:
      - move-complete-prep-stage.test.k8s.target.com
      - move-complete-prep-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"ole-receive-event-processor"},"name":"ole-receive-event-processor","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"ole-receive-event-processor-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ole-receive-event-processor","servicePort":9305},"path":"/"}]}},{"host":"ole-receive-event-processor-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ole-receive-event-processor","servicePort":9305},"path":"/"}]}}],"tls":[{"hosts":["ole-receive-event-processor-stage.test.k8s.target.com","ole-receive-event-processor-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-28T15:31:17Z
    generation: 1
    labels:
      app: ole-receive-event-processor
    name: ole-receive-event-processor
    namespace: transfer-order-stage
    resourceVersion: "16768527"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/ole-receive-event-processor
    uid: 67f46158-aad7-11e8-842d-525400df3355
  spec:
    rules:
    - host: ole-receive-event-processor-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ole-receive-event-processor
            servicePort: 9305
          path: /
    - host: ole-receive-event-processor-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ole-receive-event-processor
            servicePort: 9305
          path: /
    tls:
    - hosts:
      - ole-receive-event-processor-stage.test.k8s.target.com
      - ole-receive-event-processor-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"ole-ship-event-processor"},"name":"ole-ship-event-processor","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"ole-ship-event-processor-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ole-ship-event-processor","servicePort":9302},"path":"/"}]}},{"host":"ole-ship-event-processor-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ole-ship-event-processor","servicePort":9302},"path":"/"}]}}],"tls":[{"hosts":["ole-ship-event-processor-stage.test.k8s.target.com","ole-ship-event-processor-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-27T15:39:31Z
    generation: 1
    labels:
      app: ole-ship-event-processor
    name: ole-ship-event-processor
    namespace: transfer-order-stage
    resourceVersion: "16442595"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/ole-ship-event-processor
    uid: 63f61b25-aa0f-11e8-bda5-525400df3355
  spec:
    rules:
    - host: ole-ship-event-processor-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ole-ship-event-processor
            servicePort: 9302
          path: /
    - host: ole-ship-event-processor-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ole-ship-event-processor
            servicePort: 9302
          path: /
    tls:
    - hosts:
      - ole-ship-event-processor-stage.test.k8s.target.com
      - ole-ship-event-processor-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"ole-ship-event-processor-release-3-0-0"},"name":"ole-ship-event-processor-release-3-0-0","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"ole-ship-event-processor-release-3-0-0.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ole-ship-event-processor-release-3-0-0","servicePort":9302},"path":"/"}]}},{"host":"ole-ship-event-processor-release-3-0-0.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ole-ship-event-processor-release-3-0-0","servicePort":9302},"path":"/"}]}}],"tls":[{"hosts":["ole-ship-event-processor-release-3-0-0.test.k8s.target.com","ole-ship-event-processor-release-3-0-0.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-11T20:28:24Z
    generation: 1
    labels:
      app: ole-ship-event-processor-release-3-0-0
    name: ole-ship-event-processor-release-3-0-0
    namespace: transfer-order-stage
    resourceVersion: "95010657"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/ole-ship-event-processor-release-3-0-0
    uid: 4ee6c6f8-fd83-11e8-999b-5254008d935f
  spec:
    rules:
    - host: ole-ship-event-processor-release-3-0-0.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ole-ship-event-processor-release-3-0-0
            servicePort: 9302
          path: /
    - host: ole-ship-event-processor-release-3-0-0.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ole-ship-event-processor-release-3-0-0
            servicePort: 9302
          path: /
    tls:
    - hosts:
      - ole-ship-event-processor-release-3-0-0.test.k8s.target.com
      - ole-ship-event-processor-release-3-0-0.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"request-event-processor"},"name":"request-event-processor","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"request-event-processor-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"request-event-processor","servicePort":9306},"path":"/"}]}},{"host":"request-event-processor-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"request-event-processor","servicePort":9306},"path":"/"}]}}],"tls":[{"hosts":["request-event-processor-stage.test.k8s.target.com","request-event-processor-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-30T15:55:43Z
    generation: 1
    labels:
      app: request-event-processor
    name: request-event-processor
    namespace: transfer-order-stage
    resourceVersion: "17406728"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/request-event-processor
    uid: 269de336-ac6d-11e8-842d-525400df3355
  spec:
    rules:
    - host: request-event-processor-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: request-event-processor
            servicePort: 9306
          path: /
    - host: request-event-processor-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: request-event-processor
            servicePort: 9306
          path: /
    tls:
    - hosts:
      - request-event-processor-stage.test.k8s.target.com
      - request-event-processor-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"request-event-processor-release-4-2-0"},"name":"request-event-processor-release-4-2-0","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"request-event-processor-release-4-2-0.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"request-event-processor-release-4-2-0","servicePort":9306},"path":"/"}]}},{"host":"request-event-processor-release-4-2-0.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"request-event-processor-release-4-2-0","servicePort":9306},"path":"/"}]}}],"tls":[{"hosts":["request-event-processor-release-4-2-0.test.k8s.target.com","request-event-processor-release-4-2-0.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-12T21:04:57Z
    generation: 1
    labels:
      app: request-event-processor-release-4-2-0
    name: request-event-processor-release-4-2-0
    namespace: transfer-order-stage
    resourceVersion: "67394661"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/request-event-processor-release-4-2-0
    uid: 9c4deb83-e6be-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: request-event-processor-release-4-2-0.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: request-event-processor-release-4-2-0
            servicePort: 9306
          path: /
    - host: request-event-processor-release-4-2-0.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: request-event-processor-release-4-2-0
            servicePort: 9306
          path: /
    tls:
    - hosts:
      - request-event-processor-release-4-2-0.test.k8s.target.com
      - request-event-processor-release-4-2-0.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"request-event-processor-release-4-3-0"},"name":"request-event-processor-release-4-3-0","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"request-event-processor-release-4-3-0.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"request-event-processor-release-4-3-0","servicePort":9306},"path":"/"}]}},{"host":"request-event-processor-release-4-3-0.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"request-event-processor-release-4-3-0","servicePort":9306},"path":"/"}]}}],"tls":[{"hosts":["request-event-processor-release-4-3-0.test.k8s.target.com","request-event-processor-release-4-3-0.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-12T21:14:19Z
    generation: 1
    labels:
      app: request-event-processor-release-4-3-0
    name: request-event-processor-release-4-3-0
    namespace: transfer-order-stage
    resourceVersion: "67401299"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/request-event-processor-release-4-3-0
    uid: eb82bf37-e6bf-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: request-event-processor-release-4-3-0.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: request-event-processor-release-4-3-0
            servicePort: 9306
          path: /
    - host: request-event-processor-release-4-3-0.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: request-event-processor-release-4-3-0
            servicePort: 9306
          path: /
    tls:
    - hosts:
      - request-event-processor-release-4-3-0.test.k8s.target.com
      - request-event-processor-release-4-3-0.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"retry-service"},"name":"retry-service","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"retry-service-stage.us-central-1.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"retry-service","servicePort":9306},"path":"/"}]}},{"host":"retry-service-stage.us-central-1tte.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"retry-service","servicePort":9306},"path":"/"}]}}]}}
    creationTimestamp: 2018-08-29T16:20:48Z
    generation: 1
    labels:
      app: retry-service
    name: retry-service
    namespace: transfer-order-stage
    resourceVersion: "17097191"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/retry-service
    uid: 7d4f95e3-aba7-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: retry-service-stage.us-central-1.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: retry-service
            servicePort: 9306
          path: /
    - host: retry-service-stage.us-central-1tte.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: retry-service
            servicePort: 9306
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"retry-service-release-3-3-2"},"name":"retry-service-release-3-3-2","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"retry-service-release-3-3-2.us-central-1.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"retry-service-release-3-3-2","servicePort":9306},"path":"/"}]}},{"host":"retry-service-release-3-3-2.us-central-1tte.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"retry-service-release-3-3-2","servicePort":9306},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-31T03:02:44Z
    generation: 1
    labels:
      app: retry-service-release-3-3-2
    name: retry-service-release-3-3-2
    namespace: transfer-order-stage
    resourceVersion: "55532293"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/retry-service-release-3-3-2
    uid: 70107625-dcb9-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: retry-service-release-3-3-2.us-central-1.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: retry-service-release-3-3-2
            servicePort: 9306
          path: /
    - host: retry-service-release-3-3-2.us-central-1tte.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: retry-service-release-3-3-2
            servicePort: 9306
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"retry-service-release-3-5-1"},"name":"retry-service-release-3-5-1","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"retry-service-release-3-5-1.us-central-1.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"retry-service-release-3-5-1","servicePort":9306},"path":"/"}]}},{"host":"retry-service-release-3-5-1.us-central-1tte.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"retry-service-release-3-5-1","servicePort":9306},"path":"/"}]}}]}}
    creationTimestamp: 2018-11-02T20:09:21Z
    generation: 1
    labels:
      app: retry-service-release-3-5-1
    name: retry-service-release-3-5-1
    namespace: transfer-order-stage
    resourceVersion: "57935680"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/retry-service-release-3-5-1
    uid: 2fb84136-dedb-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: retry-service-release-3-5-1.us-central-1.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: retry-service-release-3-5-1
            servicePort: 9306
          path: /
    - host: retry-service-release-3-5-1.us-central-1tte.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: retry-service-release-3-5-1
            servicePort: 9306
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"store-receive-event-processor"},"name":"store-receive-event-processor","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"store-receive-event-processor-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"store-receive-event-processor","servicePort":9308},"path":"/"}]}},{"host":"store-receive-event-processor-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"store-receive-event-processor","servicePort":9308},"path":"/"}]}}],"tls":[{"hosts":["store-receive-event-processor-stage.test.k8s.target.com","store-receive-event-processor-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-29T15:21:44Z
    generation: 1
    labels:
      app: store-receive-event-processor
    name: store-receive-event-processor
    namespace: transfer-order-stage
    resourceVersion: "17083050"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/store-receive-event-processor
    uid: 3d00e8d6-ab9f-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: store-receive-event-processor-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: store-receive-event-processor
            servicePort: 9308
          path: /
    - host: store-receive-event-processor-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: store-receive-event-processor
            servicePort: 9308
          path: /
    tls:
    - hosts:
      - store-receive-event-processor-stage.test.k8s.target.com
      - store-receive-event-processor-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"store-ship-event-processor"},"name":"store-ship-event-processor","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"store-ship-event-processor-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"store-ship-event-processor","servicePort":9309},"path":"/"}]}},{"host":"store-ship-event-processor-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"store-ship-event-processor","servicePort":9309},"path":"/"}]}}],"tls":[{"hosts":["store-ship-event-processor-stage.test.k8s.target.com","store-ship-event-processor-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-28T15:55:58Z
    generation: 1
    labels:
      app: store-ship-event-processor
    name: store-ship-event-processor
    namespace: transfer-order-stage
    resourceVersion: "16773799"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/store-ship-event-processor
    uid: daf496e9-aada-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: store-ship-event-processor-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: store-ship-event-processor
            servicePort: 9309
          path: /
    - host: store-ship-event-processor-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: store-ship-event-processor
            servicePort: 9309
          path: /
    tls:
    - hosts:
      - store-ship-event-processor-stage.test.k8s.target.com
      - store-ship-event-processor-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"transfer-orders-api-v2"},"name":"transfer-orders-api-v2","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"transfer-orders-api-v2-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"transfer-orders-api-v2","servicePort":80},"path":"/"},{"backend":{"serviceName":"transfer-orders-api-v2","servicePort":8092},"path":"/transfer_orders/v2/health"},{"backend":{"serviceName":"transfer-orders-api-v2","servicePort":8093},"path":"/transfer_orders/v2/prometheus"}]}},{"host":"transfer-orders-api-v2-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"transfer-orders-api-v2","servicePort":80},"path":"/"},{"backend":{"serviceName":"transfer-orders-api-v2","servicePort":8092},"path":"/transfer_orders/v2/health"},{"backend":{"serviceName":"transfer-orders-api-v2","servicePort":8093},"path":"/transfer_orders/v2/prometheus"}]}}],"tls":[{"hosts":["transfer-orders-api-v2-stage.test.k8s.target.com","transfer-orders-api-v2-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-30T17:22:33Z
    generation: 1
    labels:
      app: transfer-orders-api-v2
    name: transfer-orders-api-v2
    namespace: transfer-order-stage
    resourceVersion: "17426105"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/transfer-orders-api-v2
    uid: 47c7cfc4-ac79-11e8-88c5-5254004139fa
  spec:
    rules:
    - host: transfer-orders-api-v2-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: transfer-orders-api-v2
            servicePort: 80
          path: /
        - backend:
            serviceName: transfer-orders-api-v2
            servicePort: 8092
          path: /transfer_orders/v2/health
        - backend:
            serviceName: transfer-orders-api-v2
            servicePort: 8093
          path: /transfer_orders/v2/prometheus
    - host: transfer-orders-api-v2-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: transfer-orders-api-v2
            servicePort: 80
          path: /
        - backend:
            serviceName: transfer-orders-api-v2
            servicePort: 8092
          path: /transfer_orders/v2/health
        - backend:
            serviceName: transfer-orders-api-v2
            servicePort: 8093
          path: /transfer_orders/v2/prometheus
    tls:
    - hosts:
      - transfer-orders-api-v2-stage.test.k8s.target.com
      - transfer-orders-api-v2-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"3d-receive-event-processor"},"name":"3d-receive-event-processor","namespace":"transfer-order-test"},"spec":{"rules":[{"host":"3d-receive-event-processor-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ddd-receive-event-processor","servicePort":9314},"path":"/"}]}},{"host":"3d-receive-event-processor-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ddd-receive-event-processor","servicePort":9314},"path":"/"}]}}],"tls":[{"hosts":["3d-receive-event-processor-test.test.k8s.target.com","3d-receive-event-processor-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-29T16:24:09Z
    generation: 1
    labels:
      app: 3d-receive-event-processor
    name: 3d-receive-event-processor
    namespace: transfer-order-test
    resourceVersion: "17098173"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-test/ingresses/3d-receive-event-processor
    uid: f4e14a3c-aba7-11e8-88c5-5254004139fa
  spec:
    rules:
    - host: 3d-receive-event-processor-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ddd-receive-event-processor
            servicePort: 9314
          path: /
    - host: 3d-receive-event-processor-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ddd-receive-event-processor
            servicePort: 9314
          path: /
    tls:
    - hosts:
      - 3d-receive-event-processor-test.test.k8s.target.com
      - 3d-receive-event-processor-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"3d-ship-event-processor"},"name":"3d-ship-event-processor","namespace":"transfer-order-test"},"spec":{"rules":[{"host":"3d-ship-event-processor-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ddd-ship-event-processor","servicePort":9310},"path":"/"}]}},{"host":"3d-ship-event-processor-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ddd-ship-event-processor","servicePort":9310},"path":"/"}]}}],"tls":[{"hosts":["3d-ship-event-processor-test.test.k8s.target.com","3d-ship-event-processor-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-29T15:53:57Z
    generation: 1
    labels:
      app: 3d-ship-event-processor
    name: 3d-ship-event-processor
    namespace: transfer-order-test
    resourceVersion: "17091192"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-test/ingresses/3d-ship-event-processor
    uid: bd48116c-aba3-11e8-88c5-5254004139fa
  spec:
    rules:
    - host: 3d-ship-event-processor-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ddd-ship-event-processor
            servicePort: 9310
          path: /
    - host: 3d-ship-event-processor-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ddd-ship-event-processor
            servicePort: 9310
          path: /
    tls:
    - hosts:
      - 3d-ship-event-processor-test.test.k8s.target.com
      - 3d-ship-event-processor-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"3pl-event-consumer"},"name":"3pl-event-consumer","namespace":"transfer-order-test"},"spec":{"rules":[{"host":"3pl-event-consumer-test.us-central-1.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"threepl-event-consumer","servicePort":9309},"path":"/"}]}},{"host":"3pl-event-consumer-test.us-central-1tte.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"threepl-event-consumer","servicePort":9309},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-09T17:54:50Z
    generation: 1
    labels:
      app: 3pl-event-consumer
    name: 3pl-event-consumer
    namespace: transfer-order-test
    resourceVersion: "37649623"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-test/ingresses/3pl-event-consumer
    uid: 6b4fdb2d-cbec-11e8-bad5-525400b91df9
  spec:
    rules:
    - host: 3pl-event-consumer-test.us-central-1.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: threepl-event-consumer
            servicePort: 9309
          path: /
    - host: 3pl-event-consumer-test.us-central-1tte.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: threepl-event-consumer
            servicePort: 9309
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"3pl-event-publisher"},"name":"3pl-event-publisher","namespace":"transfer-order-test"},"spec":{"rules":[{"host":"3pl-event-publisher-test.us-central-1.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"threepl-event-publisher","servicePort":9310},"path":"/"}]}},{"host":"3pl-event-publisher-test.us-central-1tte.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"threepl-event-publisher","servicePort":9310},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-08T16:03:48Z
    generation: 1
    labels:
      app: 3pl-event-publisher
    name: 3pl-event-publisher
    namespace: transfer-order-test
    resourceVersion: "36940309"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-test/ingresses/3pl-event-publisher
    uid: bda40f84-cb13-11e8-bad5-525400b91df9
  spec:
    rules:
    - host: 3pl-event-publisher-test.us-central-1.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: threepl-event-publisher
            servicePort: 9310
          path: /
    - host: 3pl-event-publisher-test.us-central-1tte.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: threepl-event-publisher
            servicePort: 9310
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"adjustment-event-processor"},"name":"adjustment-event-processor","namespace":"transfer-order-test"},"spec":{"rules":[{"host":"adjustment-event-processor-test.us-central-1.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"adjustment-event-processor","servicePort":9313},"path":"/"}]}},{"host":"adjustment-event-processor-test.us-central-1tte.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"adjustment-event-processor","servicePort":9313},"path":"/"}]}}]}}
    creationTimestamp: 2018-09-25T16:11:05Z
    generation: 1
    labels:
      app: adjustment-event-processor
    name: adjustment-event-processor
    namespace: transfer-order-test
    resourceVersion: "28419937"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-test/ingresses/adjustment-event-processor
    uid: 9ae5255f-c0dd-11e8-8bab-525400df3355
  spec:
    rules:
    - host: adjustment-event-processor-test.us-central-1.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: adjustment-event-processor
            servicePort: 9313
          path: /
    - host: adjustment-event-processor-test.us-central-1tte.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: adjustment-event-processor
            servicePort: 9313
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"crc-receive-event-processor"},"name":"crc-receive-event-processor","namespace":"transfer-order-test"},"spec":{"rules":[{"host":"crc-receive-event-processor-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"crc-receive-event-processor","servicePort":9305},"path":"/"}]}},{"host":"crc-receive-event-processor-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"crc-receive-event-processor","servicePort":9305},"path":"/"}]}}],"tls":[{"hosts":["crc-receive-event-processor-test.test.k8s.target.com","crc-receive-event-processor-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-30T19:10:10Z
    generation: 1
    labels:
      app: crc-receive-event-processor
    name: crc-receive-event-processor
    namespace: transfer-order-test
    resourceVersion: "17449796"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-test/ingresses/crc-receive-event-processor
    uid: 508608c3-ac88-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: crc-receive-event-processor-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: crc-receive-event-processor
            servicePort: 9305
          path: /
    - host: crc-receive-event-processor-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: crc-receive-event-processor
            servicePort: 9305
          path: /
    tls:
    - hosts:
      - crc-receive-event-processor-test.test.k8s.target.com
      - crc-receive-event-processor-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"kafka-appender-test"},"name":"kafka-appender-test","namespace":"transfer-order-test"},"spec":{"rules":[{"host":"kafka-appender-test-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"kafka-appender-test","servicePort":9306},"path":"/"}]}},{"host":"kafka-appender-test-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"kafka-appender-test","servicePort":9306},"path":"/"}]}}],"tls":[{"hosts":["kafka-appender-test-test.test.k8s.target.com","kafka-appender-test-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-30T20:59:26Z
    generation: 2
    labels:
      app: kafka-appender-test
    name: kafka-appender-test
    namespace: transfer-order-test
    resourceVersion: "87076134"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-test/ingresses/kafka-appender-test
    uid: d2af810f-f4e2-11e8-a12c-525400cdfb15
  spec:
    rules:
    - host: kafka-appender-test-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: kafka-appender-test
            servicePort: 9306
          path: /
    - host: kafka-appender-test-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: kafka-appender-test
            servicePort: 9306
          path: /
    tls:
    - hosts:
      - kafka-appender-test-test.test.k8s.target.com
      - kafka-appender-test-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"lifecycle-event-processor"},"name":"lifecycle-event-processor","namespace":"transfer-order-test"},"spec":{"rules":[{"host":"lifecycle-event-processor-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lifecycle-event-processor","servicePort":9315},"path":"/"}]}},{"host":"lifecycle-event-processor-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lifecycle-event-processor","servicePort":9315},"path":"/"}]}}],"tls":[{"hosts":["lifecycle-event-processor-test.test.k8s.target.com","lifecycle-event-processor-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-11T20:18:53Z
    generation: 1
    labels:
      app: lifecycle-event-processor
    name: lifecycle-event-processor
    namespace: transfer-order-test
    resourceVersion: "39298147"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-test/ingresses/lifecycle-event-processor
    uid: df93aab8-cd92-11e8-b121-525400340d56
  spec:
    rules:
    - host: lifecycle-event-processor-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lifecycle-event-processor
            servicePort: 9315
          path: /
    - host: lifecycle-event-processor-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lifecycle-event-processor
            servicePort: 9315
          path: /
    tls:
    - hosts:
      - lifecycle-event-processor-test.test.k8s.target.com
      - lifecycle-event-processor-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"logstash-ing"},"name":"logstash-ing","namespace":"transfer-order-test"},"spec":{"rules":[{"host":"transfer-order-logstash-test.prod.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"transfer-order-logstash-svc","servicePort":9302},"path":"/"}]}},{"host":"transfer-order-logstash-test.tte-prod.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"transfer-order-logstash-svc","servicePort":9302},"path":"/"}]}}],"tls":[{"hosts":["transfer-order-logstash-test.prod.k8s.target.com","transfer-order-logstash-test.tte-prod.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-05T21:21:40Z
    generation: 3
    labels:
      app: logstash-ing
    name: logstash-ing
    namespace: transfer-order-test
    resourceVersion: "19969114"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-test/ingresses/logstash-ing
    uid: adf36f26-b151-11e8-842d-525400df3355
  spec:
    rules:
    - host: transfer-order-logstash-test.prod.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: transfer-order-logstash-svc
            servicePort: 9302
          path: /
    - host: transfer-order-logstash-test.tte-prod.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: transfer-order-logstash-svc
            servicePort: 9302
          path: /
    tls:
    - hosts:
      - transfer-order-logstash-test.prod.k8s.target.com
      - transfer-order-logstash-test.tte-prod.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"manhattan-receive-event-processor"},"name":"manhattan-receive-event-processor","namespace":"transfer-order-test"},"spec":{"rules":[{"host":"manhattan-receive-event-processor-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"manhattan-receive-event-processor","servicePort":9310},"path":"/"}]}},{"host":"manhattan-receive-event-processor-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"manhattan-receive-event-processor","servicePort":9310},"path":"/"}]}}],"tls":[{"hosts":["manhattan-receive-event-processor-test.test.k8s.target.com","manhattan-receive-event-processor-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-23T19:30:06Z
    generation: 1
    labels:
      app: manhattan-receive-event-processor
    name: manhattan-receive-event-processor
    namespace: transfer-order-test
    resourceVersion: "15261041"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-test/ingresses/manhattan-receive-event-processor
    uid: f0f5fe20-a70a-11e8-bda5-525400df3355
  spec:
    rules:
    - host: manhattan-receive-event-processor-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: manhattan-receive-event-processor
            servicePort: 9310
          path: /
    - host: manhattan-receive-event-processor-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: manhattan-receive-event-processor
            servicePort: 9310
          path: /
    tls:
    - hosts:
      - manhattan-receive-event-processor-test.test.k8s.target.com
      - manhattan-receive-event-processor-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"manhattan-ship-event-processor"},"name":"manhattan-ship-event-processor","namespace":"transfer-order-test"},"spec":{"rules":[{"host":"manhattan-ship-event-processor-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"manhattan-ship-event-processor","servicePort":9309},"path":"/"}]}},{"host":"manhattan-ship-event-processor-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"manhattan-ship-event-processor","servicePort":9309},"path":"/"}]}}],"tls":[{"hosts":["manhattan-ship-event-processor-test.test.k8s.target.com","manhattan-ship-event-processor-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-21T17:56:56Z
    generation: 1
    labels:
      app: manhattan-ship-event-processor
    name: manhattan-ship-event-processor
    namespace: transfer-order-test
    resourceVersion: "14626897"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-test/ingresses/manhattan-ship-event-processor
    uid: 980b9988-a56b-11e8-ba99-525400bc6d51
  spec:
    rules:
    - host: manhattan-ship-event-processor-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: manhattan-ship-event-processor
            servicePort: 9309
          path: /
    - host: manhattan-ship-event-processor-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: manhattan-ship-event-processor
            servicePort: 9309
          path: /
    tls:
    - hosts:
      - manhattan-ship-event-processor-test.test.k8s.target.com
      - manhattan-ship-event-processor-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"move-complete-aggregator"},"name":"move-complete-aggregator","namespace":"transfer-order-test"},"spec":{"rules":[{"host":"move-complete-aggregator-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"move-complete-aggregator","servicePort":9306},"path":"/"}]}},{"host":"move-complete-aggregator-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"move-complete-aggregator","servicePort":9306},"path":"/"}]}}],"tls":[{"hosts":["move-complete-aggregator-test.test.k8s.target.com","move-complete-aggregator-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-30T15:12:49Z
    generation: 1
    labels:
      app: move-complete-aggregator
    name: move-complete-aggregator
    namespace: transfer-order-test
    resourceVersion: "17397111"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-test/ingresses/move-complete-aggregator
    uid: 28563982-ac67-11e8-88c5-5254004139fa
  spec:
    rules:
    - host: move-complete-aggregator-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: move-complete-aggregator
            servicePort: 9306
          path: /
    - host: move-complete-aggregator-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: move-complete-aggregator
            servicePort: 9306
          path: /
    tls:
    - hosts:
      - move-complete-aggregator-test.test.k8s.target.com
      - move-complete-aggregator-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"move-complete-prep"},"name":"move-complete-prep","namespace":"transfer-order-test"},"spec":{"rules":[{"host":"move-complete-prep-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"move-complete-prep","servicePort":9306},"path":"/"}]}},{"host":"move-complete-prep-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"move-complete-prep","servicePort":9306},"path":"/"}]}}],"tls":[{"hosts":["move-complete-prep-test.test.k8s.target.com","move-complete-prep-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-30T14:18:57Z
    generation: 1
    labels:
      app: move-complete-prep
    name: move-complete-prep
    namespace: transfer-order-test
    resourceVersion: "17385097"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-test/ingresses/move-complete-prep
    uid: a1e456a2-ac5f-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: move-complete-prep-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: move-complete-prep
            servicePort: 9306
          path: /
    - host: move-complete-prep-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: move-complete-prep
            servicePort: 9306
          path: /
    tls:
    - hosts:
      - move-complete-prep-test.test.k8s.target.com
      - move-complete-prep-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"ole-receive-event-processor"},"name":"ole-receive-event-processor","namespace":"transfer-order-test"},"spec":{"rules":[{"host":"ole-receive-event-processor-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ole-receive-event-processor","servicePort":9305},"path":"/"}]}},{"host":"ole-receive-event-processor-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ole-receive-event-processor","servicePort":9305},"path":"/"}]}}],"tls":[{"hosts":["ole-receive-event-processor-test.test.k8s.target.com","ole-receive-event-processor-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-27T15:59:43Z
    generation: 1
    labels:
      app: ole-receive-event-processor
    name: ole-receive-event-processor
    namespace: transfer-order-test
    resourceVersion: "16446971"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-test/ingresses/ole-receive-event-processor
    uid: 36aba70c-aa12-11e8-bda5-525400df3355
  spec:
    rules:
    - host: ole-receive-event-processor-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ole-receive-event-processor
            servicePort: 9305
          path: /
    - host: ole-receive-event-processor-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ole-receive-event-processor
            servicePort: 9305
          path: /
    tls:
    - hosts:
      - ole-receive-event-processor-test.test.k8s.target.com
      - ole-receive-event-processor-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"ole-ship-event-processor"},"name":"ole-ship-event-processor","namespace":"transfer-order-test"},"spec":{"rules":[{"host":"ole-ship-event-processor-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ole-ship-event-processor","servicePort":9302},"path":"/"}]}},{"host":"ole-ship-event-processor-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ole-ship-event-processor","servicePort":9302},"path":"/"}]}}],"tls":[{"hosts":["ole-ship-event-processor-test.test.k8s.target.com","ole-ship-event-processor-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-27T15:34:58Z
    generation: 1
    labels:
      app: ole-ship-event-processor
    name: ole-ship-event-processor
    namespace: transfer-order-test
    resourceVersion: "16441691"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-test/ingresses/ole-ship-event-processor
    uid: c1537e66-aa0e-11e8-bda5-525400df3355
  spec:
    rules:
    - host: ole-ship-event-processor-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ole-ship-event-processor
            servicePort: 9302
          path: /
    - host: ole-ship-event-processor-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ole-ship-event-processor
            servicePort: 9302
          path: /
    tls:
    - hosts:
      - ole-ship-event-processor-test.test.k8s.target.com
      - ole-ship-event-processor-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"request-event-processor"},"name":"request-event-processor","namespace":"transfer-order-test"},"spec":{"rules":[{"host":"request-event-processor-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"request-event-processor","servicePort":9306},"path":"/"}]}},{"host":"request-event-processor-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"request-event-processor","servicePort":9306},"path":"/"}]}}],"tls":[{"hosts":["request-event-processor-test.test.k8s.target.com","request-event-processor-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-30T15:31:28Z
    generation: 1
    labels:
      app: request-event-processor
    name: request-event-processor
    namespace: transfer-order-test
    resourceVersion: "17401368"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-test/ingresses/request-event-processor
    uid: c32af08b-ac69-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: request-event-processor-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: request-event-processor
            servicePort: 9306
          path: /
    - host: request-event-processor-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: request-event-processor
            servicePort: 9306
          path: /
    tls:
    - hosts:
      - request-event-processor-test.test.k8s.target.com
      - request-event-processor-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"retry-service"},"name":"retry-service","namespace":"transfer-order-test"},"spec":{"rules":[{"host":"retry-service-test.us-central-1.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"retry-service","servicePort":9306},"path":"/"}]}},{"host":"retry-service-test.us-central-1tte.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"retry-service","servicePort":9306},"path":"/"}]}}]}}
    creationTimestamp: 2018-08-29T15:26:31Z
    generation: 1
    labels:
      app: retry-service
    name: retry-service
    namespace: transfer-order-test
    resourceVersion: "17084462"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-test/ingresses/retry-service
    uid: e8137852-ab9f-11e8-842d-525400df3355
  spec:
    rules:
    - host: retry-service-test.us-central-1.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: retry-service
            servicePort: 9306
          path: /
    - host: retry-service-test.us-central-1tte.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: retry-service
            servicePort: 9306
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"store-ship-event-processor"},"name":"store-ship-event-processor","namespace":"transfer-order-test"},"spec":{"rules":[{"host":"store-ship-event-processor-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"store-ship-event-processor","servicePort":9309},"path":"/"}]}},{"host":"store-ship-event-processor-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"store-ship-event-processor","servicePort":9309},"path":"/"}]}}],"tls":[{"hosts":["store-ship-event-processor-test.test.k8s.target.com","store-ship-event-processor-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-28T15:48:08Z
    generation: 1
    labels:
      app: store-ship-event-processor
    name: store-ship-event-processor
    namespace: transfer-order-test
    resourceVersion: "16772052"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-test/ingresses/store-ship-event-processor
    uid: c278dbb4-aad9-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: store-ship-event-processor-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: store-ship-event-processor
            servicePort: 9309
          path: /
    - host: store-ship-event-processor-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: store-ship-event-processor
            servicePort: 9309
          path: /
    tls:
    - hosts:
      - store-ship-event-processor-test.test.k8s.target.com
      - store-ship-event-processor-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"transfer-order-ui"},"name":"transfer-order-ui","namespace":"transfer-order-test"},"spec":{"rules":[{"host":"transfer-order-ui-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"transfer-order-ui","servicePort":3000},"path":"/"}]}},{"host":"transfer-order-ui-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"transfer-order-ui","servicePort":3000},"path":"/"}]}}],"tls":[{"hosts":["transfer-order-ui-test.test.k8s.target.com","transfer-order-ui-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-23T16:30:27Z
    generation: 1
    labels:
      app: transfer-order-ui
    name: transfer-order-ui
    namespace: transfer-order-test
    resourceVersion: "15222405"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-test/ingresses/transfer-order-ui
    uid: d7b6bd61-a6f1-11e8-ba99-525400bc6d51
  spec:
    rules:
    - host: transfer-order-ui-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: transfer-order-ui
            servicePort: 3000
          path: /
    - host: transfer-order-ui-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: transfer-order-ui
            servicePort: 3000
          path: /
    tls:
    - hosts:
      - transfer-order-ui-test.test.k8s.target.com
      - transfer-order-ui-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"transfer-orders-api-v2"},"name":"transfer-orders-api-v2","namespace":"transfer-order-test"},"spec":{"rules":[{"host":"transfer-orders-api-v2-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"transfer-orders-api-v2","servicePort":80},"path":"/"},{"backend":{"serviceName":"transfer-orders-api-v2","servicePort":8092},"path":"/transfer_orders/v2/health"},{"backend":{"serviceName":"transfer-orders-api-v2","servicePort":8093},"path":"/transfer_orders/v2/prometheus"}]}},{"host":"transfer-orders-api-v2-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"transfer-orders-api-v2","servicePort":80},"path":"/"},{"backend":{"serviceName":"transfer-orders-api-v2","servicePort":8092},"path":"/transfer_orders/v2/health"},{"backend":{"serviceName":"transfer-orders-api-v2","servicePort":8093},"path":"/transfer_orders/v2/prometheus"}]}}],"tls":[{"hosts":["transfer-orders-api-v2-test.test.k8s.target.com","transfer-orders-api-v2-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-30T16:23:15Z
    generation: 1
    labels:
      app: transfer-orders-api-v2
    name: transfer-orders-api-v2
    namespace: transfer-order-test
    resourceVersion: "17413029"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-test/ingresses/transfer-orders-api-v2
    uid: ff615f89-ac70-11e8-9bf9-525400bc6d51
  spec:
    rules:
    - host: transfer-orders-api-v2-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: transfer-orders-api-v2
            servicePort: 80
          path: /
        - backend:
            serviceName: transfer-orders-api-v2
            servicePort: 8092
          path: /transfer_orders/v2/health
        - backend:
            serviceName: transfer-orders-api-v2
            servicePort: 8093
          path: /transfer_orders/v2/prometheus
    - host: transfer-orders-api-v2-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: transfer-orders-api-v2
            servicePort: 80
          path: /
        - backend:
            serviceName: transfer-orders-api-v2
            servicePort: 8092
          path: /transfer_orders/v2/health
        - backend:
            serviceName: transfer-orders-api-v2
            servicePort: 8093
          path: /transfer_orders/v2/prometheus
    tls:
    - hosts:
      - transfer-orders-api-v2-test.test.k8s.target.com
      - transfer-orders-api-v2-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"fuel-publish-api"},"name":"fuel-publish-api","namespace":"transportation-fuelcost"},"spec":{"rules":[{"host":"fuel-publish-api.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fuel-publish-api","servicePort":8080},"path":"/"}]}},{"host":"fuel-publish-api.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fuel-publish-api","servicePort":8080},"path":"/"}]}},{"host":"fuel-publish-api.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fuel-publish-api","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-18T19:58:12Z
    generation: 1
    labels:
      name: fuel-publish-api
    name: fuel-publish-api
    namespace: transportation-fuelcost
    resourceVersion: "162744167"
    selfLink: /apis/extensions/v1beta1/namespaces/transportation-fuelcost/ingresses/fuel-publish-api
    uid: 85c67461-33b7-11e9-b42d-5254003b1534
  spec:
    rules:
    - host: fuel-publish-api.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fuel-publish-api
            servicePort: 8080
          path: /
    - host: fuel-publish-api.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fuel-publish-api
            servicePort: 8080
          path: /
    - host: fuel-publish-api.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fuel-publish-api
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"fuel-response-api"},"name":"fuel-response-api","namespace":"transportation-fuelcost"},"spec":{"rules":[{"host":"fuel-response-api.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fuel-response-api","servicePort":8888},"path":"/"}]}},{"host":"fuel-response-api.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fuel-response-api","servicePort":8888},"path":"/"}]}},{"host":"fuel-response-api.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fuel-response-api","servicePort":8888},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-18T20:25:52Z
    generation: 1
    labels:
      name: fuel-response-api
    name: fuel-response-api
    namespace: transportation-fuelcost
    resourceVersion: "162762791"
    selfLink: /apis/extensions/v1beta1/namespaces/transportation-fuelcost/ingresses/fuel-response-api
    uid: 632dded1-33bb-11e9-b42d-5254003b1534
  spec:
    rules:
    - host: fuel-response-api.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fuel-response-api
            servicePort: 8888
          path: /
    - host: fuel-response-api.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fuel-response-api
            servicePort: 8888
          path: /
    - host: fuel-response-api.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fuel-response-api
            servicePort: 8888
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"fuel-response-consumer"},"name":"fuel-response-consumer","namespace":"transportation-fuelcost"},"spec":{"rules":[{"host":"fuel-response-consumer.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fuel-response-consumer","servicePort":8080},"path":"/"}]}},{"host":"fuel-response-consumer.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fuel-response-consumer","servicePort":8080},"path":"/"}]}},{"host":"fuel-response-consumer.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fuel-response-consumer","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-18T21:03:31Z
    generation: 1
    labels:
      name: fuel-response-consumer
    name: fuel-response-consumer
    namespace: transportation-fuelcost
    resourceVersion: "162788024"
    selfLink: /apis/extensions/v1beta1/namespaces/transportation-fuelcost/ingresses/fuel-response-consumer
    uid: a5ca1382-33c0-11e9-8c81-525400abdf59
  spec:
    rules:
    - host: fuel-response-consumer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fuel-response-consumer
            servicePort: 8080
          path: /
    - host: fuel-response-consumer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fuel-response-consumer
            servicePort: 8080
          path: /
    - host: fuel-response-consumer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fuel-response-consumer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"dtm-fepa"},"name":"dtm-fepa","namespace":"transportation-integration"},"spec":{"rules":[{"host":"dtm-fepa.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dtm-fepa","servicePort":8080},"path":"/"}]}},{"host":"dtm-fepa.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dtm-fepa","servicePort":8080},"path":"/"}]}},{"host":"dtm-fepa.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dtm-fepa","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-27T20:52:39Z
    generation: 1
    labels:
      name: dtm-fepa
    name: dtm-fepa
    namespace: transportation-integration
    resourceVersion: "173027398"
    selfLink: /apis/extensions/v1beta1/namespaces/transportation-integration/ingresses/dtm-fepa
    uid: 9e52ad7b-3ad1-11e9-b42d-5254003b1534
  spec:
    rules:
    - host: dtm-fepa.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dtm-fepa
            servicePort: 8080
          path: /
    - host: dtm-fepa.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dtm-fepa
            servicePort: 8080
          path: /
    - host: dtm-fepa.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dtm-fepa
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"edi-214-intg"},"name":"edi-214-intg","namespace":"transportation-integration"},"spec":{"rules":[{"host":"edi-214-intg.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"edi-214-intg","servicePort":8080},"path":"/"}]}},{"host":"edi-214-intg.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"edi-214-intg","servicePort":8080},"path":"/"}]}},{"host":"edi-214-intg.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"edi-214-intg","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-18T16:53:40Z
    generation: 2
    labels:
      name: edi-214-intg
    name: edi-214-intg
    namespace: transportation-integration
    resourceVersion: "162784799"
    selfLink: /apis/extensions/v1beta1/namespaces/transportation-integration/ingresses/edi-214-intg
    uid: be342957-339d-11e9-8c81-525400abdf59
  spec:
    rules:
    - host: edi-214-intg.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: edi-214-intg
            servicePort: 8080
          path: /
    - host: edi-214-intg.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: edi-214-intg
            servicePort: 8080
          path: /
    - host: edi-214-intg.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: edi-214-intg
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"edi-error-api"},"name":"edi-error-api","namespace":"transportation-integration"},"spec":{"rules":[{"host":"edi-error-api.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"edi-error-api","servicePort":8080},"path":"/"}]}},{"host":"edi-error-api.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"edi-error-api","servicePort":8080},"path":"/"}]}},{"host":"edi-error-api.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"edi-error-api","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-14T19:18:11Z
    generation: 1
    labels:
      name: edi-error-api
    name: edi-error-api
    namespace: transportation-integration
    resourceVersion: "158946977"
    selfLink: /apis/extensions/v1beta1/namespaces/transportation-integration/ingresses/edi-error-api
    uid: 44d0ee85-308d-11e9-8c81-525400abdf59
  spec:
    rules:
    - host: edi-error-api.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: edi-error-api
            servicePort: 8080
          path: /
    - host: edi-error-api.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: edi-error-api
            servicePort: 8080
          path: /
    - host: edi-error-api.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: edi-error-api
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"edi210-api"},"name":"edi210-api","namespace":"transportation-integration"},"spec":{"rules":[{"host":"edi210-api.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"edi210-api","servicePort":8080},"path":"/"}]}},{"host":"edi210-api.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"edi210-api","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-18T22:20:16Z
    generation: 1
    labels:
      name: edi210-api
    name: edi210-api
    namespace: transportation-integration
    resourceVersion: "162840789"
    selfLink: /apis/extensions/v1beta1/namespaces/transportation-integration/ingresses/edi210-api
    uid: 5e0c86fb-33cb-11e9-8c81-525400abdf59
  spec:
    rules:
    - host: edi210-api.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: edi210-api
            servicePort: 8080
          path: /
    - host: edi210-api.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: edi210-api
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"edi212-api"},"name":"edi212-api","namespace":"transportation-integration"},"spec":{"rules":[{"host":"edi212-api.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"edi212-api","servicePort":8080},"path":"/"}]}},{"host":"edi212-api.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"edi212-api","servicePort":8080},"path":"/"}]}},{"host":"edi212-api.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"edi212-api","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-28T20:35:13Z
    generation: 1
    labels:
      name: edi212-api
    name: edi212-api
    namespace: transportation-integration
    resourceVersion: "174061736"
    selfLink: /apis/extensions/v1beta1/namespaces/transportation-integration/ingresses/edi212-api
    uid: 59b241e1-3b98-11e9-81c2-52540003963e
  spec:
    rules:
    - host: edi212-api.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: edi212-api
            servicePort: 8080
          path: /
    - host: edi212-api.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: edi212-api
            servicePort: 8080
          path: /
    - host: edi212-api.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: edi212-api
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"edi214-pbt-api"},"name":"edi214-pbt-api","namespace":"transportation-integration"},"spec":{"rules":[{"host":"edi214-pbt-api.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"edi214-pbt-api","servicePort":8080},"path":"/"}]}},{"host":"edi214-pbt-api.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"edi214-pbt-api","servicePort":8080},"path":"/"}]}},{"host":"edi214-pbt-api.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"edi214-pbt-api","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-18T20:39:24Z
    generation: 1
    labels:
      name: edi214-pbt-api
    name: edi214-pbt-api
    namespace: transportation-integration
    resourceVersion: "162771857"
    selfLink: /apis/extensions/v1beta1/namespaces/transportation-integration/ingresses/edi214-pbt-api
    uid: 474b15d5-33bd-11e9-8c81-525400abdf59
  spec:
    rules:
    - host: edi214-pbt-api.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: edi214-pbt-api
            servicePort: 8080
          path: /
    - host: edi214-pbt-api.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: edi214-pbt-api
            servicePort: 8080
          path: /
    - host: edi214-pbt-api.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: edi214-pbt-api
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"edi214-plan-api"},"name":"edi214-plan-api","namespace":"transportation-integration"},"spec":{"rules":[{"host":"edi214-plan-api.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"edi214-plan-api","servicePort":8080},"path":"/"}]}},{"host":"edi214-plan-api.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"edi214-plan-api","servicePort":8080},"path":"/"}]}},{"host":"edi214-plan-api.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"edi214-plan-api","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-18T20:32:03Z
    generation: 1
    labels:
      name: edi214-plan-api
    name: edi214-plan-api
    namespace: transportation-integration
    resourceVersion: "162767161"
    selfLink: /apis/extensions/v1beta1/namespaces/transportation-integration/ingresses/edi214-plan-api
    uid: 40473e8a-33bc-11e9-8c81-525400abdf59
  spec:
    rules:
    - host: edi214-plan-api.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: edi214-plan-api
            servicePort: 8080
          path: /
    - host: edi214-plan-api.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: edi214-plan-api
            servicePort: 8080
          path: /
    - host: edi214-plan-api.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: edi214-plan-api
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"edi214-splitter"},"name":"edi214-splitter","namespace":"transportation-integration"},"spec":{"rules":[{"host":"edi214-splitter.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"edi214-splitter","servicePort":8080},"path":"/"}]}},{"host":"edi214-splitter.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"edi214-splitter","servicePort":8080},"path":"/"}]}},{"host":"edi214-splitter.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"edi214-splitter","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-18T17:45:07Z
    generation: 1
    labels:
      name: edi214-splitter
    name: edi214-splitter
    namespace: transportation-integration
    resourceVersion: "162655555"
    selfLink: /apis/extensions/v1beta1/namespaces/transportation-integration/ingresses/edi214-splitter
    uid: ee0fc802-33a4-11e9-8c81-525400abdf59
  spec:
    rules:
    - host: edi214-splitter.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: edi214-splitter
            servicePort: 8080
          path: /
    - host: edi214-splitter.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: edi214-splitter
            servicePort: 8080
          path: /
    - host: edi214-splitter.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: edi214-splitter
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"fepa-consumer"},"name":"fepa-consumer","namespace":"transportation-integration"},"spec":{"rules":[{"host":"fepa-consumer.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fepa-consumer","servicePort":8080},"path":"/"}]}},{"host":"fepa-consumer.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fepa-consumer","servicePort":8080},"path":"/"}]}},{"host":"fepa-consumer.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fepa-consumer","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2019-03-07T02:44:52Z
    generation: 1
    labels:
      name: fepa-consumer
    name: fepa-consumer
    namespace: transportation-integration
    resourceVersion: "180276471"
    selfLink: /apis/extensions/v1beta1/namespaces/transportation-integration/ingresses/fepa-consumer
    uid: fbc3521d-4082-11e9-a26e-525400dba923
  spec:
    rules:
    - host: fepa-consumer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fepa-consumer
            servicePort: 8080
          path: /
    - host: fepa-consumer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fepa-consumer
            servicePort: 8080
          path: /
    - host: fepa-consumer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fepa-consumer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"voucher-creation-api"},"name":"voucher-creation-api","namespace":"transportation-integration"},"spec":{"rules":[{"host":"voucher-creation-api.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"voucher-creation-api","servicePort":8080},"path":"/"}]}},{"host":"voucher-creation-api.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"voucher-creation-api","servicePort":8080},"path":"/"}]}},{"host":"voucher-creation-api.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"voucher-creation-api","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-19T22:00:00Z
    generation: 1
    labels:
      name: voucher-creation-api
    name: voucher-creation-api
    namespace: transportation-integration
    resourceVersion: "163773842"
    selfLink: /apis/extensions/v1beta1/namespaces/transportation-integration/ingresses/voucher-creation-api
    uid: b3da7583-3491-11e9-b42d-5254003b1534
  spec:
    rules:
    - host: voucher-creation-api.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: voucher-creation-api
            servicePort: 8080
          path: /
    - host: voucher-creation-api.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: voucher-creation-api
            servicePort: 8080
          path: /
    - host: voucher-creation-api.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: voucher-creation-api
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"trans-integration-accountdate-ingress"},"name":"trans-integration-accountdate-ingress","namespace":"transportation-intg-rdk-stage"},"spec":{"rules":[{"host":"trans-accountdate.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"trans-integration-accountdate-service","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-19T21:40:46Z
    generation: 1
    labels:
      name: trans-integration-accountdate-ingress
    name: trans-integration-accountdate-ingress
    namespace: transportation-intg-rdk-stage
    resourceVersion: "163759796"
    selfLink: /apis/extensions/v1beta1/namespaces/transportation-intg-rdk-stage/ingresses/trans-integration-accountdate-ingress
    uid: 03fa7710-348f-11e9-8c81-525400abdf59
  spec:
    rules:
    - host: trans-accountdate.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: trans-integration-accountdate-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"trans-integration-purchaseorder-ingress"},"name":"trans-integration-purchaseorder-ingress","namespace":"transportation-intg-rdk-stage"},"spec":{"rules":[{"host":"trans-intg-purchaseorder.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"trans-integration-purchaseorder-service","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-20T03:00:28Z
    generation: 1
    labels:
      name: trans-integration-purchaseorder-ingress
    name: trans-integration-purchaseorder-ingress
    namespace: transportation-intg-rdk-stage
    resourceVersion: "163969887"
    selfLink: /apis/extensions/v1beta1/namespaces/transportation-intg-rdk-stage/ingresses/trans-integration-purchaseorder-ingress
    uid: ad3c0165-34bb-11e9-b42d-5254003b1534
  spec:
    rules:
    - host: trans-intg-purchaseorder.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: trans-integration-purchaseorder-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"trans-integration-vendor-ingress"},"name":"trans-integration-vendor-ingress","namespace":"transportation-intg-rdk-stage"},"spec":{"rules":[{"host":"trans-intg-vendor.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"trans-integration-vendor-service","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-20T02:08:15Z
    generation: 1
    labels:
      name: trans-integration-vendor-ingress
    name: trans-integration-vendor-ingress
    namespace: transportation-intg-rdk-stage
    resourceVersion: "163935697"
    selfLink: /apis/extensions/v1beta1/namespaces/transportation-intg-rdk-stage/ingresses/trans-integration-vendor-ingress
    uid: 61d3fec0-34b4-11e9-8c81-525400abdf59
  spec:
    rules:
    - host: trans-intg-vendor.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: trans-integration-vendor-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"dc-env-ingress"},"name":"dc-env-ingress","namespace":"unimatrix"},"spec":{"rules":[{"host":"dcsenv.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dc-env-svc","servicePort":80},"path":"/"}]}},{"host":"dcsenv.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dc-env-svc","servicePort":80},"path":"/"}]}},{"host":"dcsenv.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dc-env-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["dcsenv.ttc-test.k8s.target.com","dcsenv.tte-test.k8s.target.com","dcsenv.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-22T21:30:38Z
    generation: 4
    labels:
      name: dc-env-ingress
    name: dc-env-ingress
    namespace: unimatrix
    resourceVersion: "171770058"
    selfLink: /apis/extensions/v1beta1/namespaces/unimatrix/ingresses/dc-env-ingress
    uid: 18c2c737-36e9-11e9-8c81-525400abdf59
  spec:
    rules:
    - host: dcsenv.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dc-env-svc
            servicePort: 80
          path: /
    - host: dcsenv.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dc-env-svc
            servicePort: 80
          path: /
    - host: dcsenv.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dc-env-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - dcsenv.ttc-test.k8s.target.com
      - dcsenv.tte-test.k8s.target.com
      - dcsenv.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"unimatrixpodservice","chart":"unimatrixpodservice-0.1.0","heritage":"Tiller","release":"dev"},"name":"dev-unimatrixpodservice","namespace":"unimatrix"},"spec":{"rules":[{"host":"unimatrix-pod-service.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"unimatrixpodservice","servicePort":"http"},"path":"/"}]}},{"host":"unimatrix-pod-service.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"unimatrixpodservice","servicePort":"http"},"path":"/"}]}},{"host":"unimatrix-pod-service.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"unimatrixpodservice","servicePort":"http"},"path":"/"}]}}],"tls":[{"hosts":["unimatrix-pod-service.tte-test.k8s.target.com","unimatrix-pod-service.ttc-test.k8s.target.com","unimatrix-pod-service.test.k8s.target.com"],"secretName":null}]}}
    creationTimestamp: 2018-11-05T18:05:24Z
    generation: 3
    labels:
      app: unimatrixpodservice
      chart: unimatrixpodservice-0.1.0
      heritage: Tiller
      release: dev
    name: dev-unimatrixpodservice
    namespace: unimatrix
    resourceVersion: "61864494"
    selfLink: /apis/extensions/v1beta1/namespaces/unimatrix/ingresses/dev-unimatrixpodservice
    uid: 5de4bba8-e125-11e8-baf5-525400dc2748
  spec:
    rules:
    - host: unimatrix-pod-service.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: unimatrixpodservice
            servicePort: http
          path: /
    - host: unimatrix-pod-service.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: unimatrixpodservice
            servicePort: http
          path: /
    - host: unimatrix-pod-service.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: unimatrixpodservice
            servicePort: http
          path: /
    tls:
    - hosts:
      - unimatrix-pod-service.tte-test.k8s.target.com
      - unimatrix-pod-service.ttc-test.k8s.target.com
      - unimatrix-pod-service.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"prometheus","chart":"prometheus-6.7.2","component":"server","heritage":"Tiller","release":"fedstore-giraffe"},"name":"fedstore-giraffe-prometheus-server","namespace":"unimatrix"},"spec":{"rules":[{"host":"fedstore-prometheus-server-giraffe.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fedstore-giraffe-prometheus-server","servicePort":9090},"path":"/"}]}},{"host":"fedstore-prometheus-server-giraffe.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fedstore-giraffe-prometheus-server","servicePort":9090},"path":"/"}]}}],"tls":[{"hosts":["fedstore-prometheus-server-giraffe.tte-test.k8s.target.com","fedstore-prometheus-server-giraffe.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-07-23T20:31:21Z
    generation: 1
    labels:
      app: prometheus
      chart: prometheus-6.7.2
      component: server
      heritage: Tiller
      release: fedstore-giraffe
    name: fedstore-giraffe-prometheus-server
    namespace: unimatrix
    resourceVersion: "2849586"
    selfLink: /apis/extensions/v1beta1/namespaces/unimatrix/ingresses/fedstore-giraffe-prometheus-server
    uid: 5c762e89-8eb7-11e8-ba99-525400bc6d51
  spec:
    rules:
    - host: fedstore-prometheus-server-giraffe.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fedstore-giraffe-prometheus-server
            servicePort: 9090
          path: /
    - host: fedstore-prometheus-server-giraffe.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fedstore-giraffe-prometheus-server
            servicePort: 9090
          path: /
    tls:
    - hosts:
      - fedstore-prometheus-server-giraffe.tte-test.k8s.target.com
      - fedstore-prometheus-server-giraffe.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"prometheus","chart":"prometheus-6.7.2","component":"alertmanager","heritage":"Tiller","release":"fedstore-lab"},"name":"fedstore-lab-prometheus-alertmanager","namespace":"unimatrix"},"spec":{"rules":[{"host":"fedstore-prometheus-server-alert-lab.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fedstore-lab-prometheus-alertmanager","servicePort":80},"path":"/"}]}},{"host":"fedstore-prometheus-server-alert-lab.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fedstore-lab-prometheus-alertmanager","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["fedstore-prometheus-server-alert-lab.tte-test.k8s.target.com","fedstore-prometheus-server-alert-lab.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-20T17:04:40Z
    generation: 1
    labels:
      app: prometheus
      chart: prometheus-6.7.2
      component: alertmanager
      heritage: Tiller
      release: fedstore-lab
    name: fedstore-lab-prometheus-alertmanager
    namespace: unimatrix
    resourceVersion: "14309621"
    selfLink: /apis/extensions/v1beta1/namespaces/unimatrix/ingresses/fedstore-lab-prometheus-alertmanager
    uid: 203e12ce-a49b-11e8-8dd4-5254004139fa
  spec:
    rules:
    - host: fedstore-prometheus-server-alert-lab.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fedstore-lab-prometheus-alertmanager
            servicePort: 80
          path: /
    - host: fedstore-prometheus-server-alert-lab.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fedstore-lab-prometheus-alertmanager
            servicePort: 80
          path: /
    tls:
    - hosts:
      - fedstore-prometheus-server-alert-lab.tte-test.k8s.target.com
      - fedstore-prometheus-server-alert-lab.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"prometheus","chart":"prometheus-6.7.2","component":"server","heritage":"Tiller","release":"fedstore-moose"},"name":"fedstore-moose-prometheus-server","namespace":"unimatrix"},"spec":{"rules":[{"host":"fedstore-prometheus-server-moose.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fedstore-moose-prometheus-server","servicePort":9090},"path":"/"}]}},{"host":"fedstore-prometheus-server-moose.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fedstore-moose-prometheus-server","servicePort":9090},"path":"/"}]}}],"tls":[{"hosts":["fedstore-prometheus-server-moose.tte-test.k8s.target.com","fedstore-prometheus-server-moose.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-07-23T20:31:11Z
    generation: 1
    labels:
      app: prometheus
      chart: prometheus-6.7.2
      component: server
      heritage: Tiller
      release: fedstore-moose
    name: fedstore-moose-prometheus-server
    namespace: unimatrix
    resourceVersion: "2849591"
    selfLink: /apis/extensions/v1beta1/namespaces/unimatrix/ingresses/fedstore-moose-prometheus-server
    uid: 565b5204-8eb7-11e8-ba99-525400bc6d51
  spec:
    rules:
    - host: fedstore-prometheus-server-moose.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fedstore-moose-prometheus-server
            servicePort: 9090
          path: /
    - host: fedstore-prometheus-server-moose.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fedstore-moose-prometheus-server
            servicePort: 9090
          path: /
    tls:
    - hosts:
      - fedstore-prometheus-server-moose.tte-test.k8s.target.com
      - fedstore-prometheus-server-moose.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"prometheus","chart":"prometheus-6.7.2","component":"server","heritage":"Tiller","release":"fedstore-narwahl"},"name":"fedstore-narwahl-prometheus-server","namespace":"unimatrix"},"spec":{"rules":[{"host":"fedstore-prometheus-server-narwahl.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fedstore-narwahl-prometheus-server","servicePort":9090},"path":"/"}]}},{"host":"fedstore-prometheus-server-narwahl.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fedstore-narwahl-prometheus-server","servicePort":9090},"path":"/"}]}}],"tls":[{"hosts":["fedstore-prometheus-server-narwahl.tte-test.k8s.target.com","fedstore-prometheus-server-narwahl.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-07-23T19:53:57Z
    generation: 3
    labels:
      app: prometheus
      chart: prometheus-6.7.2
      component: server
      heritage: Tiller
      release: fedstore-narwahl
    name: fedstore-narwahl-prometheus-server
    namespace: unimatrix
    resourceVersion: "2847530"
    selfLink: /apis/extensions/v1beta1/namespaces/unimatrix/ingresses/fedstore-narwahl-prometheus-server
    uid: 229acb0e-8eb2-11e8-ba99-525400bc6d51
  spec:
    rules:
    - host: fedstore-prometheus-server-narwahl.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fedstore-narwahl-prometheus-server
            servicePort: 9090
          path: /
    - host: fedstore-prometheus-server-narwahl.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fedstore-narwahl-prometheus-server
            servicePort: 9090
          path: /
    tls:
    - hosts:
      - fedstore-prometheus-server-narwahl.tte-test.k8s.target.com
      - fedstore-prometheus-server-narwahl.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"prometheus","chart":"prometheus-6.7.2","component":"server","heritage":"Tiller","release":"fedstore-octopus"},"name":"fedstore-octopus-prometheus-server","namespace":"unimatrix"},"spec":{"rules":[{"host":"fedstore-prometheus-server-octopus.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fedstore-octopus-prometheus-server","servicePort":9090},"path":"/"}]}},{"host":"fedstore-prometheus-server-octopus.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fedstore-octopus-prometheus-server","servicePort":9090},"path":"/"}]}}],"tls":[{"hosts":["fedstore-prometheus-server-octopus.tte-test.k8s.target.com","fedstore-prometheus-server-octopus.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-07-23T20:31:14Z
    generation: 1
    labels:
      app: prometheus
      chart: prometheus-6.7.2
      component: server
      heritage: Tiller
      release: fedstore-octopus
    name: fedstore-octopus-prometheus-server
    namespace: unimatrix
    resourceVersion: "2849589"
    selfLink: /apis/extensions/v1beta1/namespaces/unimatrix/ingresses/fedstore-octopus-prometheus-server
    uid: 5821f5e2-8eb7-11e8-ba99-525400bc6d51
  spec:
    rules:
    - host: fedstore-prometheus-server-octopus.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fedstore-octopus-prometheus-server
            servicePort: 9090
          path: /
    - host: fedstore-prometheus-server-octopus.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fedstore-octopus-prometheus-server
            servicePort: 9090
          path: /
    tls:
    - hosts:
      - fedstore-prometheus-server-octopus.tte-test.k8s.target.com
      - fedstore-prometheus-server-octopus.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"prometheus","chart":"prometheus-8.8.1","component":"server","heritage":"Tiller","release":"fedstore"},"name":"fedstore-prometheus-server","namespace":"unimatrix"},"spec":{"rules":[{"host":"fedstore-prometheus-server.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fedstore-prometheus-server","servicePort":9090},"path":"/"}]}},{"host":"fedstore-prometheus-server.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fedstore-prometheus-server","servicePort":9090},"path":"/"}]}}],"tls":[{"hosts":["fedstore-prometheus-server.tte-test.k8s.target.com","fedstore-prometheus-server.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-07-23T18:04:01Z
    generation: 2
    labels:
      app: prometheus
      chart: prometheus-8.8.1
      component: server
      heritage: Tiller
      release: fedstore
    name: fedstore-prometheus-server
    namespace: unimatrix
    resourceVersion: "181043305"
    selfLink: /apis/extensions/v1beta1/namespaces/unimatrix/ingresses/fedstore-prometheus-server
    uid: c77c748c-8ea2-11e8-8dd4-5254004139fa
  spec:
    rules:
    - host: fedstore-prometheus-server.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fedstore-prometheus-server
            servicePort: 9090
          path: /
    - host: fedstore-prometheus-server.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fedstore-prometheus-server
            servicePort: 9090
          path: /
    tls:
    - hosts:
      - fedstore-prometheus-server.tte-test.k8s.target.com
      - fedstore-prometheus-server.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"prometheus","chart":"prometheus-6.7.2","component":"server","heritage":"Tiller","release":"fedstore-tiger"},"name":"fedstore-tiger-prometheus-server","namespace":"unimatrix"},"spec":{"rules":[{"host":"fedstore-prometheus-server-tiger.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fedstore-tiger-prometheus-server","servicePort":9090},"path":"/"}]}},{"host":"fedstore-prometheus-server-tiger.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fedstore-tiger-prometheus-server","servicePort":9090},"path":"/"}]}}],"tls":[{"hosts":["fedstore-prometheus-server-tiger.tte-test.k8s.target.com","fedstore-prometheus-server-tiger.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-07-23T20:31:14Z
    generation: 1
    labels:
      app: prometheus
      chart: prometheus-6.7.2
      component: server
      heritage: Tiller
      release: fedstore-tiger
    name: fedstore-tiger-prometheus-server
    namespace: unimatrix
    resourceVersion: "2849590"
    selfLink: /apis/extensions/v1beta1/namespaces/unimatrix/ingresses/fedstore-tiger-prometheus-server
    uid: 57f5ceae-8eb7-11e8-8dd4-5254004139fa
  spec:
    rules:
    - host: fedstore-prometheus-server-tiger.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fedstore-tiger-prometheus-server
            servicePort: 9090
          path: /
    - host: fedstore-prometheus-server-tiger.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fedstore-tiger-prometheus-server
            servicePort: 9090
          path: /
    tls:
    - hosts:
      - fedstore-prometheus-server-tiger.tte-test.k8s.target.com
      - fedstore-prometheus-server-tiger.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"prometheus","chart":"prometheus-6.7.2","component":"server","heritage":"Tiller","release":"fedstore-viper"},"name":"fedstore-viper-prometheus-server","namespace":"unimatrix"},"spec":{"rules":[{"host":"fedstore-prometheus-server-viper.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fedstore-viper-prometheus-server","servicePort":9090},"path":"/"}]}},{"host":"fedstore-prometheus-server-viper.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fedstore-viper-prometheus-server","servicePort":9090},"path":"/"}]}}],"tls":[{"hosts":["fedstore-prometheus-server-viper.tte-test.k8s.target.com","fedstore-prometheus-server-viper.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-07-23T20:31:10Z
    generation: 1
    labels:
      app: prometheus
      chart: prometheus-6.7.2
      component: server
      heritage: Tiller
      release: fedstore-viper
    name: fedstore-viper-prometheus-server
    namespace: unimatrix
    resourceVersion: "2849588"
    selfLink: /apis/extensions/v1beta1/namespaces/unimatrix/ingresses/fedstore-viper-prometheus-server
    uid: 5590a8e3-8eb7-11e8-bda5-525400df3355
  spec:
    rules:
    - host: fedstore-prometheus-server-viper.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fedstore-viper-prometheus-server
            servicePort: 9090
          path: /
    - host: fedstore-prometheus-server-viper.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fedstore-viper-prometheus-server
            servicePort: 9090
          path: /
    tls:
    - hosts:
      - fedstore-prometheus-server-viper.tte-test.k8s.target.com
      - fedstore-prometheus-server-viper.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"prometheus","chart":"prometheus-6.7.2","component":"server","heritage":"Tiller","release":"fedstore-walrus"},"name":"fedstore-walrus-prometheus-server","namespace":"unimatrix"},"spec":{"rules":[{"host":"fedstore-prometheus-server-walrus.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fedstore-walrus-prometheus-server","servicePort":9090},"path":"/"}]}},{"host":"fedstore-prometheus-server-walrus.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fedstore-walrus-prometheus-server","servicePort":9090},"path":"/"}]}}],"tls":[{"hosts":["fedstore-prometheus-server-walrus.tte-test.k8s.target.com","fedstore-prometheus-server-walrus.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-07-23T20:31:17Z
    generation: 1
    labels:
      app: prometheus
      chart: prometheus-6.7.2
      component: server
      heritage: Tiller
      release: fedstore-walrus
    name: fedstore-walrus-prometheus-server
    namespace: unimatrix
    resourceVersion: "2849587"
    selfLink: /apis/extensions/v1beta1/namespaces/unimatrix/ingresses/fedstore-walrus-prometheus-server
    uid: 5a0957ce-8eb7-11e8-bda5-525400df3355
  spec:
    rules:
    - host: fedstore-prometheus-server-walrus.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fedstore-walrus-prometheus-server
            servicePort: 9090
          path: /
    - host: fedstore-prometheus-server-walrus.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fedstore-walrus-prometheus-server
            servicePort: 9090
          path: /
    tls:
    - hosts:
      - fedstore-prometheus-server-walrus.tte-test.k8s.target.com
      - fedstore-prometheus-server-walrus.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"lab-registry-cache","namespace":"unimatrix"},"spec":{"rules":[{"host":"lab-registry-cache.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lab-registry-cache","servicePort":80},"path":"/"}]}},{"host":"lab-registry-cache.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lab-registry-cache","servicePort":80},"path":"/"}]}},{"host":"lab-registry-cache.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lab-registry-cache","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["lab-registry-cache.tte-test.k8s.target.com","lab-registry-cache.ttc-test.k8s.target.com","lab-registry-cache.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-07-25T20:44:50Z
    generation: 1
    name: lab-registry-cache
    namespace: unimatrix
    resourceVersion: "3343058"
    selfLink: /apis/extensions/v1beta1/namespaces/unimatrix/ingresses/lab-registry-cache
    uid: 9320c10f-904b-11e8-8dd4-5254004139fa
  spec:
    rules:
    - host: lab-registry-cache.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lab-registry-cache
            servicePort: 80
          path: /
    - host: lab-registry-cache.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lab-registry-cache
            servicePort: 80
          path: /
    - host: lab-registry-cache.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lab-registry-cache
            servicePort: 80
          path: /
    tls:
    - hosts:
      - lab-registry-cache.tte-test.k8s.target.com
      - lab-registry-cache.ttc-test.k8s.target.com
      - lab-registry-cache.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"priorityclassmapping","namespace":"unimatrix"},"spec":{"rules":[{"host":"unimatrix-priority-class.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"priorityclassmapping","servicePort":80},"path":"/"}]}},{"host":"unimatrix-priority-class.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"priorityclassmapping","servicePort":80},"path":"/"}]}},{"host":"unimatrix-priority-class.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"priorityclassmapping","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["unimatrix-priority-class.tte-test.k8s.target.com","unimatrix-priority-class.ttc-test.k8s.target.com","unimatrix-priority-class.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-18T21:52:37Z
    generation: 1
    name: priorityclassmapping
    namespace: unimatrix
    resourceVersion: "24628063"
    selfLink: /apis/extensions/v1beta1/namespaces/unimatrix/ingresses/priorityclassmapping
    uid: 281ff90c-bb8d-11e8-8fe0-525400bc6d51
  spec:
    rules:
    - host: unimatrix-priority-class.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: priorityclassmapping
            servicePort: 80
          path: /
    - host: unimatrix-priority-class.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: priorityclassmapping
            servicePort: 80
          path: /
    - host: unimatrix-priority-class.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: priorityclassmapping
            servicePort: 80
          path: /
    tls:
    - hosts:
      - unimatrix-priority-class.tte-test.k8s.target.com
      - unimatrix-priority-class.ttc-test.k8s.target.com
      - unimatrix-priority-class.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"stores-env-ingress"},"name":"stores-env-ingress","namespace":"unimatrix"},"spec":{"rules":[{"host":"storesenv.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"stores-env-svc","servicePort":80},"path":"/"}]}},{"host":"storesenv.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"stores-env-svc","servicePort":80},"path":"/"}]}},{"host":"storesenv.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"stores-env-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["storesenv.tte-test.k8s.target.com","storesenv.ttc-test.k8s.target.com","storesenv.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-22T21:17:30Z
    generation: 4
    labels:
      name: stores-env-ingress
    name: stores-env-ingress
    namespace: unimatrix
    resourceVersion: "171829513"
    selfLink: /apis/extensions/v1beta1/namespaces/unimatrix/ingresses/stores-env-ingress
    uid: 42ff1be4-36e7-11e9-8c81-525400abdf59
  spec:
    rules:
    - host: storesenv.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: stores-env-svc
            servicePort: 80
          path: /
    - host: storesenv.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: stores-env-svc
            servicePort: 80
          path: /
    - host: storesenv.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: stores-env-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - storesenv.tte-test.k8s.target.com
      - storesenv.ttc-test.k8s.target.com
      - storesenv.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"stores-env-ingress-vanity"},"name":"stores-env-ingress-vanity","namespace":"unimatrix"},"spec":{"rules":[{"host":"storesenv.us-central-1.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"stores-env-svc","servicePort":80},"path":"/"}]}},{"host":"storesenv.us-central-1ttc.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"stores-env-svc","servicePort":80},"path":"/"}]}},{"host":"storesenv.us-central-1tte.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"stores-env-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["storesenv.us-central-1ttc.test.core.k8s.tgt","storesenv.us-central-1tte.test.core.k8s.tgt","storesenv.us-central-1.test.core.k8s.tgt"],"secretName":"storesenv-vanity"}]}}
    creationTimestamp: 2019-02-26T21:42:14Z
    generation: 2
    labels:
      name: stores-env-ingress-vanity
    name: stores-env-ingress-vanity
    namespace: unimatrix
    resourceVersion: "172820351"
    selfLink: /apis/extensions/v1beta1/namespaces/unimatrix/ingresses/stores-env-ingress-vanity
    uid: 61973583-3a0f-11e9-8c81-525400abdf59
  spec:
    rules:
    - host: storesenv.us-central-1.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: stores-env-svc
            servicePort: 80
          path: /
    - host: storesenv.us-central-1ttc.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: stores-env-svc
            servicePort: 80
          path: /
    - host: storesenv.us-central-1tte.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: stores-env-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - storesenv.us-central-1ttc.test.core.k8s.tgt
      - storesenv.us-central-1tte.test.core.k8s.tgt
      - storesenv.us-central-1.test.core.k8s.tgt
      secretName: storesenv-vanity
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"stores-env-static","namespace":"unimatrix"},"spec":{"rules":[{"host":"stores-env.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"stores-env-static","servicePort":8080},"path":"/"}]}},{"host":"stores-env.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"stores-env-static","servicePort":8080},"path":"/"}]}},{"host":"stores-env.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"stores-env-static","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["stores-env.tte-test.k8s.target.com","stores-env.ttc-test.k8s.target.com","stores-env.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-07-23T00:24:26Z
    generation: 1
    name: stores-env-static
    namespace: unimatrix
    resourceVersion: "2642115"
    selfLink: /apis/extensions/v1beta1/namespaces/unimatrix/ingresses/stores-env-static
    uid: c18801df-8e0e-11e8-8dd4-5254004139fa
  spec:
    rules:
    - host: stores-env.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: stores-env-static
            servicePort: 8080
          path: /
    - host: stores-env.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: stores-env-static
            servicePort: 8080
          path: /
    - host: stores-env.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: stores-env-static
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - stores-env.tte-test.k8s.target.com
      - stores-env.ttc-test.k8s.target.com
      - stores-env.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"prometheus","chart":"prometheus-8.9.0","component":"alertmanager","heritage":"Tiller","release":"stores-prom-lab"},"name":"stores-prom-lab-prometheus-alertmanager","namespace":"unimatrix"},"spec":{"rules":[{"host":"stores-prom-alert-lab.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"stores-prom-lab-prometheus-alertmanager","servicePort":80},"path":"/"}]}},{"host":"stores-prom-alert-lab.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"stores-prom-lab-prometheus-alertmanager","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["stores-prom-alert-lab.tte-test.k8s.target.com","stores-prom-alert-lab.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-14T15:53:41Z
    generation: 1
    labels:
      app: prometheus
      chart: prometheus-8.9.0
      component: alertmanager
      heritage: Tiller
      release: stores-prom-lab
    name: stores-prom-lab-prometheus-alertmanager
    namespace: unimatrix
    resourceVersion: "191269204"
    selfLink: /apis/extensions/v1beta1/namespaces/unimatrix/ingresses/stores-prom-lab-prometheus-alertmanager
    uid: 371ef300-9fda-11e8-8dd4-5254004139fa
  spec:
    rules:
    - host: stores-prom-alert-lab.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: stores-prom-lab-prometheus-alertmanager
            servicePort: 80
          path: /
    - host: stores-prom-alert-lab.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: stores-prom-lab-prometheus-alertmanager
            servicePort: 80
          path: /
    tls:
    - hosts:
      - stores-prom-alert-lab.tte-test.k8s.target.com
      - stores-prom-alert-lab.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"prometheus","chart":"prometheus-8.9.0","component":"pushgateway","heritage":"Tiller","release":"stores-prom-lab"},"name":"stores-prom-lab-prometheus-pushgateway","namespace":"unimatrix"},"spec":{"rules":[{"host":"stores-pushgateway-lab.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"stores-prom-lab-prometheus-pushgateway","servicePort":9091},"path":"/"}]}},{"host":"stores-pushgateway-lab.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"stores-prom-lab-prometheus-pushgateway","servicePort":9091},"path":"/"}]}}],"tls":[{"hosts":["stores-pushgateway-lab.tte-test.k8s.target.com","stores-pushgateway-lab.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-14T15:53:47Z
    generation: 1
    labels:
      app: prometheus
      chart: prometheus-8.9.0
      component: pushgateway
      heritage: Tiller
      release: stores-prom-lab
    name: stores-prom-lab-prometheus-pushgateway
    namespace: unimatrix
    resourceVersion: "191269236"
    selfLink: /apis/extensions/v1beta1/namespaces/unimatrix/ingresses/stores-prom-lab-prometheus-pushgateway
    uid: 3af7f9f8-9fda-11e8-8dd4-5254004139fa
  spec:
    rules:
    - host: stores-pushgateway-lab.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: stores-prom-lab-prometheus-pushgateway
            servicePort: 9091
          path: /
    - host: stores-pushgateway-lab.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: stores-prom-lab-prometheus-pushgateway
            servicePort: 9091
          path: /
    tls:
    - hosts:
      - stores-pushgateway-lab.tte-test.k8s.target.com
      - stores-pushgateway-lab.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"prometheus","chart":"prometheus-8.9.0","component":"server","heritage":"Tiller","release":"stores-prom-lab"},"name":"stores-prom-lab-prometheus-server","namespace":"unimatrix"},"spec":{"rules":[{"host":"stores-prom-lab.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"stores-prom-lab-prometheus-server","servicePort":80},"path":"/"}]}},{"host":"stores-prom-lab.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"stores-prom-lab-prometheus-server","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["stores-prom-lab.tte-test.k8s.target.com","stores-prom-lab.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-14T15:53:54Z
    generation: 1
    labels:
      app: prometheus
      chart: prometheus-8.9.0
      component: server
      heritage: Tiller
      release: stores-prom-lab
    name: stores-prom-lab-prometheus-server
    namespace: unimatrix
    resourceVersion: "191269360"
    selfLink: /apis/extensions/v1beta1/namespaces/unimatrix/ingresses/stores-prom-lab-prometheus-server
    uid: 3edc1743-9fda-11e8-8dd4-5254004139fa
  spec:
    rules:
    - host: stores-prom-lab.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: stores-prom-lab-prometheus-server
            servicePort: 80
          path: /
    - host: stores-prom-lab.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: stores-prom-lab-prometheus-server
            servicePort: 80
          path: /
    tls:
    - hosts:
      - stores-prom-lab.tte-test.k8s.target.com
      - stores-prom-lab.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"unimatrix-dev","namespace":"unimatrix"},"spec":{"rules":[{"host":"unimatrixlab.us-central-1ttc.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"unimatrix-dev","servicePort":80},"path":"/"}]}},{"host":"unimatrix-dev.target.com","http":{"paths":[{"backend":{"serviceName":"unimatrix-dev","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["unimatrixlab.us-central-1ttc.core.k8s.tgt","unimatrix-dev.target.com"],"secretName":"unimatrix-dev-vanity"}]}}
    creationTimestamp: 2018-10-20T20:38:50Z
    generation: 11
    name: unimatrix-dev
    namespace: unimatrix
    resourceVersion: "71070686"
    selfLink: /apis/extensions/v1beta1/namespaces/unimatrix/ingresses/unimatrix-dev
    uid: 26948ebe-d4a8-11e8-999b-5254008d935f
  spec:
    rules:
    - host: unimatrixlab.us-central-1ttc.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: unimatrix-dev
            servicePort: 80
          path: /
    - host: unimatrix-dev.target.com
      http:
        paths:
        - backend:
            serviceName: unimatrix-dev
            servicePort: 80
          path: /
    tls:
    - hosts:
      - unimatrixlab.us-central-1ttc.core.k8s.tgt
      - unimatrix-dev.target.com
      secretName: unimatrix-dev-vanity
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"provider-sms-messages-ingress"},"name":"provider-sms-messages-ingress","namespace":"voice-provider-sms-messages"},"spec":{"rules":[{"host":"provider-sms-messages.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"provider-sms-messages-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["provider-sms-messages.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-10T20:42:41Z
    generation: 1
    labels:
      name: provider-sms-messages-ingress
    name: provider-sms-messages-ingress
    namespace: voice-provider-sms-messages
    resourceVersion: "38524583"
    selfLink: /apis/extensions/v1beta1/namespaces/voice-provider-sms-messages/ingresses/provider-sms-messages-ingress
    uid: 085b66d0-cccd-11e8-9ae6-5254005969a8
  spec:
    rules:
    - host: provider-sms-messages.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: provider-sms-messages-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - provider-sms-messages.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"nelson","namespace":"zebral-dev"},"spec":{"rules":[{"host":"zebral-nelson.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"nelson","servicePort":"api"},"path":"/"}]}}],"tls":[{"hosts":["zebral-nelson.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-06T05:03:09Z
    generation: 1
    name: nelson
    namespace: zebral-dev
    resourceVersion: "19493751"
    selfLink: /apis/extensions/v1beta1/namespaces/zebral-dev/ingresses/nelson
    uid: 25ed830a-b192-11e8-88c5-5254004139fa
  spec:
    rules:
    - host: zebral-nelson.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: nelson
            servicePort: api
          path: /
    tls:
    - hosts:
      - zebral-nelson.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
kind: List
metadata: {}
resourceVersion: ""
selfLink: ""
