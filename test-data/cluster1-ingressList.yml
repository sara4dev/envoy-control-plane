apiVersion: v1
items:
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"adaptive-ebs"},"name":"adaptive-ebs","namespace":"adaptive-cia"},"spec":{"rules":[{"host":"adaptive-ebs.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"adaptive-ebs","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-11-08T16:05:24Z
    generation: 1
    labels:
      name: adaptive-ebs
    name: adaptive-ebs
    namespace: adaptive-cia
    resourceVersion: "71932166"
    selfLink: /apis/extensions/v1beta1/namespaces/adaptive-cia/ingresses/adaptive-ebs
    uid: 19dfe910-e370-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: adaptive-ebs.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: adaptive-ebs
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-11-26T09:29:55Z
    generation: 1
    labels:
      app: github-pr-summary-dev
    name: github-pr-summary-dev
    namespace: adaptive-cia
    resourceVersion: "89164252"
    selfLink: /apis/extensions/v1beta1/namespaces/adaptive-cia/ingresses/github-pr-summary-dev
    uid: d58ac025-f15d-11e8-9e69-525400e51df1
  spec:
    rules:
    - host: github-pr-summary.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: github-pr-summary-dev
            servicePort: 8080
          path: /
    - host: github-pr-summary.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: github-pr-summary-dev
            servicePort: 8080
          path: /
    - host: github-pr-summary.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: github-pr-summary-dev
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - github-pr-summary.test.k8s.target.com
      - github-pr-summary.ttc-test.k8s.target.com
      - github-pr-summary.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"ao-data-load-ingress"},"name":"ao-data-load-ingress","namespace":"ao-dev"},"spec":{"rules":[{"host":"ao-data-load-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ao-data-load","servicePort":80},"path":"/"}]}},{"host":"ao-data-load-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ao-data-load","servicePort":80},"path":"/"}]}},{"host":"ao-data-load-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ao-data-load","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["ao-data-load-dev.ttc-test.k8s.target.com","ao-data-load-dev.tte-test.k8s.target.com","ao-data-load-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-11T14:24:25Z
    generation: 1
    labels:
      name: ao-data-load-ingress
    name: ao-data-load-ingress
    namespace: ao-dev
    resourceVersion: "49225851"
    selfLink: /apis/extensions/v1beta1/namespaces/ao-dev/ingresses/ao-data-load-ingress
    uid: 62310b77-b5ce-11e8-8488-525400b06b0f
  spec:
    rules:
    - host: ao-data-load-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ao-data-load
            servicePort: 80
          path: /
    - host: ao-data-load-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ao-data-load
            servicePort: 80
          path: /
    - host: ao-data-load-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ao-data-load
            servicePort: 80
          path: /
    tls:
    - hosts:
      - ao-data-load-dev.ttc-test.k8s.target.com
      - ao-data-load-dev.tte-test.k8s.target.com
      - ao-data-load-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"ao-reporting-ingress"},"name":"ao-reporting-ingress","namespace":"ao-dev"},"spec":{"rules":[{"host":"aoreporting-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ao-reporting","servicePort":80},"path":"/"}]}},{"host":"aoreporting-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ao-reporting","servicePort":80},"path":"/"}]}},{"host":"aoreporting-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ao-reporting","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["aoreporting-dev.ttc-test.k8s.target.com","aoreporting-dev.tte-test.k8s.target.com","aoreporting-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-11T14:31:23Z
    generation: 1
    labels:
      name: ao-reporting-ingress
    name: ao-reporting-ingress
    namespace: ao-dev
    resourceVersion: "49225845"
    selfLink: /apis/extensions/v1beta1/namespaces/ao-dev/ingresses/ao-reporting-ingress
    uid: 5bc83350-b5cf-11e8-8488-525400b06b0f
  spec:
    rules:
    - host: aoreporting-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ao-reporting
            servicePort: 80
          path: /
    - host: aoreporting-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ao-reporting
            servicePort: 80
          path: /
    - host: aoreporting-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ao-reporting
            servicePort: 80
          path: /
    tls:
    - hosts:
      - aoreporting-dev.ttc-test.k8s.target.com
      - aoreporting-dev.tte-test.k8s.target.com
      - aoreporting-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"assortment-optimization-ingress"},"name":"assortment-optimization-ingress","namespace":"ao-dev"},"spec":{"rules":[{"host":"pogap-dev-ao.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"assortment-optimization","servicePort":80},"path":"/"}]}},{"host":"pogap-dev-ao.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"assortment-optimization","servicePort":80},"path":"/"}]}},{"host":"pogap-dev-ao.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"assortment-optimization","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["pogap-dev-ao.ttc-test.k8s.target.com","pogap-dev-ao.tte-test.k8s.target.com","pogap-dev-ao.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-11T10:40:33Z
    generation: 3
    labels:
      name: assortment-optimization-ingress
    name: assortment-optimization-ingress
    namespace: ao-dev
    resourceVersion: "49226007"
    selfLink: /apis/extensions/v1beta1/namespaces/ao-dev/ingresses/assortment-optimization-ingress
    uid: 1c31b9eb-b5af-11e8-8488-525400b06b0f
  spec:
    rules:
    - host: pogap-dev-ao.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: assortment-optimization
            servicePort: 80
          path: /
    - host: pogap-dev-ao.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: assortment-optimization
            servicePort: 80
          path: /
    - host: pogap-dev-ao.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: assortment-optimization
            servicePort: 80
          path: /
    tls:
    - hosts:
      - pogap-dev-ao.ttc-test.k8s.target.com
      - pogap-dev-ao.tte-test.k8s.target.com
      - pogap-dev-ao.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"assortment-spaces-ingress"},"name":"assortment-spaces-ingress","namespace":"ao-dev"},"spec":{"rules":[{"host":"assortment-spaces-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"assortment-spaces","servicePort":80},"path":"/"}]}},{"host":"assortment-spaces-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"assortment-spaces","servicePort":80},"path":"/"}]}},{"host":"assortment-spaces-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"assortment-spaces","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["assortment-spaces-dev.tte-test.k8s.target.com","assortment-spaces-dev.tte-test.k8s.target.com","assortment-spaces-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-04T13:50:44Z
    generation: 1
    labels:
      name: assortment-spaces-ingress
    name: assortment-spaces-ingress
    namespace: ao-dev
    resourceVersion: "49225734"
    selfLink: /apis/extensions/v1beta1/namespaces/ao-dev/ingresses/assortment-spaces-ingress
    uid: 7d44e375-c7dc-11e8-9f4c-525400adf9ce
  spec:
    rules:
    - host: assortment-spaces-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: assortment-spaces
            servicePort: 80
          path: /
    - host: assortment-spaces-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: assortment-spaces
            servicePort: 80
          path: /
    - host: assortment-spaces-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: assortment-spaces
            servicePort: 80
          path: /
    tls:
    - hosts:
      - assortment-spaces-dev.tte-test.k8s.target.com
      - assortment-spaces-dev.tte-test.k8s.target.com
      - assortment-spaces-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"ao-data-load-ingress"},"name":"ao-data-load-ingress","namespace":"ao-stage"},"spec":{"rules":[{"host":"pogap-stage-ao-data-load.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ao-data-load","servicePort":80},"path":"/"}]}},{"host":"pogap-stage-ao-data-load.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ao-data-load","servicePort":80},"path":"/"}]}},{"host":"pogap-stage-ao-data-load.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ao-data-load","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["pogap-stage-ao-data-load.ttc-test.k8s.target.com","pogap-stage-ao-data-load.tte-test.k8s.target.com","pogap-stage-ao-data-load.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-17T15:40:47Z
    generation: 1
    labels:
      name: ao-data-load-ingress
    name: ao-data-load-ingress
    namespace: ao-stage
    resourceVersion: "49225715"
    selfLink: /apis/extensions/v1beta1/namespaces/ao-stage/ingresses/ao-data-load-ingress
    uid: 0c466733-ba90-11e8-8462-525400b93a8e
  spec:
    rules:
    - host: pogap-stage-ao-data-load.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ao-data-load
            servicePort: 80
          path: /
    - host: pogap-stage-ao-data-load.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ao-data-load
            servicePort: 80
          path: /
    - host: pogap-stage-ao-data-load.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ao-data-load
            servicePort: 80
          path: /
    tls:
    - hosts:
      - pogap-stage-ao-data-load.ttc-test.k8s.target.com
      - pogap-stage-ao-data-load.tte-test.k8s.target.com
      - pogap-stage-ao-data-load.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"ao-reporting-ingress"},"name":"ao-reporting-ingress","namespace":"ao-stage"},"spec":{"rules":[{"host":"aoreporting-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ao-reporting","servicePort":80},"path":"/"}]}},{"host":"aoreporting-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ao-reporting","servicePort":80},"path":"/"}]}},{"host":"aoreporting-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ao-reporting","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["aoreporting-stage.ttc-test.k8s.target.com","aoreporting-stage.tte-test.k8s.target.com","aoreporting-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-17T15:40:26Z
    generation: 1
    labels:
      name: ao-reporting-ingress
    name: ao-reporting-ingress
    namespace: ao-stage
    resourceVersion: "49225789"
    selfLink: /apis/extensions/v1beta1/namespaces/ao-stage/ingresses/ao-reporting-ingress
    uid: ff52561a-ba8f-11e8-8462-525400b93a8e
  spec:
    rules:
    - host: aoreporting-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ao-reporting
            servicePort: 80
          path: /
    - host: aoreporting-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ao-reporting
            servicePort: 80
          path: /
    - host: aoreporting-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ao-reporting
            servicePort: 80
          path: /
    tls:
    - hosts:
      - aoreporting-stage.ttc-test.k8s.target.com
      - aoreporting-stage.tte-test.k8s.target.com
      - aoreporting-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"assortment-optimization-ingress"},"name":"assortment-optimization-ingress","namespace":"ao-stage"},"spec":{"rules":[{"host":"pogap-stage-ao.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"assortment-optimization","servicePort":80},"path":"/"}]}},{"host":"pogap-stage-ao.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"assortment-optimization","servicePort":80},"path":"/"}]}},{"host":"pogap-stage-ao.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"assortment-optimization","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["pogap-stage-ao.ttc-test.k8s.target.com","pogap-stage-ao.tte-test.k8s.target.com","pogap-stage-ao.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-17T15:53:36Z
    generation: 1
    labels:
      name: assortment-optimization-ingress
    name: assortment-optimization-ingress
    namespace: ao-stage
    resourceVersion: "49225356"
    selfLink: /apis/extensions/v1beta1/namespaces/ao-stage/ingresses/assortment-optimization-ingress
    uid: d67e4b17-ba91-11e8-a71c-525400524761
  spec:
    rules:
    - host: pogap-stage-ao.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: assortment-optimization
            servicePort: 80
          path: /
    - host: pogap-stage-ao.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: assortment-optimization
            servicePort: 80
          path: /
    - host: pogap-stage-ao.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: assortment-optimization
            servicePort: 80
          path: /
    tls:
    - hosts:
      - pogap-stage-ao.ttc-test.k8s.target.com
      - pogap-stage-ao.tte-test.k8s.target.com
      - pogap-stage-ao.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"assortment-spaces-ingress"},"name":"assortment-spaces-ingress","namespace":"ao-stage"},"spec":{"rules":[{"host":"assortment-spaces-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"assortment-spaces","servicePort":80},"path":"/"}]}},{"host":"assortment-spaces-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"assortment-spaces","servicePort":80},"path":"/"}]}},{"host":"assortment-spaces-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"assortment-spaces","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["assortment-spaces-stage.tte-test.k8s.target.com","assortment-spaces-stage.tte-test.k8s.target.com","assortment-spaces-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-18T06:19:16Z
    generation: 1
    labels:
      name: assortment-spaces-ingress
    name: assortment-spaces-ingress
    namespace: ao-stage
    resourceVersion: "54440023"
    selfLink: /apis/extensions/v1beta1/namespaces/ao-stage/ingresses/assortment-spaces-ingress
    uid: bd4331a4-d29d-11e8-ad5b-5254008c264f
  spec:
    rules:
    - host: assortment-spaces-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: assortment-spaces
            servicePort: 80
          path: /
    - host: assortment-spaces-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: assortment-spaces
            servicePort: 80
          path: /
    - host: assortment-spaces-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: assortment-spaces
            servicePort: 80
          path: /
    tls:
    - hosts:
      - assortment-spaces-stage.tte-test.k8s.target.com
      - assortment-spaces-stage.tte-test.k8s.target.com
      - assortment-spaces-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"assortment-plans-ingress"},"name":"assortment-plans-ingress","namespace":"apex-dev"},"spec":{"rules":[{"host":"apexplatform-dev-plans.us-central-1.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"assortment-plans","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["apexplatform-dev-plans.us-central-1.test.core.k8s.tgt"],"secretName":"vanitysecret"}]}}
    creationTimestamp: 2018-09-28T15:39:52Z
    generation: 1
    labels:
      name: assortment-plans-ingress
    name: assortment-plans-ingress
    namespace: apex-dev
    resourceVersion: "49225545"
    selfLink: /apis/extensions/v1beta1/namespaces/apex-dev/ingresses/assortment-plans-ingress
    uid: bdf8ed9f-c334-11e8-981f-525400343c24
  spec:
    rules:
    - host: apexplatform-dev-plans.us-central-1.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: assortment-plans
            servicePort: 80
          path: /
    tls:
    - hosts:
      - apexplatform-dev-plans.us-central-1.test.core.k8s.tgt
      secretName: vanitysecret
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"audits-ingress"},"name":"audits-ingress","namespace":"apex-dev"},"spec":{"rules":[{"host":"apexplatform-dev-audits.us-central-1.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"audits","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["apexplatform-dev-audits.us-central-1.test.core.k8s.tgt"],"secretName":"vanitysecretevents"}]}}
    creationTimestamp: 2019-03-06T15:28:31Z
    generation: 1
    labels:
      name: audits-ingress
    name: audits-ingress
    namespace: apex-dev
    resourceVersion: "200113922"
    selfLink: /apis/extensions/v1beta1/namespaces/apex-dev/ingresses/audits-ingress
    uid: 7fb232fe-4024-11e9-ab00-525400a77f96
  spec:
    rules:
    - host: apexplatform-dev-audits.us-central-1.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: audits
            servicePort: 80
          path: /
    tls:
    - hosts:
      - apexplatform-dev-audits.us-central-1.test.core.k8s.tgt
      secretName: vanitysecretevents
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"events-ingress"},"name":"events-ingress","namespace":"apex-dev"},"spec":{"rules":[{"host":"apexplatform-dev-events.us-central-1.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"events","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["apexplatform-dev-events.us-central-1.test.core.k8s.tgt"],"secretName":"vanitysecretevents"}]}}
    creationTimestamp: 2018-09-28T21:16:43Z
    generation: 1
    labels:
      name: events-ingress
    name: events-ingress
    namespace: apex-dev
    resourceVersion: "49225986"
    selfLink: /apis/extensions/v1beta1/namespaces/apex-dev/ingresses/events-ingress
    uid: cc56f048-c363-11e8-9a78-525400d8fde0
  spec:
    rules:
    - host: apexplatform-dev-events.us-central-1.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: events
            servicePort: 80
          path: /
    tls:
    - hosts:
      - apexplatform-dev-events.us-central-1.test.core.k8s.tgt
      secretName: vanitysecretevents
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"potential-items-ingress"},"name":"potential-items-ingress","namespace":"apex-dev"},"spec":{"rules":[{"host":"apexplatform-dev-potential-items.us-central-1.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"potential-items","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["apexplatform-dev-potential-items.us-central-1.test.core.k8s.tgt"],"secretName":"vanitysecretpotentialitems"}]}}
    creationTimestamp: 2018-09-28T17:01:23Z
    generation: 3
    labels:
      name: potential-items-ingress
    name: potential-items-ingress
    namespace: apex-dev
    resourceVersion: "49225869"
    selfLink: /apis/extensions/v1beta1/namespaces/apex-dev/ingresses/potential-items-ingress
    uid: 214085a5-c340-11e8-90a0-525400d38b79
  spec:
    rules:
    - host: apexplatform-dev-potential-items.us-central-1.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: potential-items
            servicePort: 80
          path: /
    tls:
    - hosts:
      - apexplatform-dev-potential-items.us-central-1.test.core.k8s.tgt
      secretName: vanitysecretpotentialitems
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"product-plan-summaries-ingress"},"name":"product-plan-summaries-ingress","namespace":"apex-dev"},"spec":{"rules":[{"host":"apexplatform-dev-product-plan-summaries.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"product-plan-summaries","servicePort":80},"path":"/"}]}},{"host":"apexplatform-dev-product-plan-summaries.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"product-plan-summaries","servicePort":80},"path":"/"}]}},{"host":"apexplatform-dev-product-plan-summaries.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"product-plan-summaries","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-01T19:58:31Z
    generation: 1
    labels:
      name: product-plan-summaries-ingress
    name: product-plan-summaries-ingress
    namespace: apex-dev
    resourceVersion: "163363212"
    selfLink: /apis/extensions/v1beta1/namespaces/apex-dev/ingresses/product-plan-summaries-ingress
    uid: c01f912d-265b-11e9-9a91-525400fb923b
  spec:
    rules:
    - host: apexplatform-dev-product-plan-summaries.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: product-plan-summaries
            servicePort: 80
          path: /
    - host: apexplatform-dev-product-plan-summaries.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: product-plan-summaries
            servicePort: 80
          path: /
    - host: apexplatform-dev-product-plan-summaries.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: product-plan-summaries
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"product-summaries-ingress"},"name":"product-summaries-ingress","namespace":"apex-dev"},"spec":{"rules":[{"host":"apexplatform-dev-product-summaries.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"product-summaries","servicePort":80},"path":"/"}]}},{"host":"apexplatform-dev-product-summaries.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"product-summaries","servicePort":80},"path":"/"}]}},{"host":"apexplatform-dev-product-summaries.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"product-summaries","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-11-16T19:06:57Z
    generation: 1
    labels:
      name: product-summaries-ingress
    name: product-summaries-ingress
    namespace: apex-dev
    resourceVersion: "79214833"
    selfLink: /apis/extensions/v1beta1/namespaces/apex-dev/ingresses/product-summaries-ingress
    uid: c9c4079b-e9d2-11e8-981f-5254001f7df6
  spec:
    rules:
    - host: apexplatform-dev-product-summaries.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: product-summaries
            servicePort: 80
          path: /
    - host: apexplatform-dev-product-summaries.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: product-summaries
            servicePort: 80
          path: /
    - host: apexplatform-dev-product-summaries.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: product-summaries
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"apex-eil-ingress-dev"},"name":"apex-eil-ingress-dev","namespace":"apex-eil-dev"},"spec":{"rules":[{"host":"apex-eil-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"apex-eil-service-dev","servicePort":80},"path":"/"}]}},{"host":"apex-eil-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"apex-eil-service-dev","servicePort":80},"path":"/"}]}},{"host":"apex-eil-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"apex-eil-service-dev","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["apex-eil-dev.test.k8s.target.com","apex-eil-dev.ttc-test.k8s.target.com","apex-eil-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-12T09:51:06Z
    generation: 1
    labels:
      name: apex-eil-ingress-dev
    name: apex-eil-ingress-dev
    namespace: apex-eil-dev
    resourceVersion: "49799258"
    selfLink: /apis/extensions/v1beta1/namespaces/apex-eil-dev/ingresses/apex-eil-ingress-dev
    uid: 568d0f26-ce04-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: apex-eil-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: apex-eil-service-dev
            servicePort: 80
          path: /
    - host: apex-eil-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: apex-eil-service-dev
            servicePort: 80
          path: /
    - host: apex-eil-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: apex-eil-service-dev
            servicePort: 80
          path: /
    tls:
    - hosts:
      - apex-eil-dev.test.k8s.target.com
      - apex-eil-dev.ttc-test.k8s.target.com
      - apex-eil-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"apex-eil-ui-ingress"},"name":"apex-eil-ui-ingress","namespace":"apex-eil-dev"},"spec":{"rules":[{"host":"apex-eil-ui-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"apex-eil-ui-service","servicePort":80},"path":"/"}]}},{"host":"apex-eil-ui-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"apex-eil-ui-service","servicePort":80},"path":"/"}]}},{"host":"apex-eil-ui-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"apex-eil-ui-service","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-13T15:06:00Z
    generation: 1
    labels:
      name: apex-eil-ui-ingress
    name: apex-eil-ui-ingress
    namespace: apex-eil-dev
    resourceVersion: "50806812"
    selfLink: /apis/extensions/v1beta1/namespaces/apex-eil-dev/ingresses/apex-eil-ui-ingress
    uid: 7ea064f2-cef9-11e8-ad5b-5254008c264f
  spec:
    rules:
    - host: apex-eil-ui-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: apex-eil-ui-service
            servicePort: 80
          path: /
    - host: apex-eil-ui-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: apex-eil-ui-service
            servicePort: 80
          path: /
    - host: apex-eil-ui-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: apex-eil-ui-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"apex-eil-ingress-stage"},"name":"apex-eil-ingress-stage","namespace":"apex-eil-stage"},"spec":{"rules":[{"host":"apex-eil-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"apex-eil-service-stage","servicePort":80},"path":"/"}]}},{"host":"apex-eil-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"apex-eil-service-stage","servicePort":80},"path":"/"}]}},{"host":"apex-eil-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"apex-eil-service-stage","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["apex-eil-stage.test.k8s.target.com","apex-eil-stage.ttc-test.k8s.target.com","apex-eil-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-17T10:58:25Z
    generation: 1
    labels:
      name: apex-eil-ingress-stage
    name: apex-eil-ingress-stage
    namespace: apex-eil-stage
    resourceVersion: "53805527"
    selfLink: /apis/extensions/v1beta1/namespaces/apex-eil-stage/ingresses/apex-eil-ingress-stage
    uid: 925c4926-d1fb-11e8-ad5b-5254008c264f
  spec:
    rules:
    - host: apex-eil-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: apex-eil-service-stage
            servicePort: 80
          path: /
    - host: apex-eil-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: apex-eil-service-stage
            servicePort: 80
          path: /
    - host: apex-eil-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: apex-eil-service-stage
            servicePort: 80
          path: /
    tls:
    - hosts:
      - apex-eil-stage.test.k8s.target.com
      - apex-eil-stage.ttc-test.k8s.target.com
      - apex-eil-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"assortment-plans-ingress"},"name":"assortment-plans-ingress","namespace":"apex-stage"},"spec":{"rules":[{"host":"apexplatform-stage-plans.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"assortment-plans","servicePort":80},"path":"/"}]}},{"host":"apexplatform-stage-plans.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"assortment-plans","servicePort":80},"path":"/"}]}},{"host":"apexplatform-stage-plans.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"assortment-plans","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-01T16:31:13Z
    generation: 2
    labels:
      name: assortment-plans-ingress
    name: assortment-plans-ingress
    namespace: apex-stage
    resourceVersion: "49225994"
    selfLink: /apis/extensions/v1beta1/namespaces/apex-stage/ingresses/assortment-plans-ingress
    uid: 69a8299a-c597-11e8-90a0-525400d38b79
  spec:
    rules:
    - host: apexplatform-stage-plans.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: assortment-plans
            servicePort: 80
          path: /
    - host: apexplatform-stage-plans.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: assortment-plans
            servicePort: 80
          path: /
    - host: apexplatform-stage-plans.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: assortment-plans
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"events-ingress"},"name":"events-ingress","namespace":"apex-stage"},"spec":{"rules":[{"host":"apexplatform-stage-events.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"events","servicePort":80},"path":"/"}]}},{"host":"apexplatform-stage-events.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"events","servicePort":80},"path":"/"}]}},{"host":"apexplatform-stage-events.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"events","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-01T17:49:23Z
    generation: 2
    labels:
      name: events-ingress
    name: events-ingress
    namespace: apex-stage
    resourceVersion: "49225385"
    selfLink: /apis/extensions/v1beta1/namespaces/apex-stage/ingresses/events-ingress
    uid: 54dd346e-c5a2-11e8-b53b-5254000e56fe
  spec:
    rules:
    - host: apexplatform-stage-events.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: events
            servicePort: 80
          path: /
    - host: apexplatform-stage-events.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: events
            servicePort: 80
          path: /
    - host: apexplatform-stage-events.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: events
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"potential-items-ingress"},"name":"potential-items-ingress","namespace":"apex-stage"},"spec":{"rules":[{"host":"apexplatform-stage-potential-items.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"potential-items","servicePort":80},"path":"/"}]}},{"host":"apexplatform-stage-potential-items.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"potential-items","servicePort":80},"path":"/"}]}},{"host":"apexplatform-stage-potential-items.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"potential-items","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-02T18:37:27Z
    generation: 1
    labels:
      name: potential-items-ingress
    name: potential-items-ingress
    namespace: apex-stage
    resourceVersion: "49225965"
    selfLink: /apis/extensions/v1beta1/namespaces/apex-stage/ingresses/potential-items-ingress
    uid: 36504a43-c672-11e8-b53b-5254000e56fe
  spec:
    rules:
    - host: apexplatform-stage-potential-items.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: potential-items
            servicePort: 80
          path: /
    - host: apexplatform-stage-potential-items.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: potential-items
            servicePort: 80
          path: /
    - host: apexplatform-stage-potential-items.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: potential-items
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"product-plan-summaries-ingress"},"name":"product-plan-summaries-ingress","namespace":"apex-stage"},"spec":{"rules":[{"host":"apexplatform-stage-product-plan-summaries.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"product-plan-summaries","servicePort":80},"path":"/"}]}},{"host":"apexplatform-stage-product-plan-summaries.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"product-plan-summaries","servicePort":80},"path":"/"}]}},{"host":"apexplatform-stage-product-plan-summaries.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"product-plan-summaries","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-04T15:52:51Z
    generation: 1
    labels:
      name: product-plan-summaries-ingress
    name: product-plan-summaries-ingress
    namespace: apex-stage
    resourceVersion: "166411803"
    selfLink: /apis/extensions/v1beta1/namespaces/apex-stage/ingresses/product-plan-summaries-ingress
    uid: ed748d40-2894-11e9-9a91-525400fb923b
  spec:
    rules:
    - host: apexplatform-stage-product-plan-summaries.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: product-plan-summaries
            servicePort: 80
          path: /
    - host: apexplatform-stage-product-plan-summaries.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: product-plan-summaries
            servicePort: 80
          path: /
    - host: apexplatform-stage-product-plan-summaries.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: product-plan-summaries
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"product-summaries-ingress"},"name":"product-summaries-ingress","namespace":"apex-stage"},"spec":{"rules":[{"host":"apexplatform-stage-product-summaries.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"product-summaries","servicePort":80},"path":"/"}]}},{"host":"apexplatform-stage-product-summaries.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"product-summaries","servicePort":80},"path":"/"}]}},{"host":"apexplatform-stage-product-summaries.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"product-summaries","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-12-26T19:12:37Z
    generation: 1
    labels:
      name: product-summaries-ingress
    name: product-summaries-ingress
    namespace: apex-stage
    resourceVersion: "122091129"
    selfLink: /apis/extensions/v1beta1/namespaces/apex-stage/ingresses/product-summaries-ingress
    uid: 34fa5fa2-0942-11e9-9fcc-525400f72165
  spec:
    rules:
    - host: apexplatform-stage-product-summaries.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: product-summaries
            servicePort: 80
          path: /
    - host: apexplatform-stage-product-summaries.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: product-summaries
            servicePort: 80
          path: /
    - host: apexplatform-stage-product-summaries.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: product-summaries
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cache-purges-v1-go-proxy-ingress"},"name":"cache-purges-v1-go-proxy-ingress","namespace":"api-gateway"},"spec":{"rules":[{"host":"cache-purges-v1.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cache-purges-v1-go-proxy-service","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-01-31T21:01:15Z
    generation: 1
    labels:
      name: cache-purges-v1-go-proxy-ingress
    name: cache-purges-v1-go-proxy-ingress
    namespace: api-gateway
    resourceVersion: "162177958"
    selfLink: /apis/extensions/v1beta1/namespaces/api-gateway/ingresses/cache-purges-v1-go-proxy-ingress
    uid: 58e7c341-259b-11e9-8b44-5254006cd09e
  spec:
    rules:
    - host: cache-purges-v1.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cache-purges-v1-go-proxy-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cars-v0-ingress"},"name":"cars-v0-ingress","namespace":"api-gateway"},"spec":{"rules":[{"host":"cars-v0-gp.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cars-v0-service","servicePort":80},"path":"/"}]}},{"host":"cars-v0-gp.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cars-v0-service","servicePort":80},"path":"/"}]}},{"host":"cars-v0.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cars-v0-service","servicePort":81},"path":"/"}]}},{"host":"cars-v0.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cars-v0-service","servicePort":81},"path":"/"}]}},{"host":"cars-v0-manage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cars-v0-service","servicePort":82},"path":"/"}]}},{"host":"cars-v0-manage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cars-v0-service","servicePort":82},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-10T01:40:48Z
    generation: 1
    labels:
      name: cars-v0-ingress
    name: cars-v0-ingress
    namespace: api-gateway
    resourceVersion: "49225917"
    selfLink: /apis/extensions/v1beta1/namespaces/api-gateway/ingresses/cars-v0-ingress
    uid: 8339c0e6-cc2d-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: cars-v0-gp.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cars-v0-service
            servicePort: 80
          path: /
    - host: cars-v0-gp.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cars-v0-service
            servicePort: 80
          path: /
    - host: cars-v0.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cars-v0-service
            servicePort: 81
          path: /
    - host: cars-v0.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cars-v0-service
            servicePort: 81
          path: /
    - host: cars-v0-manage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cars-v0-service
            servicePort: 82
          path: /
    - host: cars-v0-manage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cars-v0-service
            servicePort: 82
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cars-v1-ingress"},"name":"cars-v1-ingress","namespace":"api-gateway"},"spec":{"rules":[{"host":"cars-v1-gp.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cars-v1-service","servicePort":80},"path":"/"}]}},{"host":"cars-v1-gp.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cars-v1-service","servicePort":80},"path":"/"}]}},{"host":"cars-v1.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cars-v1-service","servicePort":81},"path":"/"}]}},{"host":"cars-v1.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cars-v1-service","servicePort":81},"path":"/"}]}},{"host":"cars-v1-manage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cars-v1-service","servicePort":82},"path":"/"}]}},{"host":"cars-v1-manage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cars-v1-service","servicePort":82},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-05T15:40:33Z
    generation: 3
    labels:
      name: cars-v1-ingress
    name: cars-v1-ingress
    namespace: api-gateway
    resourceVersion: "49225499"
    selfLink: /apis/extensions/v1beta1/namespaces/api-gateway/ingresses/cars-v1-ingress
    uid: ff5d213f-c8b4-11e8-b53b-5254000e56fe
  spec:
    rules:
    - host: cars-v1-gp.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cars-v1-service
            servicePort: 80
          path: /
    - host: cars-v1-gp.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cars-v1-service
            servicePort: 80
          path: /
    - host: cars-v1.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cars-v1-service
            servicePort: 81
          path: /
    - host: cars-v1.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cars-v1-service
            servicePort: 81
          path: /
    - host: cars-v1-manage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cars-v1-service
            servicePort: 82
          path: /
    - host: cars-v1-manage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cars-v1-service
            servicePort: 82
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"clippybot-ingress"},"name":"clippybot-ingress","namespace":"api-gateway"},"spec":{"rules":[{"host":"clippybot.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"clippybot-dev-service","servicePort":3000},"path":"/slack_events/v1/clippybot_dev-v1_events"},{"backend":{"serviceName":"clippybot-dev-service","servicePort":3000},"path":"/event_health"},{"backend":{"serviceName":"clippybot-dev-service","servicePort":80},"path":"/metrics"},{"backend":{"serviceName":"clippybot-dev-service","servicePort":80},"path":"/metrics_health"}]}},{"host":"clippybot.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"clippybot-dev-service","servicePort":3000},"path":"/slack_events/v1/clippybot_dev-v1_events"},{"backend":{"serviceName":"clippybot-dev-service","servicePort":3000},"path":"/event_health"},{"backend":{"serviceName":"clippybot-dev-service","servicePort":80},"path":"/metrics"},{"backend":{"serviceName":"clippybot-dev-service","servicePort":80},"path":"/metrics_health"}]}}]}}
    creationTimestamp: 2018-12-01T22:01:24Z
    generation: 3
    labels:
      name: clippybot-ingress
    name: clippybot-ingress
    namespace: api-gateway
    resourceVersion: "97298313"
    selfLink: /apis/extensions/v1beta1/namespaces/api-gateway/ingresses/clippybot-ingress
    uid: a4ee5609-f5b4-11e8-9e69-525400e51df1
  spec:
    rules:
    - host: clippybot.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: clippybot-dev-service
            servicePort: 3000
          path: /slack_events/v1/clippybot_dev-v1_events
        - backend:
            serviceName: clippybot-dev-service
            servicePort: 3000
          path: /event_health
        - backend:
            serviceName: clippybot-dev-service
            servicePort: 80
          path: /metrics
        - backend:
            serviceName: clippybot-dev-service
            servicePort: 80
          path: /metrics_health
    - host: clippybot.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: clippybot-dev-service
            servicePort: 3000
          path: /slack_events/v1/clippybot_dev-v1_events
        - backend:
            serviceName: clippybot-dev-service
            servicePort: 3000
          path: /event_health
        - backend:
            serviceName: clippybot-dev-service
            servicePort: 80
          path: /metrics
        - backend:
            serviceName: clippybot-dev-service
            servicePort: 80
          path: /metrics_health
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"key-validations-v1-ingress"},"name":"key-validations-v1-ingress","namespace":"api-gateway"},"spec":{"rules":[{"host":"key-validations-v1.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"key-validations-v1-service","servicePort":80},"path":"/"}]}},{"host":"key-validations-v1-gp.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"key-validations-v1-service","servicePort":81},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-12T03:01:20Z
    generation: 1
    labels:
      name: key-validations-v1-ingress
    name: key-validations-v1-ingress
    namespace: api-gateway
    resourceVersion: "49611467"
    selfLink: /apis/extensions/v1beta1/namespaces/api-gateway/ingresses/key-validations-v1-ingress
    uid: 189ef1e4-cdcb-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: key-validations-v1.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: key-validations-v1-service
            servicePort: 80
          path: /
    - host: key-validations-v1-gp.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: key-validations-v1-service
            servicePort: 81
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"marvinbot-dev-ingress"},"name":"marvinbot-dev-ingress","namespace":"api-gateway"},"spec":{"rules":[{"host":"marvinbot.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"marvinbot-dev-service","servicePort":3000},"path":"/slack_events/v1/marvinbot_dev-v1_events"},{"backend":{"serviceName":"marvinbot-dev-service","servicePort":3000},"path":"/event_health"},{"backend":{"serviceName":"marvinbot-dev-service","servicePort":80},"path":"/metrics"},{"backend":{"serviceName":"marvinbot-dev-service","servicePort":80},"path":"/metrics_health"}]}},{"host":"marvinbot.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"marvinbot-dev-service","servicePort":3000},"path":"/slack_events/v1/marvinbot_dev-v1_events"},{"backend":{"serviceName":"marvinbot-dev-service","servicePort":3000},"path":"/event_health"},{"backend":{"serviceName":"marvinbot-dev-service","servicePort":80},"path":"/metrics"},{"backend":{"serviceName":"marvinbot-dev-service","servicePort":80},"path":"/metrics_health"}]}}]}}
    creationTimestamp: 2018-12-17T21:05:56Z
    generation: 1
    labels:
      name: marvinbot-dev-ingress
    name: marvinbot-dev-ingress
    namespace: api-gateway
    resourceVersion: "112273482"
    selfLink: /apis/extensions/v1beta1/namespaces/api-gateway/ingresses/marvinbot-dev-ingress
    uid: 8ba4f1d3-023f-11e9-aa7e-5254007ca0e4
  spec:
    rules:
    - host: marvinbot.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: marvinbot-dev-service
            servicePort: 3000
          path: /slack_events/v1/marvinbot_dev-v1_events
        - backend:
            serviceName: marvinbot-dev-service
            servicePort: 3000
          path: /event_health
        - backend:
            serviceName: marvinbot-dev-service
            servicePort: 80
          path: /metrics
        - backend:
            serviceName: marvinbot-dev-service
            servicePort: 80
          path: /metrics_health
    - host: marvinbot.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: marvinbot-dev-service
            servicePort: 3000
          path: /slack_events/v1/marvinbot_dev-v1_events
        - backend:
            serviceName: marvinbot-dev-service
            servicePort: 3000
          path: /event_health
        - backend:
            serviceName: marvinbot-dev-service
            servicePort: 80
          path: /metrics
        - backend:
            serviceName: marvinbot-dev-service
            servicePort: 80
          path: /metrics_health
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"pets-v1-ingress"},"name":"pets-v1-ingress","namespace":"api-gateway"},"spec":{"rules":[{"host":"pets-v1-gp.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pets-v1-service","servicePort":80},"path":"/"}]}},{"host":"pets-v1.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pets-v1-service","servicePort":81},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-16T21:06:25Z
    generation: 1
    labels:
      name: pets-v1-ingress
    name: pets-v1-ingress
    namespace: api-gateway
    resourceVersion: "53352549"
    selfLink: /apis/extensions/v1beta1/namespaces/api-gateway/ingresses/pets-v1-ingress
    uid: 57bc1ce7-d187-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: pets-v1-gp.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pets-v1-service
            servicePort: 80
          path: /
    - host: pets-v1.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pets-v1-service
            servicePort: 81
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"runscope-agent-guest-post-order-services-ingress"},"name":"runscope-agent-guest-post-order-services-ingress","namespace":"api-gateway"},"spec":{"rules":[{"host":"runscope-agent-guest-post-order-services.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"runscope-agent-service","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-04T19:11:43Z
    generation: 1
    labels:
      name: runscope-agent-guest-post-order-services-ingress
    name: runscope-agent-guest-post-order-services-ingress
    namespace: api-gateway
    resourceVersion: "166583692"
    selfLink: /apis/extensions/v1beta1/namespaces/api-gateway/ingresses/runscope-agent-guest-post-order-services-ingress
    uid: b565ef35-28b0-11e9-a621-525400d4de49
  spec:
    rules:
    - host: runscope-agent-guest-post-order-services.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: runscope-agent-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"runscope-agent-ingress"},"name":"runscope-agent-ingress","namespace":"api-gateway"},"spec":{"rules":[{"host":"runscope-agent-target.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"runscope-agent-service","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-04T21:43:26Z
    generation: 1
    labels:
      name: runscope-agent-ingress
    name: runscope-agent-ingress
    namespace: api-gateway
    resourceVersion: "166721464"
    selfLink: /apis/extensions/v1beta1/namespaces/api-gateway/ingresses/runscope-agent-ingress
    uid: e72d05aa-28c5-11e9-9a91-525400fb923b
  spec:
    rules:
    - host: runscope-agent-target.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: runscope-agent-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"runscope-agent-ivy-pricing-ingress"},"name":"runscope-agent-ivy-pricing-ingress","namespace":"api-gateway"},"spec":{"rules":[{"host":"runscope-agent-ivy-pricing.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"runscope-agent-service","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-04T21:46:41Z
    generation: 1
    labels:
      name: runscope-agent-ivy-pricing-ingress
    name: runscope-agent-ivy-pricing-ingress
    namespace: api-gateway
    resourceVersion: "166725125"
    selfLink: /apis/extensions/v1beta1/namespaces/api-gateway/ingresses/runscope-agent-ivy-pricing-ingress
    uid: 5b583cb0-28c6-11e9-8b44-5254006cd09e
  spec:
    rules:
    - host: runscope-agent-ivy-pricing.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: runscope-agent-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"runscope-agent-merch-businesspartner-ingress"},"name":"runscope-agent-merch-businesspartner-ingress","namespace":"api-gateway"},"spec":{"rules":[{"host":"runscope-agent-merch-businesspartner.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"runscope-agent-service","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-04T21:33:27Z
    generation: 1
    labels:
      name: runscope-agent-merch-businesspartner-ingress
    name: runscope-agent-merch-businesspartner-ingress
    namespace: api-gateway
    resourceVersion: "166711724"
    selfLink: /apis/extensions/v1beta1/namespaces/api-gateway/ingresses/runscope-agent-merch-businesspartner-ingress
    uid: 81f53ec2-28c4-11e9-8b44-5254006cd09e
  spec:
    rules:
    - host: runscope-agent-merch-businesspartner.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: runscope-agent-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"runscope-agent-my-performance-mobile-ingress"},"name":"runscope-agent-my-performance-mobile-ingress","namespace":"api-gateway"},"spec":{"rules":[{"host":"runscope-agent-my-performance-mobile.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"runscope-agent-service","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-12-05T21:36:38Z
    generation: 1
    labels:
      name: runscope-agent-my-performance-mobile-ingress
    name: runscope-agent-my-performance-mobile-ingress
    namespace: api-gateway
    resourceVersion: "99317084"
    selfLink: /apis/extensions/v1beta1/namespaces/api-gateway/ingresses/runscope-agent-my-performance-mobile-ingress
    uid: d908db8d-f8d5-11e8-981f-5254001f7df6
  spec:
    rules:
    - host: runscope-agent-my-performance-mobile.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: runscope-agent-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"status-page-events-v1-ingress"},"name":"status-page-events-v1-ingress","namespace":"api-gateway"},"spec":{"rules":[{"host":"status-page-events-v1-app.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"status-page-events-v1-service","servicePort":80},"path":"/"}]}},{"host":"status-page-events-v1-app.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"status-page-events-v1-service","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-01-31T17:46:36Z
    generation: 1
    labels:
      name: status-page-events-v1-ingress
    name: status-page-events-v1-ingress
    namespace: api-gateway
    resourceVersion: "162015853"
    selfLink: /apis/extensions/v1beta1/namespaces/api-gateway/ingresses/status-page-events-v1-ingress
    uid: 27fc9e86-2580-11e9-8b44-5254006cd09e
  spec:
    rules:
    - host: status-page-events-v1-app.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: status-page-events-v1-service
            servicePort: 80
          path: /
    - host: status-page-events-v1-app.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: status-page-events-v1-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-31T18:17:23Z
    generation: 1
    labels:
      app: autobahn-corona-item-sdm-v1-consumer
    name: autobahn-corona-item-sdm-v1-consumer
    namespace: autobahn
    resourceVersion: "65296486"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-corona-item-sdm-v1-consumer
    uid: 36e11a22-dd39-11e8-80ff-5254001f7df6
  spec:
    rules:
    - host: autobahn-corona-item-sdm-v1-consumer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-corona-item-sdm-v1-consumer
            servicePort: 5050
          path: /
    - host: autobahn-corona-item-sdm-v1-consumer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-corona-item-sdm-v1-consumer
            servicePort: 5050
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-02-26T05:48:47Z
    generation: 1
    labels:
      app: autobahn-corona-item-sdm-v1-explorer
    name: autobahn-corona-item-sdm-v1-explorer
    namespace: autobahn
    resourceVersion: "190455021"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-corona-item-sdm-v1-explorer
    uid: 2f34d167-398a-11e9-a2e8-52540055f679
  spec:
    rules:
    - host: autobahn-corona-item-sdm-v1-explorer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-corona-item-sdm-v1-explorer
            servicePort: 8080
          path: /
    - host: autobahn-corona-item-sdm-v1-explorer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-corona-item-sdm-v1-explorer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-31T16:29:14Z
    generation: 1
    labels:
      app: autobahn-corona-item-sdm-v1-producer
    name: autobahn-corona-item-sdm-v1-producer
    namespace: autobahn
    resourceVersion: "65223401"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-corona-item-sdm-v1-producer
    uid: 1afb39ef-dd2a-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: autobahn-corona-item-sdm-v1-producer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-corona-item-sdm-v1-producer
            servicePort: 8080
          path: /
    - host: autobahn-corona-item-sdm-v1-producer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-corona-item-sdm-v1-producer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"autobahn-deployer"},"name":"autobahn-deployer","namespace":"autobahn"},"spec":{"rules":[{"host":"autobahn-deployer.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"autobahn-deployer","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-04T21:05:49Z
    generation: 3
    labels:
      app: autobahn-deployer
    name: autobahn-deployer
    namespace: autobahn
    resourceVersion: "49225462"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-deployer
    uid: 45547d49-c819-11e8-9f4c-525400adf9ce
  spec:
    rules:
    - host: autobahn-deployer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-deployer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-18T22:19:56Z
    generation: 1
    labels:
      app: autobahn-ewic-apl-v1-consumer
    name: autobahn-ewic-apl-v1-consumer
    namespace: autobahn
    resourceVersion: "212523601"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-ewic-apl-v1-consumer
    uid: f639a50b-49cb-11e9-8b8c-525400102fac
  spec:
    rules:
    - host: autobahn-ewic-apl-v1-consumer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-ewic-apl-v1-consumer
            servicePort: 5050
          path: /
    - host: autobahn-ewic-apl-v1-consumer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-ewic-apl-v1-consumer
            servicePort: 5050
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-11-26T17:04:20Z
    generation: 1
    labels:
      app: autobahn-first-mile-domestic-transit-times-v2-consumer
    name: autobahn-first-mile-domestic-transit-times-v2-consumer
    namespace: autobahn
    resourceVersion: "89485754"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-first-mile-domestic-transit-times-v2-consumer
    uid: 50c5595d-f19d-11e8-9e69-525400e51df1
  spec:
    rules:
    - host: autobahn-first-mile-domestic-transit-times-v2-consumer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-first-mile-domestic-transit-times-v2-consumer
            servicePort: 5050
          path: /
    - host: autobahn-first-mile-domestic-transit-times-v2-consumer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-first-mile-domestic-transit-times-v2-consumer
            servicePort: 5050
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-14T15:41:34Z
    generation: 1
    labels:
      app: autobahn-first-mile-domestic-transit-times-v2-producer
    name: autobahn-first-mile-domestic-transit-times-v2-producer
    namespace: autobahn
    resourceVersion: "208250867"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-first-mile-domestic-transit-times-v2-producer
    uid: a56e7a95-466f-11e9-ad0c-5254005cae79
  spec:
    rules:
    - host: autobahn-first-mile-domestic-transit-times-v2-producer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-first-mile-domestic-transit-times-v2-producer
            servicePort: 8080
          path: /
    - host: autobahn-first-mile-domestic-transit-times-v2-producer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-first-mile-domestic-transit-times-v2-producer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/rewrite-target: /
    creationTimestamp: 2018-10-19T13:10:20Z
    generation: 1
    labels:
      app: autobahn-gateway-api-keys-v2-consumer
    name: autobahn-gateway-api-keys-v2-consumer
    namespace: autobahn
    resourceVersion: "55422801"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-gateway-api-keys-v2-consumer
    uid: 55001779-d3a0-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: autobahn-gateway-api-keys-v2-consumer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-gateway-api-keys-v2-consumer
            servicePort: 5050
          path: /api_keys/v2
    - host: autobahn-gateway-api-keys-v2-consumer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-gateway-api-keys-v2-consumer
            servicePort: 5050
          path: /api_keys/v2
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/rewrite-target: /
    creationTimestamp: 2019-03-08T01:08:23Z
    generation: 1
    labels:
      app: autobahn-gateway-api-specs-v1-consumer
    name: autobahn-gateway-api-specs-v1-consumer
    namespace: autobahn
    resourceVersion: "201637425"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-gateway-api-specs-v1-consumer
    uid: abaa5e56-413e-11e9-9ed7-5254006b625b
  spec:
    rules:
    - host: autobahn-gateway-api-specs-v1-consumer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-gateway-api-specs-v1-consumer
            servicePort: 5050
          path: /api_specs/v1
    - host: autobahn-gateway-api-specs-v1-consumer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-gateway-api-specs-v1-consumer
            servicePort: 5050
          path: /api_specs/v1
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-08T01:19:15Z
    generation: 1
    labels:
      app: autobahn-gateway-api-specs-v1-explorer
    name: autobahn-gateway-api-specs-v1-explorer
    namespace: autobahn
    resourceVersion: "201645312"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-gateway-api-specs-v1-explorer
    uid: 3011686d-4140-11e9-ad0c-5254005cae79
  spec:
    rules:
    - host: autobahn-gateway-api-specs-v1-explorer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-gateway-api-specs-v1-explorer
            servicePort: 8080
          path: /
    - host: autobahn-gateway-api-specs-v1-explorer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-gateway-api-specs-v1-explorer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-11-29T04:12:49Z
    generation: 1
    labels:
      app: autobahn-guest-rating-v1-consumer
    name: autobahn-guest-rating-v1-consumer
    namespace: autobahn
    resourceVersion: "92067818"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-guest-rating-v1-consumer
    uid: 0869d019-f38d-11e8-ad5a-525400a9bf14
  spec:
    rules:
    - host: autobahn-guest-rating-v1-consumer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-guest-rating-v1-consumer
            servicePort: 5050
          path: /
    - host: autobahn-guest-rating-v1-consumer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-guest-rating-v1-consumer
            servicePort: 5050
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-11-29T04:10:58Z
    generation: 1
    labels:
      app: autobahn-guest-rating-v1-producer
    name: autobahn-guest-rating-v1-producer
    namespace: autobahn
    resourceVersion: "92066176"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-guest-rating-v1-producer
    uid: c665936a-f38c-11e8-ad5a-525400a9bf14
  spec:
    rules:
    - host: autobahn-guest-rating-v1-producer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-guest-rating-v1-producer
            servicePort: 8080
          path: /
    - host: autobahn-guest-rating-v1-producer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-guest-rating-v1-producer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-12-13T19:16:41Z
    generation: 1
    labels:
      app: autobahn-iceberg-kubernetes-v1-consumer
    name: autobahn-iceberg-kubernetes-v1-consumer
    namespace: autobahn
    resourceVersion: "107834507"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-iceberg-kubernetes-v1-consumer
    uid: 9f41d6cc-ff0b-11e8-981f-5254001f7df6
  spec:
    rules:
    - host: autobahn-iceberg-kubernetes-v1-consumer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-iceberg-kubernetes-v1-consumer
            servicePort: 5050
          path: /
    - host: autobahn-iceberg-kubernetes-v1-consumer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-iceberg-kubernetes-v1-consumer
            servicePort: 5050
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-12-11T15:24:24Z
    generation: 1
    labels:
      app: autobahn-iceberg-kubernetes-v1-producer
    name: autobahn-iceberg-kubernetes-v1-producer
    namespace: autobahn
    resourceVersion: "105464003"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-iceberg-kubernetes-v1-producer
    uid: d76d80aa-fd58-11e8-9e69-525400e51df1
  spec:
    rules:
    - host: autobahn-iceberg-kubernetes-v1-producer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-iceberg-kubernetes-v1-producer
            servicePort: 8080
          path: /
    - host: autobahn-iceberg-kubernetes-v1-producer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-iceberg-kubernetes-v1-producer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-11-29T04:00:24Z
    generation: 1
    labels:
      app: autobahn-iceberg-openstack-v1-consumer
    name: autobahn-iceberg-openstack-v1-consumer
    namespace: autobahn
    resourceVersion: "92057806"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-iceberg-openstack-v1-consumer
    uid: 4c5e587d-f38b-11e8-981f-5254001f7df6
  spec:
    rules:
    - host: autobahn-iceberg-openstack-v1-consumer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-iceberg-openstack-v1-consumer
            servicePort: 5050
          path: /
    - host: autobahn-iceberg-openstack-v1-consumer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-iceberg-openstack-v1-consumer
            servicePort: 5050
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-11-29T03:52:22Z
    generation: 1
    labels:
      app: autobahn-iceberg-openstack-v1-explorer
    name: autobahn-iceberg-openstack-v1-explorer
    namespace: autobahn
    resourceVersion: "92051418"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-iceberg-openstack-v1-explorer
    uid: 2d564ae5-f38a-11e8-ad5a-525400a9bf14
  spec:
    rules:
    - host: autobahn-iceberg-openstack-v1-explorer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-iceberg-openstack-v1-explorer
            servicePort: 8080
          path: /
    - host: autobahn-iceberg-openstack-v1-explorer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-iceberg-openstack-v1-explorer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-11-27T23:43:56Z
    generation: 1
    labels:
      app: autobahn-iceberg-openstack-v1-producer
    name: autobahn-iceberg-openstack-v1-producer
    namespace: autobahn
    resourceVersion: "90801900"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-iceberg-openstack-v1-producer
    uid: 4dee03db-f29e-11e8-981f-5254001f7df6
  spec:
    rules:
    - host: autobahn-iceberg-openstack-v1-producer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-iceberg-openstack-v1-producer
            servicePort: 8080
          path: /
    - host: autobahn-iceberg-openstack-v1-producer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-iceberg-openstack-v1-producer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-22T20:28:01Z
    generation: 1
    labels:
      app: autobahn-iceberg-tap-v1-consumer
    name: autobahn-iceberg-tap-v1-consumer
    namespace: autobahn
    resourceVersion: "57909730"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-iceberg-tap-v1-consumer
    uid: f8b02e07-d638-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: autobahn-iceberg-tap-v1-consumer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-iceberg-tap-v1-consumer
            servicePort: 5050
          path: /
    - host: autobahn-iceberg-tap-v1-consumer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-iceberg-tap-v1-consumer
            servicePort: 5050
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-11-29T03:57:10Z
    generation: 1
    labels:
      app: autobahn-iceberg-tap-v1-explorer
    name: autobahn-iceberg-tap-v1-explorer
    namespace: autobahn
    resourceVersion: "92055177"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-iceberg-tap-v1-explorer
    uid: d9266160-f38a-11e8-981f-5254001f7df6
  spec:
    rules:
    - host: autobahn-iceberg-tap-v1-explorer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-iceberg-tap-v1-explorer
            servicePort: 8080
          path: /
    - host: autobahn-iceberg-tap-v1-explorer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-iceberg-tap-v1-explorer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-11-27T23:47:37Z
    generation: 1
    labels:
      app: autobahn-iceberg-tap-v1-producer
    name: autobahn-iceberg-tap-v1-producer
    namespace: autobahn
    resourceVersion: "90804157"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-iceberg-tap-v1-producer
    uid: d21d87b1-f29e-11e8-981f-5254001f7df6
  spec:
    rules:
    - host: autobahn-iceberg-tap-v1-producer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-iceberg-tap-v1-producer
            servicePort: 8080
          path: /
    - host: autobahn-iceberg-tap-v1-producer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-iceberg-tap-v1-producer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-31T15:15:56Z
    generation: 1
    labels:
      app: autobahn-im-sublocations-v1-consumer
    name: autobahn-im-sublocations-v1-consumer
    namespace: autobahn
    resourceVersion: "65174223"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-im-sublocations-v1-consumer
    uid: dd765db5-dd1f-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: autobahn-im-sublocations-v1-consumer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-im-sublocations-v1-consumer
            servicePort: 5050
          path: /
    - host: autobahn-im-sublocations-v1-consumer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-im-sublocations-v1-consumer
            servicePort: 5050
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-31T15:41:00Z
    generation: 1
    labels:
      app: autobahn-im-sublocations-v1-explorer
    name: autobahn-im-sublocations-v1-explorer
    namespace: autobahn
    resourceVersion: "65190295"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-im-sublocations-v1-explorer
    uid: 5dad8b37-dd23-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: autobahn-im-sublocations-v1-explorer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-im-sublocations-v1-explorer
            servicePort: 8080
          path: /
    - host: autobahn-im-sublocations-v1-explorer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-im-sublocations-v1-explorer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-30T18:32:12Z
    generation: 1
    labels:
      app: autobahn-im-sublocations-v1-producer
    name: autobahn-im-sublocations-v1-producer
    namespace: autobahn
    resourceVersion: "64405023"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-im-sublocations-v1-producer
    uid: 1df8f01e-dc72-11e8-80ff-5254001f7df6
  spec:
    rules:
    - host: autobahn-im-sublocations-v1-producer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-im-sublocations-v1-producer
            servicePort: 8080
          path: /
    - host: autobahn-im-sublocations-v1-producer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-im-sublocations-v1-producer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-02-28T16:46:33Z
    generation: 1
    labels:
      app: autobahn-inr-reactive-pull-v1-consumer
    name: autobahn-inr-reactive-pull-v1-consumer
    namespace: autobahn
    resourceVersion: "193982994"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-inr-reactive-pull-v1-consumer
    uid: 67c87a6d-3b78-11e9-9b40-525400e10f08
  spec:
    rules:
    - host: autobahn-inr-reactive-pull-v1-consumer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-inr-reactive-pull-v1-consumer
            servicePort: 5050
          path: /
    - host: autobahn-inr-reactive-pull-v1-consumer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-inr-reactive-pull-v1-consumer
            servicePort: 5050
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-02-28T16:46:51Z
    generation: 1
    labels:
      app: autobahn-inr-reactive-pull-v1-explorer
    name: autobahn-inr-reactive-pull-v1-explorer
    namespace: autobahn
    resourceVersion: "193982993"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-inr-reactive-pull-v1-explorer
    uid: 72b44bf4-3b78-11e9-9b40-525400e10f08
  spec:
    rules:
    - host: autobahn-inr-reactive-pull-v1-explorer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-inr-reactive-pull-v1-explorer
            servicePort: 8080
          path: /
    - host: autobahn-inr-reactive-pull-v1-explorer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-inr-reactive-pull-v1-explorer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-02-28T16:44:08Z
    generation: 1
    labels:
      app: autobahn-inr-reactive-pull-v1-producer
    name: autobahn-inr-reactive-pull-v1-producer
    namespace: autobahn
    resourceVersion: "193981125"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-inr-reactive-pull-v1-producer
    uid: 116fbee0-3b78-11e9-9b40-525400e10f08
  spec:
    rules:
    - host: autobahn-inr-reactive-pull-v1-producer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-inr-reactive-pull-v1-producer
            servicePort: 8080
          path: /
    - host: autobahn-inr-reactive-pull-v1-producer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-inr-reactive-pull-v1-producer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-11-14T20:33:36Z
    generation: 1
    labels:
      app: autobahn-item-location-compliance-v1-consumer
    name: autobahn-item-location-compliance-v1-consumer
    namespace: autobahn
    resourceVersion: "77200441"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-item-location-compliance-v1-consumer
    uid: 902d937b-e84c-11e8-ad5a-525400a9bf14
  spec:
    rules:
    - host: autobahn-item-location-compliance-v1-consumer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-item-location-compliance-v1-consumer
            servicePort: 5050
          path: /
    - host: autobahn-item-location-compliance-v1-consumer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-item-location-compliance-v1-consumer
            servicePort: 5050
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-11-14T20:34:15Z
    generation: 1
    labels:
      app: autobahn-item-location-compliance-v1-explorer
    name: autobahn-item-location-compliance-v1-explorer
    namespace: autobahn
    resourceVersion: "77201154"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-item-location-compliance-v1-explorer
    uid: a7498af2-e84c-11e8-ad5a-525400a9bf14
  spec:
    rules:
    - host: autobahn-item-location-compliance-v1-explorer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-item-location-compliance-v1-explorer
            servicePort: 8080
          path: /
    - host: autobahn-item-location-compliance-v1-explorer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-item-location-compliance-v1-explorer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-06T19:32:13Z
    generation: 1
    labels:
      app: autobahn-item-location-compliance-v1-producer
    name: autobahn-item-location-compliance-v1-producer
    namespace: autobahn
    resourceVersion: "200297276"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-item-location-compliance-v1-producer
    uid: 8aee4b8a-4046-11e9-9a69-52540002191d
  spec:
    rules:
    - host: autobahn-item-location-compliance-v1-producer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-item-location-compliance-v1-producer
            servicePort: 8080
          path: /
    - host: autobahn-item-location-compliance-v1-producer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-item-location-compliance-v1-producer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-09T05:07:54Z
    generation: 2
    labels:
      app: autobahn-item-location-placements-v2-consumer
    name: autobahn-item-location-placements-v2-consumer
    namespace: autobahn
    resourceVersion: "146813052"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-item-location-placements-v2-consumer
    uid: 47680fc0-cb81-11e8-9369-525400a3d3a1
  spec:
    rules:
    - host: autobahn-item-location-placements-v2-consumer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-item-location-placements-v2-consumer
            servicePort: 5050
          path: /
    - host: autobahn-item-location-placements-v2-consumer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-item-location-placements-v2-consumer
            servicePort: 5050
          path: /
    - host: autobahn-item-location-placements-v2-consumerlive.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-item-location-placements-v2-consumerlive
            servicePort: 8080
          path: /
    - host: autobahn-item-location-placements-v2-consumerlive.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-item-location-placements-v2-consumerlive
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-08T18:14:17Z
    generation: 1
    labels:
      app: autobahn-item-location-placements-v2-producer
    name: autobahn-item-location-placements-v2-producer
    namespace: autobahn
    resourceVersion: "49225615"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-item-location-placements-v2-producer
    uid: f872bafe-cb25-11e8-9f4c-525400adf9ce
  spec:
    rules:
    - host: autobahn-item-location-placements-v2-producer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-item-location-placements-v2-producer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"autobahn-kubernetes-api-deployer"},"name":"autobahn-kubernetes-api-deployer","namespace":"autobahn"},"spec":{"rules":[{"host":"autobahn-kubernetes-api-deployer.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"autobahn-kubernetes-api-deployer","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2018-09-24T21:52:37Z
    generation: 2
    labels:
      app: autobahn-kubernetes-api-deployer
    name: autobahn-kubernetes-api-deployer
    namespace: autobahn
    resourceVersion: "49225394"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-kubernetes-api-deployer
    uid: 26ec7e71-c044-11e8-a79d-525400524761
  spec:
    rules:
    - host: autobahn-kubernetes-api-deployer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-kubernetes-api-deployer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-02-25T19:12:23Z
    generation: 1
    labels:
      app: autobahn-price-metadata-v1-consumer
    name: autobahn-price-metadata-v1-consumer
    namespace: autobahn
    resourceVersion: "189977792"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-price-metadata-v1-consumer
    uid: 482b7000-3931-11e9-a2e8-52540055f679
  spec:
    rules:
    - host: autobahn-price-metadata-v1-consumer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-price-metadata-v1-consumer
            servicePort: 5050
          path: /
    - host: autobahn-price-metadata-v1-consumer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-price-metadata-v1-consumer
            servicePort: 5050
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-02-25T19:12:31Z
    generation: 1
    labels:
      app: autobahn-price-metadata-v1-explorer
    name: autobahn-price-metadata-v1-explorer
    namespace: autobahn
    resourceVersion: "189977791"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-price-metadata-v1-explorer
    uid: 4c9bb9a0-3931-11e9-a2e8-52540055f679
  spec:
    rules:
    - host: autobahn-price-metadata-v1-explorer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-price-metadata-v1-explorer
            servicePort: 8080
          path: /
    - host: autobahn-price-metadata-v1-explorer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-price-metadata-v1-explorer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-02-25T19:01:54Z
    generation: 1
    labels:
      app: autobahn-price-metadata-v1-producer
    name: autobahn-price-metadata-v1-producer
    namespace: autobahn
    resourceVersion: "189969559"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-price-metadata-v1-producer
    uid: d0e248bb-392f-11e9-a157-52540070e292
  spec:
    rules:
    - host: autobahn-price-metadata-v1-producer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-price-metadata-v1-producer
            servicePort: 8080
          path: /
    - host: autobahn-price-metadata-v1-producer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-price-metadata-v1-producer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"autobahn-registry-stream"},"name":"autobahn-registry-stream","namespace":"autobahn"},"spec":{"rules":[{"host":"autobahn-registry-stream.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"autobahn-registry-stream","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-27T20:52:20Z
    generation: 1
    labels:
      app: autobahn-registry-stream
    name: autobahn-registry-stream
    namespace: autobahn
    resourceVersion: "193045704"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-registry-stream
    uid: 9340cd9c-3ad1-11e9-b9c9-52540055f679
  spec:
    rules:
    - host: autobahn-registry-stream.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-registry-stream
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-29T16:10:57Z
    generation: 1
    labels:
      app: autobahn-returns-abuse-detection-v1-consumer
    name: autobahn-returns-abuse-detection-v1-consumer
    namespace: autobahn
    resourceVersion: "63424530"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-returns-abuse-detection-v1-consumer
    uid: 38203b2a-db95-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: autobahn-returns-abuse-detection-v1-consumer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-returns-abuse-detection-v1-consumer
            servicePort: 5050
          path: /
    - host: autobahn-returns-abuse-detection-v1-consumer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-returns-abuse-detection-v1-consumer
            servicePort: 5050
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-11T13:35:51Z
    generation: 1
    labels:
      app: autobahn-returns-abuse-detection-v1-explorer
    name: autobahn-returns-abuse-detection-v1-explorer
    namespace: autobahn
    resourceVersion: "49225324"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-returns-abuse-detection-v1-explorer
    uid: 920d4731-cd5a-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: autobahn-returns-abuse-detection-v1-explorer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-returns-abuse-detection-v1-explorer
            servicePort: 8080
          path: /
    - host: autobahn-returns-abuse-detection-v1-explorer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-returns-abuse-detection-v1-explorer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-11-29T03:45:49Z
    generation: 1
    labels:
      app: autobahn-returns-abuse-detection-v1-producer
    name: autobahn-returns-abuse-detection-v1-producer
    namespace: autobahn
    resourceVersion: "92046940"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-returns-abuse-detection-v1-producer
    uid: 42ec8990-f389-11e8-9e69-525400e51df1
  spec:
    rules:
    - host: autobahn-returns-abuse-detection-v1-producer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-returns-abuse-detection-v1-producer
            servicePort: 8080
          path: /
    - host: autobahn-returns-abuse-detection-v1-producer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-returns-abuse-detection-v1-producer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-01-11T18:16:47Z
    generation: 1
    labels:
      app: autobahn-salesfloor-presentation-units-v3-consumer
    name: autobahn-salesfloor-presentation-units-v3-consumer
    namespace: autobahn
    resourceVersion: "139640174"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-salesfloor-presentation-units-v3-consumer
    uid: 0f31c29c-15cd-11e9-a085-525400e7b4ef
  spec:
    rules:
    - host: autobahn-salesfloor-presentation-units-v3-consumer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-salesfloor-presentation-units-v3-consumer
            servicePort: 5050
          path: /
    - host: autobahn-salesfloor-presentation-units-v3-consumer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-salesfloor-presentation-units-v3-consumer
            servicePort: 5050
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-23T21:24:04Z
    generation: 1
    labels:
      app: autobahn-salesfloor-presentation-units-v3-producer
    name: autobahn-salesfloor-presentation-units-v3-producer
    namespace: autobahn
    resourceVersion: "58731516"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-salesfloor-presentation-units-v3-producer
    uid: f7934b75-d709-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: autobahn-salesfloor-presentation-units-v3-producer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-salesfloor-presentation-units-v3-producer
            servicePort: 8080
          path: /
    - host: autobahn-salesfloor-presentation-units-v3-producer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-salesfloor-presentation-units-v3-producer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-11-28T15:35:19Z
    generation: 1
    labels:
      app: autobahn-sample-avro-app-v3-consumer
    name: autobahn-sample-avro-app-v3-consumer
    namespace: autobahn
    resourceVersion: "91486566"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-sample-avro-app-v3-consumer
    uid: 36722c25-f323-11e8-981f-5254001f7df6
  spec:
    rules:
    - host: autobahn-sample-avro-app-v3-consumer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-sample-avro-app-v3-consumer
            servicePort: 5050
          path: /
    - host: autobahn-sample-avro-app-v3-consumer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-sample-avro-app-v3-consumer
            servicePort: 5050
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-11-20T22:35:33Z
    generation: 1
    labels:
      app: autobahn-sample-avro-app-v3-producer
    name: autobahn-sample-avro-app-v3-producer
    namespace: autobahn
    resourceVersion: "83530429"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-sample-avro-app-v3-producer
    uid: 97f9c7b9-ed14-11e8-9e69-525400e51df1
  spec:
    rules:
    - host: autobahn-sample-avro-app-v3-producer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-sample-avro-app-v3-producer
            servicePort: 8080
          path: /
    - host: autobahn-sample-avro-app-v3-producer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-sample-avro-app-v3-producer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"autobahn-trafficcop"},"name":"autobahn-trafficcop","namespace":"autobahn"},"spec":{"rules":[{"host":"autobahn-trafficcop.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"autobahn-trafficcop","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2019-03-21T16:26:04Z
    generation: 1
    labels:
      app: autobahn-trafficcop
    name: autobahn-trafficcop
    namespace: autobahn
    resourceVersion: "215303438"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-trafficcop
    uid: 062fcbb1-4bf6-11e9-86b4-525400993427
  spec:
    rules:
    - host: autobahn-trafficcop.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-trafficcop
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-11-29T04:42:37Z
    generation: 1
    labels:
      app: autobahn-vendors-v2-producer
    name: autobahn-vendors-v2-producer
    namespace: autobahn
    resourceVersion: "92089632"
    selfLink: /apis/extensions/v1beta1/namespaces/autobahn/ingresses/autobahn-vendors-v2-producer
    uid: 327e7e85-f391-11e8-981f-5254001f7df6
  spec:
    rules:
    - host: autobahn-vendors-v2-producer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-vendors-v2-producer
            servicePort: 8080
          path: /
    - host: autobahn-vendors-v2-producer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autobahn-vendors-v2-producer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cachet"},"name":"cachet","namespace":"bifrost"},"spec":{"rules":[{"host":"bifrost-status.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cachet","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["bifrost-status.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-19T18:20:37Z
    generation: 1
    labels:
      name: cachet
    name: cachet
    namespace: bifrost
    resourceVersion: "55595074"
    selfLink: /apis/extensions/v1beta1/namespaces/bifrost/ingresses/cachet
    uid: ad7b3cb8-d3cb-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: bifrost-status.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cachet
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - bifrost-status.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"ingest-web-ingress"},"name":"ingest-web-ingress","namespace":"bifrost"},"spec":{"rules":[{"host":"ingest-web-memento.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ingest-web-service","servicePort":80},"path":"/"}]}},{"host":"ingest-web-memento.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ingest-web-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["ingest-web-memento.test.k8s.target.com","ingest-web-memento.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-17T21:53:41Z
    generation: 2
    labels:
      name: ingest-web-ingress
    name: ingest-web-ingress
    namespace: bifrost
    resourceVersion: "49225569"
    selfLink: /apis/extensions/v1beta1/namespaces/bifrost/ingresses/ingest-web-ingress
    uid: 0166cfde-a268-11e8-a2fd-525400b06b0f
  spec:
    rules:
    - host: ingest-web-memento.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ingest-web-service
            servicePort: 80
          path: /
    - host: ingest-web-memento.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ingest-web-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - ingest-web-memento.test.k8s.target.com
      - ingest-web-memento.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"memento-ingest-ingress"},"name":"memento-ingest-ingress","namespace":"bifrost"},"spec":{"rules":[{"host":"collector.mementwo.test.target.com","http":{"paths":[{"backend":{"serviceName":"memento-ingest-go-proxy-service","servicePort":8888},"path":"/"}]}},{"host":"go-proxy-memento-ingest.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"memento-ingest-go-proxy-service","servicePort":8888},"path":"/"}]}},{"host":"go-proxy-memento-ingest.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"memento-ingest-go-proxy-service","servicePort":8888},"path":"/"}]}},{"host":"go-proxy-memento-ingest.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"memento-ingest-go-proxy-service","servicePort":8888},"path":"/"}]}},{"host":"memento-ingest.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"memento-ingest-service","servicePort":9999},"path":"/"}]}},{"host":"memento-ingest.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"memento-ingest-service","servicePort":9999},"path":"/"}]}},{"host":"memento-ingest.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"memento-ingest-service","servicePort":9999},"path":"/"}]}}],"tls":[{"hosts":["collector.mementwo.test.target.com","go-proxy-memento-ingest.ttc-test.k8s.target.com","go-proxy-memento-ingest.tte-test.k8s.target.com","go-proxy-memento-ingest.test.k8s.target.com","memento-ingest.ttc-test.k8s.target.com","memento-ingest.tte-test.k8s.target.com","memento-ingest.test.k8s.target.com"],"secretName":"vanitysecret"}]}}
    creationTimestamp: 2018-08-20T19:58:23Z
    generation: 3
    labels:
      name: memento-ingest-ingress
    name: memento-ingest-ingress
    namespace: bifrost
    resourceVersion: "49225818"
    selfLink: /apis/extensions/v1beta1/namespaces/bifrost/ingresses/memento-ingest-ingress
    uid: 65182286-a4b3-11e8-bd18-525400524761
  spec:
    rules:
    - host: collector.mementwo.test.target.com
      http:
        paths:
        - backend:
            serviceName: memento-ingest-go-proxy-service
            servicePort: 8888
          path: /
    - host: go-proxy-memento-ingest.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: memento-ingest-go-proxy-service
            servicePort: 8888
          path: /
    - host: go-proxy-memento-ingest.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: memento-ingest-go-proxy-service
            servicePort: 8888
          path: /
    - host: go-proxy-memento-ingest.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: memento-ingest-go-proxy-service
            servicePort: 8888
          path: /
    - host: memento-ingest.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: memento-ingest-service
            servicePort: 9999
          path: /
    - host: memento-ingest.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: memento-ingest-service
            servicePort: 9999
          path: /
    - host: memento-ingest.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: memento-ingest-service
            servicePort: 9999
          path: /
    tls:
    - hosts:
      - collector.mementwo.test.target.com
      - go-proxy-memento-ingest.ttc-test.k8s.target.com
      - go-proxy-memento-ingest.tte-test.k8s.target.com
      - go-proxy-memento-ingest.test.k8s.target.com
      - memento-ingest.ttc-test.k8s.target.com
      - memento-ingest.tte-test.k8s.target.com
      - memento-ingest.test.k8s.target.com
      secretName: vanitysecret
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"hello-cloud-ingress"},"name":"hello-cloud-ingress","namespace":"bigoli-migration-test"},"spec":{"rules":[{"host":"hello-cloud-aneli.us-central-1.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"hello-cloud-service","servicePort":80},"path":"/"}]}},{"host":"hello-cloud-aneli.us-central-1ttc.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"hello-cloud-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["hello-cloud-aneli.us-central-1.test.core.k8s.tgt","hello-cloud-aneli.us-central-1ttc.test.core.k8s.tgt"],"secretName":"vanitysecret"}]}}
    creationTimestamp: 2018-07-30T23:06:54Z
    generation: 2
    labels:
      name: hello-cloud-ingress
    name: hello-cloud-ingress
    namespace: bigoli-migration-test
    resourceVersion: "49225617"
    selfLink: /apis/extensions/v1beta1/namespaces/bigoli-migration-test/ingresses/hello-cloud-ingress
    uid: 403276db-944d-11e8-962d-525400b93a8e
  spec:
    rules:
    - host: hello-cloud-aneli.us-central-1.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: hello-cloud-service
            servicePort: 80
          path: /
    - host: hello-cloud-aneli.us-central-1ttc.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: hello-cloud-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - hello-cloud-aneli.us-central-1.test.core.k8s.tgt
      - hello-cloud-aneli.us-central-1ttc.test.core.k8s.tgt
      secretName: vanitysecret
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-12-06T22:44:59Z
    generation: 1
    name: cannonball-data-access-ingress
    namespace: cannonball
    resourceVersion: "100465330"
    selfLink: /apis/extensions/v1beta1/namespaces/cannonball/ingresses/cannonball-data-access-ingress
    uid: 8f8460e7-f9a8-11e8-ad5a-525400a9bf14
  spec:
    rules:
    - host: cannonball-data-access.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: test-data-access-cannonball-data-access
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cannonball-data-access.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-12-06T22:45:00Z
    generation: 1
    name: cannonball-data-access-single-region-ingress
    namespace: cannonball
    resourceVersion: "100465331"
    selfLink: /apis/extensions/v1beta1/namespaces/cannonball/ingresses/cannonball-data-access-single-region-ingress
    uid: 9005d599-f9a8-11e8-ad5a-525400a9bf14
  spec:
    rules:
    - host: cannonball-data-access.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: test-data-access-cannonball-data-access
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cannonball-data-access.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-18T21:23:17Z
    generation: 1
    name: cannonball-guest-api-ingress-gp
    namespace: cannonball
    resourceVersion: "212483873"
    selfLink: /apis/extensions/v1beta1/namespaces/cannonball/ingresses/cannonball-guest-api-ingress-gp
    uid: 0c2e5527-49c4-11e9-8b8c-525400102fac
  spec:
    rules:
    - host: cannonball-guest-api-gp.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: test-cannonball-guest-api-cannonball-guest-api-gp
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cannonball-guest-api-gp.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-18T21:23:16Z
    generation: 1
    name: cannonball-guest-api-single-region-ingress-gp
    namespace: cannonball
    resourceVersion: "212483872"
    selfLink: /apis/extensions/v1beta1/namespaces/cannonball/ingresses/cannonball-guest-api-single-region-ingress-gp
    uid: 0b50a1d2-49c4-11e9-8b8c-525400102fac
  spec:
    rules:
    - host: cannonball-guest-api-gp.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: test-cannonball-guest-api-cannonball-guest-api-gp
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cannonball-guest-api-gp.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-18T21:23:19Z
    generation: 1
    name: cannonballguestapi-ingress
    namespace: cannonball
    resourceVersion: "212483874"
    selfLink: /apis/extensions/v1beta1/namespaces/cannonball/ingresses/cannonballguestapi-ingress
    uid: 0d40a892-49c4-11e9-8b8c-525400102fac
  spec:
    rules:
    - host: cannonball-guest-api.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: test-cannonball-guest-api-cannonball-guest-api
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cannonball-guest-api.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-18T21:23:21Z
    generation: 1
    name: cannonballguestapi-single-region-ingress
    namespace: cannonball
    resourceVersion: "212483871"
    selfLink: /apis/extensions/v1beta1/namespaces/cannonball/ingresses/cannonballguestapi-single-region-ingress
    uid: 0e52e46c-49c4-11e9-8b8c-525400102fac
  spec:
    rules:
    - host: cannonball-guest-api.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: test-cannonball-guest-api-cannonball-guest-api
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cannonball-guest-api.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-01-25T23:05:11Z
    generation: 1
    name: driveup-ingress
    namespace: cannonball
    resourceVersion: "154288661"
    selfLink: /apis/extensions/v1beta1/namespaces/cannonball/ingresses/driveup-ingress
    uid: aab7b379-20f5-11e9-a085-525400e7b4ef
  spec:
    rules:
    - host: drive-up.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: test-driveup-services
            servicePort: 80
          path: /
    tls:
    - hosts:
      - drive-up.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-01-25T23:05:08Z
    generation: 1
    name: driveup-ingress-gp
    namespace: cannonball
    resourceVersion: "154288660"
    selfLink: /apis/extensions/v1beta1/namespaces/cannonball/ingresses/driveup-ingress-gp
    uid: a8de0080-20f5-11e9-a085-525400e7b4ef
  spec:
    rules:
    - host: drive-up-gp.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: test-driveup-services-gp
            servicePort: 80
          path: /
    tls:
    - hosts:
      - drive-up-gp.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-01-25T23:05:12Z
    generation: 1
    name: driveup-single-region-ingress
    namespace: cannonball
    resourceVersion: "154288659"
    selfLink: /apis/extensions/v1beta1/namespaces/cannonball/ingresses/driveup-single-region-ingress
    uid: ab7ee925-20f5-11e9-a085-525400e7b4ef
  spec:
    rules:
    - host: drive-up.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: test-driveup-services
            servicePort: 80
          path: /
    tls:
    - hosts:
      - drive-up.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-01-25T23:05:09Z
    generation: 1
    name: driveup-single-region-ingress-gp
    namespace: cannonball
    resourceVersion: "154288658"
    selfLink: /apis/extensions/v1beta1/namespaces/cannonball/ingresses/driveup-single-region-ingress-gp
    uid: a9d2df13-20f5-11e9-a085-525400e7b4ef
  spec:
    rules:
    - host: drive-up-gp.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: test-driveup-services-gp
            servicePort: 80
          path: /
    tls:
    - hosts:
      - drive-up-gp.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-12T15:55:32Z
    generation: 1
    name: test-driveup-utility-app-driveup-utility-app-ingress
    namespace: cannonball
    resourceVersion: "50077446"
    selfLink: /apis/extensions/v1beta1/namespaces/cannonball/ingresses/test-driveup-utility-app-driveup-utility-app-ingress
    uid: 3fc8b535-ce37-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: drive-up-utility.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: test-driveup-utility-app-driveup-utility-app
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-12T15:55:33Z
    generation: 1
    name: test-driveup-utility-app-driveup-utility-app-single-region-ingress
    namespace: cannonball
    resourceVersion: "50077447"
    selfLink: /apis/extensions/v1beta1/namespaces/cannonball/ingresses/test-driveup-utility-app-driveup-utility-app-single-region-ingress
    uid: 40468bc1-ce37-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: drive-up-utility.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: test-driveup-utility-app-driveup-utility-app
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-content-pipeline-api-ingress"},"name":"cep-content-pipeline-api-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"cep-content-pipeline-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-content-pipeline-api-service","servicePort":8080},"path":"/"}]}},{"host":"cep-content-pipeline-api-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-content-pipeline-api-service","servicePort":8080},"path":"/"}]}},{"host":"cep-content-pipeline-api-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-content-pipeline-api-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["cep-content-pipeline-api-dev.ttc-test.k8s.target.com","cep-content-pipeline-api-dev.tte-test.k8s.target.com","cep-content-pipeline-api-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-16T18:00:50Z
    generation: 2
    labels:
      name: cep-content-pipeline-api-ingress
    name: cep-content-pipeline-api-ingress
    namespace: cep-dev
    resourceVersion: "144900855"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-content-pipeline-api-ingress
    uid: a8812463-19b8-11e9-a085-525400e7b4ef
  spec:
    rules:
    - host: cep-content-pipeline-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-content-pipeline-api-service
            servicePort: 8080
          path: /
    - host: cep-content-pipeline-api-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-content-pipeline-api-service
            servicePort: 8080
          path: /
    - host: cep-content-pipeline-api-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-content-pipeline-api-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - cep-content-pipeline-api-dev.ttc-test.k8s.target.com
      - cep-content-pipeline-api-dev.tte-test.k8s.target.com
      - cep-content-pipeline-api-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-external-asset-api-ingress"},"name":"cep-external-asset-api-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"cep-external-asset-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-external-asset-api-service","servicePort":80},"path":"/"}]}},{"host":"cep-external-asset-api-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-external-asset-api-service","servicePort":80},"path":"/"}]}},{"host":"cep-external-asset-api-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-external-asset-api-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["cep-external-asset-api-dev.ttc-test.k8s.target.com","cep-external-asset-api-dev.tte-test.k8s.target.com","cep-external-asset-api-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-15T19:19:50Z
    generation: 1
    labels:
      name: cep-external-asset-api-ingress
    name: cep-external-asset-api-ingress
    namespace: cep-dev
    resourceVersion: "143809704"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-external-asset-api-ingress
    uid: 87b41ecf-18fa-11e9-bdc1-525400cfa7b2
  spec:
    rules:
    - host: cep-external-asset-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-external-asset-api-service
            servicePort: 80
          path: /
    - host: cep-external-asset-api-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-external-asset-api-service
            servicePort: 80
          path: /
    - host: cep-external-asset-api-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-external-asset-api-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cep-external-asset-api-dev.ttc-test.k8s.target.com
      - cep-external-asset-api-dev.tte-test.k8s.target.com
      - cep-external-asset-api-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-external-assets-processor-ingress"},"name":"cep-external-assets-processor-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"cep-external-assets-processor-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-external-assets-processor-service","servicePort":80},"path":"/"}]}},{"host":"cep-external-assets-processor-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-external-assets-processor-service","servicePort":80},"path":"/"}]}},{"host":"cep-external-assets-processor-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-external-assets-processor-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["cep-external-assets-processor-dev.ttc-test.k8s.target.com","cep-external-assets-processor-dev.tte-test.k8s.target.com","cep-external-assets-processor-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-15T20:22:10Z
    generation: 1
    labels:
      name: cep-external-assets-processor-ingress
    name: cep-external-assets-processor-ingress
    namespace: cep-dev
    resourceVersion: "143862636"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-external-assets-processor-ingress
    uid: 3cbf6dbe-1903-11e9-a085-525400e7b4ef
  spec:
    rules:
    - host: cep-external-assets-processor-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-external-assets-processor-service
            servicePort: 80
          path: /
    - host: cep-external-assets-processor-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-external-assets-processor-service
            servicePort: 80
          path: /
    - host: cep-external-assets-processor-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-external-assets-processor-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cep-external-assets-processor-dev.ttc-test.k8s.target.com
      - cep-external-assets-processor-dev.tte-test.k8s.target.com
      - cep-external-assets-processor-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-guides-ui-ingress"},"name":"cep-guides-ui-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"pipeline-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-guides-ui-service","servicePort":8080},"path":"/"}]}},{"host":"pipeline-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-guides-ui-service","servicePort":8080},"path":"/"}]}},{"host":"pipeline-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-guides-ui-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["pipeline-dev.ttc-test.k8s.target.com","pipeline-dev.tte-test.k8s.target.com","pipeline-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-10T16:09:50Z
    generation: 2
    labels:
      name: cep-guides-ui-ingress
    name: cep-guides-ui-ingress
    namespace: cep-dev
    resourceVersion: "208331980"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-guides-ui-ingress
    uid: 28a96b9c-14f2-11e9-9edf-52540027f265
  spec:
    rules:
    - host: pipeline-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-guides-ui-service
            servicePort: 8080
          path: /
    - host: pipeline-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-guides-ui-service
            servicePort: 8080
          path: /
    - host: pipeline-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-guides-ui-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - pipeline-dev.ttc-test.k8s.target.com
      - pipeline-dev.tte-test.k8s.target.com
      - pipeline-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-image-o-sphere-ingress"},"name":"cep-image-o-sphere-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"cep-image-o-sphere-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-image-o-sphere-service","servicePort":80},"path":"/"}]}},{"host":"cep-image-o-sphere-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-image-o-sphere-service","servicePort":80},"path":"/"}]}},{"host":"cep-image-o-sphere-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-image-o-sphere-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["cep-image-o-sphere-dev.ttc-test.k8s.target.com","cep-image-o-sphere-dev.tte-test.k8s.target.com","cep-image-o-sphere-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-08T17:06:25Z
    generation: 1
    labels:
      name: cep-image-o-sphere-ingress
    name: cep-image-o-sphere-ingress
    namespace: cep-dev
    resourceVersion: "136258739"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-image-o-sphere-ingress
    uid: bb5e5441-1367-11e9-9edf-52540027f265
  spec:
    rules:
    - host: cep-image-o-sphere-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-image-o-sphere-service
            servicePort: 80
          path: /
    - host: cep-image-o-sphere-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-image-o-sphere-service
            servicePort: 80
          path: /
    - host: cep-image-o-sphere-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-image-o-sphere-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cep-image-o-sphere-dev.ttc-test.k8s.target.com
      - cep-image-o-sphere-dev.tte-test.k8s.target.com
      - cep-image-o-sphere-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-image-o-sphere-ui-ingress"},"name":"cep-image-o-sphere-ui-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"imageosphere-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-image-o-sphere-ui-service","servicePort":8080},"path":"/"}]}},{"host":"imageosphere-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-image-o-sphere-ui-service","servicePort":8080},"path":"/"}]}},{"host":"imageosphere-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-image-o-sphere-ui-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["imageosphere-dev.ttc-test.k8s.target.com","imageosphere-dev.tte-test.k8s.target.com","imageosphere-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-08T17:31:55Z
    generation: 2
    labels:
      name: cep-image-o-sphere-ui-ingress
    name: cep-image-o-sphere-ui-ingress
    namespace: cep-dev
    resourceVersion: "208353454"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-image-o-sphere-ui-ingress
    uid: 4aef5032-136b-11e9-9fcc-525400f72165
  spec:
    rules:
    - host: imageosphere-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-image-o-sphere-ui-service
            servicePort: 8080
          path: /
    - host: imageosphere-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-image-o-sphere-ui-service
            servicePort: 8080
          path: /
    - host: imageosphere-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-image-o-sphere-ui-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - imageosphere-dev.ttc-test.k8s.target.com
      - imageosphere-dev.tte-test.k8s.target.com
      - imageosphere-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-pipeline-asset-app-ingress"},"name":"cep-pipeline-asset-app-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"cep-pipeline-asset-app-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-asset-app-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-asset-app-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-asset-app-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-asset-app-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-asset-app-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["cep-pipeline-asset-app-dev.ttc-test.k8s.target.com","cep-pipeline-asset-app-dev.tte-test.k8s.target.com","cep-pipeline-asset-app-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-14T19:44:12Z
    generation: 1
    labels:
      name: cep-pipeline-asset-app-ingress
    name: cep-pipeline-asset-app-ingress
    namespace: cep-dev
    resourceVersion: "142684344"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-pipeline-asset-app-ingress
    uid: c4b3fad0-1834-11e9-b102-525400053814
  spec:
    rules:
    - host: cep-pipeline-asset-app-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-asset-app-service
            servicePort: 80
          path: /
    - host: cep-pipeline-asset-app-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-asset-app-service
            servicePort: 80
          path: /
    - host: cep-pipeline-asset-app-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-asset-app-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cep-pipeline-asset-app-dev.ttc-test.k8s.target.com
      - cep-pipeline-asset-app-dev.tte-test.k8s.target.com
      - cep-pipeline-asset-app-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-pipeline-content-app-ingress"},"name":"cep-pipeline-content-app-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"cep-pipeline-content-app-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-content-app-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-content-app-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-content-app-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-content-app-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-content-app-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["cep-pipeline-content-app-dev.ttc-test.k8s.target.com","cep-pipeline-content-app-dev.tte-test.k8s.target.com","cep-pipeline-content-app-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-19T21:00:09Z
    generation: 1
    labels:
      name: cep-pipeline-content-app-ingress
    name: cep-pipeline-content-app-ingress
    namespace: cep-dev
    resourceVersion: "49225520"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-pipeline-content-app-ingress
    uid: fe57b7cd-bc4e-11e8-b822-525400b06b0f
  spec:
    rules:
    - host: cep-pipeline-content-app-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-content-app-service
            servicePort: 80
          path: /
    - host: cep-pipeline-content-app-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-content-app-service
            servicePort: 80
          path: /
    - host: cep-pipeline-content-app-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-content-app-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cep-pipeline-content-app-dev.ttc-test.k8s.target.com
      - cep-pipeline-content-app-dev.tte-test.k8s.target.com
      - cep-pipeline-content-app-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-pipeline-copy-app-ingress"},"name":"cep-pipeline-copy-app-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"cep-pipeline-copy-app-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-copy-app-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-copy-app-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-copy-app-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-copy-app-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-copy-app-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["cep-pipeline-copy-app-dev.ttc-test.k8s.target.com","cep-pipeline-copy-app-dev.tte-test.k8s.target.com","cep-pipeline-copy-app-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-16T15:15:09Z
    generation: 1
    labels:
      name: cep-pipeline-copy-app-ingress
    name: cep-pipeline-copy-app-ingress
    namespace: cep-dev
    resourceVersion: "144697221"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-pipeline-copy-app-ingress
    uid: 837efd4a-19a1-11e9-b102-525400053814
  spec:
    rules:
    - host: cep-pipeline-copy-app-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-copy-app-service
            servicePort: 80
          path: /
    - host: cep-pipeline-copy-app-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-copy-app-service
            servicePort: 80
          path: /
    - host: cep-pipeline-copy-app-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-copy-app-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cep-pipeline-copy-app-dev.ttc-test.k8s.target.com
      - cep-pipeline-copy-app-dev.tte-test.k8s.target.com
      - cep-pipeline-copy-app-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-pipeline-data-api-ingress"},"name":"cep-pipeline-data-api-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"cep-pipeline-data-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-data-api-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-data-api-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-data-api-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-data-api-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-data-api-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["cep-pipeline-data-api-dev.ttc-test.k8s.target.com","cep-pipeline-data-api-dev.tte-test.k8s.target.com","cep-pipeline-data-api-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-15T15:41:37Z
    generation: 1
    labels:
      name: cep-pipeline-data-api-ingress
    name: cep-pipeline-data-api-ingress
    namespace: cep-dev
    resourceVersion: "143624963"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-pipeline-data-api-ingress
    uid: 0b20460e-18dc-11e9-bdc1-525400cfa7b2
  spec:
    rules:
    - host: cep-pipeline-data-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-data-api-service
            servicePort: 80
          path: /
    - host: cep-pipeline-data-api-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-data-api-service
            servicePort: 80
          path: /
    - host: cep-pipeline-data-api-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-data-api-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cep-pipeline-data-api-dev.ttc-test.k8s.target.com
      - cep-pipeline-data-api-dev.tte-test.k8s.target.com
      - cep-pipeline-data-api-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-pipeline-enrichment-app-ingress"},"name":"cep-pipeline-enrichment-app-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"cep-pipeline-enrichment-app-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-enrichment-app-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-enrichment-app-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-enrichment-app-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-enrichment-app-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-enrichment-app-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["cep-pipeline-enrichment-app-dev.ttc-test.k8s.target.com","cep-pipeline-enrichment-app-dev.tte-test.k8s.target.com","cep-pipeline-enrichment-app-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-03-14T21:31:01Z
    generation: 1
    labels:
      name: cep-pipeline-enrichment-app-ingress
    name: cep-pipeline-enrichment-app-ingress
    namespace: cep-dev
    resourceVersion: "208503821"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-pipeline-enrichment-app-ingress
    uid: 76a28483-46a0-11e9-9ed7-5254006b625b
  spec:
    rules:
    - host: cep-pipeline-enrichment-app-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-enrichment-app-service
            servicePort: 80
          path: /
    - host: cep-pipeline-enrichment-app-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-enrichment-app-service
            servicePort: 80
          path: /
    - host: cep-pipeline-enrichment-app-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-enrichment-app-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cep-pipeline-enrichment-app-dev.ttc-test.k8s.target.com
      - cep-pipeline-enrichment-app-dev.tte-test.k8s.target.com
      - cep-pipeline-enrichment-app-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-pipeline-item-api-ingress"},"name":"cep-pipeline-item-api-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"cep-pipeline-item-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-item-api-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-item-api-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-item-api-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-item-api-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-item-api-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["cep-pipeline-item-api-dev.ttc-test.k8s.target.com","cep-pipeline-item-api-dev.tte-test.k8s.target.com","cep-pipeline-item-api-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-14T15:57:42Z
    generation: 1
    labels:
      name: cep-pipeline-item-api-ingress
    name: cep-pipeline-item-api-ingress
    namespace: cep-dev
    resourceVersion: "142521224"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-pipeline-item-api-ingress
    uid: 201cb26a-1815-11e9-a085-525400e7b4ef
  spec:
    rules:
    - host: cep-pipeline-item-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-item-api-service
            servicePort: 80
          path: /
    - host: cep-pipeline-item-api-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-item-api-service
            servicePort: 80
          path: /
    - host: cep-pipeline-item-api-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-item-api-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cep-pipeline-item-api-dev.ttc-test.k8s.target.com
      - cep-pipeline-item-api-dev.tte-test.k8s.target.com
      - cep-pipeline-item-api-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-pipeline-ml-api-ingress"},"name":"cep-pipeline-ml-api-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"cep-pipeline-ml-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-ml-api-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-ml-api-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-ml-api-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-ml-api-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-ml-api-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["cep-pipeline-ml-api-dev.ttc-test.k8s.target.com","cep-pipeline-ml-api-dev.tte-test.k8s.target.com","cep-pipeline-ml-api-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-31T15:09:02Z
    generation: 1
    labels:
      name: cep-pipeline-ml-api-ingress
    name: cep-pipeline-ml-api-ingress
    namespace: cep-dev
    resourceVersion: "49225400"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-pipeline-ml-api-ingress
    uid: cb54e40d-ad2f-11e8-8462-525400b93a8e
  spec:
    rules:
    - host: cep-pipeline-ml-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-ml-api-service
            servicePort: 80
          path: /
    - host: cep-pipeline-ml-api-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-ml-api-service
            servicePort: 80
          path: /
    - host: cep-pipeline-ml-api-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-ml-api-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cep-pipeline-ml-api-dev.ttc-test.k8s.target.com
      - cep-pipeline-ml-api-dev.tte-test.k8s.target.com
      - cep-pipeline-ml-api-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-pipeline-monitor-api-ingress"},"name":"cep-pipeline-monitor-api-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"cep-pipeline-monitor-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-monitor-api-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-monitor-api-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-monitor-api-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-monitor-api-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-monitor-api-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["cep-pipeline-monitor-api-dev.ttc-test.k8s.target.com","cep-pipeline-monitor-api-dev.tte-test.k8s.target.com","cep-pipeline-monitor-api-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-09T18:56:12Z
    generation: 1
    labels:
      name: cep-pipeline-monitor-api-ingress
    name: cep-pipeline-monitor-api-ingress
    namespace: cep-dev
    resourceVersion: "137454386"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-pipeline-monitor-api-ingress
    uid: 3c04fd24-1440-11e9-aa7e-5254007ca0e4
  spec:
    rules:
    - host: cep-pipeline-monitor-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-monitor-api-service
            servicePort: 80
          path: /
    - host: cep-pipeline-monitor-api-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-monitor-api-service
            servicePort: 80
          path: /
    - host: cep-pipeline-monitor-api-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-monitor-api-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cep-pipeline-monitor-api-dev.ttc-test.k8s.target.com
      - cep-pipeline-monitor-api-dev.tte-test.k8s.target.com
      - cep-pipeline-monitor-api-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-pipeline-notify-app-ingress"},"name":"cep-pipeline-notify-app-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"cep-pipeline-notify-app-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-notify-app-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-notify-app-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-notify-app-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-notify-app-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-notify-app-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["cep-pipeline-notify-app-dev.ttc-test.k8s.target.com","cep-pipeline-notify-app-dev.tte-test.k8s.target.com","cep-pipeline-notify-app-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-16T17:26:05Z
    generation: 1
    labels:
      name: cep-pipeline-notify-app-ingress
    name: cep-pipeline-notify-app-ingress
    namespace: cep-dev
    resourceVersion: "144795851"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-pipeline-notify-app-ingress
    uid: cdad8315-19b3-11e9-bdc1-525400cfa7b2
  spec:
    rules:
    - host: cep-pipeline-notify-app-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-notify-app-service
            servicePort: 80
          path: /
    - host: cep-pipeline-notify-app-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-notify-app-service
            servicePort: 80
          path: /
    - host: cep-pipeline-notify-app-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-notify-app-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cep-pipeline-notify-app-dev.ttc-test.k8s.target.com
      - cep-pipeline-notify-app-dev.tte-test.k8s.target.com
      - cep-pipeline-notify-app-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-pipeline-search-api-ingress"},"name":"cep-pipeline-search-api-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"cep-pipeline-search-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-search-api-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-search-api-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-search-api-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-search-api-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-search-api-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["cep-pipeline-search-api-dev.ttc-test.k8s.target.com","cep-pipeline-search-api-dev.tte-test.k8s.target.com","cep-pipeline-search-api-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-30T20:59:06Z
    generation: 1
    labels:
      name: cep-pipeline-search-api-ingress
    name: cep-pipeline-search-api-ingress
    namespace: cep-dev
    resourceVersion: "64504873"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-pipeline-search-api-ingress
    uid: a3faa312-dc86-11e8-80ff-5254001f7df6
  spec:
    rules:
    - host: cep-pipeline-search-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-search-api-service
            servicePort: 80
          path: /
    - host: cep-pipeline-search-api-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-search-api-service
            servicePort: 80
          path: /
    - host: cep-pipeline-search-api-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-search-api-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cep-pipeline-search-api-dev.ttc-test.k8s.target.com
      - cep-pipeline-search-api-dev.tte-test.k8s.target.com
      - cep-pipeline-search-api-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-pipeline-sender-app-ingress"},"name":"cep-pipeline-sender-app-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"cep-pipeline-sender-app-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-sender-app-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-sender-app-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-sender-app-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-sender-app-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-sender-app-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["cep-pipeline-sender-app-dev.ttc-test.k8s.target.com","cep-pipeline-sender-app-dev.tte-test.k8s.target.com","cep-pipeline-sender-app-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-14T17:31:08Z
    generation: 1
    labels:
      name: cep-pipeline-sender-app-ingress
    name: cep-pipeline-sender-app-ingress
    namespace: cep-dev
    resourceVersion: "142588427"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-pipeline-sender-app-ingress
    uid: 2dcb1e37-1822-11e9-a085-525400e7b4ef
  spec:
    rules:
    - host: cep-pipeline-sender-app-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-sender-app-service
            servicePort: 80
          path: /
    - host: cep-pipeline-sender-app-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-sender-app-service
            servicePort: 80
          path: /
    - host: cep-pipeline-sender-app-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-sender-app-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cep-pipeline-sender-app-dev.ttc-test.k8s.target.com
      - cep-pipeline-sender-app-dev.tte-test.k8s.target.com
      - cep-pipeline-sender-app-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-pipeline-tcin-image-generator-ingress"},"name":"cep-pipeline-tcin-image-generator-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"cep-pipeline-tcin-image-generator-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-tcin-image-generator-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-tcin-image-generator-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-tcin-image-generator-service","servicePort":80},"path":"/"}]}},{"host":"cep-pipeline-tcin-image-generator-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-tcin-image-generator-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["cep-pipeline-tcin-image-generator-dev.ttc-test.k8s.target.com","cep-pipeline-tcin-image-generator-dev.tte-test.k8s.target.com","cep-pipeline-tcin-image-generator-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-14T15:26:58Z
    generation: 1
    labels:
      name: cep-pipeline-tcin-image-generator-ingress
    name: cep-pipeline-tcin-image-generator-ingress
    namespace: cep-dev
    resourceVersion: "142499785"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-pipeline-tcin-image-generator-ingress
    uid: d5321616-1810-11e9-bdc1-525400cfa7b2
  spec:
    rules:
    - host: cep-pipeline-tcin-image-generator-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-tcin-image-generator-service
            servicePort: 80
          path: /
    - host: cep-pipeline-tcin-image-generator-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-tcin-image-generator-service
            servicePort: 80
          path: /
    - host: cep-pipeline-tcin-image-generator-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-tcin-image-generator-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cep-pipeline-tcin-image-generator-dev.ttc-test.k8s.target.com
      - cep-pipeline-tcin-image-generator-dev.tte-test.k8s.target.com
      - cep-pipeline-tcin-image-generator-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-pipeline-ui-ingress"},"name":"cep-pipeline-ui-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"pipeline-v2-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-ui-service","servicePort":8080},"path":"/"}]}},{"host":"pipeline-v2-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-ui-service","servicePort":8080},"path":"/"}]}},{"host":"pipeline-v2-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-ui-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["pipeline-v2-dev.ttc-test.k8s.target.com","pipeline-v2-dev.tte-test.k8s.target.com","pipeline-v2-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-10T15:46:09Z
    generation: 2
    labels:
      name: cep-pipeline-ui-ingress
    name: cep-pipeline-ui-ingress
    namespace: cep-dev
    resourceVersion: "208502722"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-pipeline-ui-ingress
    uid: d961b1f6-14ee-11e9-9edf-52540027f265
  spec:
    rules:
    - host: pipeline-v2-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-ui-service
            servicePort: 8080
          path: /
    - host: pipeline-v2-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-ui-service
            servicePort: 8080
          path: /
    - host: pipeline-v2-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-ui-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - pipeline-v2-dev.ttc-test.k8s.target.com
      - pipeline-v2-dev.tte-test.k8s.target.com
      - pipeline-v2-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-pipeline-visual-search-ingress"},"name":"cep-pipeline-visual-search-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"cep-pipeline-visual-search-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-visual-search-service","servicePort":8080},"path":"/"}]}},{"host":"cep-pipeline-visual-search-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-visual-search-service","servicePort":8080},"path":"/"}]}},{"host":"cep-pipeline-visual-search-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-pipeline-visual-search-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["cep-pipeline-visual-search-dev.ttc-test.k8s.target.com","cep-pipeline-visual-search-dev.tte-test.k8s.target.com","cep-pipeline-visual-search-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-09T15:26:59Z
    generation: 1
    labels:
      name: cep-pipeline-visual-search-ingress
    name: cep-pipeline-visual-search-ingress
    namespace: cep-dev
    resourceVersion: "137306627"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-pipeline-visual-search-ingress
    uid: 0180c758-1423-11e9-9edf-52540027f265
  spec:
    rules:
    - host: cep-pipeline-visual-search-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-visual-search-service
            servicePort: 8080
          path: /
    - host: cep-pipeline-visual-search-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-visual-search-service
            servicePort: 8080
          path: /
    - host: cep-pipeline-visual-search-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-pipeline-visual-search-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - cep-pipeline-visual-search-dev.ttc-test.k8s.target.com
      - cep-pipeline-visual-search-dev.tte-test.k8s.target.com
      - cep-pipeline-visual-search-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-purge-pipeline-api-ingress"},"name":"cep-purge-pipeline-api-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"cep-purge-pipeline-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-purge-pipeline-api-service","servicePort":80},"path":"/"}]}},{"host":"cep-purge-pipeline-api-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-purge-pipeline-api-service","servicePort":80},"path":"/"}]}},{"host":"cep-purge-pipeline-api-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-purge-pipeline-api-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["cep-purge-pipeline-api-dev.ttc-test.k8s.target.com","cep-purge-pipeline-api-dev.tte-test.k8s.target.com","cep-purge-pipeline-api-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-08T18:31:07Z
    generation: 1
    labels:
      name: cep-purge-pipeline-api-ingress
    name: cep-purge-pipeline-api-ingress
    namespace: cep-dev
    resourceVersion: "136328863"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-purge-pipeline-api-ingress
    uid: 90576ff3-1373-11e9-9fcc-525400f72165
  spec:
    rules:
    - host: cep-purge-pipeline-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-purge-pipeline-api-service
            servicePort: 80
          path: /
    - host: cep-purge-pipeline-api-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-purge-pipeline-api-service
            servicePort: 80
          path: /
    - host: cep-purge-pipeline-api-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-purge-pipeline-api-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cep-purge-pipeline-api-dev.ttc-test.k8s.target.com
      - cep-purge-pipeline-api-dev.tte-test.k8s.target.com
      - cep-purge-pipeline-api-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-scripts-ingress"},"name":"cep-scripts-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"cep-scripts.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-scripts-service","servicePort":80},"path":"/"}]}},{"host":"cep-scripts.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-scripts-service","servicePort":80},"path":"/"}]}},{"host":"cep-scripts.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-scripts-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["cep-scripts.ttc-test.k8s.target.com","cep-scripts.tte-test.k8s.target.com","cep-scripts.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-08T18:14:08Z
    generation: 1
    labels:
      name: cep-scripts-ingress
    name: cep-scripts-ingress
    namespace: cep-dev
    resourceVersion: "136314669"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-scripts-ingress
    uid: 310a4846-1371-11e9-aa7e-5254007ca0e4
  spec:
    rules:
    - host: cep-scripts.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-scripts-service
            servicePort: 80
          path: /
    - host: cep-scripts.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-scripts-service
            servicePort: 80
          path: /
    - host: cep-scripts.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-scripts-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cep-scripts.ttc-test.k8s.target.com
      - cep-scripts.tte-test.k8s.target.com
      - cep-scripts.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-sizecharts-app-ingress"},"name":"cep-sizecharts-app-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"cep-sizecharts-app-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-sizecharts-app-service","servicePort":80},"path":"/"}]}},{"host":"cep-sizecharts-app-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-sizecharts-app-service","servicePort":80},"path":"/"}]}},{"host":"cep-sizecharts-app-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-sizecharts-app-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["cep-sizecharts-app-dev.ttc-test.k8s.target.com","cep-sizecharts-app-dev.tte-test.k8s.target.com","cep-sizecharts-app-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-16T17:05:44Z
    generation: 1
    labels:
      name: cep-sizecharts-app-ingress
    name: cep-sizecharts-app-ingress
    namespace: cep-dev
    resourceVersion: "144779507"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-sizecharts-app-ingress
    uid: f5f72dc1-19b0-11e9-bdc1-525400cfa7b2
  spec:
    rules:
    - host: cep-sizecharts-app-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-sizecharts-app-service
            servicePort: 80
          path: /
    - host: cep-sizecharts-app-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-sizecharts-app-service
            servicePort: 80
          path: /
    - host: cep-sizecharts-app-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-sizecharts-app-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - cep-sizecharts-app-dev.ttc-test.k8s.target.com
      - cep-sizecharts-app-dev.tte-test.k8s.target.com
      - cep-sizecharts-app-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cep-vendor-pipeline-ui-ingress"},"name":"cep-vendor-pipeline-ui-ingress","namespace":"cep-dev"},"spec":{"rules":[{"host":"vendorpipeline-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-vendor-pipeline-ui-service","servicePort":8080},"path":"/"}]}},{"host":"vendorpipeline-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-vendor-pipeline-ui-service","servicePort":8080},"path":"/"}]}},{"host":"vendorpipeline-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cep-vendor-pipeline-ui-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["vendorpipeline-dev.ttc-test.k8s.target.com","vendorpipeline-dev.tte-test.k8s.target.com","vendorpipeline-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-10T15:14:14Z
    generation: 2
    labels:
      name: cep-vendor-pipeline-ui-ingress
    name: cep-vendor-pipeline-ui-ingress
    namespace: cep-dev
    resourceVersion: "208448284"
    selfLink: /apis/extensions/v1beta1/namespaces/cep-dev/ingresses/cep-vendor-pipeline-ui-ingress
    uid: 642c445f-14ea-11e9-aa7e-5254007ca0e4
  spec:
    rules:
    - host: vendorpipeline-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-vendor-pipeline-ui-service
            servicePort: 8080
          path: /
    - host: vendorpipeline-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-vendor-pipeline-ui-service
            servicePort: 8080
          path: /
    - host: vendorpipeline-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cep-vendor-pipeline-ui-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - vendorpipeline-dev.ttc-test.k8s.target.com
      - vendorpipeline-dev.tte-test.k8s.target.com
      - vendorpipeline-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cls-ingress-stage-ttc"},"name":"cls-ingress-stage-ttc","namespace":"clusteringlocation-stage"},"spec":{"rules":[{"host":"clusteringlocation-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cls-app-service-stage","servicePort":80},"path":"/"}]}},{"host":"clusteringlocation-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cls-app-service-stage","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["clusteringlocation-stage.ttc-test.k8s.target.com","clusteringlocation-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-03T09:25:24Z
    generation: 1
    labels:
      name: cls-ingress-stage-ttc
    name: cls-ingress-stage-ttc
    namespace: clusteringlocation-stage
    resourceVersion: "49226008"
    selfLink: /apis/extensions/v1beta1/namespaces/clusteringlocation-stage/ingresses/cls-ingress-stage-ttc
    uid: 41a9acca-c6ee-11e8-b53b-5254000e56fe
  spec:
    rules:
    - host: clusteringlocation-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cls-app-service-stage
            servicePort: 80
          path: /
    - host: clusteringlocation-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cls-app-service-stage
            servicePort: 80
          path: /
    tls:
    - hosts:
      - clusteringlocation-stage.ttc-test.k8s.target.com
      - clusteringlocation-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cls-ingress-test"},"name":"cls-ingress-test","namespace":"clusteringlocation-test"},"spec":{"rules":[{"host":"clusteringlocation-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cls-app-service-test","servicePort":80},"path":"/"}]}},{"host":"clusteringlocation-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cls-app-service-test","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["clusteringlocation-test.ttc-test.k8s.target.com","clusteringlocation-test.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-01T10:21:21Z
    generation: 1
    labels:
      name: cls-ingress-test
    name: cls-ingress-test
    namespace: clusteringlocation-test
    resourceVersion: "49225833"
    selfLink: /apis/extensions/v1beta1/namespaces/clusteringlocation-test/ingresses/cls-ingress-test
    uid: be48ec0a-c563-11e8-9a78-525400d8fde0
  spec:
    rules:
    - host: clusteringlocation-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cls-app-service-test
            servicePort: 80
          path: /
    - host: clusteringlocation-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cls-app-service-test
            servicePort: 80
          path: /
    tls:
    - hosts:
      - clusteringlocation-test.ttc-test.k8s.target.com
      - clusteringlocation-test.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cls-int-ingress-test"},"name":"cls-int-ingress-test","namespace":"clusteringlocation-test"},"spec":{"rules":[{"host":"clusteringlocation-int-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cls-int-service-test","servicePort":8080},"path":"/"}]}},{"host":"clusteringlocation-int-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cls-int-service-test","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["clusteringlocation-int-test.ttc-test.k8s.target.com","clusteringlocation-int-test.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-01T09:58:12Z
    generation: 1
    labels:
      name: cls-int-ingress-test
    name: cls-int-ingress-test
    namespace: clusteringlocation-test
    resourceVersion: "49225837"
    selfLink: /apis/extensions/v1beta1/namespaces/clusteringlocation-test/ingresses/cls-int-ingress-test
    uid: 82202513-c560-11e8-90a0-525400d38b79
  spec:
    rules:
    - host: clusteringlocation-int-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cls-int-service-test
            servicePort: 8080
          path: /
    - host: clusteringlocation-int-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cls-int-service-test
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - clusteringlocation-int-test.ttc-test.k8s.target.com
      - clusteringlocation-int-test.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cls-ingress-test"},"name":"cls-ui-ingress-test","namespace":"clusteringlocation-test"},"spec":{"rules":[{"host":"clusteringlocation-ui-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cls-ui-service-test","servicePort":80},"path":"/"}]}},{"host":"clusteringlocation-ui-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cls-ui-service-test","servicePort":80},"path":"/"}]}},{"host":"clusteringlocation-ui-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cls-ui-service-test","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["clusteringlocation-ui-test.ttc-test.k8s.target.com","clusteringlocation-ui-test.tte-test.k8s.target.com","clusteringlocation-ui-test.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-01T10:05:27Z
    generation: 1
    labels:
      name: cls-ingress-test
    name: cls-ui-ingress-test
    namespace: clusteringlocation-test
    resourceVersion: "49225948"
    selfLink: /apis/extensions/v1beta1/namespaces/clusteringlocation-test/ingresses/cls-ui-ingress-test
    uid: 85845c4f-c561-11e8-981f-525400343c24
  spec:
    rules:
    - host: clusteringlocation-ui-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cls-ui-service-test
            servicePort: 80
          path: /
    - host: clusteringlocation-ui-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cls-ui-service-test
            servicePort: 80
          path: /
    - host: clusteringlocation-ui-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cls-ui-service-test
            servicePort: 80
          path: /
    tls:
    - hosts:
      - clusteringlocation-ui-test.ttc-test.k8s.target.com
      - clusteringlocation-ui-test.tte-test.k8s.target.com
      - clusteringlocation-ui-test.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"kibana-v2-ingress"},"name":"kibana-v2-ingress","namespace":"corona"},"spec":{"rules":[{"host":"corona-kibana-v2.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"kibana-v2-service","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-01-15T20:26:59Z
    generation: 2
    labels:
      name: kibana-v2-ingress
    name: kibana-v2-ingress
    namespace: corona
    resourceVersion: "143891939"
    selfLink: /apis/extensions/v1beta1/namespaces/corona/ingresses/kibana-v2-ingress
    uid: e8de59ef-1903-11e9-b102-525400053814
  spec:
    rules:
    - host: corona-kibana-v2.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: kibana-v2-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"veneer-ingress"},"name":"veneer-ingress","namespace":"corona"},"spec":{"rules":[{"host":"veneer.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"veneer-service","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-01-30T15:59:24Z
    generation: 1
    labels:
      name: veneer-ingress
    name: veneer-ingress
    namespace: corona
    resourceVersion: "160766491"
    selfLink: /apis/extensions/v1beta1/namespaces/corona/ingresses/veneer-ingress
    uid: 03812e5f-24a8-11e9-940e-525400bb236b
  spec:
    rules:
    - host: veneer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: veneer-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"xref-gutenberg-persist-ingress"},"name":"xref-gutenberg-persist-ingress","namespace":"corona"},"spec":{"rules":[{"host":"xref-gutenberg-persist.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"xref-gutenberg-persist-service","servicePort":80},"path":"/"}]}},{"host":"xref-gutenberg-persist.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"xref-gutenberg-persist-service","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-01-15T22:33:12Z
    generation: 2
    labels:
      name: xref-gutenberg-persist-ingress
    name: xref-gutenberg-persist-ingress
    namespace: corona
    resourceVersion: "143971335"
    selfLink: /apis/extensions/v1beta1/namespaces/corona/ingresses/xref-gutenberg-persist-ingress
    uid: 8ae02817-1915-11e9-a085-525400e7b4ef
  spec:
    rules:
    - host: xref-gutenberg-persist.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: xref-gutenberg-persist-service
            servicePort: 80
          path: /
    - host: xref-gutenberg-persist.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: xref-gutenberg-persist-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"po-plan-service-ingress"},"name":"po-plan-service-ingress","namespace":"darre-dev"},"spec":{"rules":[{"host":"darre-dev-po-plan-service.us-central-1ttc.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"po-plan-service","servicePort":8080},"path":"/"}]}},{"host":"darre-dev-po-plan-service.us-central-1.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"po-plan-service","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2018-09-21T20:35:58Z
    generation: 1
    labels:
      name: po-plan-service-ingress
    name: po-plan-service-ingress
    namespace: darre-dev
    resourceVersion: "49226001"
    selfLink: /apis/extensions/v1beta1/namespaces/darre-dev/ingresses/po-plan-service-ingress
    uid: f28d79bc-bddd-11e8-a79d-525400524761
  spec:
    rules:
    - host: darre-dev-po-plan-service.us-central-1ttc.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: po-plan-service
            servicePort: 8080
          path: /
    - host: darre-dev-po-plan-service.us-central-1.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: po-plan-service
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"auth-proxy"},"name":"auth-proxy","namespace":"dc-platform"},"spec":{"rules":[{"host":"dc-auth-proxy.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"auth-proxy","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["dc-auth-proxy.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-30T13:44:36Z
    generation: 1
    labels:
      name: auth-proxy
    name: auth-proxy
    namespace: dc-platform
    resourceVersion: "49225633"
    selfLink: /apis/extensions/v1beta1/namespaces/dc-platform/ingresses/auth-proxy
    uid: d558cfa7-ac5a-11e8-a71c-525400524761
  spec:
    rules:
    - host: dc-auth-proxy.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: auth-proxy
            servicePort: 80
          path: /
    tls:
    - hosts:
      - dc-auth-proxy.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-07-23T18:45:44Z
    generation: 1
    labels:
      name: dc-env-ingress
    name: dc-env-ingress
    namespace: dc-platform
    resourceVersion: "49225638"
    selfLink: /apis/extensions/v1beta1/namespaces/dc-platform/ingresses/dc-env-ingress
    uid: 9b284200-8ea8-11e8-962d-525400b93a8e
  spec:
    rules:
    - host: dcstestenv.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dc-env-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - dcstestenv.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"dcv-asset-publish-app-ingress"},"name":"dcv-asset-publish-app-ingress","namespace":"dcv-dev"},"spec":{"rules":[{"host":"dcv-asset-publish-app-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dcv-asset-publish-app-service","servicePort":80},"path":"/"}]}},{"host":"dcv-asset-publish-app-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dcv-asset-publish-app-service","servicePort":80},"path":"/"}]}},{"host":"dcv-asset-publish-app-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dcv-asset-publish-app-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["dcv-asset-publish-app-dev.ttc-test.k8s.target.com","dcv-asset-publish-app-dev.tte-test.k8s.target.com","dcv-asset-publish-app-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-03-17T11:43:58Z
    generation: 1
    labels:
      name: dcv-asset-publish-app-ingress
    name: dcv-asset-publish-app-ingress
    namespace: dcv-dev
    resourceVersion: "211076578"
    selfLink: /apis/extensions/v1beta1/namespaces/dcv-dev/ingresses/dcv-asset-publish-app-ingress
    uid: f3e1d9c3-48a9-11e9-9ed7-5254006b625b
  spec:
    rules:
    - host: dcv-asset-publish-app-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dcv-asset-publish-app-service
            servicePort: 80
          path: /
    - host: dcv-asset-publish-app-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dcv-asset-publish-app-service
            servicePort: 80
          path: /
    - host: dcv-asset-publish-app-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dcv-asset-publish-app-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - dcv-asset-publish-app-dev.ttc-test.k8s.target.com
      - dcv-asset-publish-app-dev.tte-test.k8s.target.com
      - dcv-asset-publish-app-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"dcv-content-search-app-ingress"},"name":"dcv-content-search-app-ingress","namespace":"dcv-dev"},"spec":{"rules":[{"host":"dcv-content-search-app-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dcv-content-search-app-service","servicePort":80},"path":"/"}]}},{"host":"dcv-content-search-app-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dcv-content-search-app-service","servicePort":80},"path":"/"}]}},{"host":"dcv-content-search-app-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dcv-content-search-app-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["dcv-content-search-app-dev.ttc-test.k8s.target.com","dcv-content-search-app-dev.tte-test.k8s.target.com","dcv-content-search-app-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-15T18:39:38Z
    generation: 1
    labels:
      name: dcv-content-search-app-ingress
    name: dcv-content-search-app-ingress
    namespace: dcv-dev
    resourceVersion: "143776269"
    selfLink: /apis/extensions/v1beta1/namespaces/dcv-dev/ingresses/dcv-content-search-app-ingress
    uid: e9af84fb-18f4-11e9-b102-525400053814
  spec:
    rules:
    - host: dcv-content-search-app-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dcv-content-search-app-service
            servicePort: 80
          path: /
    - host: dcv-content-search-app-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dcv-content-search-app-service
            servicePort: 80
          path: /
    - host: dcv-content-search-app-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dcv-content-search-app-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - dcv-content-search-app-dev.ttc-test.k8s.target.com
      - dcv-content-search-app-dev.tte-test.k8s.target.com
      - dcv-content-search-app-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"carrier-data-management"},"name":"carrier-data-management","namespace":"dmo-data-mgmt"},"spec":{"rules":[{"host":"cdm.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"carrier-data-management","servicePort":3000},"path":"/"}]}},{"host":"cdm.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"carrier-data-management","servicePort":3000},"path":"/"}]}},{"host":"cdm.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"carrier-data-management","servicePort":3000},"path":"/"}]}}],"tls":[{"hosts":["cdm.test.k8s.target.com","cdm.ttc-test.k8s.target.com","cdm.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-11T13:03:46Z
    generation: 2
    labels:
      name: carrier-data-management
    name: carrier-data-management
    namespace: dmo-data-mgmt
    resourceVersion: "49225370"
    selfLink: /apis/extensions/v1beta1/namespaces/dmo-data-mgmt/ingresses/carrier-data-management
    uid: 1e0f93e7-b5c3-11e8-a71c-525400524761
  spec:
    rules:
    - host: cdm.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: carrier-data-management
            servicePort: 3000
          path: /
    - host: cdm.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: carrier-data-management
            servicePort: 3000
          path: /
    - host: cdm.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: carrier-data-management
            servicePort: 3000
          path: /
    tls:
    - hosts:
      - cdm.test.k8s.target.com
      - cdm.ttc-test.k8s.target.com
      - cdm.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"carrier-services"},"name":"carrier-services","namespace":"dmo-data-mgmt"},"spec":{"rules":[{"host":"carrier-services.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"carrier-services","servicePort":4000},"path":"/"}]}},{"host":"carrier-services.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"carrier-services","servicePort":4000},"path":"/"}]}},{"host":"carrier-services.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"carrier-services","servicePort":4000},"path":"/"}]}}],"tls":[{"hosts":["carrier-services.test.k8s.target.com","carrier-services.ttc-test.k8s.target.com","carrier-services.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-18T21:00:25Z
    generation: 1
    labels:
      name: carrier-services
    name: carrier-services
    namespace: dmo-data-mgmt
    resourceVersion: "147025506"
    selfLink: /apis/extensions/v1beta1/namespaces/dmo-data-mgmt/ingresses/carrier-services
    uid: 1407370a-1b64-11e9-a085-525400e7b4ef
  spec:
    rules:
    - host: carrier-services.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: carrier-services
            servicePort: 4000
          path: /
    - host: carrier-services.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: carrier-services
            servicePort: 4000
          path: /
    - host: carrier-services.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: carrier-services
            servicePort: 4000
          path: /
    tls:
    - hosts:
      - carrier-services.test.k8s.target.com
      - carrier-services.ttc-test.k8s.target.com
      - carrier-services.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"dmo-ui-services"},"name":"dmo-ui-services","namespace":"dmo-data-mgmt"},"spec":{"rules":[{"host":"dmo-ui-services.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dmo-ui-services","servicePort":4000},"path":"/"}]}},{"host":"dmo-ui-services.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dmo-ui-services","servicePort":4000},"path":"/"}]}},{"host":"dmo-ui-services.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dmo-ui-services","servicePort":4000},"path":"/"}]}}],"tls":[{"hosts":["dmo-ui-services.test.k8s.target.com","dmo-ui-services.ttc-test.k8s.target.com","dmo-ui-services.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-08T04:14:34Z
    generation: 1
    labels:
      name: dmo-ui-services
    name: dmo-ui-services
    namespace: dmo-data-mgmt
    resourceVersion: "49225538"
    selfLink: /apis/extensions/v1beta1/namespaces/dmo-data-mgmt/ingresses/dmo-ui-services
    uid: b15446d2-b31d-11e8-8488-525400b06b0f
  spec:
    rules:
    - host: dmo-ui-services.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dmo-ui-services
            servicePort: 4000
          path: /
    - host: dmo-ui-services.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dmo-ui-services
            servicePort: 4000
          path: /
    - host: dmo-ui-services.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dmo-ui-services
            servicePort: 4000
          path: /
    tls:
    - hosts:
      - dmo-ui-services.test.k8s.target.com
      - dmo-ui-services.ttc-test.k8s.target.com
      - dmo-ui-services.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"location-services"},"name":"location-services","namespace":"dmo-data-mgmt"},"spec":{"rules":[{"host":"location-services.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"location-services","servicePort":4000},"path":"/"}]}},{"host":"location-services.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"location-services","servicePort":4000},"path":"/"}]}},{"host":"location-services.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"location-services","servicePort":4000},"path":"/"}]}}],"tls":[{"hosts":["location-services.test.k8s.target.com","location-services.ttc-test.k8s.target.com","location-services.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-06T18:22:45Z
    generation: 1
    labels:
      name: location-services
    name: location-services
    namespace: dmo-data-mgmt
    resourceVersion: "49225945"
    selfLink: /apis/extensions/v1beta1/namespaces/dmo-data-mgmt/ingresses/location-services
    uid: d9d31aae-b201-11e8-8462-525400b93a8e
  spec:
    rules:
    - host: location-services.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: location-services
            servicePort: 4000
          path: /
    - host: location-services.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: location-services
            servicePort: 4000
          path: /
    - host: location-services.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: location-services
            servicePort: 4000
          path: /
    tls:
    - hosts:
      - location-services.test.k8s.target.com
      - location-services.ttc-test.k8s.target.com
      - location-services.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"rate-services"},"name":"rate-services","namespace":"dmo-data-mgmt"},"spec":{"rules":[{"host":"rate-services.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rate-services","servicePort":4000},"path":"/"}]}},{"host":"rate-services.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rate-services","servicePort":4000},"path":"/"}]}},{"host":"rate-services.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rate-services","servicePort":4000},"path":"/"}]}}],"tls":[{"hosts":["rate-services.test.k8s.target.com","rate-services.ttc-test.k8s.target.com","rate-services.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-06T02:01:05Z
    generation: 1
    labels:
      name: rate-services
    name: rate-services
    namespace: dmo-data-mgmt
    resourceVersion: "49225710"
    selfLink: /apis/extensions/v1beta1/namespaces/dmo-data-mgmt/ingresses/rate-services
    uid: b6e2ffae-b178-11e8-8462-525400b93a8e
  spec:
    rules:
    - host: rate-services.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rate-services
            servicePort: 4000
          path: /
    - host: rate-services.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rate-services
            servicePort: 4000
          path: /
    - host: rate-services.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rate-services
            servicePort: 4000
          path: /
    tls:
    - hosts:
      - rate-services.test.k8s.target.com
      - rate-services.ttc-test.k8s.target.com
      - rate-services.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"utility-services"},"name":"utility-services","namespace":"dmo-data-mgmt"},"spec":{"rules":[{"host":"utility-services.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"utility-services","servicePort":4000},"path":"/"}]}},{"host":"utility-services.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"utility-services","servicePort":4000},"path":"/"}]}},{"host":"utility-services.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"utility-services","servicePort":4000},"path":"/"}]}}],"tls":[{"hosts":["utility-services.test.k8s.target.com","utility-services.ttc-test.k8s.target.com","utility-services.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-02T15:26:40Z
    generation: 1
    labels:
      name: utility-services
    name: utility-services
    namespace: dmo-data-mgmt
    resourceVersion: "66945596"
    selfLink: /apis/extensions/v1beta1/namespaces/dmo-data-mgmt/ingresses/utility-services
    uid: b20b4467-deb3-11e8-80ff-5254001f7df6
  spec:
    rules:
    - host: utility-services.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: utility-services
            servicePort: 4000
          path: /
    - host: utility-services.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: utility-services
            servicePort: 4000
          path: /
    - host: utility-services.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: utility-services
            servicePort: 4000
          path: /
    tls:
    - hosts:
      - utility-services.test.k8s.target.com
      - utility-services.ttc-test.k8s.target.com
      - utility-services.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"dmo-carrier-selection"},"name":"dmo-carrier-selection","namespace":"dmo"},"spec":{"rules":[{"host":"dmo-ops-center-be.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dmo-ops-center-be","servicePort":80},"path":"/"}]}},{"host":"dmo-ops-center-be.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dmo-ops-center-be","servicePort":80},"path":"/"}]}},{"host":"dmo-ops-center-be.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dmo-ops-center-be","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["dmo-ops-center-be.test.k8s.target.com","dmo-ops-center-be.ttc-test.k8s.target.com","dmo-ops-center-be.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-25T21:19:51Z
    generation: 3
    labels:
      name: dmo-carrier-selection
    name: dmo-carrier-selection
    namespace: dmo
    resourceVersion: "184959379"
    selfLink: /apis/extensions/v1beta1/namespaces/dmo/ingresses/dmo-carrier-selection
    uid: bd68e36a-c108-11e8-b822-525400b06b0f
  spec:
    rules:
    - host: dmo-ops-center-be.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dmo-ops-center-be
            servicePort: 80
          path: /
    - host: dmo-ops-center-be.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dmo-ops-center-be
            servicePort: 80
          path: /
    - host: dmo-ops-center-be.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dmo-ops-center-be
            servicePort: 80
          path: /
    tls:
    - hosts:
      - dmo-ops-center-be.test.k8s.target.com
      - dmo-ops-center-be.ttc-test.k8s.target.com
      - dmo-ops-center-be.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"gardenia","namespace":"drone"},"spec":{"rules":[{"host":"gardenia-eng.target.com","http":{"paths":[{"backend":{"serviceName":"gardenia","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["gardenia-eng.target.com"],"secretName":"gardenia-vanity-secret"}]}}
    creationTimestamp: 2018-10-15T14:02:02Z
    generation: 1
    name: gardenia
    namespace: drone
    resourceVersion: "52215328"
    selfLink: /apis/extensions/v1beta1/namespaces/drone/ingresses/gardenia
    uid: e40a51b8-d082-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: gardenia-eng.target.com
      http:
        paths:
        - backend:
            serviceName: gardenia
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - gardenia-eng.target.com
      secretName: gardenia-vanity-secret
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"jarvis"},"name":"jarvis","namespace":"drone"},"spec":{"rules":[{"host":"jarvis.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"jarvis-service","servicePort":80},"path":"/"}]}},{"host":"jarvis.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"jarvis-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["jarvis.ttc-test.k8s.target.com","jarvis.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-13T16:58:58Z
    generation: 8
    labels:
      name: jarvis
    name: jarvis
    namespace: drone
    resourceVersion: "108945173"
    selfLink: /apis/extensions/v1beta1/namespaces/drone/ingresses/jarvis
    uid: 69c235d9-e765-11e8-9e69-525400e51df1
  spec:
    rules:
    - host: jarvis.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: jarvis-service
            servicePort: 80
          path: /
    - host: jarvis.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: jarvis-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - jarvis.ttc-test.k8s.target.com
      - jarvis.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"poterminator","namespace":"drone"},"spec":{"rules":[{"host":"poterminator.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"poterminator","servicePort":3000},"path":"/slack_events/v1/poterminator_dev-v1_events"},{"backend":{"serviceName":"poterminator","servicePort":3000},"path":"/event_health"},{"backend":{"serviceName":"poterminator","servicePort":4000},"path":"/slack_events/v1/poterminator_dev-v1_interactions"},{"backend":{"serviceName":"poterminator","servicePort":4000},"path":"/interaction_health"}]}},{"host":"poterminator.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"poterminator","servicePort":3000},"path":"/slack_events/v1/poterminator_dev-v1_events"},{"backend":{"serviceName":"poterminator","servicePort":3000},"path":"/event_health"},{"backend":{"serviceName":"poterminator","servicePort":4000},"path":"/slack_events/v1/poterminator_dev-v1_interactions"},{"backend":{"serviceName":"poterminator","servicePort":4000},"path":"/interaction_health"}]}}],"tls":[{"hosts":["poterminator.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-22T19:08:55Z
    generation: 2
    name: poterminator
    namespace: drone
    resourceVersion: "57887558"
    selfLink: /apis/extensions/v1beta1/namespaces/drone/ingresses/poterminator
    uid: ec35353d-d62d-11e8-ad5b-5254008c264f
  spec:
    rules:
    - host: poterminator.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: poterminator
            servicePort: 3000
          path: /slack_events/v1/poterminator_dev-v1_events
        - backend:
            serviceName: poterminator
            servicePort: 3000
          path: /event_health
        - backend:
            serviceName: poterminator
            servicePort: 4000
          path: /slack_events/v1/poterminator_dev-v1_interactions
        - backend:
            serviceName: poterminator
            servicePort: 4000
          path: /interaction_health
    - host: poterminator.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: poterminator
            servicePort: 3000
          path: /slack_events/v1/poterminator_dev-v1_events
        - backend:
            serviceName: poterminator
            servicePort: 3000
          path: /event_health
        - backend:
            serviceName: poterminator
            servicePort: 4000
          path: /slack_events/v1/poterminator_dev-v1_interactions
        - backend:
            serviceName: poterminator
            servicePort: 4000
          path: /interaction_health
    tls:
    - hosts:
      - poterminator.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"vault","namespace":"drone"},"spec":{"rules":[{"host":"drone-vault-eng.target.com","http":{"paths":[{"backend":{"serviceName":"vault","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["drone-vault-eng.target.com"],"secretName":"vault-vanity"}]}}
    creationTimestamp: 2018-10-10T19:38:59Z
    generation: 2
    name: vault
    namespace: drone
    resourceVersion: "58660644"
    selfLink: /apis/extensions/v1beta1/namespaces/drone/ingresses/vault
    uid: 22832e1c-ccc4-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: drone-vault-eng.target.com
      http:
        paths:
        - backend:
            serviceName: vault
            servicePort: 80
          path: /
    tls:
    - hosts:
      - drone-vault-eng.target.com
      secretName: vault-vanity
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"eciclient","name":"eciclient-ingress"},"name":"eciclient-ingress","namespace":"eci-stage"},"spec":{"rules":[{"host":"eciclient.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"eciclient-service","servicePort":8080},"path":"/"}]}},{"host":"eciclient.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"eciclient-service","servicePort":8080},"path":"/"}]}},{"host":"rhinofrs-s.target.com","http":{"paths":[{"backend":{"serviceName":"eciclient-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["eciclient.ttc-test.k8s.target.com","eciclient.test.k8s.target.com","rhinofrs-s.target.com"],"secretName":"vanitysecret"}]}}
    creationTimestamp: 2019-01-29T20:54:22Z
    generation: 2
    labels:
      app: eciclient
      name: eciclient-ingress
    name: eciclient-ingress
    namespace: eci-stage
    resourceVersion: "160922889"
    selfLink: /apis/extensions/v1beta1/namespaces/eci-stage/ingresses/eciclient-ingress
    uid: 0dc47c30-2408-11e9-940e-525400bb236b
  spec:
    rules:
    - host: eciclient.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: eciclient-service
            servicePort: 8080
          path: /
    - host: eciclient.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: eciclient-service
            servicePort: 8080
          path: /
    - host: rhinofrs-s.target.com
      http:
        paths:
        - backend:
            serviceName: eciclient-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - eciclient.ttc-test.k8s.target.com
      - eciclient.test.k8s.target.com
      - rhinofrs-s.target.com
      secretName: vanitysecret
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"ingestionapi","name":"ingestionapi-ingress"},"name":"ingestionapi-ingress","namespace":"eci-stage"},"spec":{"rules":[{"host":"ingestionapi.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ingestionapi-service","servicePort":8080},"path":"/"}]}},{"host":"ingestionapi.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ingestionapi-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["ingestionapi.ttc-test.k8s.target.com","ingestionapi.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-29T21:50:47Z
    generation: 1
    labels:
      app: ingestionapi
      name: ingestionapi-ingress
    name: ingestionapi-ingress
    namespace: eci-stage
    resourceVersion: "159927546"
    selfLink: /apis/extensions/v1beta1/namespaces/eci-stage/ingresses/ingestionapi-ingress
    uid: ef945616-240f-11e9-80e2-525400c55707
  spec:
    rules:
    - host: ingestionapi.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ingestionapi-service
            servicePort: 8080
          path: /
    - host: ingestionapi.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ingestionapi-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - ingestionapi.ttc-test.k8s.target.com
      - ingestionapi.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"activityapi","name":"activityapi-ingress"},"name":"activityapi-ingress","namespace":"eci-test"},"spec":{"rules":[{"host":"activityapi-t.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"activityapi-service","servicePort":8080},"path":"/"}]}},{"host":"activityapi-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"activityapi-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["activityapi-t.ttc-test.k8s.target.com","activityapi-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-29T20:33:18Z
    generation: 1
    labels:
      app: activityapi
      name: activityapi-ingress
    name: activityapi-ingress
    namespace: eci-test
    resourceVersion: "159856909"
    selfLink: /apis/extensions/v1beta1/namespaces/eci-test/ingresses/activityapi-ingress
    uid: 1ce4e60a-2405-11e9-80e2-525400c55707
  spec:
    rules:
    - host: activityapi-t.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: activityapi-service
            servicePort: 8080
          path: /
    - host: activityapi-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: activityapi-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - activityapi-t.ttc-test.k8s.target.com
      - activityapi-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"combine","name":"combine-ingress"},"name":"combine-ingress","namespace":"eci-test"},"spec":{"rules":[{"host":"combine-t.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"combine-service","servicePort":8080},"path":"/"}]}},{"host":"combine-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"combine-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["combine-t.ttc-test.k8s.target.com","combine-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-29T21:06:57Z
    generation: 1
    labels:
      app: combine
      name: combine-ingress
    name: combine-ingress
    namespace: eci-test
    resourceVersion: "159888612"
    selfLink: /apis/extensions/v1beta1/namespaces/eci-test/ingresses/combine-ingress
    uid: d02b334d-2409-11e9-940e-525400bb236b
  spec:
    rules:
    - host: combine-t.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: combine-service
            servicePort: 8080
          path: /
    - host: combine-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: combine-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - combine-t.ttc-test.k8s.target.com
      - combine-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"combineapi","name":"combineapi-ingress"},"name":"combineapi-ingress","namespace":"eci-test"},"spec":{"rules":[{"host":"combineapi-t.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"combineapi-service","servicePort":8080},"path":"/"}]}},{"host":"combineapi-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"combineapi-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["combineapi-t.ttc-test.k8s.target.com","combineapi-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-29T21:09:22Z
    generation: 1
    labels:
      app: combineapi
      name: combineapi-ingress
    name: combineapi-ingress
    namespace: eci-test
    resourceVersion: "159890392"
    selfLink: /apis/extensions/v1beta1/namespaces/eci-test/ingresses/combineapi-ingress
    uid: 266b66a8-240a-11e9-80e2-525400c55707
  spec:
    rules:
    - host: combineapi-t.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: combineapi-service
            servicePort: 8080
          path: /
    - host: combineapi-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: combineapi-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - combineapi-t.ttc-test.k8s.target.com
      - combineapi-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"docconversion","name":"docconversion-ingress"},"name":"docconversion-ingress","namespace":"eci-test"},"spec":{"rules":[{"host":"docconversion-t.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"docconversion-service","servicePort":8080},"path":"/"}]}},{"host":"docconversion-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"docconversion-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["docconversion-t.ttc-test.k8s.target.com","docconversion-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-30T00:24:09Z
    generation: 1
    labels:
      app: docconversion
      name: docconversion-ingress
    name: docconversion-ingress
    namespace: eci-test
    resourceVersion: "160051830"
    selfLink: /apis/extensions/v1beta1/namespaces/eci-test/ingresses/docconversion-ingress
    uid: 5c6f40b6-2425-11e9-80e2-525400c55707
  spec:
    rules:
    - host: docconversion-t.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: docconversion-service
            servicePort: 8080
          path: /
    - host: docconversion-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: docconversion-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - docconversion-t.ttc-test.k8s.target.com
      - docconversion-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"docschema","name":"docschemaapi-ingress"},"name":"docschemaapi-ingress","namespace":"eci-test"},"spec":{"rules":[{"host":"docschema-t.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"docschemaapi-service","servicePort":8080},"path":"/"}]}},{"host":"docschema-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"docschemaapi-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["docschema-t.ttc-test.k8s.target.com","docschema-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-30T00:24:11Z
    generation: 1
    labels:
      app: docschema
      name: docschemaapi-ingress
    name: docschemaapi-ingress
    namespace: eci-test
    resourceVersion: "160051829"
    selfLink: /apis/extensions/v1beta1/namespaces/eci-test/ingresses/docschemaapi-ingress
    uid: 5d9a006c-2425-11e9-940e-525400bb236b
  spec:
    rules:
    - host: docschema-t.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: docschemaapi-service
            servicePort: 8080
          path: /
    - host: docschema-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: docschemaapi-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - docschema-t.ttc-test.k8s.target.com
      - docschema-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"eciclient","name":"eciclient-ingress"},"name":"eciclient-ingress","namespace":"eci-test"},"spec":{"rules":[{"host":"eciclient-t.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"eciclient-service","servicePort":8080},"path":"/"}]}},{"host":"eciclient-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"eciclient-service","servicePort":8080},"path":"/"}]}},{"host":"rhinofrs-t.target.com","http":{"paths":[{"backend":{"serviceName":"eciclient-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["eciclient-t.ttc-test.k8s.target.com","eciclient-t.test.k8s.target.com","rhinofrs-t.target.com"],"secretName":"vanitysecret"}]}}
    creationTimestamp: 2019-01-29T20:53:47Z
    generation: 1
    labels:
      app: eciclient
      name: eciclient-ingress
    name: eciclient-ingress
    namespace: eci-test
    resourceVersion: "159873584"
    selfLink: /apis/extensions/v1beta1/namespaces/eci-test/ingresses/eciclient-ingress
    uid: f9681167-2407-11e9-940e-525400bb236b
  spec:
    rules:
    - host: eciclient-t.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: eciclient-service
            servicePort: 8080
          path: /
    - host: eciclient-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: eciclient-service
            servicePort: 8080
          path: /
    - host: rhinofrs-t.target.com
      http:
        paths:
        - backend:
            serviceName: eciclient-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - eciclient-t.ttc-test.k8s.target.com
      - eciclient-t.test.k8s.target.com
      - rhinofrs-t.target.com
      secretName: vanitysecret
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"fileapi","name":"fileapi-ingress"},"name":"fileapi-ingress","namespace":"eci-test"},"spec":{"rules":[{"host":"fileapi-t.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fileapi-service","servicePort":8080},"path":"/"}]}},{"host":"fileapi-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fileapi-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["fileapi-t.ttc-test.k8s.target.com","fileapi-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-30T14:07:03Z
    generation: 1
    labels:
      app: fileapi
      name: fileapi-ingress
    name: fileapi-ingress
    namespace: eci-test
    resourceVersion: "160681765"
    selfLink: /apis/extensions/v1beta1/namespaces/eci-test/ingresses/fileapi-ingress
    uid: 51728587-2498-11e9-940e-525400bb236b
  spec:
    rules:
    - host: fileapi-t.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fileapi-service
            servicePort: 8080
          path: /
    - host: fileapi-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fileapi-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - fileapi-t.ttc-test.k8s.target.com
      - fileapi-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"groupdocsjpoc","name":"groupdocsjpoc-ingress"},"name":"groupdocsjpoc-ingress","namespace":"eci-test"},"spec":{"rules":[{"host":"groupdocsjpoc-t.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"groupdocsjpoc-service","servicePort":8080},"path":"/"}]}},{"host":"groupdocsjpoc-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"groupdocsjpoc-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["groupdocsjpoc-t.ttc-test.k8s.target.com","groupdocsjpoc-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-30T00:24:49Z
    generation: 1
    labels:
      app: groupdocsjpoc
      name: groupdocsjpoc-ingress
    name: groupdocsjpoc-ingress
    namespace: eci-test
    resourceVersion: "160052816"
    selfLink: /apis/extensions/v1beta1/namespaces/eci-test/ingresses/groupdocsjpoc-ingress
    uid: 740a0645-2425-11e9-940e-525400bb236b
  spec:
    rules:
    - host: groupdocsjpoc-t.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: groupdocsjpoc-service
            servicePort: 8080
          path: /
    - host: groupdocsjpoc-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: groupdocsjpoc-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - groupdocsjpoc-t.ttc-test.k8s.target.com
      - groupdocsjpoc-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"guidgenapi","name":"guidgenapi-ingress"},"name":"guidgenapi-ingress","namespace":"eci-test"},"spec":{"rules":[{"host":"guidgenapi-t.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"guidgenapi-service","servicePort":8080},"path":"/"}]}},{"host":"guidgenapi-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"guidgenapi-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["guidgenapi-t.ttc-test.k8s.target.com","guidgenapi-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-03-08T16:39:03Z
    generation: 1
    labels:
      app: guidgenapi
      name: guidgenapi-ingress
    name: guidgenapi-ingress
    namespace: eci-test
    resourceVersion: "202293469"
    selfLink: /apis/extensions/v1beta1/namespaces/eci-test/ingresses/guidgenapi-ingress
    uid: aeafbf29-41c0-11e9-ad0c-5254005cae79
  spec:
    rules:
    - host: guidgenapi-t.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: guidgenapi-service
            servicePort: 8080
          path: /
    - host: guidgenapi-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: guidgenapi-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - guidgenapi-t.ttc-test.k8s.target.com
      - guidgenapi-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"ingestionapi","name":"ingestionapi-ingress"},"name":"ingestionapi-ingress","namespace":"eci-test"},"spec":{"rules":[{"host":"ingestionapi-t.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ingestionapi-service","servicePort":8080},"path":"/"}]}},{"host":"ingestionapi-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ingestionapi-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["ingestionapi-t.ttc-test.k8s.target.com","ingestionapi-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-29T21:50:26Z
    generation: 1
    labels:
      app: ingestionapi
      name: ingestionapi-ingress
    name: ingestionapi-ingress
    namespace: eci-test
    resourceVersion: "159926596"
    selfLink: /apis/extensions/v1beta1/namespaces/eci-test/ingresses/ingestionapi-ingress
    uid: e34bb452-240f-11e9-940e-525400bb236b
  spec:
    rules:
    - host: ingestionapi-t.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ingestionapi-service
            servicePort: 8080
          path: /
    - host: ingestionapi-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ingestionapi-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - ingestionapi-t.ttc-test.k8s.target.com
      - ingestionapi-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"mongoclean","name":"mongoclean-ingress"},"name":"mongoclean-ingress","namespace":"eci-test"},"spec":{"rules":[{"host":"mongoclean-t.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mongoclean-service","servicePort":8080},"path":"/"}]}},{"host":"mongoclean-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mongoclean-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["mongoclean-t.ttc-test.k8s.target.com","mongoclean-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-29T21:16:28Z
    generation: 1
    labels:
      app: mongoclean
      name: mongoclean-ingress
    name: mongoclean-ingress
    namespace: eci-test
    resourceVersion: "159897660"
    selfLink: /apis/extensions/v1beta1/namespaces/eci-test/ingresses/mongoclean-ingress
    uid: 247c7579-240b-11e9-940e-525400bb236b
  spec:
    rules:
    - host: mongoclean-t.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mongoclean-service
            servicePort: 8080
          path: /
    - host: mongoclean-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mongoclean-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - mongoclean-t.ttc-test.k8s.target.com
      - mongoclean-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presort","name":"presort-ingress"},"name":"presort-ingress","namespace":"eci-test"},"spec":{"rules":[{"host":"presort-t.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presort-service","servicePort":8080},"path":"/"}]}},{"host":"presort-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presort-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["presort-t.ttc-test.k8s.target.com","presort-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-29T21:56:20Z
    generation: 1
    labels:
      app: presort
      name: presort-ingress
    name: presort-ingress
    namespace: eci-test
    resourceVersion: "159931612"
    selfLink: /apis/extensions/v1beta1/namespaces/eci-test/ingresses/presort-ingress
    uid: b6072d05-2410-11e9-80e2-525400c55707
  spec:
    rules:
    - host: presort-t.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presort-service
            servicePort: 8080
          path: /
    - host: presort-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presort-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - presort-t.ttc-test.k8s.target.com
      - presort-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"sprelease","name":"sprelease-ingress"},"name":"sprelease-ingress","namespace":"eci-test"},"spec":{"rules":[{"host":"sprelease-t.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"sprelease-service","servicePort":8080},"path":"/"}]}},{"host":"sprelease-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"sprelease-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["sprelease-t.ttc-test.k8s.target.com","sprelease-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-29T21:50:26Z
    generation: 1
    labels:
      app: sprelease
      name: sprelease-ingress
    name: sprelease-ingress
    namespace: eci-test
    resourceVersion: "159926595"
    selfLink: /apis/extensions/v1beta1/namespaces/eci-test/ingresses/sprelease-ingress
    uid: e3267117-240f-11e9-80e2-525400c55707
  spec:
    rules:
    - host: sprelease-t.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: sprelease-service
            servicePort: 8080
          path: /
    - host: sprelease-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: sprelease-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - sprelease-t.ttc-test.k8s.target.com
      - sprelease-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"svccompletion","name":"svccompletion-ingress"},"name":"svccompletion-ingress","namespace":"eci-test"},"spec":{"rules":[{"host":"svccompletion-t.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"svccompletion-service","servicePort":8080},"path":"/"}]}},{"host":"svccompletion-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"svccompletion-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["svccompletion-t.ttc-test.k8s.target.com","svccompletion-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-29T21:42:39Z
    generation: 1
    labels:
      app: svccompletion
      name: svccompletion-ingress
    name: svccompletion-ingress
    namespace: eci-test
    resourceVersion: "159920315"
    selfLink: /apis/extensions/v1beta1/namespaces/eci-test/ingresses/svccompletion-ingress
    uid: ccc074d3-240e-11e9-940e-525400bb236b
  spec:
    rules:
    - host: svccompletion-t.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: svccompletion-service
            servicePort: 8080
          path: /
    - host: svccompletion-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: svccompletion-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - svccompletion-t.ttc-test.k8s.target.com
      - svccompletion-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"workflow","name":"workflowapi-ingress"},"name":"workflowapi-ingress","namespace":"eci-test"},"spec":{"rules":[{"host":"workflowapi-t.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"workflowapi-service","servicePort":8080},"path":"/"}]}},{"host":"workflowapi-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"workflowapi-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["workflowapi-t.ttc-test.k8s.target.com","workflowapi-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-29T21:42:58Z
    generation: 1
    labels:
      app: workflow
      name: workflowapi-ingress
    name: workflowapi-ingress
    namespace: eci-test
    resourceVersion: "159920314"
    selfLink: /apis/extensions/v1beta1/namespaces/eci-test/ingresses/workflowapi-ingress
    uid: d7f4d2f4-240e-11e9-879f-5254005a994c
  spec:
    rules:
    - host: workflowapi-t.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: workflowapi-service
            servicePort: 8080
          path: /
    - host: workflowapi-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: workflowapi-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - workflowapi-t.ttc-test.k8s.target.com
      - workflowapi-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-01-17T09:24:34Z
    generation: 1
    labels:
      name: dev-itemlistplanattr-ing
    name: dev-itemlistplanattr-ing
    namespace: eil-aggregator-dev
    resourceVersion: "145513803"
    selfLink: /apis/extensions/v1beta1/namespaces/eil-aggregator-dev/ingresses/dev-itemlistplanattr-ing
    uid: b4146942-1a39-11e9-bdc1-525400cfa7b2
  spec:
    rules:
    - host: apex-only-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dev-itemlistplanattr-srv
            servicePort: 8080
          path: /
    - host: apex-only-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dev-itemlistplanattr-srv
            servicePort: 8080
          path: /
    - host: apex-only-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dev-itemlistplanattr-srv
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - apex-only-dev.test.k8s.target.com
      - apex-only-dev.ttc-test.k8s.target.com
    - hosts:
      - apex-only-dev.test.k8s.target.com
      - apex-only-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"dev-nginx-enterpriseitemlist"},"name":"dev-nginx-enterpriseitemlist","namespace":"eil-aggregator-dev"},"spec":{"rules":[{"host":"enterpriseitemlist-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dev-nginx-enterpriseitemlist","servicePort":8080},"path":"/"}]}},{"host":"enterpriseitemlist-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dev-nginx-enterpriseitemlist","servicePort":8080},"path":"/"}]}},{"host":"enterpriseitemlist-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dev-nginx-enterpriseitemlist","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["enterpriseitemlist-dev.test.k8s.target.com","enterpriseitemlist-dev.ttc-test.k8s.target.com"]},{"hosts":["enterpriseitemlist-dev.test.k8s.target.com","enterpriseitemlist-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-15T05:27:16Z
    generation: 3
    labels:
      name: dev-nginx-enterpriseitemlist
    name: dev-nginx-enterpriseitemlist
    namespace: eil-aggregator-dev
    resourceVersion: "80904754"
    selfLink: /apis/extensions/v1beta1/namespaces/eil-aggregator-dev/ingresses/dev-nginx-enterpriseitemlist
    uid: 1d87f7f0-e897-11e8-981f-5254001f7df6
  spec:
    rules:
    - host: enterpriseitemlist-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dev-nginx-enterpriseitemlist
            servicePort: 8080
          path: /
    - host: enterpriseitemlist-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dev-nginx-enterpriseitemlist
            servicePort: 8080
          path: /
    - host: enterpriseitemlist-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dev-nginx-enterpriseitemlist
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - enterpriseitemlist-dev.test.k8s.target.com
      - enterpriseitemlist-dev.ttc-test.k8s.target.com
    - hosts:
      - enterpriseitemlist-dev.test.k8s.target.com
      - enterpriseitemlist-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-11T18:05:37Z
    generation: 1
    labels:
      name: dev-usertcinlist-ing
    name: dev-usertcinlist-ing
    namespace: eil-aggregator-dev
    resourceVersion: "205330743"
    selfLink: /apis/extensions/v1beta1/namespaces/eil-aggregator-dev/ingresses/dev-usertcinlist-ing
    uid: 45dae6fb-4428-11e9-9ed7-5254006b625b
  spec:
    rules:
    - host: usertcinlist-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dev-usertcinlist-srv
            servicePort: 8080
          path: /
    - host: usertcinlist-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dev-usertcinlist-srv
            servicePort: 8080
          path: /
    - host: usertcinlist-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dev-usertcinlist-srv
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - usertcinlist-dev.test.k8s.target.com
      - usertcinlist-dev.ttc-test.k8s.target.com
    - hosts:
      - usertcinlist-dev.test.k8s.target.com
      - usertcinlist-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"stage-itemlistplanattr-ing"},"name":"stage-itemlistplanattr-ing","namespace":"eil-aggregator-stage"},"spec":{"rules":[{"host":"apex-only-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"stage-itemlistplanattr-srv","servicePort":8080},"path":"/"}]}},{"host":"apex-only-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"stage-itemlistplanattr-srv","servicePort":8080},"path":"/"}]}},{"host":"apex-only-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"stage-itemlistplanattr-srv","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["apex-only-stage.test.k8s.target.com","apex-only-stage.ttc-test.k8s.target.com"]},{"hosts":["apex-only-stage.test.k8s.target.com","apex-only-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-21T13:35:35Z
    generation: 1
    labels:
      name: stage-itemlistplanattr-ing
    name: stage-itemlistplanattr-ing
    namespace: eil-aggregator-stage
    resourceVersion: "84187160"
    selfLink: /apis/extensions/v1beta1/namespaces/eil-aggregator-stage/ingresses/stage-itemlistplanattr-ing
    uid: 534b03d9-ed92-11e8-ad5a-525400a9bf14
  spec:
    rules:
    - host: apex-only-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: stage-itemlistplanattr-srv
            servicePort: 8080
          path: /
    - host: apex-only-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: stage-itemlistplanattr-srv
            servicePort: 8080
          path: /
    - host: apex-only-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: stage-itemlistplanattr-srv
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - apex-only-stage.test.k8s.target.com
      - apex-only-stage.ttc-test.k8s.target.com
    - hosts:
      - apex-only-stage.test.k8s.target.com
      - apex-only-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"stage-nginx-enterpriseitemlist"},"name":"stage-nginx-enterpriseitemlist","namespace":"eil-aggregator-stage"},"spec":{"rules":[{"host":"enterpriseitemlist-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"stage-nginx-enterpriseitemlist","servicePort":8080},"path":"/"}]}},{"host":"enterpriseitemlist-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"stage-nginx-enterpriseitemlist","servicePort":8080},"path":"/"}]}},{"host":"enterpriseitemlist-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"stage-nginx-enterpriseitemlist","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["enterpriseitemlist-stage.test.k8s.target.com","enterpriseitemlist-stage.ttc-test.k8s.target.com"]},{"hosts":["enterpriseitemlist-stage.test.k8s.target.com","enterpriseitemlist-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-21T09:31:07Z
    generation: 1
    labels:
      name: stage-nginx-enterpriseitemlist
    name: stage-nginx-enterpriseitemlist
    namespace: eil-aggregator-stage
    resourceVersion: "84011053"
    selfLink: /apis/extensions/v1beta1/namespaces/eil-aggregator-stage/ingresses/stage-nginx-enterpriseitemlist
    uid: 2c81b741-ed70-11e8-9e69-525400e51df1
  spec:
    rules:
    - host: enterpriseitemlist-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: stage-nginx-enterpriseitemlist
            servicePort: 8080
          path: /
    - host: enterpriseitemlist-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: stage-nginx-enterpriseitemlist
            servicePort: 8080
          path: /
    - host: enterpriseitemlist-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: stage-nginx-enterpriseitemlist
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - enterpriseitemlist-stage.test.k8s.target.com
      - enterpriseitemlist-stage.ttc-test.k8s.target.com
    - hosts:
      - enterpriseitemlist-stage.test.k8s.target.com
      - enterpriseitemlist-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"stage-usertcinlist-ing"},"name":"stage-usertcinlist-ing","namespace":"eil-aggregator-stage"},"spec":{"rules":[{"host":"usertcinlist-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"stage-usertcinlist-srv","servicePort":8080},"path":"/"}]}},{"host":"usertcinlist-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"stage-usertcinlist-srv","servicePort":8080},"path":"/"}]}},{"host":"usertcinlist-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"stage-usertcinlist-srv","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["usertcinlist-stage.test.k8s.target.com","usertcinlist-stage.ttc-test.k8s.target.com"]},{"hosts":["usertcinlist-stage.test.k8s.target.com","usertcinlist-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-22T05:38:56Z
    generation: 1
    labels:
      name: stage-usertcinlist-ing
    name: stage-usertcinlist-ing
    namespace: eil-aggregator-stage
    resourceVersion: "84913866"
    selfLink: /apis/extensions/v1beta1/namespaces/eil-aggregator-stage/ingresses/stage-usertcinlist-ing
    uid: e74705ca-ee18-11e8-ad5a-525400a9bf14
  spec:
    rules:
    - host: usertcinlist-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: stage-usertcinlist-srv
            servicePort: 8080
          path: /
    - host: usertcinlist-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: stage-usertcinlist-srv
            servicePort: 8080
          path: /
    - host: usertcinlist-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: stage-usertcinlist-srv
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - usertcinlist-stage.test.k8s.target.com
      - usertcinlist-stage.ttc-test.k8s.target.com
    - hosts:
      - usertcinlist-stage.test.k8s.target.com
      - usertcinlist-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"enterprise-returns-service-ingress-dev"},"name":"enterprise-returns-service-ingress-dev","namespace":"enterprise-refunds"},"spec":{"rules":[{"host":"enterprise-returns-service.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"enterprise-returns-service-service-dev","servicePort":8080},"path":"/"}]}},{"host":"enterprise-returns-service.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"enterprise-returns-service-service-dev","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["enterprise-returns-service.test.k8s.target.com","enterprise-returns-service.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-27T14:14:53Z
    generation: 1
    labels:
      name: enterprise-returns-service-ingress-dev
    name: enterprise-returns-service-ingress-dev
    namespace: enterprise-refunds
    resourceVersion: "90379462"
    selfLink: /apis/extensions/v1beta1/namespaces/enterprise-refunds/ingresses/enterprise-returns-service-ingress-dev
    uid: cf8caa9c-f24e-11e8-9e69-525400e51df1
  spec:
    rules:
    - host: enterprise-returns-service.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: enterprise-returns-service-service-dev
            servicePort: 8080
          path: /
    - host: enterprise-returns-service.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: enterprise-returns-service-service-dev
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - enterprise-returns-service.test.k8s.target.com
      - enterprise-returns-service.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"enterprise-returns-service-ingress-stage"},"name":"enterprise-returns-service-ingress-stage","namespace":"enterprise-refunds"},"spec":{"rules":[{"host":"enterprise-returns-service-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"go-proxy-service","servicePort":80},"path":"/"}]}},{"host":"enterprise-returns-service-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"go-proxy-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["enterprise-returns-service-stage.test.k8s.target.com","enterprise-returns-service-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-04T14:44:23Z
    generation: 1
    labels:
      name: enterprise-returns-service-ingress-stage
    name: enterprise-returns-service-ingress-stage
    namespace: enterprise-refunds
    resourceVersion: "97915191"
    selfLink: /apis/extensions/v1beta1/namespaces/enterprise-refunds/ingresses/enterprise-returns-service-ingress-stage
    uid: 172b5f74-f7d3-11e8-ad5a-525400a9bf14
  spec:
    rules:
    - host: enterprise-returns-service-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: go-proxy-service
            servicePort: 80
          path: /
    - host: enterprise-returns-service-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: go-proxy-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - enterprise-returns-service-stage.test.k8s.target.com
      - enterprise-returns-service-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"sales-api-simulator-ingress"},"name":"sales-api-simulator-ingress","namespace":"enterprise-returns-simulator"},"spec":{"rules":[{"host":"sales-api-simulator.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"sales-api-simulator-service","servicePort":8080},"path":"/"}]}},{"host":"sales-api-simulator.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"sales-api-simulator-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["sales-api-simulator.test.k8s.target.com","sales-api-simulator.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-03T09:16:03Z
    generation: 1
    labels:
      name: sales-api-simulator-ingress
    name: sales-api-simulator-ingress
    namespace: enterprise-returns-simulator
    resourceVersion: "96563451"
    selfLink: /apis/extensions/v1beta1/namespaces/enterprise-returns-simulator/ingresses/sales-api-simulator-ingress
    uid: 0f012332-f6dc-11e8-ad5a-525400a9bf14
  spec:
    rules:
    - host: sales-api-simulator.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: sales-api-simulator-service
            servicePort: 8080
          path: /
    - host: sales-api-simulator.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: sales-api-simulator-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - sales-api-simulator.test.k8s.target.com
      - sales-api-simulator.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-01-09T21:12:45Z
    generation: 1
    labels:
      group: data-chugger-node-ad-impression-analytics-ingest
    name: data-chugger-node-ad-impression-analytics-ingest-ingress
    namespace: firefly-ingest
    resourceVersion: "137552295"
    selfLink: /apis/extensions/v1beta1/namespaces/firefly-ingest/ingresses/data-chugger-node-ad-impression-analytics-ingest-ingress
    uid: 4ef04c84-1453-11e9-aa7e-5254007ca0e4
  spec:
    rules:
    - host: data-chugger-node-ad-impression-analytics-ingest.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: data-chugger-node-ad-impression-analytics-ingest-service
            servicePort: 80
          path: /
    - host: data-chugger-node-ad-impression-analytics-ingest.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: data-chugger-node-ad-impression-analytics-ingest-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - data-chugger-node-ad-impression-analytics-ingest.ttc-test.k8s.target.com
      - data-chugger-node-ad-impression-analytics-ingest.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-01-15T17:30:19Z
    generation: 1
    labels:
      group: data-chugger-node-mobile-pos-analytics-ingest
    name: data-chugger-node-mobile-pos-analytics-ingest-ingress
    namespace: firefly-ingest
    resourceVersion: "143714535"
    selfLink: /apis/extensions/v1beta1/namespaces/firefly-ingest/ingresses/data-chugger-node-mobile-pos-analytics-ingest-ingress
    uid: 3b16699f-18eb-11e9-bdc1-525400cfa7b2
  spec:
    rules:
    - host: data-chugger-node-mobile-pos-analytics-ingest.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: data-chugger-node-mobile-pos-analytics-ingest-service
            servicePort: 80
          path: /
    - host: data-chugger-node-mobile-pos-analytics-ingest.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: data-chugger-node-mobile-pos-analytics-ingest-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - data-chugger-node-mobile-pos-analytics-ingest.ttc-test.k8s.target.com
      - data-chugger-node-mobile-pos-analytics-ingest.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-01-10T20:21:17Z
    generation: 1
    labels:
      group: data-chugger-node-myperfmobile-analytics-ingest
    name: data-chugger-node-myperfmobile-analytics-ingest-ingress
    namespace: firefly-ingest
    resourceVersion: "138635942"
    selfLink: /apis/extensions/v1beta1/namespaces/firefly-ingest/ingresses/data-chugger-node-myperfmobile-analytics-ingest-ingress
    uid: 4928d51c-1515-11e9-a085-525400e7b4ef
  spec:
    rules:
    - host: data-chugger-node-myperfmobile-analytics-ingest.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: data-chugger-node-myperfmobile-analytics-ingest-service
            servicePort: 80
          path: /
    - host: data-chugger-node-myperfmobile-analytics-ingest.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: data-chugger-node-myperfmobile-analytics-ingest-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - data-chugger-node-myperfmobile-analytics-ingest.ttc-test.k8s.target.com
      - data-chugger-node-myperfmobile-analytics-ingest.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-01-09T21:12:25Z
    generation: 1
    labels:
      group: data-chugger-node-target-mobile-analytics-ingest
    name: data-chugger-node-target-mobile-analytics-ingest-ingress
    namespace: firefly-ingest
    resourceVersion: "137551830"
    selfLink: /apis/extensions/v1beta1/namespaces/firefly-ingest/ingresses/data-chugger-node-target-mobile-analytics-ingest-ingress
    uid: 435f1abc-1453-11e9-aa7e-5254007ca0e4
  spec:
    rules:
    - host: data-chugger-node-target-mobile-analytics-ingest.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: data-chugger-node-target-mobile-analytics-ingest-service
            servicePort: 80
          path: /
    - host: data-chugger-node-target-mobile-analytics-ingest.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: data-chugger-node-target-mobile-analytics-ingest-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - data-chugger-node-target-mobile-analytics-ingest.ttc-test.k8s.target.com
      - data-chugger-node-target-mobile-analytics-ingest.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-01-17T21:56:30Z
    generation: 1
    labels:
      group: data-chugger-node-web-analytics-ingest
    name: data-chugger-node-web-analytics-ingest-ingress
    namespace: firefly-ingest
    resourceVersion: "146056708"
    selfLink: /apis/extensions/v1beta1/namespaces/firefly-ingest/ingresses/data-chugger-node-web-analytics-ingest-ingress
    uid: bf5e1b92-1aa2-11e9-bdc1-525400cfa7b2
  spec:
    rules:
    - host: data-chugger-node-web-analytics-ingest.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: data-chugger-node-web-analytics-ingest-service
            servicePort: 80
          path: /
    - host: data-chugger-node-web-analytics-ingest.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: data-chugger-node-web-analytics-ingest-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - data-chugger-node-web-analytics-ingest.ttc-test.k8s.target.com
      - data-chugger-node-web-analytics-ingest.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-01-18T23:31:41Z
    generation: 1
    labels:
      group: kafka-rest
    name: kafka-rest-ingress
    namespace: firefly-ingest
    resourceVersion: "147131440"
    selfLink: /apis/extensions/v1beta1/namespaces/firefly-ingest/ingresses/kafka-rest-ingress
    uid: 3560a6cc-1b79-11e9-bdc1-525400cfa7b2
  spec:
    rules:
    - host: kafka-rest.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: kafka-rest-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - kafka-rest.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"gdm-gc-purge-ingress"},"name":"gdm-gc-purge-ingress","namespace":"gdm-dev"},"spec":{"rules":[{"host":"gdm-gc-purge-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"gdm-gc-purge-service","servicePort":8080},"path":"/"}]}},{"host":"gdm-gc-purge-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"gdm-gc-purge-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["gdm-gc-purge-dev.ttc-test.k8s.target.com","gdm-gc-purge-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T17:32:51Z
    generation: 1
    labels:
      name: gdm-gc-purge-ingress
    name: gdm-gc-purge-ingress
    namespace: gdm-dev
    resourceVersion: "49225517"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-dev/ingresses/gdm-gc-purge-ingress
    uid: 5d9bfc37-bdc4-11e8-a79d-525400524761
  spec:
    rules:
    - host: gdm-gc-purge-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: gdm-gc-purge-service
            servicePort: 8080
          path: /
    - host: gdm-gc-purge-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: gdm-gc-purge-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - gdm-gc-purge-dev.ttc-test.k8s.target.com
      - gdm-gc-purge-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"gdm-guest-purge-ingress"},"name":"gdm-guest-purge-ingress","namespace":"gdm-dev"},"spec":{"rules":[{"host":"gdm-guest-purge-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"gdm-guest-purge-service","servicePort":8080},"path":"/"}]}},{"host":"gdm-guest-purge-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"gdm-guest-purge-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["gdm-guest-purge-dev.ttc-test.k8s.target.com","gdm-guest-purge-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T16:46:55Z
    generation: 1
    labels:
      name: gdm-guest-purge-ingress
    name: gdm-guest-purge-ingress
    namespace: gdm-dev
    resourceVersion: "49225899"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-dev/ingresses/gdm-guest-purge-ingress
    uid: f29069a9-bdbd-11e8-a79d-525400524761
  spec:
    rules:
    - host: gdm-guest-purge-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: gdm-guest-purge-service
            servicePort: 8080
          path: /
    - host: gdm-guest-purge-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: gdm-guest-purge-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - gdm-guest-purge-dev.ttc-test.k8s.target.com
      - gdm-guest-purge-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"gdm-guest-search-api-ingress"},"name":"gdm-guest-search-api-ingress","namespace":"gdm-dev"},"spec":{"rules":[{"host":"gdm-guest-search-api-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"gdm-guest-search-api-service","servicePort":8080},"path":"/"}]}},{"host":"gdm-guest-search-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"gdm-guest-search-api-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["gdm-guest-search-api-dev.ttc-test.k8s.target.com","gdm-guest-search-api-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-28T17:55:01Z
    generation: 2
    labels:
      name: gdm-guest-search-api-ingress
    name: gdm-guest-search-api-ingress
    namespace: gdm-dev
    resourceVersion: "92636507"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-dev/ingresses/gdm-guest-search-api-ingress
    uid: ba47b4fb-f336-11e8-9e69-525400e51df1
  spec:
    rules:
    - host: gdm-guest-search-api-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: gdm-guest-search-api-service
            servicePort: 8080
          path: /
    - host: gdm-guest-search-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: gdm-guest-search-api-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - gdm-guest-search-api-dev.ttc-test.k8s.target.com
      - gdm-guest-search-api-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"gdmguestprocessor-ingress"},"name":"gdmguestprocessor-ingress","namespace":"gdm-dev"},"spec":{"rules":[{"host":"gdm-gdmguestprocessor-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"gdmguestprocessor-service","servicePort":8080},"path":"/"}]}},{"host":"gdm-gdmguestprocessor-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"gdmguestprocessor-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["gdm-gdmguestprocessor-dev.ttc-test.k8s.target.com","gdm-gdmguestprocessor-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-29T18:59:29Z
    generation: 2
    labels:
      name: gdmguestprocessor-ingress
    name: gdmguestprocessor-ingress
    namespace: gdm-dev
    resourceVersion: "49225856"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-dev/ingresses/gdmguestprocessor-ingress
    uid: a8567e46-abbd-11e8-b402-525400b06b0f
  spec:
    rules:
    - host: gdm-gdmguestprocessor-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: gdmguestprocessor-service
            servicePort: 8080
          path: /
    - host: gdm-gdmguestprocessor-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: gdmguestprocessor-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - gdm-gdmguestprocessor-dev.ttc-test.k8s.target.com
      - gdm-gdmguestprocessor-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"gdmguestpublish-ingress"},"name":"gdmguestpublish-ingress","namespace":"gdm-dev"},"spec":{"rules":[{"host":"gdm-gdmguestpublish-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"gdmguestpublish-service","servicePort":8080},"path":"/"}]}},{"host":"gdm-gdmguestpublish-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"gdmguestpublish-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["gdm-gdmguestpublish-dev.ttc-test.k8s.target.com","gdm-gdmguestpublish-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-26T15:23:33Z
    generation: 1
    labels:
      name: gdmguestpublish-ingress
    name: gdmguestpublish-ingress
    namespace: gdm-dev
    resourceVersion: "60898701"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-dev/ingresses/gdmguestpublish-ingress
    uid: 1a18bfec-d933-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: gdm-gdmguestpublish-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: gdmguestpublish-service
            servicePort: 8080
          path: /
    - host: gdm-gdmguestpublish-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: gdmguestpublish-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - gdm-gdmguestpublish-dev.ttc-test.k8s.target.com
      - gdm-gdmguestpublish-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"guest-choice-core-api-ingress"},"name":"guest-choice-core-api-ingress","namespace":"gdm-dev"},"spec":{"rules":[{"host":"gdm-guest-choice-core-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"guest-choice-core-api-service","servicePort":8080},"path":"/"}]}},{"host":"gdm-guest-choice-core-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"guest-choice-core-api-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["gdm-guest-choice-core-dev.ttc-test.k8s.target.com","gdm-guest-choice-core-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T20:01:56Z
    generation: 1
    labels:
      name: guest-choice-core-api-ingress
    name: guest-choice-core-api-ingress
    namespace: gdm-dev
    resourceVersion: "49225423"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-dev/ingresses/guest-choice-core-api-ingress
    uid: 31638490-bdd9-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: gdm-guest-choice-core-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: guest-choice-core-api-service
            servicePort: 8080
          path: /
    - host: gdm-guest-choice-core-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: guest-choice-core-api-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - gdm-guest-choice-core-dev.ttc-test.k8s.target.com
      - gdm-guest-choice-core-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"guest-to-contact-mechanism-api-ingress"},"name":"guest-to-contact-mechanism-api-ingress","namespace":"gdm-dev"},"spec":{"rules":[{"host":"guest-to-contact-mechanism-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"guest-to-contact-mechanism-api-service","servicePort":8080},"path":"/"}]}},{"host":"guest-to-contact-mechanism-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"guest-to-contact-mechanism-api-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["guest-to-contact-mechanism-dev.ttc-test.k8s.target.com","guest-to-contact-mechanism-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T17:59:58Z
    generation: 2
    labels:
      name: guest-to-contact-mechanism-api-ingress
    name: guest-to-contact-mechanism-api-ingress
    namespace: gdm-dev
    resourceVersion: "49225969"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-dev/ingresses/guest-to-contact-mechanism-api-ingress
    uid: 271a88a3-bdc8-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: guest-to-contact-mechanism-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: guest-to-contact-mechanism-api-service
            servicePort: 8080
          path: /
    - host: guest-to-contact-mechanism-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: guest-to-contact-mechanism-api-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - guest-to-contact-mechanism-dev.ttc-test.k8s.target.com
      - guest-to-contact-mechanism-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"hadoop-purge-ack-ingress"},"name":"hadoop-purge-ack-ingress","namespace":"gdm-dev"},"spec":{"rules":[{"host":"hadoop-purge-ack-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"hadoop-purge-ack-service","servicePort":8080},"path":"/"}]}},{"host":"hadoop-purge-ack-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"hadoop-purge-ack-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["hadoop-purge-ack-dev.ttc-test.k8s.target.com","hadoop-purge-ack-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-28T09:38:16Z
    generation: 6
    labels:
      name: hadoop-purge-ack-ingress
    name: hadoop-purge-ack-ingress
    namespace: gdm-dev
    resourceVersion: "49225781"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-dev/ingresses/hadoop-purge-ack-ingress
    uid: 17401a3b-aaa6-11e8-bf09-525400b93a8e
  spec:
    rules:
    - host: hadoop-purge-ack-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: hadoop-purge-ack-service
            servicePort: 8080
          path: /
    - host: hadoop-purge-ack-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: hadoop-purge-ack-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - hadoop-purge-ack-dev.ttc-test.k8s.target.com
      - hadoop-purge-ack-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"janusingestion-ingress"},"name":"janusingestion-ingress","namespace":"gdm-dev"},"spec":{"rules":[{"host":"gdm-janusingestion-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"janusingestion-service","servicePort":8080},"path":"/"}]}},{"host":"gdm-janusingestion-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"janusingestion-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["gdm-janusingestion-dev.ttc-test.k8s.target.com","gdm-janusingestion-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-31T11:23:41Z
    generation: 1
    labels:
      name: janusingestion-ingress
    name: janusingestion-ingress
    namespace: gdm-dev
    resourceVersion: "161711109"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-dev/ingresses/janusingestion-ingress
    uid: a99d3403-254a-11e9-a621-525400d4de49
  spec:
    rules:
    - host: gdm-janusingestion-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: janusingestion-service
            servicePort: 8080
          path: /
    - host: gdm-janusingestion-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: janusingestion-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - gdm-janusingestion-dev.ttc-test.k8s.target.com
      - gdm-janusingestion-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"l1-master-incremental-out-ingress"},"name":"l1-master-incremental-out-ingress","namespace":"gdm-dev"},"spec":{"rules":[{"host":"l1-master-incremental-out-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"l1-master-incremental-out-service","servicePort":8080},"path":"/"}]}},{"host":"l1-master-incremental-out-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"l1-master-incremental-out-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["l1-master-incremental-out-dev.ttc-test.k8s.target.com","l1-master-incremental-out-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-12T10:51:57Z
    generation: 1
    labels:
      name: l1-master-incremental-out-ingress
    name: l1-master-incremental-out-ingress
    namespace: gdm-dev
    resourceVersion: "49225703"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-dev/ingresses/l1-master-incremental-out-ingress
    uid: de398ed1-b679-11e8-8488-525400b06b0f
  spec:
    rules:
    - host: l1-master-incremental-out-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: l1-master-incremental-out-service
            servicePort: 8080
          path: /
    - host: l1-master-incremental-out-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: l1-master-incremental-out-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - l1-master-incremental-out-dev.ttc-test.k8s.target.com
      - l1-master-incremental-out-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"l3-contactmechanism-service-api-ingress"},"name":"l3-contactmechanism-service-api-ingress","namespace":"gdm-dev"},"spec":{"rules":[{"host":"gdm-l3-contactmechanism-service-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"l3-contactmechanism-service","servicePort":8080},"path":"/"}]}},{"host":"gdm-l3-contactmechanism-service-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"l3-contactmechanism-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["gdm-l3-contactmechanism-service-dev.ttc-test.k8s.target.com","gdm-l3-contactmechanism-service-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-24T21:12:19Z
    generation: 3
    labels:
      name: l3-contactmechanism-service-api-ingress
    name: l3-contactmechanism-service-api-ingress
    namespace: gdm-dev
    resourceVersion: "49225909"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-dev/ingresses/l3-contactmechanism-service-api-ingress
    uid: 85c0e5fe-c03e-11e8-b822-525400b06b0f
  spec:
    rules:
    - host: gdm-l3-contactmechanism-service-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: l3-contactmechanism-service
            servicePort: 8080
          path: /
    - host: gdm-l3-contactmechanism-service-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: l3-contactmechanism-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - gdm-l3-contactmechanism-service-dev.ttc-test.k8s.target.com
      - gdm-l3-contactmechanism-service-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"l3-master-publish-hadoop-ingress"},"name":"l3-master-publish-hadoop-ingress","namespace":"gdm-dev"},"spec":{"rules":[{"host":"l3-master-publish-hadoop-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"l3-master-publish-hadoop-service","servicePort":8080},"path":"/"}]}},{"host":"l3-master-publish-hadoop-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"l3-master-publish-hadoop-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["l3-master-publish-hadoop-dev.ttc-test.k8s.target.com","l3-master-publish-hadoop-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-12T10:52:56Z
    generation: 1
    labels:
      name: l3-master-publish-hadoop-ingress
    name: l3-master-publish-hadoop-ingress
    namespace: gdm-dev
    resourceVersion: "49225338"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-dev/ingresses/l3-master-publish-hadoop-ingress
    uid: 016514a5-b67a-11e8-8462-525400b93a8e
  spec:
    rules:
    - host: l3-master-publish-hadoop-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: l3-master-publish-hadoop-service
            servicePort: 8080
          path: /
    - host: l3-master-publish-hadoop-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: l3-master-publish-hadoop-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - l3-master-publish-hadoop-dev.ttc-test.k8s.target.com
      - l3-master-publish-hadoop-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"l3-master-service-api-ingress"},"name":"l3-master-service-api-ingress","namespace":"gdm-dev"},"spec":{"rules":[{"host":"gdm-l3-master-service-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"l3-master-service","servicePort":8080},"path":"/"}]}},{"host":"gdm-l3-master-service-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"l3-master-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["gdm-l3-master-service-dev.ttc-test.k8s.target.com","gdm-l3-master-service-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-25T22:09:37Z
    generation: 1
    labels:
      name: l3-master-service-api-ingress
    name: l3-master-service-api-ingress
    namespace: gdm-dev
    resourceVersion: "49225823"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-dev/ingresses/l3-master-service-api-ingress
    uid: b0fa9ccb-c10f-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: gdm-l3-master-service-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: l3-master-service
            servicePort: 8080
          path: /
    - host: gdm-l3-master-service-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: l3-master-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - gdm-l3-master-service-dev.ttc-test.k8s.target.com
      - gdm-l3-master-service-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"marketability-decision-api-ingress"},"name":"marketability-decision-api-ingress","namespace":"gdm-dev"},"spec":{"rules":[{"host":"gdm-marketability-decision-api-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"marketability-decision-api-service","servicePort":8080},"path":"/"}]}},{"host":"gdm-marketability-decision-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"marketability-decision-api-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["gdm-marketability-decision-api-dev.ttc-test.k8s.target.com","gdm-marketability-decision-api-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T20:51:45Z
    generation: 1
    labels:
      name: marketability-decision-api-ingress
    name: marketability-decision-api-ingress
    namespace: gdm-dev
    resourceVersion: "49225868"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-dev/ingresses/marketability-decision-api-ingress
    uid: 26a324fa-bde0-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: gdm-marketability-decision-api-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: marketability-decision-api-service
            servicePort: 8080
          path: /
    - host: gdm-marketability-decision-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: marketability-decision-api-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - gdm-marketability-decision-api-dev.ttc-test.k8s.target.com
      - gdm-marketability-decision-api-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"neo4jservice-ingress"},"name":"neo4jservice-ingress","namespace":"gdm-dev"},"spec":{"rules":[{"host":"neo4jservice-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"neo4jservice-service","servicePort":8080},"path":"/"}]}},{"host":"neo4jservice-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"neo4jservice-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["neo4jservice-dev.ttc-test.k8s.target.com","neo4jservice-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-30T06:11:49Z
    generation: 1
    labels:
      name: neo4jservice-ingress
    name: neo4jservice-ingress
    namespace: gdm-dev
    resourceVersion: "49225860"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-dev/ingresses/neo4jservice-ingress
    uid: 950f72d5-ac1b-11e8-a71c-525400524761
  spec:
    rules:
    - host: neo4jservice-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: neo4jservice-service
            servicePort: 8080
          path: /
    - host: neo4jservice-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: neo4jservice-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - neo4jservice-dev.ttc-test.k8s.target.com
      - neo4jservice-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"profile-to-contact-mechanism-api-ingress"},"name":"profile-to-contact-mechanism-api-ingress","namespace":"gdm-dev"},"spec":{"rules":[{"host":"gdm-profile-to-contact-mechanism-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"profile-to-contact-mechanism-api-service","servicePort":8080},"path":"/"}]}},{"host":"gdm-profile-to-contact-mechanism-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"profile-to-contact-mechanism-api-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["gdm-profile-to-contact-mechanism-dev.ttc-test.k8s.target.com","gdm-profile-to-contact-mechanism-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T18:17:16Z
    generation: 2
    labels:
      name: profile-to-contact-mechanism-api-ingress
    name: profile-to-contact-mechanism-api-ingress
    namespace: gdm-dev
    resourceVersion: "49225578"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-dev/ingresses/profile-to-contact-mechanism-api-ingress
    uid: 91b818e5-bdca-11e8-a79d-525400524761
  spec:
    rules:
    - host: gdm-profile-to-contact-mechanism-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: profile-to-contact-mechanism-api-service
            servicePort: 8080
          path: /
    - host: gdm-profile-to-contact-mechanism-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: profile-to-contact-mechanism-api-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - gdm-profile-to-contact-mechanism-dev.ttc-test.k8s.target.com
      - gdm-profile-to-contact-mechanism-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"emu-publish-ingress"},"name":"emu-publish-ingress","namespace":"gdm-stage"},"spec":{"rules":[{"host":"emu-publish.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"emu-publish-service","servicePort":8080},"path":"/"}]}},{"host":"emu-publish.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"emu-publish-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["emu-publish.ttc-test.k8s.target.com","emu-publish.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-11T06:25:53Z
    generation: 1
    labels:
      name: emu-publish-ingress
    name: emu-publish-ingress
    namespace: gdm-stage
    resourceVersion: "49225738"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-stage/ingresses/emu-publish-ingress
    uid: 88ec3806-b58b-11e8-8462-525400b93a8e
  spec:
    rules:
    - host: emu-publish.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: emu-publish-service
            servicePort: 8080
          path: /
    - host: emu-publish.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: emu-publish-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - emu-publish.ttc-test.k8s.target.com
      - emu-publish.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"gdm-gc-purge-ingress"},"name":"gdm-gc-purge-ingress","namespace":"gdm-stage"},"spec":{"rules":[{"host":"gdm-gc-purge-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"gdm-gc-purge-service","servicePort":8080},"path":"/"}]}},{"host":"gdm-gc-purge-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"gdm-gc-purge-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["gdm-gc-purge-stage.ttc-test.k8s.target.com","gdm-gc-purge-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T17:42:46Z
    generation: 1
    labels:
      name: gdm-gc-purge-ingress
    name: gdm-gc-purge-ingress
    namespace: gdm-stage
    resourceVersion: "49225488"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-stage/ingresses/gdm-gc-purge-ingress
    uid: bff9ccff-bdc5-11e8-a79d-525400524761
  spec:
    rules:
    - host: gdm-gc-purge-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: gdm-gc-purge-service
            servicePort: 8080
          path: /
    - host: gdm-gc-purge-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: gdm-gc-purge-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - gdm-gc-purge-stage.ttc-test.k8s.target.com
      - gdm-gc-purge-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"gdm-guest-purge-ingress"},"name":"gdm-guest-purge-ingress","namespace":"gdm-stage"},"spec":{"rules":[{"host":"gdm-guest-purge-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"gdm-guest-purge-service","servicePort":8080},"path":"/"}]}},{"host":"gdm-guest-purge-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"gdm-guest-purge-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["gdm-guest-purge-stage.ttc-test.k8s.target.com","gdm-guest-purge-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-26T03:43:58Z
    generation: 1
    labels:
      name: gdm-guest-purge-ingress
    name: gdm-guest-purge-ingress
    namespace: gdm-stage
    resourceVersion: "49225932"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-stage/ingresses/gdm-guest-purge-ingress
    uid: 664dadd6-c13e-11e8-b822-525400b06b0f
  spec:
    rules:
    - host: gdm-guest-purge-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: gdm-guest-purge-service
            servicePort: 8080
          path: /
    - host: gdm-guest-purge-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: gdm-guest-purge-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - gdm-guest-purge-stage.ttc-test.k8s.target.com
      - gdm-guest-purge-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"gdm-guest-search-api-ingress"},"name":"gdm-guest-search-api-ingress","namespace":"gdm-stage"},"spec":{"rules":[{"host":"gdm-guest-search-api-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"gdm-guest-search-api-go-proxy-service","servicePort":80},"path":"/"}]}},{"host":"gdm-guest-search-api-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"gdm-guest-search-api-go-proxy-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["gdm-guest-search-api-stage.ttc-test.k8s.target.com","gdm-guest-search-api-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-28T20:18:15Z
    generation: 2
    labels:
      name: gdm-guest-search-api-ingress
    name: gdm-guest-search-api-ingress
    namespace: gdm-stage
    resourceVersion: "96890509"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-stage/ingresses/gdm-guest-search-api-ingress
    uid: bd0a51a4-f34a-11e8-ad5a-525400a9bf14
  spec:
    rules:
    - host: gdm-guest-search-api-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: gdm-guest-search-api-go-proxy-service
            servicePort: 80
          path: /
    - host: gdm-guest-search-api-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: gdm-guest-search-api-go-proxy-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - gdm-guest-search-api-stage.ttc-test.k8s.target.com
      - gdm-guest-search-api-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"gdmguestprocessor-ingress"},"name":"gdmguestprocessor-ingress","namespace":"gdm-stage"},"spec":{"rules":[{"host":"gdm-gdmguestprocessor-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"gdmguestprocessor-service","servicePort":8080},"path":"/"}]}},{"host":"gdm-gdmguestprocessor-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"gdmguestprocessor-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["gdm-gdmguestprocessor-stage.ttc-test.k8s.target.com","gdm-gdmguestprocessor-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-27T21:32:32Z
    generation: 4
    labels:
      name: gdmguestprocessor-ingress
    name: gdmguestprocessor-ingress
    namespace: gdm-stage
    resourceVersion: "49225372"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-stage/ingresses/gdmguestprocessor-ingress
    uid: b4ace612-aa40-11e8-bd18-525400524761
  spec:
    rules:
    - host: gdm-gdmguestprocessor-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: gdmguestprocessor-service
            servicePort: 8080
          path: /
    - host: gdm-gdmguestprocessor-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: gdmguestprocessor-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - gdm-gdmguestprocessor-stage.ttc-test.k8s.target.com
      - gdm-gdmguestprocessor-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"guest-choice-core-api-ingress"},"name":"guest-choice-core-api-ingress","namespace":"gdm-stage"},"spec":{"rules":[{"host":"gdm-guest-choice-core-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"guest-choice-core-api-service","servicePort":8080},"path":"/"}]}},{"host":"gdm-guest-choice-core-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"guest-choice-core-api-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["gdm-guest-choice-core-stage.ttc-test.k8s.target.com","gdm-guest-choice-core-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-24T16:48:28Z
    generation: 1
    labels:
      name: guest-choice-core-api-ingress
    name: guest-choice-core-api-ingress
    namespace: gdm-stage
    resourceVersion: "49225927"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-stage/ingresses/guest-choice-core-api-ingress
    uid: a9b3fa2e-c019-11e8-b822-525400b06b0f
  spec:
    rules:
    - host: gdm-guest-choice-core-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: guest-choice-core-api-service
            servicePort: 8080
          path: /
    - host: gdm-guest-choice-core-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: guest-choice-core-api-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - gdm-guest-choice-core-stage.ttc-test.k8s.target.com
      - gdm-guest-choice-core-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"guest-to-contact-mechanism-api-ingress"},"name":"guest-to-contact-mechanism-api-ingress","namespace":"gdm-stage"},"spec":{"rules":[{"host":"guest-to-contact-mechanism-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"guest-to-contact-mechanism-api-service","servicePort":8080},"path":"/"}]}},{"host":"guest-to-contact-mechanism-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"guest-to-contact-mechanism-api-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["guest-to-contact-mechanism-stage.ttc-test.k8s.target.com","guest-to-contact-mechanism-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T18:10:45Z
    generation: 2
    labels:
      name: guest-to-contact-mechanism-api-ingress
    name: guest-to-contact-mechanism-api-ingress
    namespace: gdm-stage
    resourceVersion: "49225413"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-stage/ingresses/guest-to-contact-mechanism-api-ingress
    uid: a8e4ce05-bdc9-11e8-a79d-525400524761
  spec:
    rules:
    - host: guest-to-contact-mechanism-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: guest-to-contact-mechanism-api-service
            servicePort: 8080
          path: /
    - host: guest-to-contact-mechanism-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: guest-to-contact-mechanism-api-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - guest-to-contact-mechanism-stage.ttc-test.k8s.target.com
      - guest-to-contact-mechanism-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"hadoop-purge-ack-ingress"},"name":"hadoop-purge-ack-ingress","namespace":"gdm-stage"},"spec":{"rules":[{"host":"hadoop-purge-ack-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"hadoop-purge-ack-service","servicePort":8080},"path":"/"}]}},{"host":"hadoop-purge-ack-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"hadoop-purge-ack-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["hadoop-purge-ack-stage.ttc-test.k8s.target.com","hadoop-purge-ack-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-29T12:33:34Z
    generation: 1
    labels:
      name: hadoop-purge-ack-ingress
    name: hadoop-purge-ack-ingress
    namespace: gdm-stage
    resourceVersion: "49225731"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-stage/ingresses/hadoop-purge-ack-ingress
    uid: bed5f7fe-ab87-11e8-b402-525400b06b0f
  spec:
    rules:
    - host: hadoop-purge-ack-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: hadoop-purge-ack-service
            servicePort: 8080
          path: /
    - host: hadoop-purge-ack-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: hadoop-purge-ack-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - hadoop-purge-ack-stage.ttc-test.k8s.target.com
      - hadoop-purge-ack-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"l1-master-incremental-out-ingress"},"name":"l1-master-incremental-out-ingress","namespace":"gdm-stage"},"spec":{"rules":[{"host":"l1-master-incremental-out-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"l1-master-incremental-out-service","servicePort":8080},"path":"/"}]}},{"host":"l1-master-incremental-out-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"l1-master-incremental-out-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["l1-master-incremental-out-stage.ttc-test.k8s.target.com","l1-master-incremental-out-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-17T06:01:27Z
    generation: 1
    labels:
      name: l1-master-incremental-out-ingress
    name: l1-master-incremental-out-ingress
    namespace: gdm-stage
    resourceVersion: "49225452"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-stage/ingresses/l1-master-incremental-out-ingress
    uid: 1d653a50-ba3f-11e8-8462-525400b93a8e
  spec:
    rules:
    - host: l1-master-incremental-out-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: l1-master-incremental-out-service
            servicePort: 8080
          path: /
    - host: l1-master-incremental-out-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: l1-master-incremental-out-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - l1-master-incremental-out-stage.ttc-test.k8s.target.com
      - l1-master-incremental-out-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"l3-contactmechanism-service-api-ingress"},"name":"l3-contactmechanism-service-api-ingress","namespace":"gdm-stage"},"spec":{"rules":[{"host":"gdm-l3-contactmechanism-service-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"l3-contactmechanism-service","servicePort":8080},"path":"/"}]}},{"host":"gdm-l3-contactmechanism-service-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"l3-contactmechanism-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["gdm-l3-contactmechanism-service-stage.ttc-test.k8s.target.com","gdm-l3-contactmechanism-service-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-26T21:25:20Z
    generation: 1
    labels:
      name: l3-contactmechanism-service-api-ingress
    name: l3-contactmechanism-service-api-ingress
    namespace: gdm-stage
    resourceVersion: "49225328"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-stage/ingresses/l3-contactmechanism-service-api-ingress
    uid: ab8d62f1-c1d2-11e8-90a0-525400d38b79
  spec:
    rules:
    - host: gdm-l3-contactmechanism-service-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: l3-contactmechanism-service
            servicePort: 8080
          path: /
    - host: gdm-l3-contactmechanism-service-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: l3-contactmechanism-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - gdm-l3-contactmechanism-service-stage.ttc-test.k8s.target.com
      - gdm-l3-contactmechanism-service-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"l3-master-publish-hadoop-ingress"},"name":"l3-master-publish-hadoop-ingress","namespace":"gdm-stage"},"spec":{"rules":[{"host":"l3-master-publish-hadoop-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"l3-master-publish-hadoop-service","servicePort":8080},"path":"/"}]}},{"host":"l3-master-publish-hadoop-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"l3-master-publish-hadoop-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["l3-master-publish-hadoop-stage.ttc-test.k8s.target.com","l3-master-publish-hadoop-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-18T06:32:26Z
    generation: 1
    labels:
      name: l3-master-publish-hadoop-ingress
    name: l3-master-publish-hadoop-ingress
    namespace: gdm-stage
    resourceVersion: "49225903"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-stage/ingresses/l3-master-publish-hadoop-ingress
    uid: 9bdd7dd1-bb0c-11e8-8462-525400b93a8e
  spec:
    rules:
    - host: l3-master-publish-hadoop-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: l3-master-publish-hadoop-service
            servicePort: 8080
          path: /
    - host: l3-master-publish-hadoop-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: l3-master-publish-hadoop-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - l3-master-publish-hadoop-stage.ttc-test.k8s.target.com
      - l3-master-publish-hadoop-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"l3-master-service-api-ingress"},"name":"l3-master-service-api-ingress","namespace":"gdm-stage"},"spec":{"rules":[{"host":"gdm-l3-master-service-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"l3-master-service","servicePort":8080},"path":"/"}]}},{"host":"gdm-l3-master-service-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"l3-master-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["gdm-l3-master-service-stage.ttc-test.k8s.target.com","gdm-l3-master-service-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-27T00:43:27Z
    generation: 1
    labels:
      name: l3-master-service-api-ingress
    name: l3-master-service-api-ingress
    namespace: gdm-stage
    resourceVersion: "49225673"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-stage/ingresses/l3-master-service-api-ingress
    uid: 58d9431c-c1ee-11e8-9a78-525400d8fde0
  spec:
    rules:
    - host: gdm-l3-master-service-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: l3-master-service
            servicePort: 8080
          path: /
    - host: gdm-l3-master-service-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: l3-master-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - gdm-l3-master-service-stage.ttc-test.k8s.target.com
      - gdm-l3-master-service-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"marketability-decision-api-ingress"},"name":"marketability-decision-api-ingress","namespace":"gdm-stage"},"spec":{"rules":[{"host":"gdm-marketability-decision-api-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"marketability-decision-api-service","servicePort":8080},"path":"/"}]}},{"host":"gdm-marketability-decision-api-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"marketability-decision-api-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["gdm-marketability-decision-api-stage.ttc-test.k8s.target.com","gdm-marketability-decision-api-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-26T16:53:47Z
    generation: 1
    labels:
      name: marketability-decision-api-ingress
    name: marketability-decision-api-ingress
    namespace: gdm-stage
    resourceVersion: "49225611"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-stage/ingresses/marketability-decision-api-ingress
    uid: bc72fed8-c1ac-11e8-90a0-525400d38b79
  spec:
    rules:
    - host: gdm-marketability-decision-api-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: marketability-decision-api-service
            servicePort: 8080
          path: /
    - host: gdm-marketability-decision-api-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: marketability-decision-api-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - gdm-marketability-decision-api-stage.ttc-test.k8s.target.com
      - gdm-marketability-decision-api-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"pmu-preference-processor-ingress"},"name":"pmu-preference-processor-ingress","namespace":"gdm-stage"},"spec":{"rules":[{"host":"gdm-pmu-preference-processor-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pmu-preference-processor-service","servicePort":8080},"path":"/"}]}},{"host":"gdm-pmu-preference-processor-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pmu-preference-processor-service","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2018-12-10T18:16:38Z
    generation: 1
    labels:
      name: pmu-preference-processor-ingress
    name: pmu-preference-processor-ingress
    namespace: gdm-stage
    resourceVersion: "104524146"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-stage/ingresses/pmu-preference-processor-ingress
    uid: bc3fa2f9-fca7-11e8-ad5a-525400a9bf14
  spec:
    rules:
    - host: gdm-pmu-preference-processor-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pmu-preference-processor-service
            servicePort: 8080
          path: /
    - host: gdm-pmu-preference-processor-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pmu-preference-processor-service
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"profile-to-contact-mechanism-api-ingress"},"name":"profile-to-contact-mechanism-api-ingress","namespace":"gdm-stage"},"spec":{"rules":[{"host":"gdm-profile-to-contact-mechanism-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"profile-to-contact-mechanism-api-service","servicePort":8080},"path":"/"}]}},{"host":"gdm-profile-to-contact-mechanism-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"profile-to-contact-mechanism-api-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["gdm-profile-to-contact-mechanism-stage.ttc-test.k8s.target.com","gdm-profile-to-contact-mechanism-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-26T21:23:24Z
    generation: 1
    labels:
      name: profile-to-contact-mechanism-api-ingress
    name: profile-to-contact-mechanism-api-ingress
    namespace: gdm-stage
    resourceVersion: "49225594"
    selfLink: /apis/extensions/v1beta1/namespaces/gdm-stage/ingresses/profile-to-contact-mechanism-api-ingress
    uid: 669845da-c1d2-11e8-981f-525400343c24
  spec:
    rules:
    - host: gdm-profile-to-contact-mechanism-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: profile-to-contact-mechanism-api-service
            servicePort: 8080
          path: /
    - host: gdm-profile-to-contact-mechanism-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: profile-to-contact-mechanism-api-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - gdm-profile-to-contact-mechanism-stage.ttc-test.k8s.target.com
      - gdm-profile-to-contact-mechanism-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"gohttpbin-ingress"},"name":"gohttpbin-ingress","namespace":"gohttpbin"},"spec":{"rules":[{"host":"gohttpbin.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"gohttpbin-service","servicePort":80},"path":"/"}]}},{"host":"gohttpbin.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"gohttpbin-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["gohttpbin.ttc-test.k8s.target.com","gohttpbin.tte-test.k8s.target.com","gohttpbin.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-07-17T17:27:38Z
    generation: 2
    labels:
      name: gohttpbin-ingress
    name: gohttpbin-ingress
    namespace: gohttpbin
    resourceVersion: "49225895"
    selfLink: /apis/extensions/v1beta1/namespaces/gohttpbin/ingresses/gohttpbin-ingress
    uid: b3ef95c5-89e6-11e8-a2fd-525400b06b0f
  spec:
    rules:
    - host: gohttpbin.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: gohttpbin-service
            servicePort: 80
          path: /
    - host: gohttpbin.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: gohttpbin-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - gohttpbin.ttc-test.k8s.target.com
      - gohttpbin.tte-test.k8s.target.com
      - gohttpbin.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"graphql-audit-ingress"},"name":"graphql-audit-ingress","namespace":"graphql-enterprise-audit-dev"},"spec":{"rules":[{"host":"graphql-audit-kafka-connect-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"kafka-connect-proxy-service","servicePort":80},"path":"/"}]}},{"host":"graphql-audit-kibana-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"kibana-proxy-service","servicePort":80},"path":"/"}]}},{"host":"graphql-audit-kibana-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"kibana-proxy-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["graphql-audit-kafka-connect-dev.ttc-test.k8s.target.com","graphql-audit-kibana-dev.ttc-test.k8s.target.com","graphql-audit-kibana-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-30T20:10:33Z
    generation: 5
    labels:
      name: graphql-audit-ingress
    name: graphql-audit-ingress
    namespace: graphql-enterprise-audit-dev
    resourceVersion: "49225618"
    selfLink: /apis/extensions/v1beta1/namespaces/graphql-enterprise-audit-dev/ingresses/graphql-audit-ingress
    uid: c017110d-ac90-11e8-b402-525400b06b0f
  spec:
    rules:
    - host: graphql-audit-kafka-connect-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: kafka-connect-proxy-service
            servicePort: 80
          path: /
    - host: graphql-audit-kibana-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: kibana-proxy-service
            servicePort: 80
          path: /
    - host: graphql-audit-kibana-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: kibana-proxy-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - graphql-audit-kafka-connect-dev.ttc-test.k8s.target.com
      - graphql-audit-kibana-dev.ttc-test.k8s.target.com
      - graphql-audit-kibana-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"graphql-audit-ingress"},"name":"graphql-audit-ingress","namespace":"graphql-enterprise-audit"},"spec":{"rules":[{"host":"graphql-audit-kafka-connect.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"kafka-connect-proxy-service","servicePort":80},"path":"/"}]}},{"host":"graphql-audit-kibana.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"kibana-proxy-service","servicePort":80},"path":"/"}]}},{"host":"graphql-audit-kibana.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"kibana-proxy-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["graphql-audit-kafka-connect.ttc-test.k8s.target.com","graphql-audit-kibana.ttc-test.k8s.target.com","graphql-audit-kibana.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-30T20:39:09Z
    generation: 5
    labels:
      name: graphql-audit-ingress
    name: graphql-audit-ingress
    namespace: graphql-enterprise-audit
    resourceVersion: "49225379"
    selfLink: /apis/extensions/v1beta1/namespaces/graphql-enterprise-audit/ingresses/graphql-audit-ingress
    uid: bf3b9f03-ac94-11e8-b402-525400b06b0f
  spec:
    rules:
    - host: graphql-audit-kafka-connect.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: kafka-connect-proxy-service
            servicePort: 80
          path: /
    - host: graphql-audit-kibana.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: kibana-proxy-service
            servicePort: 80
          path: /
    - host: graphql-audit-kibana.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: kibana-proxy-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - graphql-audit-kafka-connect.ttc-test.k8s.target.com
      - graphql-audit-kibana.ttc-test.k8s.target.com
      - graphql-audit-kibana.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"graphql-customer-portal-ingress"},"name":"graphql-customer-portal-ingress","namespace":"graphql-enterprise-customer-portal"},"spec":{"rules":[{"host":"graphql-enterprise-customer-portal.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"graphql-customer-portal-service","servicePort":80},"path":"/"}]}},{"host":"graphql-enterprise-customer-portal.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"graphql-customer-portal-service","servicePort":80},"path":"/"}]}},{"host":"graphql-enterprise-customer-portal.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"graphql-customer-portal-service","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-09T14:11:42Z
    generation: 1
    labels:
      name: graphql-customer-portal-ingress
    name: graphql-customer-portal-ingress
    namespace: graphql-enterprise-customer-portal
    resourceVersion: "49225976"
    selfLink: /apis/extensions/v1beta1/namespaces/graphql-enterprise-customer-portal/ingresses/graphql-customer-portal-ingress
    uid: 3f1f91b5-cbcd-11e8-9369-525400a3d3a1
  spec:
    rules:
    - host: graphql-enterprise-customer-portal.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: graphql-customer-portal-service
            servicePort: 80
          path: /
    - host: graphql-enterprise-customer-portal.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: graphql-customer-portal-service
            servicePort: 80
          path: /
    - host: graphql-enterprise-customer-portal.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: graphql-customer-portal-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"graphql-ingress"},"name":"graphql-ingress","namespace":"graphql-enterprise-dev"},"spec":{"rules":[{"host":"graphql-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"graphql-dev-lb","servicePort":80},"path":"/"}]}},{"host":"graphql-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"graphql-dev-lb","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["graphql-dev.ttc-test.k8s.target.com","graphql-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-12T18:17:03Z
    generation: 4
    labels:
      name: graphql-ingress
    name: graphql-ingress
    namespace: graphql-enterprise-dev
    resourceVersion: "49225484"
    selfLink: /apis/extensions/v1beta1/namespaces/graphql-enterprise-dev/ingresses/graphql-ingress
    uid: 0c5de385-b6b8-11e8-8462-525400b93a8e
  spec:
    rules:
    - host: graphql-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: graphql-dev-lb
            servicePort: 80
          path: /
    - host: graphql-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: graphql-dev-lb
            servicePort: 80
          path: /
    tls:
    - hosts:
      - graphql-dev.ttc-test.k8s.target.com
      - graphql-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"graphql-jvm-ingress"},"name":"graphql-jvm-ingress","namespace":"graphql-enterprise-dev"},"spec":{"rules":[{"host":"graphql-jvm-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"graphql-jvm-dev-lb","servicePort":80},"path":"/"}]}},{"host":"graphql-jvm-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"graphql-jvm-dev-lb","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["graphql-jvm-dev.ttc-test.k8s.target.com","graphql-jvm-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-29T06:04:45Z
    generation: 1
    labels:
      name: graphql-jvm-ingress
    name: graphql-jvm-ingress
    namespace: graphql-enterprise-dev
    resourceVersion: "63064456"
    selfLink: /apis/extensions/v1beta1/namespaces/graphql-enterprise-dev/ingresses/graphql-jvm-ingress
    uid: 88aba2d4-db40-11e8-80ff-5254001f7df6
  spec:
    rules:
    - host: graphql-jvm-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: graphql-jvm-dev-lb
            servicePort: 80
          path: /
    - host: graphql-jvm-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: graphql-jvm-dev-lb
            servicePort: 80
          path: /
    tls:
    - hosts:
      - graphql-jvm-dev.ttc-test.k8s.target.com
      - graphql-jvm-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"graphql-ingress"},"name":"graphql-ingress","namespace":"graphql-enterprise"},"spec":{"rules":[{"host":"graphql.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"graphql-lb","servicePort":80},"path":"/"}]}},{"host":"graphql.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"graphql-lb","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["graphql.ttc-test.k8s.target.com","graphql.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-17T14:53:30Z
    generation: 1
    labels:
      name: graphql-ingress
    name: graphql-ingress
    namespace: graphql-enterprise
    resourceVersion: "49225719"
    selfLink: /apis/extensions/v1beta1/namespaces/graphql-enterprise/ingresses/graphql-ingress
    uid: 715745fe-ba89-11e8-8462-525400b93a8e
  spec:
    rules:
    - host: graphql.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: graphql-lb
            servicePort: 80
          path: /
    - host: graphql.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: graphql-lb
            servicePort: 80
          path: /
    tls:
    - hosts:
      - graphql.ttc-test.k8s.target.com
      - graphql.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"graphql-onboarding-api-ingress"},"name":"graphql-onboarding-api-ingress","namespace":"graphql-onboarding"},"spec":{"rules":[{"host":"graphql-onboarding.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"graphql-onboarding-api-service","servicePort":80},"path":"/"}]}},{"host":"graphql-onboarding.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"graphql-onboarding-api-service","servicePort":80},"path":"/"}]}},{"host":"graphql-onboarding.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"graphql-onboarding-api-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["graphql-onboarding.tte-test.k8s.target.com","graphql-onboarding.test.k8s.target.com","graphql-onboarding.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-25T20:38:47Z
    generation: 1
    labels:
      name: graphql-onboarding-api-ingress
    name: graphql-onboarding-api-ingress
    namespace: graphql-onboarding
    resourceVersion: "49225483"
    selfLink: /apis/extensions/v1beta1/namespaces/graphql-onboarding/ingresses/graphql-onboarding-api-ingress
    uid: 00b35a90-c103-11e8-a79d-525400524761
  spec:
    rules:
    - host: graphql-onboarding.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: graphql-onboarding-api-service
            servicePort: 80
          path: /
    - host: graphql-onboarding.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: graphql-onboarding-api-service
            servicePort: 80
          path: /
    - host: graphql-onboarding.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: graphql-onboarding-api-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - graphql-onboarding.tte-test.k8s.target.com
      - graphql-onboarding.test.k8s.target.com
      - graphql-onboarding.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"groupingsv1-ingress-stage-ttc"},"name":"groupingsv1-ingress-stage-ttc","namespace":"groupingsv1"},"spec":{"rules":[{"host":"groupingsv1.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"groupingsv1-app-service-stage","servicePort":80},"path":"/"}]}},{"host":"groupingsv1.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"groupingsv1-app-service-stage","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["groupingsv1.ttc-test.k8s.target.com","groupingsv1.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-24T09:30:32Z
    generation: 1
    labels:
      name: groupingsv1-ingress-stage-ttc
    name: groupingsv1-ingress-stage-ttc
    namespace: groupingsv1
    resourceVersion: "59105758"
    selfLink: /apis/extensions/v1beta1/namespaces/groupingsv1/ingresses/groupingsv1-ingress-stage-ttc
    uid: 740b4bd7-d76f-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: groupingsv1.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: groupingsv1-app-service-stage
            servicePort: 80
          path: /
    - host: groupingsv1.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: groupingsv1-app-service-stage
            servicePort: 80
          path: /
    tls:
    - hosts:
      - groupingsv1.ttc-test.k8s.target.com
      - groupingsv1.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"guestorderallocation-api"},"name":"guestorderallocation-api-ingress","namespace":"guest-order-allocation"},"spec":{"rules":[{"host":"guestorderallocation.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"guestorderallocation-api-service","servicePort":80},"path":"/"}]}},{"host":"guestorderallocation.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"guestorderallocation-api-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["guestorderallocation.ttc-test.k8s.target.com","guestorderallocation.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-13T06:30:08Z
    generation: 1
    labels:
      name: guestorderallocation-api
    name: guestorderallocation-api-ingress
    namespace: guest-order-allocation
    resourceVersion: "75632895"
    selfLink: /apis/extensions/v1beta1/namespaces/guest-order-allocation/ingresses/guestorderallocation-api-ingress
    uid: 90d1f2ad-e70d-11e8-9e69-525400e51df1
  spec:
    rules:
    - host: guestorderallocation.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: guestorderallocation-api-service
            servicePort: 80
          path: /
    - host: guestorderallocation.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: guestorderallocation-api-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - guestorderallocation.ttc-test.k8s.target.com
      - guestorderallocation.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"helios-admin-ingress","namespace":"helios"},"spec":{"rules":[{"host":"helios-admin.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"helios-admin","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-01-29T16:34:48Z
    generation: 1
    name: helios-admin-ingress
    namespace: helios
    resourceVersion: "159664344"
    selfLink: /apis/extensions/v1beta1/namespaces/helios/ingresses/helios-admin-ingress
    uid: cb5a5253-23e3-11e9-940e-525400bb236b
  spec:
    rules:
    - host: helios-admin.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: helios-admin
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"helios-api-ingress","namespace":"helios"},"spec":{"rules":[{"host":"stage.helios.target.com","http":{"paths":[{"backend":{"serviceName":"helios-api","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["stage.helios.target.com"],"secretName":"ssl-cert"}]}}
    creationTimestamp: 2019-01-07T20:47:04Z
    generation: 1
    labels:
      name: helios-api-ingress
    name: helios-api-ingress
    namespace: helios
    resourceVersion: "150751683"
    selfLink: /apis/extensions/v1beta1/namespaces/helios/ingresses/helios-api-ingress
    uid: 639d39ab-12bd-11e9-9fcc-525400f72165
  spec:
    rules:
    - host: stage.helios.target.com
      http:
        paths:
        - backend:
            serviceName: helios-api
            servicePort: 80
          path: /
    tls:
    - hosts:
      - stage.helios.target.com
      secretName: ssl-cert
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-12T18:12:34Z
    generation: 1
    name: helios-ml-api-ingress
    namespace: helios
    resourceVersion: "206352923"
    selfLink: /apis/extensions/v1beta1/namespaces/helios/ingresses/helios-ml-api-ingress
    uid: 68b7f790-44f2-11e9-9ed7-5254006b625b
  spec:
    rules:
    - host: helios-ml-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: helios-ml-api
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"languagetool","namespace":"helios"},"spec":{"rules":[{"host":"languagetool.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"languagetool","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-03-05T19:47:41Z
    generation: 1
    name: languagetool
    namespace: helios
    resourceVersion: "199267195"
    selfLink: /apis/extensions/v1beta1/namespaces/helios/ingresses/languagetool
    uid: 89afc943-3f7f-11e9-ab00-525400a77f96
  spec:
    rules:
    - host: languagetool.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: languagetool
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"autocomplete-dev-ingress","namespace":"iceberg"},"spec":{"rules":[{"host":"iceberg-autocomplete-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"autocomplete-dev-service","servicePort":80},"path":"/"}]}},{"host":"iceberg-autocomplete-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"autocomplete-dev-service","servicePort":80},"path":"/"}]}},{"host":"iceberg-autocomplete-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"autocomplete-dev-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["iceberg-autocomplete-dev.tte-test.k8s.target.com","iceberg-autocomplete-dev.ttc-test.k8s.target.com","iceberg-autocomplete-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-25T18:17:39Z
    generation: 1
    name: autocomplete-dev-ingress
    namespace: iceberg
    resourceVersion: "60162848"
    selfLink: /apis/extensions/v1beta1/namespaces/iceberg/ingresses/autocomplete-dev-ingress
    uid: 42051883-d882-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: iceberg-autocomplete-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autocomplete-dev-service
            servicePort: 80
          path: /
    - host: iceberg-autocomplete-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autocomplete-dev-service
            servicePort: 80
          path: /
    - host: iceberg-autocomplete-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autocomplete-dev-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - iceberg-autocomplete-dev.tte-test.k8s.target.com
      - iceberg-autocomplete-dev.ttc-test.k8s.target.com
      - iceberg-autocomplete-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"autocomplete-test-ingress","namespace":"iceberg"},"spec":{"rules":[{"host":"iceberg-autocomplete.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"autocomplete-test-service","servicePort":80},"path":"/"}]}},{"host":"iceberg-autocomplete.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"autocomplete-test-service","servicePort":80},"path":"/"}]}},{"host":"iceberg-autocomplete.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"autocomplete-test-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["iceberg-autocomplete.tte-test.k8s.target.com","iceberg-autocomplete.ttc-test.k8s.target.com","iceberg-autocomplete.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-03T16:48:59Z
    generation: 1
    name: autocomplete-test-ingress
    namespace: iceberg
    resourceVersion: "49225982"
    selfLink: /apis/extensions/v1beta1/namespaces/iceberg/ingresses/autocomplete-test-ingress
    uid: 1e82e40e-973d-11e8-962d-525400b93a8e
  spec:
    rules:
    - host: iceberg-autocomplete.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autocomplete-test-service
            servicePort: 80
          path: /
    - host: iceberg-autocomplete.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autocomplete-test-service
            servicePort: 80
          path: /
    - host: iceberg-autocomplete.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: autocomplete-test-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - iceberg-autocomplete.tte-test.k8s.target.com
      - iceberg-autocomplete.ttc-test.k8s.target.com
      - iceberg-autocomplete.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"health-service-ingress"},"name":"health-service-ingress","namespace":"iceberg"},"spec":{"rules":[{"host":"iceberg-health.us-central-1.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"health-service","servicePort":80},"path":"/"}]}},{"host":"iceberg-health.us-central-1ttc.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"health-service","servicePort":80},"path":"/"}]}},{"host":"iceberg-health.us-central-1tte.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"health-service","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-08-03T15:02:48Z
    generation: 1
    labels:
      name: health-service-ingress
    name: health-service-ingress
    namespace: iceberg
    resourceVersion: "49225355"
    selfLink: /apis/extensions/v1beta1/namespaces/iceberg/ingresses/health-service-ingress
    uid: 493b413c-972e-11e8-bd18-525400524761
  spec:
    rules:
    - host: iceberg-health.us-central-1.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: health-service
            servicePort: 80
          path: /
    - host: iceberg-health.us-central-1ttc.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: health-service
            servicePort: 80
          path: /
    - host: iceberg-health.us-central-1tte.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: health-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"iceberg-export-api-test-ingress","namespace":"iceberg"},"spec":{"rules":[{"host":"iceberg-export-api.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"iceberg-export-api-test-service","servicePort":80},"path":"/"}]}},{"host":"iceberg-export-api.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"iceberg-export-api-test-service","servicePort":80},"path":"/"}]}},{"host":"iceberg-export-api.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"iceberg-export-api-test-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["iceberg-export-api.tte-test.k8s.target.com","iceberg-export-api.ttc-test.k8s.target.com","iceberg-export-api.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-13T14:55:30Z
    generation: 2
    name: iceberg-export-api-test-ingress
    namespace: iceberg
    resourceVersion: "49225933"
    selfLink: /apis/extensions/v1beta1/namespaces/iceberg/ingresses/iceberg-export-api-test-ingress
    uid: ec5c9af0-9f08-11e8-bd18-525400524761
  spec:
    rules:
    - host: iceberg-export-api.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: iceberg-export-api-test-service
            servicePort: 80
          path: /
    - host: iceberg-export-api.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: iceberg-export-api-test-service
            servicePort: 80
          path: /
    - host: iceberg-export-api.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: iceberg-export-api-test-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - iceberg-export-api.tte-test.k8s.target.com
      - iceberg-export-api.ttc-test.k8s.target.com
      - iceberg-export-api.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"iceberg-health-service-non-prod-ingress"},"name":"iceberg-health-service-non-prod-ingress","namespace":"iceberg"},"spec":{"rules":[{"host":"iceberg-health.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"iceberg-health-service-non-prod","servicePort":80},"path":"/"}]}},{"host":"iceberg-health.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"iceberg-health-service-non-prod","servicePort":80},"path":"/"}]}},{"host":"iceberg-health.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"iceberg-health-service-non-prod","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["iceberg-health.ttc-test.k8s.target.com","iceberg-health.tte-test.k8s.target.com","iceberg-health.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-03T01:29:32Z
    generation: 1
    labels:
      name: iceberg-health-service-non-prod-ingress
    name: iceberg-health-service-non-prod-ingress
    namespace: iceberg
    resourceVersion: "49225959"
    selfLink: /apis/extensions/v1beta1/namespaces/iceberg/ingresses/iceberg-health-service-non-prod-ingress
    uid: ac297b83-96bc-11e8-a2fd-525400b06b0f
  spec:
    rules:
    - host: iceberg-health.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: iceberg-health-service-non-prod
            servicePort: 80
          path: /
    - host: iceberg-health.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: iceberg-health-service-non-prod
            servicePort: 80
          path: /
    - host: iceberg-health.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: iceberg-health-service-non-prod
            servicePort: 80
          path: /
    tls:
    - hosts:
      - iceberg-health.ttc-test.k8s.target.com
      - iceberg-health.tte-test.k8s.target.com
      - iceberg-health.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"kubernetes-exporter-bigoli-prod-ingress"},"name":"kubernetes-exporter-bigoli-prod-ingress","namespace":"iceberg"},"spec":{"rules":[{"host":"kubernetes-exporter-bigoli-prod.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"kubernetes-exporter-bigoli-prod-service","servicePort":80},"path":"/"}]}},{"host":"kubernetes-exporter-bigoli-prod.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"kubernetes-exporter-bigoli-prod-service","servicePort":80},"path":"/"}]}},{"host":"kubernetes-exporter-bigoli-prod.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"kubernetes-exporter-bigoli-prod-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["kubernetes-exporter-bigoli-prod.tte-test.k8s.target.com","kubernetes-exporter-bigoli-prod.ttc-test.k8s.target.com","kubernetes-exporter-bigoli-prod.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-20T18:08:54Z
    generation: 1
    labels:
      name: kubernetes-exporter-bigoli-prod-ingress
    name: kubernetes-exporter-bigoli-prod-ingress
    namespace: iceberg
    resourceVersion: "115413793"
    selfLink: /apis/extensions/v1beta1/namespaces/iceberg/ingresses/kubernetes-exporter-bigoli-prod-ingress
    uid: 4ff12831-0482-11e9-9edf-52540027f265
  spec:
    rules:
    - host: kubernetes-exporter-bigoli-prod.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: kubernetes-exporter-bigoli-prod-service
            servicePort: 80
          path: /
    - host: kubernetes-exporter-bigoli-prod.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: kubernetes-exporter-bigoli-prod-service
            servicePort: 80
          path: /
    - host: kubernetes-exporter-bigoli-prod.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: kubernetes-exporter-bigoli-prod-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - kubernetes-exporter-bigoli-prod.tte-test.k8s.target.com
      - kubernetes-exporter-bigoli-prod.ttc-test.k8s.target.com
      - kubernetes-exporter-bigoli-prod.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"davetest-ingress"},"name":"davetest-ingress","namespace":"icelab"},"spec":{"rules":[{"host":"davetest-test.target.com","http":{"paths":[{"backend":{"serviceName":"davetest-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["davetest-test.target.com"],"secretName":"vanitysecret"}]}}
    creationTimestamp: 2019-01-04T18:46:22Z
    generation: 2
    labels:
      name: davetest-ingress
    name: davetest-ingress
    namespace: icelab
    resourceVersion: "132045713"
    selfLink: /apis/extensions/v1beta1/namespaces/icelab/ingresses/davetest-ingress
    uid: 07e5aff7-1051-11e9-aa7e-5254007ca0e4
  spec:
    rules:
    - host: davetest-test.target.com
      http:
        paths:
        - backend:
            serviceName: davetest-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - davetest-test.target.com
      secretName: vanitysecret
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"vanityurl-ingress"},"name":"vanityurl-ingress","namespace":"icelab"},"spec":{"rules":[{"host":"vanityurl-test.target.com","http":{"paths":[{"backend":{"serviceName":"vanityurl-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["vanityurl-test.target.com"],"secretName":"vanityurlsecret"}]}}
    creationTimestamp: 2019-01-14T18:51:33Z
    generation: 1
    labels:
      name: vanityurl-ingress
    name: vanityurl-ingress
    namespace: icelab
    resourceVersion: "142646449"
    selfLink: /apis/extensions/v1beta1/namespaces/icelab/ingresses/vanityurl-ingress
    uid: 69d594cc-182d-11e9-bdc1-525400cfa7b2
  spec:
    rules:
    - host: vanityurl-test.target.com
      http:
        paths:
        - backend:
            serviceName: vanityurl-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - vanityurl-test.target.com
      secretName: vanityurlsecret
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"ima-test-ttc"},"name":"ima-test-ttc","namespace":"ima"},"spec":{"rules":[{"host":"ima-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ima-test-ttc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["ima-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-06T20:30:25Z
    generation: 3
    labels:
      name: ima-test-ttc
    name: ima-test-ttc
    namespace: ima
    resourceVersion: "49225767"
    selfLink: /apis/extensions/v1beta1/namespaces/ima/ingresses/ima-test-ttc
    uid: afbf4758-b213-11e8-a71c-525400524761
  spec:
    rules:
    - host: ima-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ima-test-ttc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - ima-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"ima-test-uat-ttc"},"name":"ima-test-uat-ttc","namespace":"ima"},"spec":{"rules":[{"host":"ima-uat-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ima-test-uat-ttc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["ima-uat-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-05T14:53:07Z
    generation: 1
    labels:
      name: ima-test-uat-ttc
    name: ima-test-uat-ttc
    namespace: ima
    resourceVersion: "49225410"
    selfLink: /apis/extensions/v1beta1/namespaces/ima/ingresses/ima-test-uat-ttc
    uid: 5eef74b2-c8ae-11e8-9f4c-525400adf9ce
  spec:
    rules:
    - host: ima-uat-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ima-test-uat-ttc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - ima-uat-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"dbaas-volume-api-ingress"},"name":"dbaas-volume-api-ingress","namespace":"infra-storage"},"spec":{"rules":[{"host":"dbaas-volume-api.apibigoli.test.ttc.core.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dbaas-volume-api-service","servicePort":5000},"path":"/"}]}},{"host":"dbaas-volume-api.apibigoli.test.ttc.core.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dbaas-volume-api-service","servicePort":5000},"path":"/"}]}}]}}
    creationTimestamp: 2018-12-14T20:08:15Z
    generation: 1
    labels:
      name: dbaas-volume-api-ingress
    name: dbaas-volume-api-ingress
    namespace: infra-storage
    resourceVersion: "108985204"
    selfLink: /apis/extensions/v1beta1/namespaces/infra-storage/ingresses/dbaas-volume-api-ingress
    uid: fe029043-ffdb-11e8-9edf-52540027f265
  spec:
    rules:
    - host: dbaas-volume-api.apibigoli.test.ttc.core.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dbaas-volume-api-service
            servicePort: 5000
          path: /
    - host: dbaas-volume-api.apibigoli.test.ttc.core.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dbaas-volume-api-service
            servicePort: 5000
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-31T14:38:43Z
    generation: 1
    labels:
      app: prometheus
      chart: prometheus-6.7.0
      component: server
      heritage: Tiller
      release: iss-prometheus
    name: iss-prometheus-server
    namespace: infra-storage
    resourceVersion: "65149292"
    selfLink: /apis/extensions/v1beta1/namespaces/infra-storage/ingresses/iss-prometheus-server
    uid: aaa7dcba-dd1a-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: iss-prometheus-db.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: iss-prometheus-server
            servicePort: 80
          path: /
    tls:
    - hosts:
      - iss-prometheus-db.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"ima-uat-ttc"},"name":"ima-uat-ttc","namespace":"inventory-management"},"spec":{"rules":[{"host":"ima-uat.target.com","http":{"paths":[{"backend":{"serviceName":"ima-uat-ttc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["ima-uat.target.com"],"secretName":"vanitysecret"}]}}
    creationTimestamp: 2018-09-07T02:28:23Z
    generation: 3
    labels:
      name: ima-uat-ttc
    name: ima-uat-ttc
    namespace: inventory-management
    resourceVersion: "49225607"
    selfLink: /apis/extensions/v1beta1/namespaces/inventory-management/ingresses/ima-uat-ttc
    uid: b1b510b4-b245-11e8-8488-525400b06b0f
  spec:
    rules:
    - host: ima-uat.target.com
      http:
        paths:
        - backend:
            serviceName: ima-uat-ttc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - ima-uat.target.com
      secretName: vanitysecret
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"benthos-kafka-writer-ingress"},"name":"benthos-kafka-writer-ingress","namespace":"iot"},"spec":{"rules":[{"host":"benthos-kafka-writer-iot.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"benthos-kafka-writer","servicePort":4195},"path":"/"}]}}],"tls":[{"hosts":["benthos-kafka-writer-iot.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-28T11:40:58Z
    generation: 1
    labels:
      name: benthos-kafka-writer-ingress
    name: benthos-kafka-writer-ingress
    namespace: iot
    resourceVersion: "49225332"
    selfLink: /apis/extensions/v1beta1/namespaces/iot/ingresses/benthos-kafka-writer-ingress
    uid: 3b3d71c2-aab7-11e8-bf09-525400b93a8e
  spec:
    rules:
    - host: benthos-kafka-writer-iot.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: benthos-kafka-writer
            servicePort: 4195
          path: /
    tls:
    - hosts:
      - benthos-kafka-writer-iot.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cassandra-writer"},"name":"cassandra-writer","namespace":"iot"},"spec":{"rules":[{"host":"cassandra-writer-iot.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cassandra-writer","servicePort":9042},"path":"/"}]}}],"tls":[{"hosts":["cassandra-writer-iot.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-21T18:01:14Z
    generation: 1
    labels:
      name: cassandra-writer
    name: cassandra-writer
    namespace: iot
    resourceVersion: "116529825"
    selfLink: /apis/extensions/v1beta1/namespaces/iot/ingresses/cassandra-writer
    uid: 680b9ade-054a-11e9-9edf-52540027f265
  spec:
    rules:
    - host: cassandra-writer-iot.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cassandra-writer
            servicePort: 9042
          path: /
    tls:
    - hosts:
      - cassandra-writer-iot.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"http-adapter"},"name":"http-adapter","namespace":"iot"},"spec":{"rules":[{"host":"http-adapter-iot.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"http-adapter","servicePort":8180},"path":"/"}]}}],"tls":[{"hosts":["http-adapter-iot.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-28T18:49:20Z
    generation: 1
    labels:
      name: http-adapter
    name: http-adapter
    namespace: iot
    resourceVersion: "124287064"
    selfLink: /apis/extensions/v1beta1/namespaces/iot/ingresses/http-adapter
    uid: 4976e6dc-0ad1-11e9-9edf-52540027f265
  spec:
    rules:
    - host: http-adapter-iot.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: http-adapter
            servicePort: 8180
          path: /
    tls:
    - hosts:
      - http-adapter-iot.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"iot-events","namespace":"iot"},"spec":{"rules":[{"host":"iot-events.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"iot-events","servicePort":443},"path":"/"}]}},{"host":"iot-events.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"iot-events","servicePort":443},"path":"/"}]}}],"tls":[{"hosts":["iot-events.test.k8s.target.com","iot-events.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-22T16:39:36Z
    generation: 1
    name: iot-events
    namespace: iot
    resourceVersion: "186049989"
    selfLink: /apis/extensions/v1beta1/namespaces/iot/ingresses/iot-events
    uid: 70dfb080-36c0-11e9-a2e8-52540055f679
  spec:
    rules:
    - host: iot-events.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: iot-events
            servicePort: 443
          path: /
    - host: iot-events.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: iot-events
            servicePort: 443
          path: /
    tls:
    - hosts:
      - iot-events.test.k8s.target.com
      - iot-events.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/ssl-passthrough: "false"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/ssl-passthrough":"false"},"name":"lora-app-server","namespace":"iot"},"spec":{"rules":[{"host":"lora-app-server.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lora-app-server","servicePort":443},"path":"/"}]}},{"host":"lora-app-server.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lora-app-server","servicePort":443},"path":"/"}]}}],"tls":[{"hosts":["lora-app-server.ttc-test.k8s.target.com","lora-app-server.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-20T20:29:56Z
    generation: 3
    name: lora-app-server
    namespace: iot
    resourceVersion: "75269223"
    selfLink: /apis/extensions/v1beta1/namespaces/iot/ingresses/lora-app-server
    uid: cd69fe5a-a4b7-11e8-bd18-525400524761
  spec:
    rules:
    - host: lora-app-server.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lora-app-server
            servicePort: 443
          path: /
    - host: lora-app-server.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lora-app-server
            servicePort: 443
          path: /
    tls:
    - hosts:
      - lora-app-server.ttc-test.k8s.target.com
      - lora-app-server.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"mqtt-adapter"},"name":"mqtt-adapter","namespace":"iot"},"spec":{"rules":[{"host":"mqtt-adapter-iot.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mqtt-adapter","servicePort":8180},"path":"/"}]}}],"tls":[{"hosts":["mqtt-adapter-iot.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-28T18:50:04Z
    generation: 1
    labels:
      name: mqtt-adapter
    name: mqtt-adapter
    namespace: iot
    resourceVersion: "124288136"
    selfLink: /apis/extensions/v1beta1/namespaces/iot/ingresses/mqtt-adapter
    uid: 63c5c1e0-0ad1-11e9-9fcc-525400f72165
  spec:
    rules:
    - host: mqtt-adapter-iot.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mqtt-adapter
            servicePort: 8180
          path: /
    tls:
    - hosts:
      - mqtt-adapter-iot.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"nats"},"name":"nats","namespace":"iot"},"spec":{"rules":[{"host":"nats-iot.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"nats","servicePort":8222},"path":"/"}]}}],"tls":[{"hosts":["nats-iot.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-28T18:45:11Z
    generation: 1
    labels:
      name: nats
    name: nats
    namespace: iot
    resourceVersion: "124283686"
    selfLink: /apis/extensions/v1beta1/namespaces/iot/ingresses/nats
    uid: b4e5ce9d-0ad0-11e9-9fcc-525400f72165
  spec:
    rules:
    - host: nats-iot.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: nats
            servicePort: 8222
          path: /
    tls:
    - hosts:
      - nats-iot.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"things"},"name":"things","namespace":"iot"},"spec":{"rules":[{"host":"things-iot.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"things","servicePort":8180},"path":"/"}]}}],"tls":[{"hosts":["things-iot.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-28T18:50:45Z
    generation: 1
    labels:
      name: things
    name: things
    namespace: iot
    resourceVersion: "124288623"
    selfLink: /apis/extensions/v1beta1/namespaces/iot/ingresses/things
    uid: 7c082f1b-0ad1-11e9-9edf-52540027f265
  spec:
    rules:
    - host: things-iot.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: things
            servicePort: 8180
          path: /
    tls:
    - hosts:
      - things-iot.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/protocol: h2c
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/protocol":"h2c","kubernetes.io/ingress.class":"traefik-iot"},"labels":{"name":"things-traefik"},"name":"things-traefik","namespace":"iot"},"spec":{"rules":[{"host":"things-iot-traefik.ttc.test.iot.target.com","http":{"paths":[{"backend":{"serviceName":"things","servicePort":8181},"path":"/"}]}}]}}
      kubernetes.io/ingress.class: traefik-iot
    creationTimestamp: 2018-12-28T18:51:19Z
    generation: 2
    labels:
      name: things-traefik
    name: things-traefik
    namespace: iot
    resourceVersion: "129840484"
    selfLink: /apis/extensions/v1beta1/namespaces/iot/ingresses/things-traefik
    uid: 9002da28-0ad1-11e9-9edf-52540027f265
  spec:
    rules:
    - host: things-iot-traefik.ttc.test.iot.target.com
      http:
        paths:
        - backend:
            serviceName: things
            servicePort: 8181
          path: /
  status:
    loadBalancer: {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"users"},"name":"users","namespace":"iot"},"spec":{"rules":[{"host":"users-iot.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"users","servicePort":8180},"path":"/"}]}}],"tls":[{"hosts":["users-iot.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-28T18:48:11Z
    generation: 1
    labels:
      name: users
    name: users
    namespace: iot
    resourceVersion: "124286149"
    selfLink: /apis/extensions/v1beta1/namespaces/iot/ingresses/users
    uid: 1ffb8315-0ad1-11e9-9fcc-525400f72165
  spec:
    rules:
    - host: users-iot.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: users
            servicePort: 8180
          path: /
    tls:
    - hosts:
      - users-iot.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/protocol: h2c
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/protocol":"h2c","kubernetes.io/ingress.class":"traefik-iot"},"labels":{"name":"users-traefik"},"name":"users-traefik","namespace":"iot"},"spec":{"rules":[{"host":"users-iot-traefik.ttc.test.iot.target.com","http":{"paths":[{"backend":{"serviceName":"users","servicePort":8181},"path":"/"}]}}]}}
      kubernetes.io/ingress.class: traefik-iot
    creationTimestamp: 2018-12-31T15:54:14Z
    generation: 3
    labels:
      name: users-traefik
    name: users-traefik
    namespace: iot
    resourceVersion: "129853023"
    selfLink: /apis/extensions/v1beta1/namespaces/iot/ingresses/users-traefik
    uid: 52746105-0d14-11e9-9edf-52540027f265
  spec:
    rules:
    - host: users-iot-traefik.ttc.test.iot.target.com
      http:
        paths:
        - backend:
            serviceName: users
            servicePort: 8181
          path: /
  status:
    loadBalancer: {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"vernemq"},"name":"vernemq","namespace":"iot"},"spec":{"rules":[{"host":"vernemq-iot.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"vernemq","servicePort":443},"path":"/"}]}}],"tls":[{"hosts":["vernemq-iot.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-31T10:33:20Z
    generation: 1
    labels:
      name: vernemq
    name: vernemq
    namespace: iot
    resourceVersion: "161673191"
    selfLink: /apis/extensions/v1beta1/namespaces/iot/ingresses/vernemq
    uid: a0eca7cb-2543-11e9-9a91-525400fb923b
  spec:
    rules:
    - host: vernemq-iot.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: vernemq
            servicePort: 443
          path: /
    tls:
    - hosts:
      - vernemq-iot.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"item-grouper-ingress-migration-ttc"},"name":"item-grouper-ingress-migration-ttc","namespace":"item-grouper-migration"},"spec":{"rules":[{"host":"item-grouper-migration.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"item-grouper-app-service-migration","servicePort":80},"path":"/"}]}},{"host":"item-grouper-migration.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"item-grouper-app-service-migration","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["item-grouper-migration.ttc-test.k8s.target.com","item-grouper-migration.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-27T16:41:50Z
    generation: 2
    labels:
      name: item-grouper-ingress-migration-ttc
    name: item-grouper-ingress-migration-ttc
    namespace: item-grouper-migration
    resourceVersion: "90516281"
    selfLink: /apis/extensions/v1beta1/namespaces/item-grouper-migration/ingresses/item-grouper-ingress-migration-ttc
    uid: 569e2942-f263-11e8-ad5a-525400a9bf14
  spec:
    rules:
    - host: item-grouper-migration.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: item-grouper-app-service-migration
            servicePort: 80
          path: /
    - host: item-grouper-migration.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: item-grouper-app-service-migration
            servicePort: 80
          path: /
    tls:
    - hosts:
      - item-grouper-migration.ttc-test.k8s.target.com
      - item-grouper-migration.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"grouper-ui-ingress-stage-ttc"},"name":"grouper-ui-ingress-stage-ttc","namespace":"item-grouper-test-ui"},"spec":{"rules":[{"host":"item-grouper-ui.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"grouper-ui-app-service-stage","servicePort":80},"path":"/"}]}},{"host":"item-grouper-ui.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"grouper-ui-app-service-stage","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["item-grouper-ui.ttc-test.k8s.target.com","item-grouper-ui.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-07T05:27:19Z
    generation: 1
    labels:
      name: grouper-ui-ingress-stage-ttc
    name: grouper-ui-ingress-stage-ttc
    namespace: item-grouper-test-ui
    resourceVersion: "49225475"
    selfLink: /apis/extensions/v1beta1/namespaces/item-grouper-test-ui/ingresses/grouper-ui-ingress-stage-ttc
    uid: b0972e85-b25e-11e8-8462-525400b93a8e
  spec:
    rules:
    - host: item-grouper-ui.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: grouper-ui-app-service-stage
            servicePort: 80
          path: /
    - host: item-grouper-ui.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: grouper-ui-app-service-stage
            servicePort: 80
          path: /
    tls:
    - hosts:
      - item-grouper-ui.ttc-test.k8s.target.com
      - item-grouper-ui.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"item-grouper-ingress-test-ttc"},"name":"item-grouper-ingress-test-ttc","namespace":"item-grouper-test"},"spec":{"rules":[{"host":"item-grouper.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"item-grouper-app-service-test","servicePort":80},"path":"/"}]}},{"host":"item-grouper.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"item-grouper-app-service-test","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["item-grouper.ttc-test.k8s.target.com","item-grouper.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-28T07:33:15Z
    generation: 2
    labels:
      name: item-grouper-ingress-test-ttc
    name: item-grouper-ingress-test-ttc
    namespace: item-grouper-test
    resourceVersion: "49225448"
    selfLink: /apis/extensions/v1beta1/namespaces/item-grouper-test/ingresses/item-grouper-ingress-test-ttc
    uid: a0075bd1-aa94-11e8-a2fd-525400b06b0f
  spec:
    rules:
    - host: item-grouper.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: item-grouper-app-service-test
            servicePort: 80
          path: /
    - host: item-grouper.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: item-grouper-app-service-test
            servicePort: 80
          path: /
    tls:
    - hosts:
      - item-grouper.ttc-test.k8s.target.com
      - item-grouper.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"item-location-intent"},"name":"item-location-intent","namespace":"item-location-intent-dev"},"spec":{"rules":[{"host":"item-location-intent-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"item-location-intent","servicePort":80},"path":"/"}]}},{"host":"item-location-intent-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"item-location-intent","servicePort":80},"path":"/"}]}},{"host":"item-location-intent-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"item-location-intent","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["item-location-intent-dev.ttc-test.k8s.target.com","item-location-intent-dev.tte-test.k8s.target.com","item-location-intent-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-01T08:23:26Z
    generation: 1
    labels:
      name: item-location-intent
    name: item-location-intent
    namespace: item-location-intent-dev
    resourceVersion: "49225564"
    selfLink: /apis/extensions/v1beta1/namespaces/item-location-intent-dev/ingresses/item-location-intent
    uid: 451264d1-c553-11e8-90a0-525400d38b79
  spec:
    rules:
    - host: item-location-intent-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: item-location-intent
            servicePort: 80
          path: /
    - host: item-location-intent-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: item-location-intent
            servicePort: 80
          path: /
    - host: item-location-intent-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: item-location-intent
            servicePort: 80
          path: /
    tls:
    - hosts:
      - item-location-intent-dev.ttc-test.k8s.target.com
      - item-location-intent-dev.tte-test.k8s.target.com
      - item-location-intent-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"item-location-intent"},"name":"item-location-intent","namespace":"item-location-intent-stage"},"spec":{"rules":[{"host":"item-location-intent-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"item-location-intent","servicePort":80},"path":"/"}]}},{"host":"item-location-intent-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"item-location-intent","servicePort":80},"path":"/"}]}},{"host":"item-location-intent-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"item-location-intent","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["item-location-intent-stage.ttc-test.k8s.target.com","item-location-intent-stage.tte-test.k8s.target.com","item-location-intent-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-03T09:16:50Z
    generation: 1
    labels:
      name: item-location-intent
    name: item-location-intent
    namespace: item-location-intent-stage
    resourceVersion: "49225552"
    selfLink: /apis/extensions/v1beta1/namespaces/item-location-intent-stage/ingresses/item-location-intent
    uid: 0f81e821-c6ed-11e8-b53b-5254000e56fe
  spec:
    rules:
    - host: item-location-intent-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: item-location-intent
            servicePort: 80
          path: /
    - host: item-location-intent-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: item-location-intent
            servicePort: 80
          path: /
    - host: item-location-intent-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: item-location-intent
            servicePort: 80
          path: /
    tls:
    - hosts:
      - item-location-intent-stage.ttc-test.k8s.target.com
      - item-location-intent-stage.tte-test.k8s.target.com
      - item-location-intent-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"item-router-ingress-stage-ttc"},"name":"item-router-ingress-stage-ttc","namespace":"item-photon"},"spec":{"rules":[{"host":"item-router-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"item-router-app-service-stage","servicePort":80},"path":"/"}]}},{"host":"item-router-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"item-router-app-service-stage","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["item-router-stage.test.k8s.target.com","item-router-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-12T07:52:34Z
    generation: 2
    labels:
      name: item-router-ingress-stage-ttc
    name: item-router-ingress-stage-ttc
    namespace: item-photon
    resourceVersion: "153645354"
    selfLink: /apis/extensions/v1beta1/namespaces/item-photon/ingresses/item-router-ingress-stage-ttc
    uid: c7d51525-cdf3-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: item-router-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: item-router-app-service-stage
            servicePort: 80
          path: /
    - host: item-router-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: item-router-app-service-stage
            servicePort: 80
          path: /
    tls:
    - hosts:
      - item-router-stage.test.k8s.target.com
      - item-router-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"go-kafka-producer-ingress"},"name":"go-kafka-producer-ingress","namespace":"itse-go-kafka-producer"},"spec":{"rules":[{"host":"go-kafka-producer.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"go-kafka-producer-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["go-kafka-producer.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-12T16:15:57Z
    generation: 3
    labels:
      name: go-kafka-producer-ingress
    name: go-kafka-producer-ingress
    namespace: itse-go-kafka-producer
    resourceVersion: "49225998"
    selfLink: /apis/extensions/v1beta1/namespaces/itse-go-kafka-producer/ingresses/go-kafka-producer-ingress
    uid: 21692884-b6a7-11e8-a71c-525400524761
  spec:
    rules:
    - host: go-kafka-producer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: go-kafka-producer-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - go-kafka-producer.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"incidents-ingress"},"name":"incidents-ingress","namespace":"itse-incidents"},"spec":{"rules":[{"host":"incidents.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"incidents-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["incidents.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-14T20:39:49Z
    generation: 1
    labels:
      name: incidents-ingress
    name: incidents-ingress
    namespace: itse-incidents
    resourceVersion: "49225801"
    selfLink: /apis/extensions/v1beta1/namespaces/itse-incidents/ingresses/incidents-ingress
    uid: 5346b8e1-b85e-11e8-a71c-525400524761
  spec:
    rules:
    - host: incidents.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: incidents-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - incidents.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"outbound-messages-ingress"},"name":"outbound-messages-ingress","namespace":"itse-incidents"},"spec":{"rules":[{"host":"outbound-messages.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"outbound-messages-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["outbound-messages.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-26T10:05:55Z
    generation: 1
    labels:
      name: outbound-messages-ingress
    name: outbound-messages-ingress
    namespace: itse-incidents
    resourceVersion: "190696088"
    selfLink: /apis/extensions/v1beta1/namespaces/itse-incidents/ingresses/outbound-messages-ingress
    uid: 1b78ed2b-39ae-11e9-a2e8-52540055f679
  spec:
    rules:
    - host: outbound-messages.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: outbound-messages-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - outbound-messages.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"sms-prototype-ingress"},"name":"sms-prototype-ingress","namespace":"itse-solana"},"spec":{"rules":[{"host":"sms-prototype.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"sms-prototype-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["sms-prototype.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-18T18:16:41Z
    generation: 1
    labels:
      name: sms-prototype-ingress
    name: sms-prototype-ingress
    namespace: itse-solana
    resourceVersion: "49225784"
    selfLink: /apis/extensions/v1beta1/namespaces/itse-solana/ingresses/sms-prototype-ingress
    uid: fdf326cb-bb6e-11e8-8462-525400b93a8e
  spec:
    rules:
    - host: sms-prototype.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: sms-prototype-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - sms-prototype.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"solana-api-ingress"},"name":"solana-api-ingress","namespace":"itse-solana"},"spec":{"rules":[{"host":"solana-api.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"solana-api-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["solana-api.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-15T18:28:20Z
    generation: 1
    labels:
      name: solana-api-ingress
    name: solana-api-ingress
    namespace: itse-solana
    resourceVersion: "78134186"
    selfLink: /apis/extensions/v1beta1/namespaces/itse-solana/ingresses/solana-api-ingress
    uid: 3a3b2af6-e904-11e8-9e69-525400e51df1
  spec:
    rules:
    - host: solana-api.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: solana-api-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - solana-api.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"solana-api-stage-ingress"},"name":"solana-api-stage-ingress","namespace":"itse-solana"},"spec":{"rules":[{"host":"solana-api-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"solana-api-stage-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["solana-api-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-16T00:21:59Z
    generation: 2
    labels:
      name: solana-api-stage-ingress
    name: solana-api-stage-ingress
    namespace: itse-solana
    resourceVersion: "79067080"
    selfLink: /apis/extensions/v1beta1/namespaces/itse-solana/ingresses/solana-api-stage-ingress
    uid: a245fbe4-e935-11e8-9e69-525400e51df1
  spec:
    rules:
    - host: solana-api-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: solana-api-stage-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - solana-api-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"solana-service-ingress"},"name":"solana-service-ingress","namespace":"itse-solana"},"spec":{"rules":[{"host":"solana-service.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"solana-service-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["solana-service.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-15T18:34:25Z
    generation: 1
    labels:
      name: solana-service-ingress
    name: solana-service-ingress
    namespace: itse-solana
    resourceVersion: "78138696"
    selfLink: /apis/extensions/v1beta1/namespaces/itse-solana/ingresses/solana-service-ingress
    uid: 140266f7-e905-11e8-9e69-525400e51df1
  spec:
    rules:
    - host: solana-service.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: solana-service-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - solana-service.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"solana-service-stage-ingress"},"name":"solana-service-stage-ingress","namespace":"itse-solana"},"spec":{"rules":[{"host":"solana-service-stage.prod.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"solana-service-stage-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["solana-service-stage.prod.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-16T18:42:04Z
    generation: 1
    labels:
      name: solana-service-stage-ingress
    name: solana-service-stage-ingress
    namespace: itse-solana
    resourceVersion: "79195935"
    selfLink: /apis/extensions/v1beta1/namespaces/itse-solana/ingresses/solana-service-stage-ingress
    uid: 5007ba9a-e9cf-11e8-ad5a-525400a9bf14
  spec:
    rules:
    - host: solana-service-stage.prod.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: solana-service-stage-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - solana-service-stage.prod.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"vestigium-cartographer-stage-ingress"},"name":"vestigium-cartographer-stage-ingress","namespace":"itse-vestigium"},"spec":{"rules":[{"host":"vestigium-cartographer-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"vestigium-cartographer-stage-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["vestigium-cartographer-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-18T04:40:47Z
    generation: 1
    labels:
      name: vestigium-cartographer-stage-ingress
    name: vestigium-cartographer-stage-ingress
    namespace: itse-vestigium
    resourceVersion: "54388842"
    selfLink: /apis/extensions/v1beta1/namespaces/itse-vestigium/ingresses/vestigium-cartographer-stage-ingress
    uid: fb2d778a-d28f-11e8-ad5b-5254008c264f
  spec:
    rules:
    - host: vestigium-cartographer-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: vestigium-cartographer-stage-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - vestigium-cartographer-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"vestigium-cartographer-test-ingress"},"name":"vestigium-cartographer-test-ingress","namespace":"itse-vestigium"},"spec":{"rules":[{"host":"vestigium-cartographer-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"vestigium-cartographer-test-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["vestigium-cartographer-test.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-18T03:56:07Z
    generation: 1
    labels:
      name: vestigium-cartographer-test-ingress
    name: vestigium-cartographer-test-ingress
    namespace: itse-vestigium
    resourceVersion: "54364407"
    selfLink: /apis/extensions/v1beta1/namespaces/itse-vestigium/ingresses/vestigium-cartographer-test-ingress
    uid: be363243-d289-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: vestigium-cartographer-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: vestigium-cartographer-test-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - vestigium-cartographer-test.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"vestigium-finder-stage-ingress"},"name":"vestigium-finder-stage-ingress","namespace":"itse-vestigium"},"spec":{"rules":[{"host":"vestigium-finder-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"vestigium-finder-stage-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["vestigium-finder-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-17T22:42:47Z
    generation: 2
    labels:
      name: vestigium-finder-stage-ingress
    name: vestigium-finder-stage-ingress
    namespace: itse-vestigium
    resourceVersion: "54384262"
    selfLink: /apis/extensions/v1beta1/namespaces/itse-vestigium/ingresses/vestigium-finder-stage-ingress
    uid: f80c49b6-d25d-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: vestigium-finder-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: vestigium-finder-stage-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - vestigium-finder-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"vestigium-finder-test-ingress"},"name":"vestigium-finder-test-ingress","namespace":"itse-vestigium"},"spec":{"rules":[{"host":"vestigium-finder-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"vestigium-finder-test-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["vestigium-finder-test.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-17T20:44:27Z
    generation: 1
    labels:
      name: vestigium-finder-test-ingress
    name: vestigium-finder-test-ingress
    namespace: itse-vestigium
    resourceVersion: "54134444"
    selfLink: /apis/extensions/v1beta1/namespaces/itse-vestigium/ingresses/vestigium-finder-test-ingress
    uid: 706bef79-d24d-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: vestigium-finder-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: vestigium-finder-test-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - vestigium-finder-test.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"vestigium-packer-stage-ingress"},"name":"vestigium-packer-stage-ingress","namespace":"itse-vestigium"},"spec":{"rules":[{"host":"vestigium-packer-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"vestigium-packer-stage-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["vestigium-packer-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-18T04:40:42Z
    generation: 1
    labels:
      name: vestigium-packer-stage-ingress
    name: vestigium-packer-stage-ingress
    namespace: itse-vestigium
    resourceVersion: "54388843"
    selfLink: /apis/extensions/v1beta1/namespaces/itse-vestigium/ingresses/vestigium-packer-stage-ingress
    uid: f8681981-d28f-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: vestigium-packer-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: vestigium-packer-stage-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - vestigium-packer-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"vestigium-packer-test-ingress"},"name":"vestigium-packer-test-ingress","namespace":"itse-vestigium"},"spec":{"rules":[{"host":"vestigium-packer-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"vestigium-packer-test-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["vestigium-packer-test.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-18T04:08:09Z
    generation: 1
    labels:
      name: vestigium-packer-test-ingress
    name: vestigium-packer-test-ingress
    namespace: itse-vestigium
    resourceVersion: "54370961"
    selfLink: /apis/extensions/v1beta1/namespaces/itse-vestigium/ingresses/vestigium-packer-test-ingress
    uid: 6c8e7ee8-d28b-11e8-ad5b-5254008c264f
  spec:
    rules:
    - host: vestigium-packer-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: vestigium-packer-test-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - vestigium-packer-test.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"vestigium-scholar-stage-ingress"},"name":"vestigium-scholar-stage-ingress","namespace":"itse-vestigium"},"spec":{"rules":[{"host":"vestigium-scholar-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"vestigium-scholar-stage-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["vestigium-scholar-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-17T23:39:35Z
    generation: 2
    labels:
      name: vestigium-scholar-stage-ingress
    name: vestigium-scholar-stage-ingress
    namespace: itse-vestigium
    resourceVersion: "54400935"
    selfLink: /apis/extensions/v1beta1/namespaces/itse-vestigium/ingresses/vestigium-scholar-stage-ingress
    uid: e7e9f81e-d265-11e8-ad5b-5254008c264f
  spec:
    rules:
    - host: vestigium-scholar-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: vestigium-scholar-stage-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - vestigium-scholar-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"vestigium-scholar-test-ingress"},"name":"vestigium-scholar-test-ingress","namespace":"itse-vestigium"},"spec":{"rules":[{"host":"vestigium-scholar-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"vestigium-scholar-test-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["vestigium-scholar-test.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-17T23:32:23Z
    generation: 1
    labels:
      name: vestigium-scholar-test-ingress
    name: vestigium-scholar-test-ingress
    namespace: itse-vestigium
    resourceVersion: "54227683"
    selfLink: /apis/extensions/v1beta1/namespaces/itse-vestigium/ingresses/vestigium-scholar-test-ingress
    uid: e6466477-d264-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: vestigium-scholar-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: vestigium-scholar-test-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - vestigium-scholar-test.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"discovery-api-ingress"},"name":"discovery-api-ingress","namespace":"kafka-operations-api"},"spec":{"rules":[{"host":"kafka-discovery.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"discovery-api-service","servicePort":8080},"path":"/"}]}},{"host":"kafka-discovery.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"discovery-api-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["kafka-discovery.test.k8s.target.com","kafka-discovery.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-19T22:26:40Z
    generation: 1
    labels:
      name: discovery-api-ingress
    name: discovery-api-ingress
    namespace: kafka-operations-api
    resourceVersion: "82475094"
    selfLink: /apis/extensions/v1beta1/namespaces/kafka-operations-api/ingresses/discovery-api-ingress
    uid: 2fb92374-ec4a-11e8-981f-5254001f7df6
  spec:
    rules:
    - host: kafka-discovery.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: discovery-api-service
            servicePort: 8080
          path: /
    - host: kafka-discovery.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: discovery-api-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - kafka-discovery.test.k8s.target.com
      - kafka-discovery.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"go-proxy-ingress"},"name":"go-proxy-ingress","namespace":"kafka-operations-api"},"spec":{"rules":[{"host":"kafka-operations-api.test.k8s.global.tgt-pe-test.ost.cloud.target.internal","http":{"paths":[{"backend":{"serviceName":"go-proxy-service","servicePort":80},"path":"/"}]}},{"host":"kafka-operations-api.d1cp1-test.k8s.ttc.tgt-pe-test.ost.cloud.target.internal","http":{"paths":[{"backend":{"serviceName":"go-proxy-service","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-18T18:59:49Z
    generation: 1
    labels:
      name: go-proxy-ingress
    name: go-proxy-ingress
    namespace: kafka-operations-api
    resourceVersion: "54845837"
    selfLink: /apis/extensions/v1beta1/namespaces/kafka-operations-api/ingresses/go-proxy-ingress
    uid: fd1d03a7-d307-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: kafka-operations-api.test.k8s.global.tgt-pe-test.ost.cloud.target.internal
      http:
        paths:
        - backend:
            serviceName: go-proxy-service
            servicePort: 80
          path: /
    - host: kafka-operations-api.d1cp1-test.k8s.ttc.tgt-pe-test.ost.cloud.target.internal
      http:
        paths:
        - backend:
            serviceName: go-proxy-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-19T17:08:36Z
    generation: 4
    labels:
      app: envoyproxy-healthz-helm
      chart: envoyproxy-healthz-helm-0.0.6
      heritage: Tiller
      release: envoyproxy-healthz
    name: envoyproxy-healthz-envoyproxy-healthz-helm
    namespace: kube-system
    resourceVersion: "214370729"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/envoyproxy-healthz-envoyproxy-healthz-helm
    uid: a22625dc-4a69-11e9-94ec-5254002283d6
  spec:
    rules:
    - host: envoyproxy-healthz.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: envoyproxy-healthz-envoyproxy-healthz-helm
            servicePort: 8000
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-02-21T17:38:27Z
    generation: 1
    labels:
      app: fed-pie-dev-ttc-prometheus
      chart: prometheus-1.4.27
      component: alertmanager
      heritage: Tiller
      release: fed-pie-dev-ttc
    name: fed-pie-dev-ttc-prom-alt
    namespace: kube-system
    resourceVersion: "199119087"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/fed-pie-dev-ttc-prom-alt
    uid: 7f485abb-35ff-11e9-a2e8-52540055f679
  spec:
    rules:
    - host: fed-prometheus-infra-alert-pie-dev-ttc.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fed-pie-dev-ttc-prom-alt
            servicePort: 80
          path: /
    tls:
    - hosts:
      - fed-prometheus-infra-alert-pie-dev-ttc.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-02-06T20:06:04Z
    generation: 1
    labels:
      app: fed-pie-dev-ttc-prometheus
      chart: prometheus-1.4.27
      component: server-infra
      heritage: Tiller
      release: fed-pie-dev-ttc
    name: fed-pie-dev-ttc-prometheus-infra
    namespace: kube-system
    resourceVersion: "199119118"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/fed-pie-dev-ttc-prometheus-infra
    uid: a224bc9c-2a4a-11e9-8b44-5254006cd09e
  spec:
    rules:
    - host: fed-prometheus-infra-pie-dev-ttc.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fed-pie-dev-ttc-prom-srv-infra
            servicePort: 80
          path: /
    tls:
    - hosts:
      - fed-prometheus-infra-pie-dev-ttc.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-02T13:40:26Z
    generation: 2
    labels:
      app: incluster-pie-dev-001-ttc-prometheus
      chart: prometheus-1.4.27
      component: server-infra
      heritage: Tiller
      release: incluster-pie-dev-001-ttc
    name: incluster-pie-dev-001-ttc-prometheus-infra
    namespace: kube-system
    resourceVersion: "199119673"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/incluster-pie-dev-001-ttc-prometheus-infra
    uid: b864c369-c648-11e8-9f4c-525400adf9ce
  spec:
    rules:
    - host: prometheus-infra-pie-dev-001.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: incluster-pie-dev-001-ttc-prom-srv-infra
            servicePort: 80
          path: /
    tls:
    - hosts:
      - prometheus-infra-pie-dev-001.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-11-20T21:37:27Z
    generation: 1
    labels:
      app: incluster-pie-dev-002-ttc-prometheus
      chart: prometheus-1.4.27
      component: server-infra
      heritage: Tiller
      release: incluster-pie-dev-002-ttc
    name: incluster-pie-dev-002-ttc-prometheus-infra
    namespace: kube-system
    resourceVersion: "199119773"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/incluster-pie-dev-002-ttc-prometheus-infra
    uid: 79a21f65-ed0c-11e8-ad5a-525400a9bf14
  spec:
    rules:
    - host: prometheus-infra-pie-dev-002.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: incluster-pie-dev-002-ttc-prom-srv-infra
            servicePort: 80
          path: /
    tls:
    - hosts:
      - prometheus-infra-pie-dev-002.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-02-08T01:12:41Z
    generation: 1
    labels:
      app: incluster-pie-dev-005-ttc-prometheus
      chart: prometheus-1.4.27
      component: server-infra
      heritage: Tiller
      release: incluster-pie-dev-005-ttc
    name: incluster-pie-dev-005-ttc-prometheus-infra
    namespace: kube-system
    resourceVersion: "199119832"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/incluster-pie-dev-005-ttc-prometheus-infra
    uid: a1f23cbd-2b3e-11e9-a2e8-52540055f679
  spec:
    rules:
    - host: prometheus-infra-pie-dev-005.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: incluster-pie-dev-005-ttc-prom-srv-infra
            servicePort: 80
          path: /
    tls:
    - hosts:
      - prometheus-infra-pie-dev-005.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-02-08T01:12:44Z
    generation: 1
    labels:
      app: incluster-pie-dev-006-ttc-prometheus
      chart: prometheus-1.4.27
      component: server-infra
      heritage: Tiller
      release: incluster-pie-dev-006-ttc
    name: incluster-pie-dev-006-ttc-prometheus-infra
    namespace: kube-system
    resourceVersion: "199119886"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/incluster-pie-dev-006-ttc-prometheus-infra
    uid: a3f081a0-2b3e-11e9-a2e8-52540055f679
  spec:
    rules:
    - host: prometheus-infra-pie-dev-006.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: incluster-pie-dev-006-ttc-prom-srv-infra
            servicePort: 80
          path: /
    tls:
    - hosts:
      - prometheus-infra-pie-dev-006.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-02-08T01:12:47Z
    generation: 1
    labels:
      app: incluster-pie-dev-007-ttc-prometheus
      chart: prometheus-1.4.27
      component: server-infra
      heritage: Tiller
      release: incluster-pie-dev-007-ttc
    name: incluster-pie-dev-007-ttc-prometheus-infra
    namespace: kube-system
    resourceVersion: "199119945"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/incluster-pie-dev-007-ttc-prometheus-infra
    uid: a5b72ca8-2b3e-11e9-a2e8-52540055f679
  spec:
    rules:
    - host: prometheus-infra-pie-dev-007.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: incluster-pie-dev-007-ttc-prom-srv-infra
            servicePort: 80
          path: /
    tls:
    - hosts:
      - prometheus-infra-pie-dev-007.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-09-28T18:37:45Z
    generation: 1
    labels:
      app: incluster-pie-lab-vmaas-001-ttb-prometheus
      chart: prometheus-1.4.8
      component: server-infra
      heritage: Tiller
      release: incluster-pie-lab-vmaas-001-ttb
    name: incluster-pie-lab-vmaas-001-ttb-prometheus-infra
    namespace: kube-system
    resourceVersion: "49225572"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/incluster-pie-lab-vmaas-001-ttb-prometheus-infra
    uid: 977ddae7-c34d-11e8-981f-525400343c24
  spec:
    rules:
    - host: prometheus-infra-pie-lab-vmaas-001.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: incluster-pie-lab-vmaas-001-ttb-prom-srv-infra
            servicePort: 80
          path: /
    tls:
    - hosts:
      - prometheus-infra-pie-lab-vmaas-001.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-08-15T17:22:36Z
    generation: 1
    labels:
      app: incluster-pie-prod-vmaas-001-ttc-prometheus
      chart: prometheus-1.4.27
      component: server-infra
      heritage: Tiller
      release: incluster-pie-prod-vmaas-001-ttc
    name: incluster-pie-prod-vmaas-001-ttc-prometheus-infra
    namespace: kube-system
    resourceVersion: "199119471"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/incluster-pie-prod-vmaas-001-ttc-prometheus-infra
    uid: cd7c8c41-a0af-11e8-a2fd-525400b06b0f
  spec:
    rules:
    - host: prometheus-infra-pie-prod-vmaas-001.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: incluster-pie-prod-vmaas-001-ttc-prom-srv-infra
            servicePort: 80
          path: /
    tls:
    - hosts:
      - prometheus-infra-pie-prod-vmaas-001.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-08-15T17:22:28Z
    generation: 1
    labels:
      app: incluster-pie-prod-vmaas-002-ttc-prometheus
      chart: prometheus-1.4.27
      component: server-infra
      heritage: Tiller
      release: incluster-pie-prod-vmaas-002-ttc
    name: incluster-pie-prod-vmaas-002-ttc-prometheus-infra
    namespace: kube-system
    resourceVersion: "199119522"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/incluster-pie-prod-vmaas-002-ttc-prometheus-infra
    uid: c8f680db-a0af-11e8-a2fd-525400b06b0f
  spec:
    rules:
    - host: prometheus-infra-pie-prod-vmaas-002.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: incluster-pie-prod-vmaas-002-ttc-prom-srv-infra
            servicePort: 80
          path: /
    tls:
    - hosts:
      - prometheus-infra-pie-prod-vmaas-002.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-08-15T14:47:45Z
    generation: 1
    labels:
      app: incluster-pie-prod-vmaas-003-ttc-prometheus
      chart: prometheus-1.4.27
      component: server-infra
      heritage: Tiller
      release: incluster-pie-prod-vmaas-003-ttc
    name: incluster-pie-prod-vmaas-003-ttc-prometheus-infra
    namespace: kube-system
    resourceVersion: "199119573"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/incluster-pie-prod-vmaas-003-ttc-prometheus-infra
    uid: 2bfd1dd9-a09a-11e8-a2fd-525400b06b0f
  spec:
    rules:
    - host: prometheus-infra-pie-prod-vmaas-003.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: incluster-pie-prod-vmaas-003-ttc-prom-srv-infra
            servicePort: 80
          path: /
    tls:
    - hosts:
      - prometheus-infra-pie-prod-vmaas-003.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-09-14T21:28:27Z
    generation: 1
    labels:
      app: incluster-pie-prod-vmaas-004-ttc-prometheus
      chart: prometheus-1.4.27
      component: server-infra
      heritage: Tiller
      release: incluster-pie-prod-vmaas-004-ttc
    name: incluster-pie-prod-vmaas-004-ttc-prometheus-infra
    namespace: kube-system
    resourceVersion: "199119620"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/incluster-pie-prod-vmaas-004-ttc-prometheus-infra
    uid: 1e2fa02a-b865-11e8-8462-525400b93a8e
  spec:
    rules:
    - host: prometheus-infra-pie-prod-vmaas-004.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: incluster-pie-prod-vmaas-004-ttc-prom-srv-infra
            servicePort: 80
          path: /
    tls:
    - hosts:
      - prometheus-infra-pie-prod-vmaas-004.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-07-02T18:14:49Z
    generation: 2
    labels:
      app: incluster-prometheus
      chart: prometheus-1.4.27
      component: server-infra
      heritage: Tiller
      release: incluster
    name: incluster-prometheus-infra
    namespace: kube-system
    resourceVersion: "199119361"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/incluster-prometheus-infra
    uid: ce9b4b62-7e23-11e8-b8c9-525400561d3a
  spec:
    rules:
    - host: prometheus-infra.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: incluster-prom-srv-infra
            servicePort: 80
          path: /
    tls:
    - hosts:
      - prometheus-infra.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-07-02T18:14:49Z
    generation: 2
    labels:
      app: incluster-prometheus
      chart: prometheus-1.4.27
      component: server-pod
      heritage: Tiller
      release: incluster
    name: incluster-prometheus-pod
    namespace: kube-system
    resourceVersion: "199119385"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/incluster-prometheus-pod
    uid: ce9c499c-7e23-11e8-b8c9-525400561d3a
  spec:
    rules:
    - host: prometheus-pod.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: incluster-prom-srv-pod
            servicePort: 80
          path: /
    tls:
    - hosts:
      - prometheus-pod.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-07-02T18:14:49Z
    generation: 2
    labels:
      app: incluster-prometheus
      chart: prometheus-1.4.27
      component: server-redsky
      heritage: Tiller
      release: incluster
    name: incluster-prometheus-redsky
    namespace: kube-system
    resourceVersion: "199119340"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/incluster-prometheus-redsky
    uid: ce9cddcc-7e23-11e8-b8c9-525400561d3a
  spec:
    rules:
    - host: prometheus-redsky.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: incluster-prom-srv-redsky
            servicePort: 80
          path: /
    tls:
    - hosts:
      - prometheus-redsky.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-07-02T18:14:49Z
    generation: 2
    labels:
      app: incluster-prometheus
      chart: prometheus-1.4.27
      component: server-service-01
      heritage: Tiller
      release: incluster
    name: incluster-prometheus-service-01
    namespace: kube-system
    resourceVersion: "199119311"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/incluster-prometheus-service-01
    uid: ce9d9954-7e23-11e8-b8c9-525400561d3a
  spec:
    rules:
    - host: prometheus-service-01.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: incluster-prom-srv-service-01
            servicePort: 80
          path: /
    tls:
    - hosts:
      - prometheus-service-01.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-07-02T18:14:48Z
    generation: 2
    labels:
      app: incluster-prometheus
      chart: prometheus-1.4.27
      component: server-service-02
      heritage: Tiller
      release: incluster
    name: incluster-prometheus-service-02
    namespace: kube-system
    resourceVersion: "199119287"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/incluster-prometheus-service-02
    uid: ce9a96eb-7e23-11e8-b8c9-525400561d3a
  spec:
    rules:
    - host: prometheus-service-02.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: incluster-prom-srv-service-02
            servicePort: 80
          path: /
    tls:
    - hosts:
      - prometheus-service-02.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-09-28T20:32:04Z
    generation: 1
    labels:
      app: prom-fed-all-prometheus
      chart: prometheus-1.4.27
      component: server-all
      heritage: Tiller
      release: prom-fed-all
    name: prom-fed-all-prometheus-all
    namespace: kube-system
    resourceVersion: "199118958"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/prom-fed-all-prometheus-all
    uid: 8fa2b6ed-c35d-11e8-981f-525400343c24
  spec:
    rules:
    - host: fed-prometheus-all.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: prom-fed-all-prom-srv-all
            servicePort: 80
          path: /
    tls:
    - hosts:
      - fed-prometheus-all.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-09-28T20:32:06Z
    generation: 1
    labels:
      app: prom-fed-infra-prometheus
      chart: prometheus-1.4.27
      component: alertmanager
      heritage: Tiller
      release: prom-fed-infra
    name: prom-fed-infra-prom-alt
    namespace: kube-system
    resourceVersion: "199119011"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/prom-fed-infra-prom-alt
    uid: 90dfe64b-c35d-11e8-981f-525400343c24
  spec:
    rules:
    - host: fed-prometheus-infra-alert.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: prom-fed-infra-prom-alt
            servicePort: 80
          path: /
    tls:
    - hosts:
      - fed-prometheus-infra-alert.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-09-28T20:32:06Z
    generation: 1
    labels:
      app: prom-fed-infra-prometheus
      chart: prometheus-1.4.27
      component: server-infra
      heritage: Tiller
      release: prom-fed-infra
    name: prom-fed-infra-prometheus-infra
    namespace: kube-system
    resourceVersion: "199119041"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/prom-fed-infra-prometheus-infra
    uid: 912a4e69-c35d-11e8-981f-525400343c24
  spec:
    rules:
    - host: fed-prometheus-infra.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: prom-fed-infra-prom-srv-infra
            servicePort: 80
          path: /
    tls:
    - hosts:
      - fed-prometheus-infra.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-18T18:22:52Z
    generation: 1
    labels:
      app: prom-fed-redsky-prometheus
      chart: prometheus-1.4.27
      component: server-redsky
      heritage: Tiller
      release: prom-fed-redsky
    name: prom-fed-redsky-prometheus-redsky
    namespace: kube-system
    resourceVersion: "199118916"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/prom-fed-redsky-prometheus-redsky
    uid: d3645158-d302-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: fed-prometheus-redsky.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: prom-fed-redsky-prom-srv-redsky
            servicePort: 80
          path: /
    tls:
    - hosts:
      - fed-prometheus-redsky.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"creationTimestamp":"2018-07-17T17:00:13Z","generation":1,"labels":{"app":"rook-ceph-mgr","name":"rook-ceph-mgr-ingress"},"name":"rook-ceph-mgr-ingress","namespace":"kube-system"},"spec":{"rules":[{"host":"rook-ceph-mgr.ttc-prod.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rook-ceph-mgr","servicePort":9283},"path":"/"}]}}],"tls":[{"hosts":["rook-ceph-mgr.ttc-prod.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T20:09:30Z
    generation: 1
    labels:
      app: rook-ceph-mgr
      name: rook-ceph-mgr-ingress
    name: rook-ceph-mgr-ingress
    namespace: kube-system
    resourceVersion: "49225756"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/rook-ceph-mgr-ingress
    uid: 1532692f-bd11-11e8-a79d-525400524761
  spec:
    rules:
    - host: rook-ceph-mgr.ttc-prod.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rook-ceph-mgr
            servicePort: 9283
          path: /
    tls:
    - hosts:
      - rook-ceph-mgr.ttc-prod.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-07-03T18:54:33Z
    generation: 4
    labels:
      app: sample-app-sox-sample-app
      chart: sample-app-sox-helm-1.0.1
      heritage: Tiller
      name: sample-app-sox-sample-ap-ingress
      release: sample-app-sox
    name: sample-app-sox-sample-ap-ingress
    namespace: kube-system
    resourceVersion: "201609591"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/ingresses/sample-app-sox-sample-ap-ingress
    uid: 860efbf0-7ef2-11e8-84f1-525400a3f42d
  spec:
    rules:
    - host: sampleapp.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: sample-app-sox-sample-ap-service
            servicePort: 80
          path: /
    - host: sampleapp.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: sample-app-sox-sample-ap-service
            servicePort: 80
          path: /
    - host: sampleapp.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: sample-app-sox-sample-ap-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - sampleapp.ttc-test.k8s.target.com
      secretName: vanitysampleappsecret
    - hosts:
      - sampleapp.tte-test.k8s.target.com
      secretName: haproxy-ingress-np-tls-secret
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"lat2-analytics-ingress"},"name":"lat2-analytics-ingress","namespace":"lat-2"},"spec":{"rules":[{"host":"lat2-analytics-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lat2-analytics-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["lat2-analytics-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-28T06:02:46Z
    generation: 2
    labels:
      name: lat2-analytics-ingress
    name: lat2-analytics-ingress
    namespace: lat-2
    resourceVersion: "91508927"
    selfLink: /apis/extensions/v1beta1/namespaces/lat-2/ingresses/lat2-analytics-ingress
    uid: 3a5be9b2-f2d3-11e8-9e69-525400e51df1
  spec:
    rules:
    - host: lat2-analytics-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lat2-analytics-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - lat2-analytics-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"lat2-contentapi-ingress"},"name":"lat2-contentapi-ingress","namespace":"lat-2"},"spec":{"rules":[{"host":"lat2-contentapi-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lat2-contentapi-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["lat2-contentapi-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-31T16:44:11Z
    generation: 1
    labels:
      name: lat2-contentapi-ingress
    name: lat2-contentapi-ingress
    namespace: lat-2
    resourceVersion: "49225501"
    selfLink: /apis/extensions/v1beta1/namespaces/lat-2/ingresses/lat2-contentapi-ingress
    uid: 1621f8ab-ad3d-11e8-8462-525400b93a8e
  spec:
    rules:
    - host: lat2-contentapi-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lat2-contentapi-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - lat2-contentapi-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/ssl-redirect: "true"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/ssl-redirect":"true"},"labels":{"name":"lat2-dashboard-ingress"},"name":"lat2-dashboard-ingress","namespace":"lat-2"},"spec":{"rules":[{"host":"lat2-dashboard-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lat2-dashboard-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["lat2-dashboard-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-18T21:17:53Z
    generation: 5
    labels:
      name: lat2-dashboard-ingress
    name: lat2-dashboard-ingress
    namespace: lat-2
    resourceVersion: "96613442"
    selfLink: /apis/extensions/v1beta1/namespaces/lat-2/ingresses/lat2-dashboard-ingress
    uid: 697c6133-eb77-11e8-9e69-525400e51df1
  spec:
    rules:
    - host: lat2-dashboard-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lat2-dashboard-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - lat2-dashboard-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/ssl-redirect: "true"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/ssl-redirect":"true"},"labels":{"name":"lat2-ingress"},"name":"lat2-ingress","namespace":"lat-2"},"spec":{"rules":[{"host":"lat2-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lat2-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["lat2-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-29T21:12:27Z
    generation: 4
    labels:
      name: lat2-ingress
    name: lat2-ingress
    namespace: lat-2
    resourceVersion: "49225718"
    selfLink: /apis/extensions/v1beta1/namespaces/lat-2/ingresses/lat2-ingress
    uid: 3b46e5bc-abd0-11e8-b402-525400b06b0f
  spec:
    rules:
    - host: lat2-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lat2-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - lat2-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"lat2-searchapi-ingress"},"name":"lat2-searchapi-ingress","namespace":"lat-2"},"spec":{"rules":[{"host":"lat2-searchapi-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lat2-searchapi-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["lat2-searchapi-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-04T20:13:17Z
    generation: 1
    labels:
      name: lat2-searchapi-ingress
    name: lat2-searchapi-ingress
    namespace: lat-2
    resourceVersion: "49225335"
    selfLink: /apis/extensions/v1beta1/namespaces/lat-2/ingresses/lat2-searchapi-ingress
    uid: f62301c1-b07e-11e8-a71c-525400524761
  spec:
    rules:
    - host: lat2-searchapi-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lat2-searchapi-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - lat2-searchapi-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"lat2-userapi-ingress"},"name":"lat2-userapi-ingress","namespace":"lat-2"},"spec":{"rules":[{"host":"lat2-userapi-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lat2-userapi-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["lat2-userapi-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-04T15:14:35Z
    generation: 3
    labels:
      name: lat2-userapi-ingress
    name: lat2-userapi-ingress
    namespace: lat-2
    resourceVersion: "49225696"
    selfLink: /apis/extensions/v1beta1/namespaces/lat-2/ingresses/lat2-userapi-ingress
    uid: 3bf795fc-b055-11e8-8462-525400b93a8e
  spec:
    rules:
    - host: lat2-userapi-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lat2-userapi-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - lat2-userapi-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"pubportal-ingress"},"name":"pubportal-ingress","namespace":"lat-2"},"spec":{"rules":[{"host":"pubportal-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pubportal-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["pubportal-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-05T00:12:16Z
    generation: 1
    labels:
      name: pubportal-ingress
    name: pubportal-ingress
    namespace: lat-2
    resourceVersion: "49225420"
    selfLink: /apis/extensions/v1beta1/namespaces/lat-2/ingresses/pubportal-ingress
    uid: 58a6e921-b0a0-11e8-84e0-525400b06b0f
  spec:
    rules:
    - host: pubportal-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pubportal-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - pubportal-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"sample-app-sox-ingress"},"name":"sample-app-sox-ingress","namespace":"lat-2"},"spec":{"rules":[{"host":"sample-app-sox-lat-2.d1cp1-test.k8s.ttc.tgt-pe-test.ost.cloud.target.internal","http":{"paths":[{"backend":{"serviceName":"sample-app-sox-service","servicePort":80},"path":"/"}]}},{"host":"sample-app-sox-lat-2.d1ep1-test.k8s.ttce.tgt-pe-test.ost.cloud.target.internal","http":{"paths":[{"backend":{"serviceName":"sample-app-sox-service","servicePort":80},"path":"/"}]}},{"host":"sample-app-sox-lat-2.test.k8s.global.tgt-pe-test.ost.cloud.target.internal","http":{"paths":[{"backend":{"serviceName":"sample-app-sox-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["sample-app-sox-lat-2.d1cp1-test.k8s.ttc.tgt-pe-test.ost.cloud.target.internal","sample-app-sox-lat-2.d1ep1-test.k8s.ttce.tgt-pe-test.ost.cloud.target.internal","sample-app-sox-lat-2.test.k8s.global.tgt-pe-test.ost.cloud.target.internal"]}]}}
    creationTimestamp: 2018-08-30T05:44:49Z
    generation: 1
    labels:
      name: sample-app-sox-ingress
    name: sample-app-sox-ingress
    namespace: lat-2
    resourceVersion: "49225608"
    selfLink: /apis/extensions/v1beta1/namespaces/lat-2/ingresses/sample-app-sox-ingress
    uid: cf224d05-ac17-11e8-8462-525400b93a8e
  spec:
    rules:
    - host: sample-app-sox-lat-2.d1cp1-test.k8s.ttc.tgt-pe-test.ost.cloud.target.internal
      http:
        paths:
        - backend:
            serviceName: sample-app-sox-service
            servicePort: 80
          path: /
    - host: sample-app-sox-lat-2.d1ep1-test.k8s.ttce.tgt-pe-test.ost.cloud.target.internal
      http:
        paths:
        - backend:
            serviceName: sample-app-sox-service
            servicePort: 80
          path: /
    - host: sample-app-sox-lat-2.test.k8s.global.tgt-pe-test.ost.cloud.target.internal
      http:
        paths:
        - backend:
            serviceName: sample-app-sox-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - sample-app-sox-lat-2.d1cp1-test.k8s.ttc.tgt-pe-test.ost.cloud.target.internal
      - sample-app-sox-lat-2.d1ep1-test.k8s.ttce.tgt-pe-test.ost.cloud.target.internal
      - sample-app-sox-lat-2.test.k8s.global.tgt-pe-test.ost.cloud.target.internal
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"sample-app-sox-ingress"},"name":"sample-app-sox-ingress","namespace":"leadtime-stage"},"spec":{"rules":[{"host":"sample-app-sox-leadtime-stage.d1cp1-test.k8s.ttc.tgt-pe-test.ost.cloud.target.internal","http":{"paths":[{"backend":{"serviceName":"sample-app-sox-service","servicePort":80},"path":"/"}]}},{"host":"sample-app-sox-leadtime-stage.d1ep1-test.k8s.ttce.tgt-pe-test.ost.cloud.target.internal","http":{"paths":[{"backend":{"serviceName":"sample-app-sox-service","servicePort":80},"path":"/"}]}},{"host":"sample-app-sox-leadtime-stage.test.k8s.global.tgt-pe-test.ost.cloud.target.internal","http":{"paths":[{"backend":{"serviceName":"sample-app-sox-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["sample-app-sox-leadtime-stage.d1cp1-test.k8s.ttc.tgt-pe-test.ost.cloud.target.internal","sample-app-sox-leadtime-stage.d1ep1-test.k8s.ttce.tgt-pe-test.ost.cloud.target.internal","sample-app-sox-leadtime-stage.test.k8s.global.tgt-pe-test.ost.cloud.target.internal"]}]}}
    creationTimestamp: 2018-09-13T15:49:49Z
    generation: 4
    labels:
      name: sample-app-sox-ingress
    name: sample-app-sox-ingress
    namespace: leadtime-stage
    resourceVersion: "49225760"
    selfLink: /apis/extensions/v1beta1/namespaces/leadtime-stage/ingresses/sample-app-sox-ingress
    uid: a5b3cfb9-b76c-11e8-a71c-525400524761
  spec:
    rules:
    - host: leadtime-test-app-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: test-api
            servicePort: 8080
    - host: sample-app-sox-leadtime-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: sample-app-sox-service
            servicePort: 80
          path: /
    - host: sample-app-sox-leadtime-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: sample-app-sox-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - sample-app-sox-leadtime-stage.ttc-test.k8s.target.com
      - sample-app-sox-leadtime-stage.tte-test.k8s.target.com
      - sample-app-sox-leadtime-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"mfm-change"},"name":"mfm-change-request-ing","namespace":"mainframe-shutoff-test"},"spec":{"rules":[{"host":"mainframe-shutoff-test-change.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mfm-change-request-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["mainframe-shutoff-test-change.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-07T17:16:27Z
    generation: 5
    labels:
      name: mfm-change
    name: mfm-change-request-ing
    namespace: mainframe-shutoff-test
    resourceVersion: "49225922"
    selfLink: /apis/extensions/v1beta1/namespaces/mainframe-shutoff-test/ingresses/mfm-change-request-ing
    uid: c137c84b-b2c1-11e8-8488-525400b06b0f
  spec:
    rules:
    - host: mainframe-shutoff-test-change.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mfm-change-request-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - mainframe-shutoff-test-change.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"mfm-website"},"name":"mfm-website-ing","namespace":"mainframe-shutoff-test"},"spec":{"rules":[{"host":"mainframe-shutoff-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mfm-website-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["mainframe-shutoff-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-07T19:47:55Z
    generation: 2
    labels:
      name: mfm-website
    name: mfm-website-ing
    namespace: mainframe-shutoff-test
    resourceVersion: "189995553"
    selfLink: /apis/extensions/v1beta1/namespaces/mainframe-shutoff-test/ingresses/mfm-website-ing
    uid: ea60bb97-b2d6-11e8-8488-525400b06b0f
  spec:
    rules:
    - host: mainframe-shutoff-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mfm-website-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - mainframe-shutoff-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"merch-financial-calendar-ingress-dev"},"name":"merch-financial-calendar-ingress-dev","namespace":"merch-financial-calendar-dev"},"spec":{"rules":[{"host":"merch-financial-calendar-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-financial-calendar-service-dev","servicePort":80},"path":"/"}]}},{"host":"merch-financial-calendar-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-financial-calendar-service-dev","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-financial-calendar-dev.test.k8s.target.com","merch-financial-calendar-dev.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-26T09:31:37Z
    generation: 1
    labels:
      name: merch-financial-calendar-ingress-dev
    name: merch-financial-calendar-ingress-dev
    namespace: merch-financial-calendar-dev
    resourceVersion: "89165140"
    selfLink: /apis/extensions/v1beta1/namespaces/merch-financial-calendar-dev/ingresses/merch-financial-calendar-ingress-dev
    uid: 123ee5d6-f15e-11e8-981f-5254001f7df6
  spec:
    rules:
    - host: merch-financial-calendar-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-financial-calendar-service-dev
            servicePort: 80
          path: /
    - host: merch-financial-calendar-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-financial-calendar-service-dev
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-financial-calendar-dev.test.k8s.target.com
      - merch-financial-calendar-dev.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"mww-app-ingress-dev"},"name":"mww-app-ingress-dev","namespace":"merch-wagon-wheel-dev"},"spec":{"rules":[{"host":"merch-wagon-wheel-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mww-app-service-dev","servicePort":80},"path":"/"}]}},{"host":"merch-wagon-wheel-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mww-app-service-dev","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-wagon-wheel-dev.test.k8s.target.com","merch-wagon-wheel-dev.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-04T14:58:07Z
    generation: 13
    labels:
      name: mww-app-ingress-dev
    name: mww-app-ingress-dev
    namespace: merch-wagon-wheel-dev
    resourceVersion: "49225793"
    selfLink: /apis/extensions/v1beta1/namespaces/merch-wagon-wheel-dev/ingresses/mww-app-ingress-dev
    uid: e6e96194-c7e5-11e8-b53b-5254000e56fe
  spec:
    rules:
    - host: merch-wagon-wheel-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mww-app-service-dev
            servicePort: 80
          path: /
    - host: merch-wagon-wheel-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mww-app-service-dev
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-wagon-wheel-dev.test.k8s.target.com
      - merch-wagon-wheel-dev.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"mww-app-ingress-stage"},"name":"mww-app-ingress-stage","namespace":"merch-wagon-wheel-stage"},"spec":{"rules":[{"host":"merch-wagon-wheel-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mww-app-service-stage","servicePort":80},"path":"/"}]}},{"host":"merch-wagon-wheel-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mww-app-service-stage","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-wagon-wheel-stage.test.k8s.target.com","merch-wagon-wheel-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-05T10:58:27Z
    generation: 1
    labels:
      name: mww-app-ingress-stage
    name: mww-app-ingress-stage
    namespace: merch-wagon-wheel-stage
    resourceVersion: "49225810"
    selfLink: /apis/extensions/v1beta1/namespaces/merch-wagon-wheel-stage/ingresses/mww-app-ingress-stage
    uid: 967e6788-c88d-11e8-9f4c-525400adf9ce
  spec:
    rules:
    - host: merch-wagon-wheel-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mww-app-service-stage
            servicePort: 80
          path: /
    - host: merch-wagon-wheel-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mww-app-service-stage
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-wagon-wheel-stage.test.k8s.target.com
      - merch-wagon-wheel-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/rewrite-target: /
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/rewrite-target":"/"},"labels":{"name":"brand-sales-api-ingress"},"name":"brand-sales-api-ingress","namespace":"my-performance-mobile-2"},"spec":{"rules":[{"host":"myperformance.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"brand-sales-go-proxy-service","servicePort":80},"path":"/mpm_brand_sales/v1"}]}},{"host":"myperformance.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"brand-sales-go-proxy-service","servicePort":80},"path":"/mpm_brand_sales/v1"}]}}]}}
    creationTimestamp: 2018-10-31T20:19:27Z
    generation: 1
    labels:
      name: brand-sales-api-ingress
    name: brand-sales-api-ingress
    namespace: my-performance-mobile-2
    resourceVersion: "65380049"
    selfLink: /apis/extensions/v1beta1/namespaces/my-performance-mobile-2/ingresses/brand-sales-api-ingress
    uid: 443ba7ce-dd4a-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: myperformance.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: brand-sales-go-proxy-service
            servicePort: 80
          path: /mpm_brand_sales/v1
    - host: myperformance.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: brand-sales-go-proxy-service
            servicePort: 80
          path: /mpm_brand_sales/v1
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/rewrite-target: /
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/rewrite-target":"/"},"labels":{"name":"custom-merchandise-sales-api-ingress"},"name":"custom-merchandise-sales-api-ingress","namespace":"my-performance-mobile-2"},"spec":{"rules":[{"host":"myperformance.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"custom-merchandise-sales-go-proxy-service","servicePort":80},"path":"/mpm_customized_merchandise_sales/v1"}]}},{"host":"myperformance.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"custom-merchandise-sales-go-proxy-service","servicePort":80},"path":"/mpm_customized_merchandise_sales/v1"}]}}]}}
    creationTimestamp: 2018-10-31T20:20:14Z
    generation: 1
    labels:
      name: custom-merchandise-sales-api-ingress
    name: custom-merchandise-sales-api-ingress
    namespace: my-performance-mobile-2
    resourceVersion: "65380055"
    selfLink: /apis/extensions/v1beta1/namespaces/my-performance-mobile-2/ingresses/custom-merchandise-sales-api-ingress
    uid: 5ff2a72c-dd4a-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: myperformance.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: custom-merchandise-sales-go-proxy-service
            servicePort: 80
          path: /mpm_customized_merchandise_sales/v1
    - host: myperformance.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: custom-merchandise-sales-go-proxy-service
            servicePort: 80
          path: /mpm_customized_merchandise_sales/v1
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/rewrite-target: /
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/rewrite-target":"/"},"labels":{"name":"feedback-api-ingress"},"name":"feedback-api-ingress","namespace":"my-performance-mobile-2"},"spec":{"rules":[{"host":"myperformance.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"feedback-go-proxy-service","servicePort":80},"path":"/mpm_feedbacks/v1"}]}},{"host":"myperformance.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"feedback-go-proxy-service","servicePort":80},"path":"/mpm_feedbacks/v1"}]}}]}}
    creationTimestamp: 2019-01-16T04:26:51Z
    generation: 1
    labels:
      name: feedback-api-ingress
    name: feedback-api-ingress
    namespace: my-performance-mobile-2
    resourceVersion: "144225605"
    selfLink: /apis/extensions/v1beta1/namespaces/my-performance-mobile-2/ingresses/feedback-api-ingress
    uid: f2494a2a-1946-11e9-a085-525400e7b4ef
  spec:
    rules:
    - host: myperformance.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: feedback-go-proxy-service
            servicePort: 80
          path: /mpm_feedbacks/v1
    - host: myperformance.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: feedback-go-proxy-service
            servicePort: 80
          path: /mpm_feedbacks/v1
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/rewrite-target: /
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/rewrite-target":"/"},"labels":{"name":"flex-fulfillments-v3-api-ingress"},"name":"flex-fulfillments-v3-api-ingress","namespace":"my-performance-mobile-2"},"spec":{"rules":[{"host":"myperformance.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"flex-fulfillments-v3-go-proxy-service","servicePort":80},"path":"/mpm_flex_fulfillments/v3"}]}},{"host":"myperformance.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"flex-fulfillments-v3-go-proxy-service","servicePort":80},"path":"/mpm_flex_fulfillments/v3"}]}}]}}
    creationTimestamp: 2018-10-31T20:19:27Z
    generation: 1
    labels:
      name: flex-fulfillments-v3-api-ingress
    name: flex-fulfillments-v3-api-ingress
    namespace: my-performance-mobile-2
    resourceVersion: "65380053"
    selfLink: /apis/extensions/v1beta1/namespaces/my-performance-mobile-2/ingresses/flex-fulfillments-v3-api-ingress
    uid: 443e054e-dd4a-11e8-80ff-5254001f7df6
  spec:
    rules:
    - host: myperformance.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: flex-fulfillments-v3-go-proxy-service
            servicePort: 80
          path: /mpm_flex_fulfillments/v3
    - host: myperformance.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: flex-fulfillments-v3-go-proxy-service
            servicePort: 80
          path: /mpm_flex_fulfillments/v3
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/rewrite-target: /
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/rewrite-target":"/"},"labels":{"name":"item-details-api-ingress"},"name":"item-details-api-ingress","namespace":"my-performance-mobile-2"},"spec":{"rules":[{"host":"myperformance.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"item-details-go-proxy-service","servicePort":80},"path":"/mpm_item_details/v1"}]}},{"host":"myperformance.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"item-details-go-proxy-service","servicePort":80},"path":"/mpm_item_details/v1"}]}}]}}
    creationTimestamp: 2018-11-09T16:11:26Z
    generation: 1
    labels:
      name: item-details-api-ingress
    name: item-details-api-ingress
    namespace: my-performance-mobile-2
    resourceVersion: "72744179"
    selfLink: /apis/extensions/v1beta1/namespaces/my-performance-mobile-2/ingresses/item-details-api-ingress
    uid: 1bf86b05-e43a-11e8-80ff-5254001f7df6
  spec:
    rules:
    - host: myperformance.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: item-details-go-proxy-service
            servicePort: 80
          path: /mpm_item_details/v1
    - host: myperformance.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: item-details-go-proxy-service
            servicePort: 80
          path: /mpm_item_details/v1
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/rewrite-target: /
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/rewrite-target":"/"},"labels":{"name":"merchandise-sales-api-ingress"},"name":"merchandise-sales-api-ingress","namespace":"my-performance-mobile-2"},"spec":{"rules":[{"host":"myperformance.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merchandise-sales-go-proxy-service","servicePort":80},"path":"/mpm_merchandise_sales/v1"}]}},{"host":"myperformance.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merchandise-sales-go-proxy-service","servicePort":80},"path":"/mpm_merchandise_sales/v1"}]}}]}}
    creationTimestamp: 2018-10-31T20:19:27Z
    generation: 1
    labels:
      name: merchandise-sales-api-ingress
    name: merchandise-sales-api-ingress
    namespace: my-performance-mobile-2
    resourceVersion: "65380052"
    selfLink: /apis/extensions/v1beta1/namespaces/my-performance-mobile-2/ingresses/merchandise-sales-api-ingress
    uid: 443b4ff5-dd4a-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: myperformance.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merchandise-sales-go-proxy-service
            servicePort: 80
          path: /mpm_merchandise_sales/v1
    - host: myperformance.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merchandise-sales-go-proxy-service
            servicePort: 80
          path: /mpm_merchandise_sales/v1
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"mpm-admin-console-ingress"},"name":"mpm-admin-console-ingress","namespace":"my-performance-mobile-2"},"spec":{"rules":[{"host":"mpm-admin-console.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mpm-admin-console-service","servicePort":80},"path":"/"}]}},{"host":"mpm-admin-console.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mpm-admin-console-service","servicePort":80},"path":"/"}]}},{"host":"mpm-admin-console.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mpm-admin-console-service","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-01-31T09:57:25Z
    generation: 1
    labels:
      name: mpm-admin-console-ingress
    name: mpm-admin-console-ingress
    namespace: my-performance-mobile-2
    resourceVersion: "161645297"
    selfLink: /apis/extensions/v1beta1/namespaces/my-performance-mobile-2/ingresses/mpm-admin-console-ingress
    uid: 9c6ec6d4-253e-11e9-a621-525400d4de49
  spec:
    rules:
    - host: mpm-admin-console.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mpm-admin-console-service
            servicePort: 80
          path: /
    - host: mpm-admin-console.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mpm-admin-console-service
            servicePort: 80
          path: /
    - host: mpm-admin-console.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mpm-admin-console-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/rewrite-target: /
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/rewrite-target":"/"},"labels":{"name":"overall-sales-api-ingress"},"name":"overall-sales-api-ingress","namespace":"my-performance-mobile-2"},"spec":{"rules":[{"host":"myperformance.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"overall-sales-go-proxy-service","servicePort":80},"path":"/store_sales/v1"}]}},{"host":"myperformance.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"overall-sales-go-proxy-service","servicePort":80},"path":"/store_sales/v1"}]}}]}}
    creationTimestamp: 2018-10-31T20:19:32Z
    generation: 1
    labels:
      name: overall-sales-api-ingress
    name: overall-sales-api-ingress
    namespace: my-performance-mobile-2
    resourceVersion: "65380051"
    selfLink: /apis/extensions/v1beta1/namespaces/my-performance-mobile-2/ingresses/overall-sales-api-ingress
    uid: 4721886f-dd4a-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: myperformance.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: overall-sales-go-proxy-service
            servicePort: 80
          path: /store_sales/v1
    - host: myperformance.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: overall-sales-go-proxy-service
            servicePort: 80
          path: /store_sales/v1
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/rewrite-target: /
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/rewrite-target":"/"},"labels":{"name":"payroll-api-ingress"},"name":"payroll-api-ingress","namespace":"my-performance-mobile-2"},"spec":{"rules":[{"host":"myperformance.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"payroll-go-proxy-service","servicePort":80},"path":"/mpm_payrolls/v1"}]}},{"host":"myperformance.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"payroll-go-proxy-service","servicePort":80},"path":"/mpm_payrolls/v1"}]}}]}}
    creationTimestamp: 2018-10-31T20:19:27Z
    generation: 1
    labels:
      name: payroll-api-ingress
    name: payroll-api-ingress
    namespace: my-performance-mobile-2
    resourceVersion: "65380050"
    selfLink: /apis/extensions/v1beta1/namespaces/my-performance-mobile-2/ingresses/payroll-api-ingress
    uid: 443f100a-dd4a-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: myperformance.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: payroll-go-proxy-service
            servicePort: 80
          path: /mpm_payrolls/v1
    - host: myperformance.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: payroll-go-proxy-service
            servicePort: 80
          path: /mpm_payrolls/v1
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/rewrite-target: /
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/rewrite-target":"/"},"labels":{"name":"redcard-api-ingress"},"name":"redcard-api-ingress","namespace":"my-performance-mobile-2"},"spec":{"rules":[{"host":"myperformance.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"redcard-go-proxy-service","servicePort":80},"path":"/redcard_applications/v1"}]}},{"host":"myperformance.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"redcard-go-proxy-service","servicePort":80},"path":"/redcard_applications/v1"}]}}]}}
    creationTimestamp: 2018-10-31T20:19:32Z
    generation: 1
    labels:
      name: redcard-api-ingress
    name: redcard-api-ingress
    namespace: my-performance-mobile-2
    resourceVersion: "65380054"
    selfLink: /apis/extensions/v1beta1/namespaces/my-performance-mobile-2/ingresses/redcard-api-ingress
    uid: 47239b70-dd4a-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: myperformance.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: redcard-go-proxy-service
            servicePort: 80
          path: /redcard_applications/v1
    - host: myperformance.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: redcard-go-proxy-service
            servicePort: 80
          path: /redcard_applications/v1
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/rewrite-target: /
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/rewrite-target":"/"},"labels":{"name":"store-leader-api-ingress"},"name":"store-leader-api-ingress","namespace":"my-performance-mobile-2"},"spec":{"rules":[{"host":"myperformance.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"store-leader-go-proxy-service","servicePort":80},"path":"/store_leaders/v1"}]}},{"host":"myperformance.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"store-leader-go-proxy-service","servicePort":80},"path":"/store_leaders/v1"}]}}]}}
    creationTimestamp: 2018-11-02T17:51:02Z
    generation: 1
    labels:
      name: store-leader-api-ingress
    name: store-leader-api-ingress
    namespace: my-performance-mobile-2
    resourceVersion: "67035614"
    selfLink: /apis/extensions/v1beta1/namespaces/my-performance-mobile-2/ingresses/store-leader-api-ingress
    uid: dd3887f4-dec7-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: myperformance.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: store-leader-go-proxy-service
            servicePort: 80
          path: /store_leaders/v1
    - host: myperformance.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: store-leader-go-proxy-service
            servicePort: 80
          path: /store_leaders/v1
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/rewrite-target: /
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/rewrite-target":"/"},"labels":{"name":"top-bottom-api-ingress"},"name":"top-bottom-api-ingress","namespace":"my-performance-mobile-2"},"spec":{"rules":[{"host":"myperformance.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"top-bottom-go-proxy-service","servicePort":80},"path":"/mpm_top_bottom_sales/v1"}]}},{"host":"myperformance.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"top-bottom-go-proxy-service","servicePort":80},"path":"/mpm_top_bottom_sales/v1"}]}}]}}
    creationTimestamp: 2018-10-31T20:19:27Z
    generation: 1
    labels:
      name: top-bottom-api-ingress
    name: top-bottom-api-ingress
    namespace: my-performance-mobile-2
    resourceVersion: "65380056"
    selfLink: /apis/extensions/v1beta1/namespaces/my-performance-mobile-2/ingresses/top-bottom-api-ingress
    uid: 443ea2e2-dd4a-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: myperformance.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: top-bottom-go-proxy-service
            servicePort: 80
          path: /mpm_top_bottom_sales/v1
    - host: myperformance.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: top-bottom-go-proxy-service
            servicePort: 80
          path: /mpm_top_bottom_sales/v1
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/rewrite-target: /
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/rewrite-target":"/"},"labels":{"name":"tracking-api-ingress"},"name":"tracking-api-ingress","namespace":"my-performance-mobile-2"},"spec":{"rules":[{"host":"myperformance.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"tracking-go-proxy-service","servicePort":80},"path":"/mpm_tracks/v1"}]}},{"host":"myperformance.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"tracking-go-proxy-service","servicePort":80},"path":"/mpm_tracks/v1"}]}}]}}
    creationTimestamp: 2018-10-31T17:19:58Z
    generation: 1
    labels:
      name: tracking-api-ingress
    name: tracking-api-ingress
    namespace: my-performance-mobile-2
    resourceVersion: "65258743"
    selfLink: /apis/extensions/v1beta1/namespaces/my-performance-mobile-2/ingresses/tracking-api-ingress
    uid: 310aff8d-dd31-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: myperformance.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: tracking-go-proxy-service
            servicePort: 80
          path: /mpm_tracks/v1
    - host: myperformance.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: tracking-go-proxy-service
            servicePort: 80
          path: /mpm_tracks/v1
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/rewrite-target: /
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/rewrite-target":"/"},"labels":{"name":"user-details-api-ingress"},"name":"user-details-api-ingress","namespace":"my-performance-mobile-2"},"spec":{"rules":[{"host":"myperformance.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"user-details-go-proxy-service","servicePort":80},"path":"/mpm_team_members/v1"}]}},{"host":"myperformance.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"user-details-go-proxy-service","servicePort":80},"path":"/mpm_team_members/v1"}]}}]}}
    creationTimestamp: 2018-10-31T20:48:33Z
    generation: 1
    labels:
      name: user-details-api-ingress
    name: user-details-api-ingress
    namespace: my-performance-mobile-2
    resourceVersion: "65399772"
    selfLink: /apis/extensions/v1beta1/namespaces/my-performance-mobile-2/ingresses/user-details-api-ingress
    uid: 5497edcd-dd4e-11e8-80ff-5254001f7df6
  spec:
    rules:
    - host: myperformance.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: user-details-go-proxy-service
            servicePort: 80
          path: /mpm_team_members/v1
    - host: myperformance.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: user-details-go-proxy-service
            servicePort: 80
          path: /mpm_team_members/v1
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-02-12T20:37:56Z
    generation: 1
    labels:
      app: adjacency-api
      chart: adjacency-api-1-DEV-93-836ec40e
      version: 1-DEV-93-836ec40e
    name: adjacency-api-ingress
    namespace: neptune-dev
    resourceVersion: "193099228"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-dev/ingresses/adjacency-api-ingress
    uid: 140145aa-2f06-11e9-bfe7-525400721049
  spec:
    rules:
    - host: neptune-adjacency-api-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: adjacency-api-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-08T22:01:21Z
    generation: 1
    labels:
      app: aisle-api
      chart: aisle-api-1-DEV-104-50dcf56e
      version: 1-DEV-104-50dcf56e
    name: aisle-api-ingress
    namespace: neptune-dev
    resourceVersion: "213198111"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-dev/ingresses/aisle-api-ingress
    uid: b4f2c08d-41ed-11e9-9ed7-5254006b625b
  spec:
    rules:
    - host: neptune-aisle-api-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: aisle-api-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-19T18:49:36Z
    generation: 3
    labels:
      app: aisle-location-consumer
      chart: aisle-location-consumer-1-DEV-568-55192ffe
      version: 1-DEV-568-55192ffe
    name: aisle-location-consumer-ingress
    namespace: neptune-dev
    resourceVersion: "138301494"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-dev/ingresses/aisle-location-consumer-ingress
    uid: ba0395e5-d3cf-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: neptune-aisle-location-consumer-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: aisle-location-consumer-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-11T20:16:03Z
    generation: 1
    labels:
      app: batch
      chart: batch-1-DEV-243-3f728163
      name: batch-ingress
      version: 1-DEV-243-3f728163
    name: batch-ingress
    namespace: neptune-dev
    resourceVersion: "199279165"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-dev/ingresses/batch-ingress
    uid: 7a350ae7-cd92-11e8-ad5b-5254008c264f
  spec:
    rules:
    - host: neptune-batch-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: batch-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-01-22T17:20:34Z
    generation: 1
    labels:
      app: cron-jobs
      chart: cron-jobs-1-DEV-189-9db75c93
      name: cron-jobs-ingress
      version: 1-DEV-189-9db75c93
    name: cron-jobs-ingress
    namespace: neptune-dev
    resourceVersion: "209412382"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-dev/ingresses/cron-jobs-ingress
    uid: 073ad18f-1e6a-11e9-a085-525400e7b4ef
  spec:
    rules:
    - host: neptune-cron-jobs-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cron-jobs-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-19T18:55:09Z
    generation: 1
    labels:
      app: department-location-consumer
      chart: department-location-consumer-1-DEV-369-bd4dd2ef
      version: 1-DEV-369-bd4dd2ef
    name: department-location-consumer-ingress
    namespace: neptune-dev
    resourceVersion: "138640746"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-dev/ingresses/department-location-consumer-ingress
    uid: 8053cf45-d3d0-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: neptune-department-location-consumer-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: department-location-consumer-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-18T20:42:41Z
    generation: 1
    labels:
      app: diagnostics
      chart: diagnostics-1-DEV-405-1ab2ebcb
      version: 1-DEV-405-1ab2ebcb
    name: diagnostics-ingress
    namespace: neptune-dev
    resourceVersion: "175682106"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-dev/ingresses/diagnostics-ingress
    uid: 5b7bb72f-d316-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: neptune-diagnostics-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: diagnostics-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-11-26T15:45:18Z
    generation: 1
    labels:
      app: map-manager-client
      chart: map-manager-client-1-DEV-537-40a25cc3
      name: map-manager-client-ingress
      version: 1-DEV-537-40a25cc3
    name: map-manager-client-ingress
    namespace: neptune-dev
    resourceVersion: "192673558"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-dev/ingresses/map-manager-client-ingress
    uid: 468abb97-f192-11e8-ad5a-525400a9bf14
  spec:
    rules:
    - host: neptune-map-manager-client-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: map-manager-client-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-11T20:34:12Z
    generation: 1
    labels:
      app: map-manager
      chart: map-manager-1-DEV-576-d2d33297
      name: map-manager-ingress
      version: 1-DEV-576-d2d33297
    name: map-manager-ingress
    namespace: neptune-dev
    resourceVersion: "186045580"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-dev/ingresses/map-manager-ingress
    uid: 035cba2a-cd95-11e8-ad5b-5254008c264f
  spec:
    rules:
    - host: neptune-map-manager-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: map-manager-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-02-20T22:34:14Z
    generation: 1
    labels:
      app: store-details
      chart: store-details-1-DEV-446-bf572cb8
      version: 1-DEV-446-bf572cb8
    name: store-details-ingress
    namespace: neptune-dev
    resourceVersion: "205250591"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-dev/ingresses/store-details-ingress
    uid: a678916b-355f-11e9-bfe7-525400721049
  spec:
    rules:
    - host: neptune-store-details-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: store-details-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-09-26T15:43:46Z
    generation: 1
    labels:
      app: store-item-coordinates
      chart: store-item-coordinates-1-DEV-845-9d326fc1
      version: 1-DEV-845-9d326fc1
    name: store-item-coordinates-ingress
    namespace: neptune-dev
    resourceVersion: "213222361"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-dev/ingresses/store-item-coordinates-ingress
    uid: f44dc820-c1a2-11e8-bd5a-525400b93a8e
  spec:
    rules:
    - host: neptune-store-item-coordinates-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: store-item-coordinates-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-09-26T15:56:58Z
    generation: 1
    labels:
      app: store-pathing
      chart: store-pathing-1-DEV-1529-7df24f63
      version: 1-DEV-1529-7df24f63
    name: store-pathing-ingress
    namespace: neptune-dev
    resourceVersion: "183086303"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-dev/ingresses/store-pathing-ingress
    uid: cc8d3983-c1a4-11e8-bd5a-525400b93a8e
  spec:
    rules:
    - host: neptune-store-pathing-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: store-pathing-service
            servicePort: 8080
          path: /
        - backend:
            serviceName: store-pathing-direct-service
            servicePort: 1234
          path: /info
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-11-29T22:23:53Z
    generation: 2
    labels:
      app: store-paths-v2
      chart: store-paths-v2-1-DEV-875-a90c7986
      version: 1-DEV-875-a90c7986
    name: store-paths-v2-ingress
    namespace: neptune-dev
    resourceVersion: "183914678"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-dev/ingresses/store-paths-v2-ingress
    uid: 745e3891-f425-11e8-ad5a-525400a9bf14
  spec:
    rules:
    - host: neptune-store-paths-v2-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: store-paths-v2-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-02-05T18:44:26Z
    generation: 4
    labels:
      app: svg-map-api
      chart: svg-map-api-1-DEV-293-627fdd02
      version: 1-DEV-293-627fdd02
    name: svg-map-api-ingress
    namespace: neptune-dev
    resourceVersion: "213337263"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-dev/ingresses/svg-map-api-ingress
    uid: 0fe4e35e-2976-11e9-8b44-5254006cd09e
  spec:
    rules:
    - host: neptune-svg-map-api-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: svg-map-api-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-01-30T17:03:29Z
    generation: 1
    labels:
      app: adjacency-api
      chart: adjacency-api-1-107-e0f4f283
      version: 1-107-e0f4f283
    name: adjacency-api-ingress
    namespace: neptune-stage
    resourceVersion: "215365654"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-stage/ingresses/adjacency-api-ingress
    uid: f7869183-24b0-11e9-80e2-525400c55707
  spec:
    rules:
    - host: neptune-adjacency-api-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: adjacency-api-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-04T21:36:39Z
    generation: 1
    labels:
      app: aisle-api
      chart: aisle-api-1-108-921d764a
      version: 1-108-921d764a
    name: aisle-api-ingress
    namespace: neptune-stage
    resourceVersion: "215372529"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-stage/ingresses/aisle-api-ingress
    uid: 97f6540e-3ec5-11e9-9a69-52540002191d
  spec:
    rules:
    - host: neptune-aisle-api-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: aisle-api-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-22T18:19:43Z
    generation: 1
    labels:
      app: aisle-location-consumer
      chart: aisle-location-consumer-1-581-f01c8419
      version: 1-581-f01c8419
    name: aisle-location-consumer-ingress
    namespace: neptune-stage
    resourceVersion: "209192124"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-stage/ingresses/aisle-location-consumer-ingress
    uid: 0c5937a3-d627-11e8-ad5b-5254008c264f
  spec:
    rules:
    - host: neptune-aisle-location-consumer-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: aisle-location-consumer-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-09-20T18:36:13Z
    generation: 1
    labels:
      app: batch
      chart: batch-1-245-749a5fcf
      name: batch-ingress
      version: 1-245-749a5fcf
    name: batch-ingress
    namespace: neptune-stage
    resourceVersion: "208509082"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-stage/ingresses/batch-ingress
    uid: 0d19d86e-bd04-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: neptune-batch-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: batch-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-02-11T16:28:58Z
    generation: 1
    labels:
      app: cron-jobs
      chart: cron-jobs-1-204-810f4318
      name: cron-jobs-ingress
      version: 1-204-810f4318
    name: cron-jobs-ingress
    namespace: neptune-stage
    resourceVersion: "215367258"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-stage/ingresses/cron-jobs-ingress
    uid: 2238f423-2e1a-11e9-a157-52540070e292
  spec:
    rules:
    - host: neptune-cron-jobs-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cron-jobs-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-22T19:24:20Z
    generation: 1
    labels:
      app: department-location-consumer
      chart: department-location-consumer-1-410-12db3f0b
      version: 1-410-12db3f0b
    name: department-location-consumer-ingress
    namespace: neptune-stage
    resourceVersion: "215367757"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-stage/ingresses/department-location-consumer-ingress
    uid: 1365ed61-d630-11e8-ad5b-5254008c264f
  spec:
    rules:
    - host: neptune-department-location-consumer-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: department-location-consumer-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-01-31T22:37:24Z
    generation: 1
    labels:
      app: diagnostics
      chart: diagnostics-1-448-02c43338
      version: 1-448-02c43338
    name: diagnostics-ingress
    namespace: neptune-stage
    resourceVersion: "209217139"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-stage/ingresses/diagnostics-ingress
    uid: c78dca40-25a8-11e9-9a91-525400fb923b
  spec:
    rules:
    - host: neptune-diagnostics-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: diagnostics-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-09-21T16:20:22Z
    generation: 1
    labels:
      app: map-manager-client
      chart: map-manager-client-1-539-a78381f3
      name: map-manager-client-ingress
      version: 1-539-a78381f3
    name: map-manager-client-ingress
    namespace: neptune-stage
    resourceVersion: "206349668"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-stage/ingresses/map-manager-client-ingress
    uid: 3d2634a5-bdba-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: neptune-map-manager-client-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: map-manager-client-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-09-21T16:13:29Z
    generation: 1
    labels:
      app: map-manager
      chart: map-manager-1-586-f099ca41
      name: map-manager-ingress
      version: 1-586-f099ca41
    name: map-manager-ingress
    namespace: neptune-stage
    resourceVersion: "209179061"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-stage/ingresses/map-manager-ingress
    uid: 46def8dc-bdb9-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: neptune-map-manager-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: map-manager-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-02-20T18:07:45Z
    generation: 1
    labels:
      app: store-details
      chart: store-details-1-458-23560921
      version: 1-458-23560921
    name: store-details-ingress
    namespace: neptune-stage
    resourceVersion: "208509941"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-stage/ingresses/store-details-ingress
    uid: 6cb7fcdb-353a-11e9-a157-52540070e292
  spec:
    rules:
    - host: neptune-store-details-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: store-details-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-09-27T16:20:52Z
    generation: 1
    labels:
      app: store-item-coordinates
      chart: store-item-coordinates-1-846-537fa413
      version: 1-846-537fa413
    name: store-item-coordinates-ingress
    namespace: neptune-stage
    resourceVersion: "215256296"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-stage/ingresses/store-item-coordinates-ingress
    uid: 4da6e1ef-c271-11e8-90a0-525400d38b79
  spec:
    rules:
    - host: neptune-store-item-coordinates-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: store-item-coordinates-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-01-31T21:20:48Z
    generation: 1
    labels:
      app: store-pathing
      chart: store-pathing-1-1542-89d48682
      version: 1-1542-89d48682
    name: store-pathing-ingress
    namespace: neptune-stage
    resourceVersion: "215370090"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-stage/ingresses/store-pathing-ingress
    uid: 144f44c9-259e-11e9-9a91-525400fb923b
  spec:
    rules:
    - host: neptune-store-pathing-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: store-pathing-service
            servicePort: 8080
          path: /
        - backend:
            serviceName: store-pathing-direct-service
            servicePort: 1234
          path: /info
    - host: neptune-store-pathing-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: store-pathing-service
            servicePort: 8080
          path: /
        - backend:
            serviceName: store-pathing-direct-service
            servicePort: 1234
          path: /info
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-01-09T21:10:13Z
    generation: 1
    labels:
      app: store-paths-v2
      chart: store-paths-v2-1-910-ef601acc
      version: 1-910-ef601acc
    name: store-paths-v2-ingress
    namespace: neptune-stage
    resourceVersion: "216238229"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-stage/ingresses/store-paths-v2-ingress
    uid: f4a7e908-1452-11e9-9fcc-525400f72165
  spec:
    rules:
    - host: neptune-store-paths-v2-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: store-paths-v2-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-01-30T16:28:15Z
    generation: 2
    labels:
      app: svg-map-api
      chart: svg-map-api-1-311-ec9bbd19
      version: 1-311-ec9bbd19
    name: svg-map-api-ingress
    namespace: neptune-stage
    resourceVersion: "215492177"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-stage/ingresses/svg-map-api-ingress
    uid: 0b8cc6ac-24ac-11e9-80e2-525400c55707
  spec:
    rules:
    - host: neptune-svg-map-api-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: svg-map-api-service
            servicePort: 80
          path: /
    - host: neptune-svg-map-api-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: svg-map-api-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-01-23T22:40:58Z
    generation: 1
    labels:
      app: adjacency-api
      chart: adjacency-api-1-107-e0f4f283
      version: 1-107-e0f4f283
    name: adjacency-api-ingress
    namespace: neptune-test
    resourceVersion: "213514424"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-test/ingresses/adjacency-api-ingress
    uid: f3dcd23a-1f5f-11e9-b102-525400053814
  spec:
    rules:
    - host: neptune-adjacency-api-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: adjacency-api-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-04T19:13:22Z
    generation: 1
    labels:
      app: aisle-api
      chart: aisle-api-1-108-921d764a
      version: 1-108-921d764a
    name: aisle-api-ingress
    namespace: neptune-test
    resourceVersion: "213514523"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-test/ingresses/aisle-api-ingress
    uid: 93ff5964-3eb1-11e9-9b40-525400e10f08
  spec:
    rules:
    - host: neptune-aisle-api-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: aisle-api-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-19T20:36:15Z
    generation: 1
    labels:
      app: aisle-location-consumer
      chart: aisle-location-consumer-1-581-f01c8419
      version: 1-581-f01c8419
    name: aisle-location-consumer-ingress
    namespace: neptune-test
    resourceVersion: "207507038"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-test/ingresses/aisle-location-consumer-ingress
    uid: 9fe90935-d3de-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: neptune-aisle-location-consumer-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: aisle-location-consumer-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-09-19T20:23:23Z
    generation: 1
    labels:
      app: batch
      chart: batch-1-250-9b7f71e5
      name: batch-ingress
      version: 1-250-9b7f71e5
    name: batch-ingress
    namespace: neptune-test
    resourceVersion: "216263259"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-test/ingresses/batch-ingress
    uid: db62023e-bc49-11e8-a79d-525400524761
  spec:
    rules:
    - host: neptune-batch-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: batch-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-01-22T19:06:21Z
    generation: 1
    labels:
      app: cron-jobs
      chart: cron-jobs-1-204-810f4318
      name: cron-jobs-ingress
      version: 1-204-810f4318
    name: cron-jobs-ingress
    namespace: neptune-test
    resourceVersion: "215361289"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-test/ingresses/cron-jobs-ingress
    uid: ce2625a7-1e78-11e9-b102-525400053814
  spec:
    rules:
    - host: neptune-cron-jobs-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cron-jobs-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-19T20:40:59Z
    generation: 1
    labels:
      app: department-location-consumer
      chart: department-location-consumer-1-410-12db3f0b
      version: 1-410-12db3f0b
    name: department-location-consumer-ingress
    namespace: neptune-test
    resourceVersion: "215295515"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-test/ingresses/department-location-consumer-ingress
    uid: 4911794d-d3df-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: neptune-department-location-consumer-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: department-location-consumer-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-18T21:37:12Z
    generation: 1
    labels:
      app: diagnostics
      chart: diagnostics-1-448-02c43338
      version: 1-448-02c43338
    name: diagnostics-ingress
    namespace: neptune-test
    resourceVersion: "207511750"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-test/ingresses/diagnostics-ingress
    uid: f910be3a-d31d-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: neptune-diagnostics-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: diagnostics-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-09-17T22:02:20Z
    generation: 1
    labels:
      app: guest-scan-importer
      chart: guest-scan-importer-1-94-6c72381d
      name: guest-scan-importer-ingress
      version: 1-94-6c72381d
    name: guest-scan-importer-ingress
    namespace: neptune-test
    resourceVersion: "207514098"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-test/ingresses/guest-scan-importer-ingress
    uid: 5987368b-bac5-11e8-8462-525400b93a8e
  spec:
    rules:
    - host: neptune-guest-scan-importer-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: guest-scan-importer-service
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-09-20T18:49:54Z
    generation: 1
    labels:
      app: map-manager-client
      chart: map-manager-client-1-539-a78381f3
      name: map-manager-client-ingress
      version: 1-539-a78381f3
    name: map-manager-client-ingress
    namespace: neptune-test
    resourceVersion: "192840433"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-test/ingresses/map-manager-client-ingress
    uid: f6657559-bd05-11e8-a79d-525400524761
  spec:
    rules:
    - host: neptune-map-manager-client-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: map-manager-client-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-09-20T18:51:34Z
    generation: 1
    labels:
      app: map-manager
      chart: map-manager-1-586-f099ca41
      name: map-manager-ingress
      version: 1-586-f099ca41
    name: map-manager-ingress
    namespace: neptune-test
    resourceVersion: "207514646"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-test/ingresses/map-manager-ingress
    uid: 31f25c93-bd06-11e8-a79d-525400524761
  spec:
    rules:
    - host: neptune-map-manager-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: map-manager-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-02-20T16:59:59Z
    generation: 1
    labels:
      app: store-details
      chart: store-details-1-458-23560921
      version: 1-458-23560921
    name: store-details-ingress
    namespace: neptune-test
    resourceVersion: "207515299"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-test/ingresses/store-details-ingress
    uid: f52e2426-3530-11e9-a2e8-52540055f679
  spec:
    rules:
    - host: neptune-store-details-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: store-details-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-09-27T16:13:28Z
    generation: 1
    labels:
      app: store-item-coordinates
      chart: store-item-coordinates-1-855-6c79fab6
      version: 1-855-6c79fab6
    name: store-item-coordinates-ingress
    namespace: neptune-test
    resourceVersion: "215360010"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-test/ingresses/store-item-coordinates-ingress
    uid: 452c2bb6-c270-11e8-90a0-525400d38b79
  spec:
    rules:
    - host: neptune-store-item-coordinates-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: store-item-coordinates-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-02-08T19:13:45Z
    generation: 1
    labels:
      app: store-pathing
      chart: store-pathing-1-1542-89d48682
      version: 1-1542-89d48682
    name: store-pathing-ingress
    namespace: neptune-test
    resourceVersion: "208358227"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-test/ingresses/store-pathing-ingress
    uid: a7893ca1-2bd5-11e9-a2e8-52540055f679
  spec:
    rules:
    - host: neptune-store-pathing-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: store-pathing-service
            servicePort: 8080
          path: /
        - backend:
            serviceName: store-pathing-direct-service
            servicePort: 1234
          path: /info
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-11-28T15:25:28Z
    generation: 2
    labels:
      app: store-paths-v2
      chart: store-paths-v2-1-914-24b59fbf
      version: 1-914-24b59fbf
    name: store-paths-v2-ingress
    namespace: neptune-test
    resourceVersion: "216251100"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-test/ingresses/store-paths-v2-ingress
    uid: d603b5b3-f321-11e8-ad5a-525400a9bf14
  spec:
    rules:
    - host: neptune-store-paths-v2-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: store-paths-v2-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-01-29T22:47:42Z
    generation: 1
    labels:
      app: svg-map-api
      chart: svg-map-api-1-311-ec9bbd19
      version: 1-311-ec9bbd19
    name: svg-map-api-ingress
    namespace: neptune-test
    resourceVersion: "215409820"
    selfLink: /apis/extensions/v1beta1/namespaces/neptune-test/ingresses/svg-map-api-ingress
    uid: e3281f8f-2417-11e9-80e2-525400c55707
  spec:
    rules:
    - host: neptune-svg-map-api-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: svg-map-api-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"ost-meta-api-ing"},"name":"ost-meta-api-ing","namespace":"ostmeta"},"spec":{"rules":[{"host":"ost-meta-api.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ost-meta-api-svc","servicePort":8000},"path":"/"}]}},{"host":"ost-meta-api.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ost-meta-api-svc","servicePort":8000},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-05T06:53:52Z
    generation: 1
    labels:
      name: ost-meta-api-ing
    name: ost-meta-api-ing
    namespace: ostmeta
    resourceVersion: "49225943"
    selfLink: /apis/extensions/v1beta1/namespaces/ostmeta/ingresses/ost-meta-api-ing
    uid: 6b466cf6-c86b-11e8-9f4c-525400adf9ce
  spec:
    rules:
    - host: ost-meta-api.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ost-meta-api-svc
            servicePort: 8000
          path: /
    - host: ost-meta-api.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ost-meta-api-svc
            servicePort: 8000
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"batch-server-ingress"},"name":"batch-server-ingress","namespace":"pcn-dev"},"spec":{"rules":[{"host":"devpcn-batch.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pcn-batch-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devpcn-batch.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-10T20:24:53Z
    generation: 1
    labels:
      name: batch-server-ingress
    name: batch-server-ingress
    namespace: pcn-dev
    resourceVersion: "49225728"
    selfLink: /apis/extensions/v1beta1/namespaces/pcn-dev/ingresses/batch-server-ingress
    uid: 935a8cd8-b537-11e8-8462-525400b93a8e
  spec:
    rules:
    - host: devpcn-batch.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pcn-batch-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devpcn-batch.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"edge-server-ingress"},"name":"edge-server-ingress","namespace":"pcn-dev"},"spec":{"rules":[{"host":"devpcn-edge.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pcn-edge-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devpcn-edge.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-10T23:54:39Z
    generation: 1
    labels:
      name: edge-server-ingress
    name: edge-server-ingress
    namespace: pcn-dev
    resourceVersion: "49225626"
    selfLink: /apis/extensions/v1beta1/namespaces/pcn-dev/ingresses/edge-server-ingress
    uid: e155aa4f-b554-11e8-8462-525400b93a8e
  spec:
    rules:
    - host: devpcn-edge.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pcn-edge-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devpcn-edge.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"kafka-server-ingress"},"name":"kafka-server-ingress","namespace":"pcn-dev"},"spec":{"rules":[{"host":"devpcn-kafka.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pcn-kafka-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devpcn-kafka.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-10T23:43:50Z
    generation: 1
    labels:
      name: kafka-server-ingress
    name: kafka-server-ingress
    namespace: pcn-dev
    resourceVersion: "49225958"
    selfLink: /apis/extensions/v1beta1/namespaces/pcn-dev/ingresses/kafka-server-ingress
    uid: 5e501124-b553-11e8-a71c-525400524761
  spec:
    rules:
    - host: devpcn-kafka.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pcn-kafka-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devpcn-kafka.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"pcn-ui-pol-ingress"},"name":"pcn-ui-pol-ingress","namespace":"pcn-dev"},"spec":{"rules":[{"host":"devpcn-ui-pol.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pcn-ui-pol-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devpcn-ui-pol.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-12T20:24:17Z
    generation: 2
    labels:
      name: pcn-ui-pol-ingress
    name: pcn-ui-pol-ingress
    namespace: pcn-dev
    resourceVersion: "49225672"
    selfLink: /apis/extensions/v1beta1/namespaces/pcn-dev/ingresses/pcn-ui-pol-ingress
    uid: d2e865b7-b6c9-11e8-8488-525400b06b0f
  spec:
    rules:
    - host: devpcn-ui-pol.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pcn-ui-pol-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devpcn-ui-pol.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"catalog-system"},"name":"catalog-system","namespace":"personalization-dev"},"spec":{"rules":[{"host":"catalog-system-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"catalog-system","servicePort":8080},"path":"/"}]}},{"host":"catalog-system-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"catalog-system","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-08T21:19:44Z
    generation: 1
    labels:
      name: catalog-system
    name: catalog-system
    namespace: personalization-dev
    resourceVersion: "49225742"
    selfLink: /apis/extensions/v1beta1/namespaces/personalization-dev/ingresses/catalog-system
    uid: e074eadc-cb3f-11e8-9369-525400a3d3a1
  spec:
    rules:
    - host: catalog-system-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: catalog-system
            servicePort: 8080
          path: /
    - host: catalog-system-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: catalog-system
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"rules-engine"},"name":"rules-engine","namespace":"personalization-dev"},"spec":{"rules":[{"host":"rules-engine-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rules-engine","servicePort":8080},"path":"/"}]}},{"host":"rules-engine-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rules-engine","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-01T17:20:56Z
    generation: 2
    labels:
      name: rules-engine
    name: rules-engine
    namespace: personalization-dev
    resourceVersion: "49225642"
    selfLink: /apis/extensions/v1beta1/namespaces/personalization-dev/ingresses/rules-engine
    uid: 5b962903-c59e-11e8-8d90-525400b0e110
  spec:
    rules:
    - host: rules-engine-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rules-engine
            servicePort: 8080
          path: /
    - host: rules-engine-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rules-engine
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"rules-management"},"name":"rules-management","namespace":"personalization-dev"},"spec":{"rules":[{"host":"rules-management-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rules-management","servicePort":8080},"path":"/"}]}},{"host":"rules-management-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rules-management","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-01T17:20:54Z
    generation: 2
    labels:
      name: rules-management
    name: rules-management
    namespace: personalization-dev
    resourceVersion: "49225463"
    selfLink: /apis/extensions/v1beta1/namespaces/personalization-dev/ingresses/rules-management
    uid: 5a5a42b0-c59e-11e8-8d90-525400b0e110
  spec:
    rules:
    - host: rules-management-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rules-management
            servicePort: 8080
          path: /
    - host: rules-management-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rules-management
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"serve-ingest"},"name":"serve-ingest","namespace":"personalization-dev"},"spec":{"rules":[{"host":"serve-ingest-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"serve-ingest","servicePort":8080},"path":"/"}]}},{"host":"serve-ingest-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"serve-ingest","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2018-09-24T20:11:24Z
    generation: 1
    labels:
      name: serve-ingest
    name: serve-ingest
    namespace: personalization-dev
    resourceVersion: "49225606"
    selfLink: /apis/extensions/v1beta1/namespaces/personalization-dev/ingresses/serve-ingest
    uid: 02cdcb1a-c036-11e8-a79d-525400524761
  spec:
    rules:
    - host: serve-ingest-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: serve-ingest
            servicePort: 8080
          path: /
    - host: serve-ingest-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: serve-ingest
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"ui-ingress"},"name":"ui-ingress","namespace":"personalization-dev"},"spec":{"rules":[{"host":"sift-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ui-service","servicePort":8080},"path":"/"}]}},{"host":"sift-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ui-service","servicePort":8080},"path":"/"}]}},{"host":"sift-dev.target.com","http":{"paths":[{"backend":{"serviceName":"ui-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["sift-dev.target.com"],"secretName":"vanitysecret"}]}}
    creationTimestamp: 2018-10-01T19:09:21Z
    generation: 6
    labels:
      name: ui-ingress
    name: ui-ingress
    namespace: personalization-dev
    resourceVersion: "54865142"
    selfLink: /apis/extensions/v1beta1/namespaces/personalization-dev/ingresses/ui-ingress
    uid: 8087c058-c5ad-11e8-9f4c-525400adf9ce
  spec:
    rules:
    - host: sift-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ui-service
            servicePort: 8080
          path: /
    - host: sift-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ui-service
            servicePort: 8080
          path: /
    - host: sift-dev.target.com
      http:
        paths:
        - backend:
            serviceName: ui-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - sift-dev.target.com
      secretName: vanitysecret
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"wisdom-loop"},"name":"wisdom-loop","namespace":"personalization-dev"},"spec":{"rules":[{"host":"wisdom-loop-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"wisdom-loop","servicePort":8080},"path":"/"}]}},{"host":"wisdom-loop-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"wisdom-loop","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-09T21:26:18Z
    generation: 1
    labels:
      name: wisdom-loop
    name: wisdom-loop
    namespace: personalization-dev
    resourceVersion: "49225752"
    selfLink: /apis/extensions/v1beta1/namespaces/personalization-dev/ingresses/wisdom-loop
    uid: f5cbfc7a-cc09-11e8-85f5-525400f89230
  spec:
    rules:
    - host: wisdom-loop-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: wisdom-loop
            servicePort: 8080
          path: /
    - host: wisdom-loop-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: wisdom-loop
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"rules-engine"},"name":"rules-engine","namespace":"personalization-stage"},"spec":{"rules":[{"host":"rules-engine-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rules-engine","servicePort":8080},"path":"/"}]}},{"host":"rules-engine-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rules-engine","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-08T16:43:41Z
    generation: 1
    labels:
      name: rules-engine
    name: rules-engine
    namespace: personalization-stage
    resourceVersion: "49225500"
    selfLink: /apis/extensions/v1beta1/namespaces/personalization-stage/ingresses/rules-engine
    uid: 4fed400e-cb19-11e8-9f4c-525400adf9ce
  spec:
    rules:
    - host: rules-engine-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rules-engine
            servicePort: 8080
          path: /
    - host: rules-engine-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rules-engine
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"rules-management"},"name":"rules-management","namespace":"personalization-stage"},"spec":{"rules":[{"host":"rules-management-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rules-management","servicePort":8080},"path":"/"}]}},{"host":"rules-management-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rules-management","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-08T16:43:39Z
    generation: 1
    labels:
      name: rules-management
    name: rules-management
    namespace: personalization-stage
    resourceVersion: "49225509"
    selfLink: /apis/extensions/v1beta1/namespaces/personalization-stage/ingresses/rules-management
    uid: 4efe7080-cb19-11e8-82d1-5254009c2c25
  spec:
    rules:
    - host: rules-management-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rules-management
            servicePort: 8080
          path: /
    - host: rules-management-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rules-management
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"serve-ingest"},"name":"serve-ingest","namespace":"personalization-stage"},"spec":{"rules":[{"host":"serve-ingest-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"serve-ingest","servicePort":8080},"path":"/"}]}},{"host":"serve-ingest-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"serve-ingest","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2018-09-24T21:00:09Z
    generation: 1
    labels:
      name: serve-ingest
    name: serve-ingest
    namespace: personalization-stage
    resourceVersion: "49225442"
    selfLink: /apis/extensions/v1beta1/namespaces/personalization-stage/ingresses/serve-ingest
    uid: d26c3717-c03c-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: serve-ingest-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: serve-ingest
            servicePort: 8080
          path: /
    - host: serve-ingest-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: serve-ingest
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"ui-ingress"},"name":"ui-ingress","namespace":"personalization-stage"},"spec":{"rules":[{"host":"sift-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ui-service","servicePort":8080},"path":"/"}]}},{"host":"sift-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ui-service","servicePort":8080},"path":"/"}]}},{"host":"sift-stage.target.com","http":{"paths":[{"backend":{"serviceName":"ui-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["sift-stage.target.com"],"secretName":"vanitysecret"}]}}
    creationTimestamp: 2018-10-08T17:52:48Z
    generation: 2
    labels:
      name: ui-ingress
    name: ui-ingress
    namespace: personalization-stage
    resourceVersion: "54877610"
    selfLink: /apis/extensions/v1beta1/namespaces/personalization-stage/ingresses/ui-ingress
    uid: f84ce9fe-cb22-11e8-9f4c-525400adf9ce
  spec:
    rules:
    - host: sift-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ui-service
            servicePort: 8080
          path: /
    - host: sift-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ui-service
            servicePort: 8080
          path: /
    - host: sift-stage.target.com
      http:
        paths:
        - backend:
            serviceName: ui-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - sift-stage.target.com
      secretName: vanitysecret
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-19T20:45:43Z
    generation: 1
    labels:
      name: sba
    name: sba
    namespace: pilp-dev
    resourceVersion: "55681095"
    selfLink: /apis/extensions/v1beta1/namespaces/pilp-dev/ingresses/sba
    uid: f27ad565-d3df-11e8-ad5b-5254008c264f
  spec:
    rules:
    - host: pilp-dev-sba.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: sba
            servicePort: 8999
          path: /
    - host: pilp-dev-sba.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: sba
            servicePort: 8999
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"spadb4"},"name":"spadb4","namespace":"pilp-dev"},"spec":{"rules":[{"host":"pilp-dev-spadb4.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/v1/lively"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/v1/ready"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/swagger-ui.html"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/swagger-resources"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/v2/api-docs"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/webjars"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/actuator"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/salesfloor_presentations"}]}},{"host":"pilp-dev-spadb4.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/v1/lively"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/v1/ready"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/swagger-ui.html"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/swagger-resources"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/v2/api-docs"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/webjars"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/actuator"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/salesfloor_presentations"}]}}],"tls":[{"hosts":["pilp-dev-spadb4.ttc-test.k8s.target.com","pilp-dev-spadb4.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-24T20:53:12Z
    generation: 1
    labels:
      name: spadb4
    name: spadb4
    namespace: pilp-dev
    resourceVersion: "60272286"
    selfLink: /apis/extensions/v1beta1/namespaces/pilp-dev/ingresses/spadb4
    uid: d219ab86-d7ce-11e8-80ff-5254001f7df6
  spec:
    rules:
    - host: pilp-dev-spadb4.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/v1/lively
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/v1/ready
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/swagger-ui.html
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/swagger-resources
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/v2/api-docs
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/webjars
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/actuator
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /salesfloor_presentations
    - host: pilp-dev-spadb4.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/v1/lively
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/v1/ready
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/swagger-ui.html
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/swagger-resources
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/v2/api-docs
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/webjars
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/actuator
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /salesfloor_presentations
    tls:
    - hosts:
      - pilp-dev-spadb4.ttc-test.k8s.target.com
      - pilp-dev-spadb4.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-19T20:50:41Z
    generation: 1
    labels:
      name: sba
    name: sba
    namespace: pilp-stage
    resourceVersion: "55683802"
    selfLink: /apis/extensions/v1beta1/namespaces/pilp-stage/ingresses/sba
    uid: a41e2b96-d3e0-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: pilp-stage-sba.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: sba
            servicePort: 8999
          path: /
    - host: pilp-stage-sba.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: sba
            servicePort: 8999
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"spadb4"},"name":"spadb4","namespace":"pilp-stage"},"spec":{"rules":[{"host":"pilp-stage-spadb4.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/v1/lively"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/v1/ready"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/swagger-ui.html"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/swagger-resources"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/v2/api-docs"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/webjars"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/actuator"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/salesfloor_presentations"}]}},{"host":"pilp-stage-spadb4.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/v1/lively"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/v1/ready"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/swagger-ui.html"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/swagger-resources"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/v2/api-docs"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/webjars"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4/actuator"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/spadb4"},{"backend":{"serviceName":"spadb4","servicePort":8513},"path":"/salesfloor_presentations"}]}}],"tls":[{"hosts":["pilp-stage-spadb4.ttc-test.k8s.target.com","pilp-stage-spadb4.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-19T19:10:36Z
    generation: 2
    labels:
      name: spadb4
    name: spadb4
    namespace: pilp-stage
    resourceVersion: "60277066"
    selfLink: /apis/extensions/v1beta1/namespaces/pilp-stage/ingresses/spadb4
    uid: a90918d3-d3d2-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: pilp-stage-spadb4.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/v1/lively
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/v1/ready
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/swagger-ui.html
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/swagger-resources
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/v2/api-docs
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/webjars
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/actuator
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /salesfloor_presentations
    - host: pilp-stage-spadb4.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/v1/lively
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/v1/ready
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/swagger-ui.html
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/swagger-resources
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/v2/api-docs
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/webjars
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4/actuator
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /spadb4
        - backend:
            serviceName: spadb4
            servicePort: 8513
          path: /salesfloor_presentations
    tls:
    - hosts:
      - pilp-stage-spadb4.ttc-test.k8s.target.com
      - pilp-stage-spadb4.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"ap-discussions-ingress"},"name":"ap-discussions-ingress","namespace":"planning-stage"},"spec":{"rules":[{"host":"ap-discussions-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ap-discussions","servicePort":80},"path":"/"}]}},{"host":"ap-discussions-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ap-discussions","servicePort":80},"path":"/"}]}},{"host":"ap-discussions-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ap-discussions","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-01-29T17:08:49Z
    generation: 1
    labels:
      name: ap-discussions-ingress
    name: ap-discussions-ingress
    namespace: planning-stage
    resourceVersion: "159692027"
    selfLink: /apis/extensions/v1beta1/namespaces/planning-stage/ingresses/ap-discussions-ingress
    uid: 8b7f9364-23e8-11e9-879f-5254005a994c
  spec:
    rules:
    - host: ap-discussions-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ap-discussions
            servicePort: 80
          path: /
    - host: ap-discussions-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ap-discussions
            servicePort: 80
          path: /
    - host: ap-discussions-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ap-discussions
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"notifications-ingress"},"name":"notifications-ingress","namespace":"planning-stage"},"spec":{"rules":[{"host":"pogap-stage-notifications.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"notifications","servicePort":80},"path":"/"}]}},{"host":"pogap-stage-notifications.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"notifications","servicePort":80},"path":"/"}]}},{"host":"pogap-stage-notifications.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"notifications","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-31T19:34:12Z
    generation: 1
    labels:
      name: notifications-ingress
    name: notifications-ingress
    namespace: planning-stage
    resourceVersion: "65346920"
    selfLink: /apis/extensions/v1beta1/namespaces/planning-stage/ingresses/notifications-ingress
    uid: f1cc3990-dd43-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: pogap-stage-notifications.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: notifications
            servicePort: 80
          path: /
    - host: pogap-stage-notifications.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: notifications
            servicePort: 80
          path: /
    - host: pogap-stage-notifications.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: notifications
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"planning-core-ingress"},"name":"planning-core-ingress","namespace":"planning-stage"},"spec":{"rules":[{"host":"apex-stage.target.com","http":{"paths":[{"backend":{"serviceName":"planning-core-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["apex-stage.target.com"],"secretName":"vanitysecretapex"}]}}
    creationTimestamp: 2019-02-06T00:57:39Z
    generation: 1
    labels:
      name: planning-core-ingress
    name: planning-core-ingress
    namespace: planning-stage
    resourceVersion: "168192184"
    selfLink: /apis/extensions/v1beta1/namespaces/planning-stage/ingresses/planning-core-ingress
    uid: 331e6b21-29aa-11e9-a621-525400d4de49
  spec:
    rules:
    - host: apex-stage.target.com
      http:
        paths:
        - backend:
            serviceName: planning-core-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - apex-stage.target.com
      secretName: vanitysecretapex
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"size-tables-ingress"},"name":"size-tables-ingress","namespace":"planning-stage"},"spec":{"rules":[{"host":"pogap-stage-size-tables.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"size-tables","servicePort":80},"path":"/"}]}},{"host":"pogap-stage-size-tables.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"size-tables","servicePort":80},"path":"/"}]}},{"host":"pogap-stage-size-tables.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"size-tables","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-11-01T13:10:14Z
    generation: 1
    labels:
      name: size-tables-ingress
    name: size-tables-ingress
    namespace: planning-stage
    resourceVersion: "65976768"
    selfLink: /apis/extensions/v1beta1/namespaces/planning-stage/ingresses/size-tables-ingress
    uid: 7874baf0-ddd7-11e8-80ff-5254001f7df6
  spec:
    rules:
    - host: pogap-stage-size-tables.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: size-tables
            servicePort: 80
          path: /
    - host: pogap-stage-size-tables.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: size-tables
            servicePort: 80
          path: /
    - host: pogap-stage-size-tables.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: size-tables
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"view-service-ingress"},"name":"view-service-ingress","namespace":"planning-stage"},"spec":{"rules":[{"host":"pogap-stage-views.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"view-service","servicePort":80},"path":"/"}]}},{"host":"pogap-stage-views.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"view-service","servicePort":80},"path":"/"}]}},{"host":"pogap-stage-views.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"view-service","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-11-01T13:13:31Z
    generation: 1
    labels:
      name: view-service-ingress
    name: view-service-ingress
    namespace: planning-stage
    resourceVersion: "65978540"
    selfLink: /apis/extensions/v1beta1/namespaces/planning-stage/ingresses/view-service-ingress
    uid: ee0481d8-ddd7-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: pogap-stage-views.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: view-service
            servicePort: 80
          path: /
    - host: pogap-stage-views.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: view-service
            servicePort: 80
          path: /
    - host: pogap-stage-views.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: view-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"pmc-archive-ingress"},"name":"pmc-archive-ingress","namespace":"pmc-dev"},"spec":{"rules":[{"host":"pmc-dev-archiveservice.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pmc-archive-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["pmc-dev-archiveservice.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-09T17:21:54Z
    generation: 1
    labels:
      name: pmc-archive-ingress
    name: pmc-archive-ingress
    namespace: pmc-dev
    resourceVersion: "49225709"
    selfLink: /apis/extensions/v1beta1/namespaces/pmc-dev/ingresses/pmc-archive-ingress
    uid: d1915f7d-cbe7-11e8-82d1-5254009c2c25
  spec:
    rules:
    - host: pmc-dev-archiveservice.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pmc-archive-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - pmc-dev-archiveservice.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"pmc-bono-ingress"},"name":"pmc-bono-ingress","namespace":"pmc-dev"},"spec":{"rules":[{"host":"pmc-dev-bonoservice.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pmc-bono-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["pmc-dev-bonoservice.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-09T16:15:54Z
    generation: 1
    labels:
      name: pmc-bono-ingress
    name: pmc-bono-ingress
    namespace: pmc-dev
    resourceVersion: "49225745"
    selfLink: /apis/extensions/v1beta1/namespaces/pmc-dev/ingresses/pmc-bono-ingress
    uid: 98bdd301-cbde-11e8-82d1-5254009c2c25
  spec:
    rules:
    - host: pmc-dev-bonoservice.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pmc-bono-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - pmc-dev-bonoservice.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"pmc-certificate-ingress"},"name":"pmc-certificate-ingress","namespace":"pmc-dev"},"spec":{"rules":[{"host":"pmc-dev-certificateservice.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pmc-certificate-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["pmc-dev-certificateservice.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-09T16:16:24Z
    generation: 1
    labels:
      name: pmc-certificate-ingress
    name: pmc-certificate-ingress
    namespace: pmc-dev
    resourceVersion: "49225519"
    selfLink: /apis/extensions/v1beta1/namespaces/pmc-dev/ingresses/pmc-certificate-ingress
    uid: ab07f726-cbde-11e8-9369-525400a3d3a1
  spec:
    rules:
    - host: pmc-dev-certificateservice.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pmc-certificate-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - pmc-dev-certificateservice.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"pmc-document-ingress"},"name":"pmc-document-ingress","namespace":"pmc-dev"},"spec":{"rules":[{"host":"pmc-dev-documentservice.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pmc-document-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["pmc-dev-documentservice.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-09T16:16:14Z
    generation: 1
    labels:
      name: pmc-document-ingress
    name: pmc-document-ingress
    namespace: pmc-dev
    resourceVersion: "49225661"
    selfLink: /apis/extensions/v1beta1/namespaces/pmc-dev/ingresses/pmc-document-ingress
    uid: a52d4635-cbde-11e8-82d1-5254009c2c25
  spec:
    rules:
    - host: pmc-dev-documentservice.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pmc-document-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - pmc-dev-documentservice.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"pmc-stage-ingress"},"name":"pmc-stage-ingress","namespace":"pmc-dev"},"spec":{"rules":[{"host":"pmc-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pmc-ui-service","servicePort":8001},"path":"/"}]}}],"tls":[{"hosts":["pmc-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-09T16:15:33Z
    generation: 1
    labels:
      name: pmc-stage-ingress
    name: pmc-stage-ingress
    namespace: pmc-dev
    resourceVersion: "49225373"
    selfLink: /apis/extensions/v1beta1/namespaces/pmc-dev/ingresses/pmc-stage-ingress
    uid: 8c8d7f6e-cbde-11e8-9f4c-525400adf9ce
  spec:
    rules:
    - host: pmc-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pmc-ui-service
            servicePort: 8001
          path: /
    tls:
    - hosts:
      - pmc-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"pmc-workflow-ingress"},"name":"pmc-workflow-ingress","namespace":"pmc-dev"},"spec":{"rules":[{"host":"pmc-dev-workflowservice.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pmc-workflow-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["pmc-dev-workflowservice.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-09T16:16:05Z
    generation: 1
    labels:
      name: pmc-workflow-ingress
    name: pmc-workflow-ingress
    namespace: pmc-dev
    resourceVersion: "49225345"
    selfLink: /apis/extensions/v1beta1/namespaces/pmc-dev/ingresses/pmc-workflow-ingress
    uid: 9f7be49f-cbde-11e8-9369-525400a3d3a1
  spec:
    rules:
    - host: pmc-dev-workflowservice.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pmc-workflow-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - pmc-dev-workflowservice.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"pmc-archive-ingress"},"name":"pmc-archive-ingress","namespace":"pmc-stage"},"spec":{"rules":[{"host":"pmc-stage-archiveservice.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pmc-archive-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["pmc-stage-archiveservice.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-04T20:12:59Z
    generation: 1
    labels:
      name: pmc-archive-ingress
    name: pmc-archive-ingress
    namespace: pmc-stage
    resourceVersion: "49225529"
    selfLink: /apis/extensions/v1beta1/namespaces/pmc-stage/ingresses/pmc-archive-ingress
    uid: e3ad48ec-c811-11e8-9f4c-525400adf9ce
  spec:
    rules:
    - host: pmc-stage-archiveservice.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pmc-archive-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - pmc-stage-archiveservice.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"pmc-bono-ingress"},"name":"pmc-bono-ingress","namespace":"pmc-stage"},"spec":{"rules":[{"host":"pmc-stage-bonoservice.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pmc-bono-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["pmc-stage-bonoservice.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-04T20:37:09Z
    generation: 1
    labels:
      name: pmc-bono-ingress
    name: pmc-bono-ingress
    namespace: pmc-stage
    resourceVersion: "49225839"
    selfLink: /apis/extensions/v1beta1/namespaces/pmc-stage/ingresses/pmc-bono-ingress
    uid: 440e1244-c815-11e8-b53b-5254000e56fe
  spec:
    rules:
    - host: pmc-stage-bonoservice.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pmc-bono-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - pmc-stage-bonoservice.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"pmc-certificate-ingress"},"name":"pmc-certificate-ingress","namespace":"pmc-stage"},"spec":{"rules":[{"host":"pmc-stage-certificateservice.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pmc-certificate-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["pmc-stage-certificateservice.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-04T20:14:38Z
    generation: 1
    labels:
      name: pmc-certificate-ingress
    name: pmc-certificate-ingress
    namespace: pmc-stage
    resourceVersion: "49225477"
    selfLink: /apis/extensions/v1beta1/namespaces/pmc-stage/ingresses/pmc-certificate-ingress
    uid: 1e70687e-c812-11e8-b53b-5254000e56fe
  spec:
    rules:
    - host: pmc-stage-certificateservice.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pmc-certificate-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - pmc-stage-certificateservice.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"pmc-document-ingress"},"name":"pmc-document-ingress","namespace":"pmc-stage"},"spec":{"rules":[{"host":"pmc-stage-documentservice.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pmc-document-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["pmc-stage-documentservice.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-04T20:16:00Z
    generation: 1
    labels:
      name: pmc-document-ingress
    name: pmc-document-ingress
    namespace: pmc-stage
    resourceVersion: "49225534"
    selfLink: /apis/extensions/v1beta1/namespaces/pmc-stage/ingresses/pmc-document-ingress
    uid: 4f870736-c812-11e8-9f4c-525400adf9ce
  spec:
    rules:
    - host: pmc-stage-documentservice.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pmc-document-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - pmc-stage-documentservice.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"pmc-ui-ingress"},"name":"pmc-ui-ingress","namespace":"pmc-stage"},"spec":{"rules":[{"host":"pmc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pmc-ui-service","servicePort":8001},"path":"/"}]}}],"tls":[{"hosts":["pmc-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-04T20:53:26Z
    generation: 1
    labels:
      name: pmc-ui-ingress
    name: pmc-ui-ingress
    namespace: pmc-stage
    resourceVersion: "49225678"
    selfLink: /apis/extensions/v1beta1/namespaces/pmc-stage/ingresses/pmc-ui-ingress
    uid: 8a1f835c-c817-11e8-8d90-525400b0e110
  spec:
    rules:
    - host: pmc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pmc-ui-service
            servicePort: 8001
          path: /
    tls:
    - hosts:
      - pmc-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"pmc-workflow-ingress"},"name":"pmc-workflow-ingress","namespace":"pmc-stage"},"spec":{"rules":[{"host":"pmc-stage-workflowservice.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pmc-workflow-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["pmc-stage-workflowservice.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-04T20:20:02Z
    generation: 1
    labels:
      name: pmc-workflow-ingress
    name: pmc-workflow-ingress
    namespace: pmc-stage
    resourceVersion: "49225987"
    selfLink: /apis/extensions/v1beta1/namespaces/pmc-stage/ingresses/pmc-workflow-ingress
    uid: df97d8ee-c812-11e8-8d90-525400b0e110
  spec:
    rules:
    - host: pmc-stage-workflowservice.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pmc-workflow-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - pmc-stage-workflowservice.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"ap-discussions-ingress"},"name":"ap-discussions-ingress","namespace":"pog-ap-dev"},"spec":{"rules":[{"host":"ap-discussions-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ap-discussions","servicePort":80},"path":"/"}]}},{"host":"ap-discussions-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ap-discussions","servicePort":80},"path":"/"}]}},{"host":"ap-discussions-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ap-discussions","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-15T16:56:57Z
    generation: 1
    labels:
      name: ap-discussions-ingress
    name: ap-discussions-ingress
    namespace: pog-ap-dev
    resourceVersion: "52312080"
    selfLink: /apis/extensions/v1beta1/namespaces/pog-ap-dev/ingresses/ap-discussions-ingress
    uid: 5386d516-d09b-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: ap-discussions-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ap-discussions
            servicePort: 80
          path: /
    - host: ap-discussions-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ap-discussions
            servicePort: 80
          path: /
    - host: ap-discussions-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ap-discussions
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"notifications-ingress"},"name":"notifications-ingress","namespace":"pog-ap-dev"},"spec":{"rules":[{"host":"pogap-dev-notifications.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"notifications","servicePort":80},"path":"/"}]}},{"host":"pogap-dev-notifications.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"notifications","servicePort":80},"path":"/"}]}},{"host":"pogap-dev-notifications.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"notifications","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-18T14:43:41Z
    generation: 2
    labels:
      name: notifications-ingress
    name: notifications-ingress
    namespace: pog-ap-dev
    resourceVersion: "54772496"
    selfLink: /apis/extensions/v1beta1/namespaces/pog-ap-dev/ingresses/notifications-ingress
    uid: 34f5a8df-d2e4-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: pogap-dev-notifications.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: notifications
            servicePort: 80
          path: /
    - host: pogap-dev-notifications.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: notifications
            servicePort: 80
          path: /
    - host: pogap-dev-notifications.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: notifications
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"pog-ap-ingress"},"name":"pog-ap-ingress","namespace":"pog-ap-dev"},"spec":{"rules":[{"host":"pogap-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pog-ap-service","servicePort":8080},"path":"/"}]}},{"host":"pogap-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pog-ap-service","servicePort":8080},"path":"/"}]}},{"host":"pogap-dev.target.com","http":{"paths":[{"backend":{"serviceName":"pog-ap-service","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["pogap-dev.target.com"],"secretName":"vanitysecret"}]}}
    creationTimestamp: 2018-10-12T15:05:29Z
    generation: 2
    labels:
      name: pog-ap-ingress
    name: pog-ap-ingress
    namespace: pog-ap-dev
    resourceVersion: "54927967"
    selfLink: /apis/extensions/v1beta1/namespaces/pog-ap-dev/ingresses/pog-ap-ingress
    uid: 41fbd034-ce30-11e8-ad5b-5254008c264f
  spec:
    rules:
    - host: pogap-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pog-ap-service
            servicePort: 8080
          path: /
    - host: pogap-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pog-ap-service
            servicePort: 8080
          path: /
    - host: pogap-dev.target.com
      http:
        paths:
        - backend:
            serviceName: pog-ap-service
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - pogap-dev.target.com
      secretName: vanitysecret
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"size-tables-ingress"},"name":"size-tables-ingress","namespace":"pog-ap-dev"},"spec":{"rules":[{"host":"pogap-dev-size-tables.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"size-tables","servicePort":80},"path":"/"}]}},{"host":"pogap-dev-size-tables.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"size-tables","servicePort":80},"path":"/"}]}},{"host":"pogap-dev-size-tables.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"size-tables","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-15T16:34:49Z
    generation: 1
    labels:
      name: size-tables-ingress
    name: size-tables-ingress
    namespace: pog-ap-dev
    resourceVersion: "52298308"
    selfLink: /apis/extensions/v1beta1/namespaces/pog-ap-dev/ingresses/size-tables-ingress
    uid: 3bc140ec-d098-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: pogap-dev-size-tables.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: size-tables
            servicePort: 80
          path: /
    - host: pogap-dev-size-tables.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: size-tables
            servicePort: 80
          path: /
    - host: pogap-dev-size-tables.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: size-tables
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"view-service-ingress"},"name":"view-service-ingress","namespace":"pog-ap-dev"},"spec":{"rules":[{"host":"pogap-dev-views.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"view-service","servicePort":80},"path":"/"}]}},{"host":"pogap-dev-views.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"view-service","servicePort":80},"path":"/"}]}},{"host":"pogap-dev-views.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"view-service","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-18T14:06:00Z
    generation: 1
    labels:
      name: view-service-ingress
    name: view-service-ingress
    namespace: pog-ap-dev
    resourceVersion: "54679948"
    selfLink: /apis/extensions/v1beta1/namespaces/pog-ap-dev/ingresses/view-service-ingress
    uid: f1552923-d2de-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: pogap-dev-views.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: view-service
            servicePort: 80
          path: /
    - host: pogap-dev-views.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: view-service
            servicePort: 80
          path: /
    - host: pogap-dev-views.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: view-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"assortment-plans-ingress"},"name":"assortment-plans-ingress","namespace":"pog-ap-test"},"spec":{"rules":[{"host":"apexplatform-pre-dev-plans.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"assortment-plans","servicePort":80},"path":"/"}]}},{"host":"apexplatform-pre-dev-plans.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"assortment-plans","servicePort":80},"path":"/"}]}},{"host":"apexplatform-pre-dev-plans.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"assortment-plans","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-09-27T19:01:03Z
    generation: 7
    labels:
      name: assortment-plans-ingress
    name: assortment-plans-ingress
    namespace: pog-ap-test
    resourceVersion: "49225566"
    selfLink: /apis/extensions/v1beta1/namespaces/pog-ap-test/ingresses/assortment-plans-ingress
    uid: ae3ceb36-c287-11e8-9a78-525400d8fde0
  spec:
    rules:
    - host: apexplatform-pre-dev-plans.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: assortment-plans
            servicePort: 80
          path: /
    - host: apexplatform-pre-dev-plans.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: assortment-plans
            servicePort: 80
          path: /
    - host: apexplatform-pre-dev-plans.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: assortment-plans
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"events-ingress"},"name":"events-ingress","namespace":"pog-ap-test"},"spec":{"rules":[{"host":"apexplatform-pre-dev-events.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"events","servicePort":80},"path":"/"}]}},{"host":"apexplatform-pre-dev-events.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"events","servicePort":80},"path":"/"}]}},{"host":"apexplatform-pre-dev-events.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"events","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-02T19:11:45Z
    generation: 3
    labels:
      name: events-ingress
    name: events-ingress
    namespace: pog-ap-test
    resourceVersion: "49225636"
    selfLink: /apis/extensions/v1beta1/namespaces/pog-ap-test/ingresses/events-ingress
    uid: 00f66cd6-c677-11e8-8d90-525400b0e110
  spec:
    rules:
    - host: apexplatform-pre-dev-events.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: events
            servicePort: 80
          path: /
    - host: apexplatform-pre-dev-events.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: events
            servicePort: 80
          path: /
    - host: apexplatform-pre-dev-events.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: events
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"potential-items-ingress"},"name":"potential-items-ingress","namespace":"pog-ap-test"},"spec":{"rules":[{"host":"apexplatform-pre-dev-potential-items.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"potential-items","servicePort":80},"path":"/"}]}},{"host":"apexplatform-pre-dev-potential-items.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"potential-items","servicePort":80},"path":"/"}]}},{"host":"apexplatform-pre-dev-potential-items.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"potential-items","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-09-27T17:39:43Z
    generation: 5
    labels:
      name: potential-items-ingress
    name: potential-items-ingress
    namespace: pog-ap-test
    resourceVersion: "49225590"
    selfLink: /apis/extensions/v1beta1/namespaces/pog-ap-test/ingresses/potential-items-ingress
    uid: 51c8e934-c27c-11e8-981f-525400343c24
  spec:
    rules:
    - host: apexplatform-pre-dev-potential-items.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: potential-items
            servicePort: 80
          path: /
    - host: apexplatform-pre-dev-potential-items.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: potential-items
            servicePort: 80
          path: /
    - host: apexplatform-pre-dev-potential-items.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: potential-items
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"clair-ingress"},"name":"clair-ingress","namespace":"port-authority"},"spec":{"rules":[{"host":"port-authority-clair.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"clair-service","servicePort":6060},"path":"/"}]}}]}}
    creationTimestamp: 2018-11-30T02:20:12Z
    generation: 1
    labels:
      name: clair-ingress
    name: clair-ingress
    namespace: port-authority
    resourceVersion: "93089320"
    selfLink: /apis/extensions/v1beta1/namespaces/port-authority/ingresses/clair-ingress
    uid: 77784f2e-f446-11e8-981f-5254001f7df6
  spec:
    rules:
    - host: port-authority-clair.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: clair-service
            servicePort: 6060
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"port-authority-ingress"},"name":"port-authority-ingress","namespace":"port-authority"},"spec":{"rules":[{"host":"port-authority.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"port-authority-service","servicePort":6100},"path":"/"}]}},{"host":"port-authority.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"port-authority-service","servicePort":6100},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-31T09:40:47Z
    generation: 1
    labels:
      name: port-authority-ingress
    name: port-authority-ingress
    namespace: port-authority
    resourceVersion: "64968510"
    selfLink: /apis/extensions/v1beta1/namespaces/port-authority/ingresses/port-authority-ingress
    uid: 0b7a49ca-dcf1-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: port-authority.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: port-authority-service
            servicePort: 6100
          path: /
    - host: port-authority.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: port-authority-service
            servicePort: 6100
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/auth-realm: Authentication Required
      ingress.kubernetes.io/auth-secret: basic-auth
      ingress.kubernetes.io/auth-type: basic
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/auth-realm":"Authentication Required","ingress.kubernetes.io/auth-secret":"basic-auth","ingress.kubernetes.io/auth-type":"basic"},"name":"port-authority-ingress-auth","namespace":"port-authority"},"spec":{"rules":[{"host":"port-authority.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"port-authority-service","servicePort":6100},"path":"/v1/policies"}]}},{"host":"port-authority.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"port-authority-service","servicePort":6100},"path":"/v1/policies"}]}}]}}
    creationTimestamp: 2018-10-31T09:40:44Z
    generation: 1
    name: port-authority-ingress-auth
    namespace: port-authority
    resourceVersion: "64968511"
    selfLink: /apis/extensions/v1beta1/namespaces/port-authority/ingresses/port-authority-ingress-auth
    uid: 09f36051-dcf1-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: port-authority.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: port-authority-service
            servicePort: 6100
          path: /v1/policies
    - host: port-authority.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: port-authority-service
            servicePort: 6100
          path: /v1/policies
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"superset-ingress"},"name":"superset-ingress","namespace":"port-authority"},"spec":{"rules":[{"host":"port-authority-superset.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"superset-service","servicePort":8088},"path":"/"}]}}]}}
    creationTimestamp: 2019-01-10T16:11:23Z
    generation: 1
    labels:
      name: superset-ingress
    name: superset-ingress
    namespace: port-authority
    resourceVersion: "138308317"
    selfLink: /apis/extensions/v1beta1/namespaces/port-authority/ingresses/superset-ingress
    uid: 5fbb9083-14f2-11e9-aa7e-5254007ca0e4
  spec:
    rules:
    - host: port-authority-superset.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: superset-service
            servicePort: 8088
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"cm-cpm-esfs-consumer"},"name":"cm-cpm-esfs-consumer-ingress","namespace":"price-clearance-v1"},"spec":{"rules":[{"host":"price-clearance.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cm-cpm-esfs-consumer-service","servicePort":80},"path":"/clearance/esfs/"}]}},{"host":"price-clearance.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cm-cpm-esfs-consumer-service","servicePort":80},"path":"/clearance/esfs/"}]}}],"tls":[{"hosts":["price-clearance.ttc-test.k8s.target.com","price-clearance.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-03-14T09:31:36Z
    generation: 1
    labels:
      app: cm-cpm-esfs-consumer
    name: cm-cpm-esfs-consumer-ingress
    namespace: price-clearance-v1
    resourceVersion: "207997012"
    selfLink: /apis/extensions/v1beta1/namespaces/price-clearance-v1/ingresses/cm-cpm-esfs-consumer-ingress
    uid: f6c6e95f-463b-11e9-ab79-525400fe4551
  spec:
    rules:
    - host: price-clearance.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cm-cpm-esfs-consumer-service
            servicePort: 80
          path: /clearance/esfs/
    - host: price-clearance.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cm-cpm-esfs-consumer-service
            servicePort: 80
          path: /clearance/esfs/
    tls:
    - hosts:
      - price-clearance.ttc-test.k8s.target.com
      - price-clearance.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"cm-item-loc-demand-forecast-api-v1"},"name":"cm-item-loc-demand-forecast-api-v1-ingress","namespace":"price-ivy-clearance"},"spec":{"rules":[{"host":"ivy-clearance.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cm-item-loc-demand-forecast-api-v1-service","servicePort":80},"path":"/item_loc_demand_forecast/v1/"}]}}],"tls":[{"hosts":["ivy-clearance.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-21T19:37:16Z
    generation: 1
    labels:
      app: cm-item-loc-demand-forecast-api-v1
    name: cm-item-loc-demand-forecast-api-v1-ingress
    namespace: price-ivy-clearance
    resourceVersion: "185136210"
    selfLink: /apis/extensions/v1beta1/namespaces/price-ivy-clearance/ingresses/cm-item-loc-demand-forecast-api-v1-ingress
    uid: 1822b871-3610-11e9-a157-52540070e292
  spec:
    rules:
    - host: ivy-clearance.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cm-item-loc-demand-forecast-api-v1-service
            servicePort: 80
          path: /item_loc_demand_forecast/v1/
    tls:
    - hosts:
      - ivy-clearance.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"cm-ivy-actualized-sales-wrapper-api-v1"},"name":"cm-ivy-actualized-sales-wrapper-api-v1-ingress","namespace":"price-ivy-clearance"},"spec":{"rules":[{"host":"ivy-clearance.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cm-ivy-actualized-sales-wrapper-api-v1-service","servicePort":80},"path":"/cm_actualized_sales/v1/"}]}}],"tls":[{"hosts":["ivy-clearance.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-25T07:21:06Z
    generation: 1
    labels:
      app: cm-ivy-actualized-sales-wrapper-api-v1
    name: cm-ivy-actualized-sales-wrapper-api-v1-ingress
    namespace: price-ivy-clearance
    resourceVersion: "189302136"
    selfLink: /apis/extensions/v1beta1/namespaces/price-ivy-clearance/ingresses/cm-ivy-actualized-sales-wrapper-api-v1-ingress
    uid: ea4e2e33-38cd-11e9-a2e8-52540055f679
  spec:
    rules:
    - host: ivy-clearance.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cm-ivy-actualized-sales-wrapper-api-v1-service
            servicePort: 80
          path: /cm_actualized_sales/v1/
    tls:
    - hosts:
      - ivy-clearance.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"cm-ivy-forecast-orchestrator"},"name":"cm-ivy-forecast-orchestrator-ingress","namespace":"price-ivy-clearance"},"spec":{"rules":[{"host":"ivy-clearance.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cm-ivy-forecast-orchestrator-service","servicePort":80},"path":"/forecast_orchestrator/v1/refresh_forecasts"}]}}],"tls":[{"hosts":["ivy-clearance.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-22T08:46:29Z
    generation: 1
    labels:
      app: cm-ivy-forecast-orchestrator
    name: cm-ivy-forecast-orchestrator-ingress
    namespace: price-ivy-clearance
    resourceVersion: "185708082"
    selfLink: /apis/extensions/v1beta1/namespaces/price-ivy-clearance/ingresses/cm-ivy-forecast-orchestrator-ingress
    uid: 58fb9573-367e-11e9-a2e8-52540055f679
  spec:
    rules:
    - host: ivy-clearance.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cm-ivy-forecast-orchestrator-service
            servicePort: 80
          path: /forecast_orchestrator/v1/refresh_forecasts
    tls:
    - hosts:
      - ivy-clearance.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"cm-ivy-item-loc-pairing-api-v1"},"name":"cm-ivy-item-loc-pairing-api-v1-ingress","namespace":"price-ivy-clearance"},"spec":{"rules":[{"host":"ivy-clearance.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cm-ivy-item-loc-pairing-api-v1-service","servicePort":80},"path":"/markdown_item_loc/v1/pair"}]}},{"host":"ivy-clearance.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cm-ivy-item-loc-pairing-api-v1-service","servicePort":80},"path":"/markdown_item_loc/v1/paired_summary"}]}},{"host":"ivy-clearance.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cm-ivy-item-loc-pairing-api-v1-service","servicePort":80},"path":"/markdown_item_loc/v1/paired_summary"}]}},{"host":"ivy-clearance.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cm-ivy-item-loc-pairing-api-v1-service","servicePort":80},"path":"/markdown_item_loc/v1/excluded_summary"}]}},{"host":"ivy-clearance.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cm-ivy-item-loc-pairing-api-v1-service","servicePort":80},"path":"/markdown_item_loc/v1/excluded_summary"}]}}],"tls":[{"hosts":["ivy-clearance.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-22T05:39:47Z
    generation: 3
    labels:
      app: cm-ivy-item-loc-pairing-api-v1
    name: cm-ivy-item-loc-pairing-api-v1-ingress
    namespace: price-ivy-clearance
    resourceVersion: "185726690"
    selfLink: /apis/extensions/v1beta1/namespaces/price-ivy-clearance/ingresses/cm-ivy-item-loc-pairing-api-v1-ingress
    uid: 43e948f4-3664-11e9-bfe7-525400721049
  spec:
    rules:
    - host: ivy-clearance.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cm-ivy-item-loc-pairing-api-v1-service
            servicePort: 80
          path: /markdown_item_loc/v1/pair
    - host: ivy-clearance.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cm-ivy-item-loc-pairing-api-v1-service
            servicePort: 80
          path: /markdown_item_loc/v1/paired_summary
    - host: ivy-clearance.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cm-ivy-item-loc-pairing-api-v1-service
            servicePort: 80
          path: /markdown_item_loc/v1/paired_summary
    - host: ivy-clearance.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cm-ivy-item-loc-pairing-api-v1-service
            servicePort: 80
          path: /markdown_item_loc/v1/excluded_summary
    - host: ivy-clearance.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cm-ivy-item-loc-pairing-api-v1-service
            servicePort: 80
          path: /markdown_item_loc/v1/excluded_summary
    tls:
    - hosts:
      - ivy-clearance.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"cm-ivy-item-loc-relation-wrapper-api-v1"},"name":"cm-ivy-item-loc-relation-wrapper-api-v1-ingress","namespace":"price-ivy-clearance"},"spec":{"rules":[{"host":"ivy-clearance.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cm-ivy-item-loc-relation-wrapper-api-v1-service","servicePort":80},"path":"/markdown_itemloc_relation/v1"}]}},{"host":"ivy-clearance.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cm-ivy-item-loc-relation-wrapper-api-v1-service","servicePort":80},"path":"/markdown_itemloc_relation/v1/location_status"}]}}],"tls":[{"hosts":["ivy-clearance.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-26T03:09:15Z
    generation: 1
    labels:
      app: cm-ivy-item-loc-relation-wrapper-api-v1
    name: cm-ivy-item-loc-relation-wrapper-api-v1-ingress
    namespace: price-ivy-clearance
    resourceVersion: "190335703"
    selfLink: /apis/extensions/v1beta1/namespaces/price-ivy-clearance/ingresses/cm-ivy-item-loc-relation-wrapper-api-v1-ingress
    uid: e5e2d3ac-3973-11e9-a157-52540070e292
  spec:
    rules:
    - host: ivy-clearance.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cm-ivy-item-loc-relation-wrapper-api-v1-service
            servicePort: 80
          path: /markdown_itemloc_relation/v1
    - host: ivy-clearance.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cm-ivy-item-loc-relation-wrapper-api-v1-service
            servicePort: 80
          path: /markdown_itemloc_relation/v1/location_status
    tls:
    - hosts:
      - ivy-clearance.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"cm-program-api-v2"},"name":"cm-program-api-v2-ingress","namespace":"price-ivy-clearance"},"spec":{"rules":[{"host":"ivy-clearance.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cm-program-api-v2-service","servicePort":80},"path":"/markdown_programs/v1/header"}]}},{"host":"ivy-clearance.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cm-program-api-v2-service","servicePort":80},"path":"/markdown_programs/v1/profiles"}]}},{"host":"ivy-clearance.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cm-program-api-v2-service","servicePort":80},"path":"/markdown_programs/v1/programs"}]}},{"host":"ivy-clearance.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cm-program-api-v2-service","servicePort":80},"path":"/markdown_programs/v1/program/states"}]}},{"host":"ivy-clearance.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cm-program-api-v2-service","servicePort":80},"path":"/markdown_programs/v1/program/state_transition_rules"}]}},{"host":"ivy-clearance.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cm-program-api-v2-service","servicePort":80},"path":"/markdown_programs/v1/program/status"}]}},{"host":"ivy-clearance.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cm-program-api-v2-service","servicePort":80},"path":"/markdown_programs/v1/program_activation"}]}},{"host":"ivy-clearance.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cm-program-api-v2-service","servicePort":80},"path":"/markdown_programs/v1/program/task_states"}]}},{"host":"ivy-clearance.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cm-program-api-v2-service","servicePort":80},"path":"/markdown_programs/v1/program_item_hierarchy"}]}},{"host":"ivy-clearance.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cm-program-api-v2-service","servicePort":80},"path":"/markdown_programs/v1/program_legacy_headers"}]}},{"host":"ivy-clearance.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cm-program-api-v2-service","servicePort":80},"path":"/markdown_programs/v1/program_historical_profile"}]}}],"tls":[{"hosts":["ivy-clearance.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-16T04:14:43Z
    generation: 1
    labels:
      app: cm-program-api-v2
    name: cm-program-api-v2-ingress
    namespace: price-ivy-clearance
    resourceVersion: "179312856"
    selfLink: /apis/extensions/v1beta1/namespaces/price-ivy-clearance/ingresses/cm-program-api-v2-ingress
    uid: 633f1454-31a1-11e9-a2e8-52540055f679
  spec:
    rules:
    - host: ivy-clearance.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cm-program-api-v2-service
            servicePort: 80
          path: /markdown_programs/v1/header
    - host: ivy-clearance.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cm-program-api-v2-service
            servicePort: 80
          path: /markdown_programs/v1/profiles
    - host: ivy-clearance.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cm-program-api-v2-service
            servicePort: 80
          path: /markdown_programs/v1/programs
    - host: ivy-clearance.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cm-program-api-v2-service
            servicePort: 80
          path: /markdown_programs/v1/program/states
    - host: ivy-clearance.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cm-program-api-v2-service
            servicePort: 80
          path: /markdown_programs/v1/program/state_transition_rules
    - host: ivy-clearance.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cm-program-api-v2-service
            servicePort: 80
          path: /markdown_programs/v1/program/status
    - host: ivy-clearance.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cm-program-api-v2-service
            servicePort: 80
          path: /markdown_programs/v1/program_activation
    - host: ivy-clearance.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cm-program-api-v2-service
            servicePort: 80
          path: /markdown_programs/v1/program/task_states
    - host: ivy-clearance.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cm-program-api-v2-service
            servicePort: 80
          path: /markdown_programs/v1/program_item_hierarchy
    - host: ivy-clearance.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cm-program-api-v2-service
            servicePort: 80
          path: /markdown_programs/v1/program_legacy_headers
    - host: ivy-clearance.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cm-program-api-v2-service
            servicePort: 80
          path: /markdown_programs/v1/program_historical_profile
    tls:
    - hosts:
      - ivy-clearance.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"ivy-program-search"},"name":"ivy-program-search-ingress","namespace":"price-ivy-clearance"},"spec":{"rules":[{"host":"ivy-clearance.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ivy-program-search-service","servicePort":80},"path":"/markdown_programs/v1/program"}]}},{"host":"ivy-clearance.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ivy-program-search-service","servicePort":80},"path":"/markdown_programs/v1/search/export"}]}},{"host":"ivy-clearance.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ivy-program-search-service","servicePort":80},"path":"/markdown_programs/v1/statusfilter"}]}}],"tls":[{"hosts":["ivy-clearance.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-17T03:13:08Z
    generation: 1
    labels:
      app: ivy-program-search
    name: ivy-program-search-ingress
    namespace: price-ivy-clearance
    resourceVersion: "180288475"
    selfLink: /apis/extensions/v1beta1/namespaces/price-ivy-clearance/ingresses/ivy-program-search-ingress
    uid: f3742616-3261-11e9-bfe7-525400721049
  spec:
    rules:
    - host: ivy-clearance.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ivy-program-search-service
            servicePort: 80
          path: /markdown_programs/v1/program
    - host: ivy-clearance.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ivy-program-search-service
            servicePort: 80
          path: /markdown_programs/v1/search/export
    - host: ivy-clearance.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ivy-program-search-service
            servicePort: 80
          path: /markdown_programs/v1/statusfilter
    tls:
    - hosts:
      - ivy-clearance.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"flex-premium-services-ingress"},"name":"flex-premium-services-ingress","namespace":"price-mgmt"},"spec":{"rules":[{"host":"flex-premium-services-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"flex-premium-services","servicePort":80},"path":"/"}]}},{"host":"flex-premium-services-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"flex-premium-services","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["flex-premium-services-dev.test.k8s.target.com","flex-premium-services-dev.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-18T08:02:42Z
    generation: 2
    labels:
      name: flex-premium-services-ingress
    name: flex-premium-services-ingress
    namespace: price-mgmt
    resourceVersion: "212052503"
    selfLink: /apis/extensions/v1beta1/namespaces/price-mgmt/ingresses/flex-premium-services-ingress
    uid: 919050ff-3353-11e9-bfe7-525400721049
  spec:
    rules:
    - host: flex-premium-services-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: flex-premium-services
            servicePort: 80
          path: /
    - host: flex-premium-services-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: flex-premium-services
            servicePort: 80
          path: /
    tls:
    - hosts:
      - flex-premium-services-dev.test.k8s.target.com
      - flex-premium-services-dev.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"partner-services-api-ingress"},"name":"partner-services-api-ingress","namespace":"price-mgmt"},"spec":{"rules":[{"host":"price-partner-services-api.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"partner-services-api-service","servicePort":80},"path":"/"}]}},{"host":"price-partner-services-api.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"partner-services-api-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["price-partner-services-api.ttc-test.k8s.target.com","price-partner-services-api.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-07T06:59:04Z
    generation: 5
    labels:
      name: partner-services-api-ingress
    name: partner-services-api-ingress
    namespace: price-mgmt
    resourceVersion: "169959264"
    selfLink: /apis/extensions/v1beta1/namespaces/price-mgmt/ingresses/partner-services-api-ingress
    uid: dad52ab4-2aa5-11e9-a157-52540070e292
  spec:
    rules:
    - host: price-partner-services-api.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: partner-services-api-service
            servicePort: 80
          path: /
    - host: price-partner-services-api.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: partner-services-api-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - price-partner-services-api.ttc-test.k8s.target.com
      - price-partner-services-api.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/auth-realm: IvyPrice Authentication Required
      ingress.kubernetes.io/auth-secret: ivyprice-auth
      ingress.kubernetes.io/auth-type: basic
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/auth-realm":"IvyPrice Authentication Required","ingress.kubernetes.io/auth-secret":"ivyprice-auth","ingress.kubernetes.io/auth-type":"basic"},"labels":{"name":"price-metadata-api-ingress"},"name":"price-metadata-api-ingress","namespace":"price-mgmt"},"spec":{"rules":[{"host":"price-metadata-api.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"price-metadata-api-svc","servicePort":80},"path":"/"}]}},{"host":"price-metadata-api.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"price-metadata-api-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["price-metadata-api.ttc-test.k8s.target.com","price-metadata-api.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-03-13T11:34:34Z
    generation: 1
    labels:
      name: price-metadata-api-ingress
    name: price-metadata-api-ingress
    namespace: price-mgmt
    resourceVersion: "207084790"
    selfLink: /apis/extensions/v1beta1/namespaces/price-mgmt/ingresses/price-metadata-api-ingress
    uid: f9b5e51a-4583-11e9-9ed7-5254006b625b
  spec:
    rules:
    - host: price-metadata-api.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: price-metadata-api-svc
            servicePort: 80
          path: /
    - host: price-metadata-api.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: price-metadata-api-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - price-metadata-api.ttc-test.k8s.target.com
      - price-metadata-api.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"price-rounding-api-ingress"},"name":"price-rounding-api-ingress","namespace":"price-mgmt"},"spec":{"rules":[{"host":"price-rounding-api.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"price-rounding-api-service","servicePort":80},"path":"/"}]}},{"host":"price-rounding-api.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"price-rounding-api-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["price-rounding-api.ttc-test.k8s.target.com","price-rounding-api.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-18T12:39:32Z
    generation: 1
    labels:
      name: price-rounding-api-ingress
    name: price-rounding-api-ingress
    namespace: price-mgmt
    resourceVersion: "181705029"
    selfLink: /apis/extensions/v1beta1/namespaces/price-mgmt/ingresses/price-rounding-api-ingress
    uid: 3d8fd549-337a-11e9-a2e8-52540055f679
  spec:
    rules:
    - host: price-rounding-api.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: price-rounding-api-service
            servicePort: 80
          path: /
    - host: price-rounding-api.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: price-rounding-api-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - price-rounding-api.ttc-test.k8s.target.com
      - price-rounding-api.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/auth-realm: IvyPrice Authentication Required
      ingress.kubernetes.io/auth-secret: ivyprice-auth
      ingress.kubernetes.io/auth-type: basic
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/auth-realm":"IvyPrice Authentication Required","ingress.kubernetes.io/auth-secret":"ivyprice-auth","ingress.kubernetes.io/auth-type":"basic"},"labels":{"name":"price-strategy-ingress"},"name":"price-strategy-ingress","namespace":"price-mgmt"},"spec":{"rules":[{"host":"price-strategy-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"price-strategy-service","servicePort":80},"path":"/"}]}},{"host":"price-strategy-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"price-strategy-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["price-strategy-dev.ttc-test.k8s.target.com","price-strategy-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-18T06:09:31Z
    generation: 1
    labels:
      name: price-strategy-ingress
    name: price-strategy-ingress
    namespace: price-mgmt
    resourceVersion: "181423319"
    selfLink: /apis/extensions/v1beta1/namespaces/price-mgmt/ingresses/price-strategy-ingress
    uid: c14ebb93-3343-11e9-a157-52540070e292
  spec:
    rules:
    - host: price-strategy-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: price-strategy-service
            servicePort: 80
          path: /
    - host: price-strategy-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: price-strategy-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - price-strategy-dev.ttc-test.k8s.target.com
      - price-strategy-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"price-thresholds-api-ingress"},"name":"price-thresholds-api-ingress","namespace":"price-mgmt"},"spec":{"rules":[{"host":"price-thresholds-api.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"price-thresholds-api-service","servicePort":80},"path":"/"}]}},{"host":"price-thresholds-api.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"price-thresholds-api-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["price-thresholds-api.ttc-test.k8s.target.com","price-thresholds-api.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-03-18T10:47:16Z
    generation: 1
    labels:
      name: price-thresholds-api-ingress
    name: price-thresholds-api-ingress
    namespace: price-mgmt
    resourceVersion: "212026775"
    selfLink: /apis/extensions/v1beta1/namespaces/price-mgmt/ingresses/price-thresholds-api-ingress
    uid: 32042ab3-496b-11e9-8b8c-525400102fac
  spec:
    rules:
    - host: price-thresholds-api.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: price-thresholds-api-service
            servicePort: 80
          path: /
    - host: price-thresholds-api.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: price-thresholds-api-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - price-thresholds-api.ttc-test.k8s.target.com
      - price-thresholds-api.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/auth-realm: IvyPrice Authentication Required
      ingress.kubernetes.io/auth-secret: ivyprice-auth
      ingress.kubernetes.io/auth-type: basic
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"ingress.kubernetes.io/auth-realm":"IvyPrice Authentication Required","ingress.kubernetes.io/auth-secret":"ivyprice-auth","ingress.kubernetes.io/auth-type":"basic"},"labels":{"name":"rules-api-ingress"},"name":"rules-api-ingress","namespace":"price-mgmt"},"spec":{"rules":[{"host":"rules-api-dev.us-central-1.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"rules-api-service","servicePort":80},"path":"/"}]}},{"host":"rules-api-dev.us-central-1ttc.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"rules-api-service","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-03-13T08:47:47Z
    generation: 1
    labels:
      name: rules-api-ingress
    name: rules-api-ingress
    namespace: price-mgmt
    resourceVersion: "206970766"
    selfLink: /apis/extensions/v1beta1/namespaces/price-mgmt/ingresses/rules-api-ingress
    uid: ad45ee96-456c-11e9-ab79-525400fe4551
  spec:
    rules:
    - host: rules-api-dev.us-central-1.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: rules-api-service
            servicePort: 80
          path: /
    - host: rules-api-dev.us-central-1ttc.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: rules-api-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"records-app","name":"records-ingress"},"name":"records-ingress","namespace":"records-dev"},"spec":{"rules":[{"host":"records-t.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"records-service","servicePort":7777},"path":"/"}]}},{"host":"records-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"records-service","servicePort":7777},"path":"/"}]}},{"host":"recordsv1-t.target.com","http":{"paths":[{"backend":{"serviceName":"records-service","servicePort":7777},"path":"/"}]}}],"tls":[{"hosts":["records-t.ttc-test.k8s.target.com","records-t.test.k8s.target.com","recordsv1-t.target.com"],"secretName":"vanitysecret-recordsv1-t"}]}}
    creationTimestamp: 2018-10-31T20:29:41Z
    generation: 4
    labels:
      app: records-app
      name: records-ingress
    name: records-ingress
    namespace: records-dev
    resourceVersion: "167662688"
    selfLink: /apis/extensions/v1beta1/namespaces/records-dev/ingresses/records-ingress
    uid: b2188919-dd4b-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: records-t.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: records-service
            servicePort: 7777
          path: /
    - host: records-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: records-service
            servicePort: 7777
          path: /
    - host: recordsv1-t.target.com
      http:
        paths:
        - backend:
            serviceName: records-service
            servicePort: 7777
          path: /
    tls:
    - hosts:
      - records-t.ttc-test.k8s.target.com
      - records-t.test.k8s.target.com
      - recordsv1-t.target.com
      secretName: vanitysecret-recordsv1-t
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"rno-api-authorization-app","name":"rno-api-authorization-ingress"},"name":"rno-api-authorization-ingress","namespace":"records-dev"},"spec":{"rules":[{"host":"rno-api-authorization-t.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-api-authorization-service","servicePort":5050},"path":"/"}]}},{"host":"rno-api-authorization-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-api-authorization-service","servicePort":5050},"path":"/"}]}}],"tls":[{"hosts":["rno-api-authorization-t.ttc-test.k8s.target.com","rno-api-authorization-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-10T16:27:13Z
    generation: 1
    labels:
      app: rno-api-authorization-app
      name: rno-api-authorization-ingress
    name: rno-api-authorization-ingress
    namespace: records-dev
    resourceVersion: "49225595"
    selfLink: /apis/extensions/v1beta1/namespaces/records-dev/ingresses/rno-api-authorization-ingress
    uid: 583fb8e0-cca9-11e8-ad5b-5254008c264f
  spec:
    rules:
    - host: rno-api-authorization-t.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-api-authorization-service
            servicePort: 5050
          path: /
    - host: rno-api-authorization-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-api-authorization-service
            servicePort: 5050
          path: /
    tls:
    - hosts:
      - rno-api-authorization-t.ttc-test.k8s.target.com
      - rno-api-authorization-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"rno-api-configuration-app","name":"rno-api-configuration-ingress"},"name":"rno-api-configuration-ingress","namespace":"records-dev"},"spec":{"rules":[{"host":"rno-api-configuration-t.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-api-configuration-service","servicePort":5050},"path":"/"}]}},{"host":"rno-api-configuration-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-api-configuration-service","servicePort":5050},"path":"/"}]}}],"tls":[{"hosts":["rno-api-configuration-t.ttc-test.k8s.target.com","rno-api-configuration-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-28T19:03:55Z
    generation: 1
    labels:
      app: rno-api-configuration-app
      name: rno-api-configuration-ingress
    name: rno-api-configuration-ingress
    namespace: records-dev
    resourceVersion: "158248833"
    selfLink: /apis/extensions/v1beta1/namespaces/records-dev/ingresses/rno-api-configuration-ingress
    uid: 757a3b9c-232f-11e9-a8bb-5254005a994c
  spec:
    rules:
    - host: rno-api-configuration-t.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-api-configuration-service
            servicePort: 5050
          path: /
    - host: rno-api-configuration-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-api-configuration-service
            servicePort: 5050
          path: /
    tls:
    - hosts:
      - rno-api-configuration-t.ttc-test.k8s.target.com
      - rno-api-configuration-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"rno-api-file-app","name":"rno-api-file-ingress"},"name":"rno-api-file-ingress","namespace":"records-dev"},"spec":{"rules":[{"host":"rno-api-file-t.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-api-file-service","servicePort":5050},"path":"/"}]}},{"host":"rno-api-file-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-api-file-service","servicePort":5050},"path":"/"}]}}],"tls":[{"hosts":["rno-api-file-t.ttc-test.k8s.target.com","rno-api-file-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-14T18:34:41Z
    generation: 1
    labels:
      app: rno-api-file-app
      name: rno-api-file-ingress
    name: rno-api-file-ingress
    namespace: records-dev
    resourceVersion: "49225625"
    selfLink: /apis/extensions/v1beta1/namespaces/records-dev/ingresses/rno-api-file-ingress
    uid: d7ba4852-b84c-11e8-8488-525400b06b0f
  spec:
    rules:
    - host: rno-api-file-t.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-api-file-service
            servicePort: 5050
          path: /
    - host: rno-api-file-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-api-file-service
            servicePort: 5050
          path: /
    tls:
    - hosts:
      - rno-api-file-t.ttc-test.k8s.target.com
      - rno-api-file-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"rno-api-indices-app","name":"rno-api-indices-ingress"},"name":"rno-api-indices-ingress","namespace":"records-dev"},"spec":{"rules":[{"host":"rno-api-indices-t.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-api-indices-service","servicePort":5050},"path":"/"}]}},{"host":"rno-api-indices-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-api-indices-service","servicePort":5050},"path":"/"}]}}],"tls":[{"hosts":["rno-api-indices-t.ttc-test.k8s.target.com","rno-api-indices-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-14T18:35:04Z
    generation: 1
    labels:
      app: rno-api-indices-app
      name: rno-api-indices-ingress
    name: rno-api-indices-ingress
    namespace: records-dev
    resourceVersion: "49225811"
    selfLink: /apis/extensions/v1beta1/namespaces/records-dev/ingresses/rno-api-indices-ingress
    uid: e5e07f96-b84c-11e8-a71c-525400524761
  spec:
    rules:
    - host: rno-api-indices-t.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-api-indices-service
            servicePort: 5050
          path: /
    - host: rno-api-indices-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-api-indices-service
            servicePort: 5050
          path: /
    tls:
    - hosts:
      - rno-api-indices-t.ttc-test.k8s.target.com
      - rno-api-indices-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"rno-api-objects-app","name":"rno-api-objects-ingress"},"name":"rno-api-objects-ingress","namespace":"records-dev"},"spec":{"rules":[{"host":"rno-api-objects-t.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-api-objects-service","servicePort":5050},"path":"/"}]}},{"host":"rno-api-objects-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-api-objects-service","servicePort":5050},"path":"/"}]}}],"tls":[{"hosts":["rno-api-objects-t.ttc-test.k8s.target.com","rno-api-objects-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-14T18:40:36Z
    generation: 1
    labels:
      app: rno-api-objects-app
      name: rno-api-objects-ingress
    name: rno-api-objects-ingress
    namespace: records-dev
    resourceVersion: "49225905"
    selfLink: /apis/extensions/v1beta1/namespaces/records-dev/ingresses/rno-api-objects-ingress
    uid: abae38f3-b84d-11e8-8462-525400b93a8e
  spec:
    rules:
    - host: rno-api-objects-t.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-api-objects-service
            servicePort: 5050
          path: /
    - host: rno-api-objects-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-api-objects-service
            servicePort: 5050
          path: /
    tls:
    - hosts:
      - rno-api-objects-t.ttc-test.k8s.target.com
      - rno-api-objects-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"rno-api-validation-app","name":"rno-api-validation-ingress"},"name":"rno-api-validation-ingress","namespace":"records-dev"},"spec":{"rules":[{"host":"rno-api-validation-t.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-api-validation-service","servicePort":5050},"path":"/"}]}},{"host":"rno-api-validation-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-api-validation-service","servicePort":5050},"path":"/"}]}}],"tls":[{"hosts":["rno-api-validation-t.ttc-test.k8s.target.com","rno-api-validation-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-25T17:49:41Z
    generation: 1
    labels:
      app: rno-api-validation-app
      name: rno-api-validation-ingress
    name: rno-api-validation-ingress
    namespace: records-dev
    resourceVersion: "60146287"
    selfLink: /apis/extensions/v1beta1/namespaces/records-dev/ingresses/rno-api-validation-ingress
    uid: 59553c15-d87e-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: rno-api-validation-t.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-api-validation-service
            servicePort: 5050
          path: /
    - host: rno-api-validation-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-api-validation-service
            servicePort: 5050
          path: /
    tls:
    - hosts:
      - rno-api-validation-t.ttc-test.k8s.target.com
      - rno-api-validation-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"rno-client-app","name":"rno-client-ingress"},"name":"rno-client-ingress","namespace":"records-dev"},"spec":{"rules":[{"host":"rhino-t.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-client-service","servicePort":5050},"path":"/"}]}},{"host":"rhino-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-client-service","servicePort":5050},"path":"/"}]}},{"host":"rhino-t.target.com","http":{"paths":[{"backend":{"serviceName":"rno-client-service","servicePort":5050},"path":"/"}]}}],"tls":[{"hosts":["rhino-t.ttc-test.k8s.target.com","rhino-t.test.k8s.target.com","rhino-t.target.com"],"secretName":"vanitysecret-rhino-t"}]}}
    creationTimestamp: 2019-03-19T17:42:50Z
    generation: 1
    labels:
      app: rno-client-app
      name: rno-client-ingress
    name: rno-client-ingress
    namespace: records-dev
    resourceVersion: "213337279"
    selfLink: /apis/extensions/v1beta1/namespaces/records-dev/ingresses/rno-client-ingress
    uid: 6aa0d538-4a6e-11e9-86b4-525400993427
  spec:
    rules:
    - host: rhino-t.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-client-service
            servicePort: 5050
          path: /
    - host: rhino-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-client-service
            servicePort: 5050
          path: /
    - host: rhino-t.target.com
      http:
        paths:
        - backend:
            serviceName: rno-client-service
            servicePort: 5050
          path: /
    tls:
    - hosts:
      - rhino-t.ttc-test.k8s.target.com
      - rhino-t.test.k8s.target.com
      - rhino-t.target.com
      secretName: vanitysecret-rhino-t
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"rno-svc-keres-app","name":"rno-svc-keres-ingress"},"name":"rno-svc-keres-ingress","namespace":"records-dev"},"spec":{"rules":[{"host":"rno-svc-keres-t.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-svc-keres-service","servicePort":5050},"path":"/"}]}},{"host":"rno-svc-keres-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-svc-keres-service","servicePort":5050},"path":"/"}]}}],"tls":[{"hosts":["rno-svc-keres-t.ttc-test.k8s.target.com","rno-svc-keres-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-11T17:17:35Z
    generation: 1
    labels:
      app: rno-svc-keres-app
      name: rno-svc-keres-ingress
    name: rno-svc-keres-ingress
    namespace: records-dev
    resourceVersion: "139593806"
    selfLink: /apis/extensions/v1beta1/namespaces/records-dev/ingresses/rno-svc-keres-ingress
    uid: c9afc548-15c4-11e9-bdc1-525400cfa7b2
  spec:
    rules:
    - host: rno-svc-keres-t.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-svc-keres-service
            servicePort: 5050
          path: /
    - host: rno-svc-keres-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-svc-keres-service
            servicePort: 5050
          path: /
    tls:
    - hosts:
      - rno-svc-keres-t.ttc-test.k8s.target.com
      - rno-svc-keres-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"rno-svc-provision-app","name":"rno-svc-provision-ingress"},"name":"rno-svc-provision-ingress","namespace":"records-dev"},"spec":{"rules":[{"host":"rno-svc-provision-t.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-svc-provision-service","servicePort":5050},"path":"/"}]}},{"host":"rno-svc-provision-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-svc-provision-service","servicePort":5050},"path":"/"}]}}],"tls":[{"hosts":["rno-svc-provision-t.ttc-test.k8s.target.com","rno-svc-provision-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-07T17:19:15Z
    generation: 1
    labels:
      app: rno-svc-provision-app
      name: rno-svc-provision-ingress
    name: rno-svc-provision-ingress
    namespace: records-dev
    resourceVersion: "71165737"
    selfLink: /apis/extensions/v1beta1/namespaces/records-dev/ingresses/rno-svc-provision-ingress
    uid: 40947825-e2b1-11e8-80ff-5254001f7df6
  spec:
    rules:
    - host: rno-svc-provision-t.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-svc-provision-service
            servicePort: 5050
          path: /
    - host: rno-svc-provision-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-svc-provision-service
            servicePort: 5050
          path: /
    tls:
    - hosts:
      - rno-svc-provision-t.ttc-test.k8s.target.com
      - rno-svc-provision-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"rno-svc-query-app","name":"rno-svc-query-ingress"},"name":"rno-svc-query-ingress","namespace":"records-dev"},"spec":{"rules":[{"host":"rno-svc-query-t.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-svc-query-service","servicePort":5050},"path":"/"}]}},{"host":"rno-svc-query-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-svc-query-service","servicePort":5050},"path":"/"}]}}],"tls":[{"hosts":["rno-svc-query-t.ttc-test.k8s.target.com","rno-svc-query-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-05T20:41:56Z
    generation: 1
    labels:
      app: rno-svc-query-app
      name: rno-svc-query-ingress
    name: rno-svc-query-ingress
    namespace: records-dev
    resourceVersion: "167948380"
    selfLink: /apis/extensions/v1beta1/namespaces/records-dev/ingresses/rno-svc-query-ingress
    uid: 7a31f62a-2986-11e9-8b44-5254006cd09e
  spec:
    rules:
    - host: rno-svc-query-t.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-svc-query-service
            servicePort: 5050
          path: /
    - host: rno-svc-query-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-svc-query-service
            servicePort: 5050
          path: /
    tls:
    - hosts:
      - rno-svc-query-t.ttc-test.k8s.target.com
      - rno-svc-query-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"rno-svc-reaper-app","name":"rno-svc-reaper-ingress"},"name":"rno-svc-reaper-ingress","namespace":"records-dev"},"spec":{"rules":[{"host":"rno-svc-reaper-t.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-svc-reaper-service","servicePort":5050},"path":"/"}]}},{"host":"rno-svc-reaper-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-svc-reaper-service","servicePort":5050},"path":"/"}]}}],"tls":[{"hosts":["rno-svc-reaper-t.ttc-test.k8s.target.com","rno-svc-reaper-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-09T14:55:33Z
    generation: 1
    labels:
      app: rno-svc-reaper-app
      name: rno-svc-reaper-ingress
    name: rno-svc-reaper-ingress
    namespace: records-dev
    resourceVersion: "137284758"
    selfLink: /apis/extensions/v1beta1/namespaces/records-dev/ingresses/rno-svc-reaper-ingress
    uid: 9d7435c1-141e-11e9-aa7e-5254007ca0e4
  spec:
    rules:
    - host: rno-svc-reaper-t.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-svc-reaper-service
            servicePort: 5050
          path: /
    - host: rno-svc-reaper-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-svc-reaper-service
            servicePort: 5050
          path: /
    tls:
    - hosts:
      - rno-svc-reaper-t.ttc-test.k8s.target.com
      - rno-svc-reaper-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"rno-svc-reporting-app","name":"rno-svc-reporting-ingress"},"name":"rno-svc-reporting-ingress","namespace":"records-dev"},"spec":{"rules":[{"host":"rno-svc-reporting-t.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-svc-reporting-service","servicePort":5050},"path":"/"}]}},{"host":"rno-svc-reporting-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-svc-reporting-service","servicePort":5050},"path":"/"}]}}],"tls":[{"hosts":["rno-svc-reporting-t.ttc-test.k8s.target.com","rno-svc-reporting-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-03T16:39:04Z
    generation: 1
    labels:
      app: rno-svc-reporting-app
      name: rno-svc-reporting-ingress
    name: rno-svc-reporting-ingress
    namespace: records-dev
    resourceVersion: "49225426"
    selfLink: /apis/extensions/v1beta1/namespaces/records-dev/ingresses/rno-svc-reporting-ingress
    uid: d71f722e-c72a-11e8-8d90-525400b0e110
  spec:
    rules:
    - host: rno-svc-reporting-t.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-svc-reporting-service
            servicePort: 5050
          path: /
    - host: rno-svc-reporting-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-svc-reporting-service
            servicePort: 5050
          path: /
    tls:
    - hosts:
      - rno-svc-reporting-t.ttc-test.k8s.target.com
      - rno-svc-reporting-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"records-app","name":"records-ingress"},"name":"records-ingress","namespace":"records-stage"},"spec":{"rules":[{"host":"records.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"records-service","servicePort":7777},"path":"/"}]}},{"host":"records.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"records-service","servicePort":7777},"path":"/"}]}},{"host":"recordsv1-s.target.com","http":{"paths":[{"backend":{"serviceName":"records-service","servicePort":7777},"path":"/"}]}}],"tls":[{"hosts":["records.ttc-test.k8s.target.com","records.test.k8s.target.com","recordsv1-s.target.com"],"secretName":"vanitysecret-recordsv1-s"}]}}
    creationTimestamp: 2018-09-17T18:47:24Z
    generation: 3
    labels:
      app: records-app
      name: records-ingress
    name: records-ingress
    namespace: records-stage
    resourceVersion: "167634191"
    selfLink: /apis/extensions/v1beta1/namespaces/records-stage/ingresses/records-ingress
    uid: 1e2d643a-baaa-11e8-8488-525400b06b0f
  spec:
    rules:
    - host: records.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: records-service
            servicePort: 7777
          path: /
    - host: records.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: records-service
            servicePort: 7777
          path: /
    - host: recordsv1-s.target.com
      http:
        paths:
        - backend:
            serviceName: records-service
            servicePort: 7777
          path: /
    tls:
    - hosts:
      - records.ttc-test.k8s.target.com
      - records.test.k8s.target.com
      - recordsv1-s.target.com
      secretName: vanitysecret-recordsv1-s
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"rno-client-app","name":"rno-client-ingress"},"name":"rno-client-ingress","namespace":"records-stage"},"spec":{"rules":[{"host":"rhino.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-client-service","servicePort":5050},"path":"/"}]}},{"host":"rhino.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-client-service","servicePort":5050},"path":"/"}]}},{"host":"rhino-s.target.com","http":{"paths":[{"backend":{"serviceName":"rno-client-service","servicePort":5050},"path":"/"}]}}],"tls":[{"hosts":["rhino.ttc-test.k8s.target.com","rhino.test.k8s.target.com","rhino-s.target.com"],"secretName":"vanitysecret-rhino-s"}]}}
    creationTimestamp: 2019-03-19T19:40:18Z
    generation: 1
    labels:
      app: rno-client-app
      name: rno-client-ingress
    name: rno-client-ingress
    namespace: records-stage
    resourceVersion: "213422739"
    selfLink: /apis/extensions/v1beta1/namespaces/records-stage/ingresses/rno-client-ingress
    uid: d3463f41-4a7e-11e9-94ec-5254002283d6
  spec:
    rules:
    - host: rhino.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-client-service
            servicePort: 5050
          path: /
    - host: rhino.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-client-service
            servicePort: 5050
          path: /
    - host: rhino-s.target.com
      http:
        paths:
        - backend:
            serviceName: rno-client-service
            servicePort: 5050
          path: /
    tls:
    - hosts:
      - rhino.ttc-test.k8s.target.com
      - rhino.test.k8s.target.com
      - rhino-s.target.com
      secretName: vanitysecret-rhino-s
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-23T16:35:34Z
    generation: 1
    labels:
      app: product-identifier-lookup-producer
      chart: redsky-1.1.0
    name: product-identifier-lookup-producer
    namespace: redsky
    resourceVersion: "172687259"
    selfLink: /apis/extensions/v1beta1/namespaces/redsky/ingresses/product-identifier-lookup-producer
    uid: a9f5075e-d6e1-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: redsky-product-identifier-lookup-producer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: product-identifier-lookup-producer-service
            servicePort: 80
          path: /
    - host: redsky-product-identifier-lookup-producer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: product-identifier-lookup-producer-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - redsky-product-identifier-lookup-producer.ttc-test.k8s.target.com
      - redsky-product-identifier-lookup-producer.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-19T18:27:35Z
    generation: 1
    labels:
      app: redsky-items-stream-processor
      chart: redsky-1.1.0
    name: redsky-items-stream-processor
    namespace: redsky
    resourceVersion: "182504923"
    selfLink: /apis/extensions/v1beta1/namespaces/redsky/ingresses/redsky-items-stream-processor
    uid: a6a8a837-d3cc-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: redsky-redsky-items-stream-processor.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: redsky-items-stream-processor-service
            servicePort: 80
          path: /
    - host: redsky-redsky-items-stream-processor.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: redsky-items-stream-processor-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - redsky-redsky-items-stream-processor.ttc-test.k8s.target.com
      - redsky-redsky-items-stream-processor.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-02-11T14:46:42Z
    generation: 1
    labels:
      app: request-tm-consumer
      chart: redsky-1.1.0
    name: request-tm-consumer
    namespace: redsky
    resourceVersion: "174457051"
    selfLink: /apis/extensions/v1beta1/namespaces/redsky/ingresses/request-tm-consumer
    uid: d8b0e852-2e0b-11e9-a2e8-52540055f679
  spec:
    rules:
    - host: redsky-request-tm-consumer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: request-tm-consumer-service
            servicePort: 80
          path: /
    - host: redsky-request-tm-consumer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: request-tm-consumer-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - redsky-request-tm-consumer.ttc-test.k8s.target.com
      - redsky-request-tm-consumer.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-02-04T15:56:39Z
    generation: 1
    labels:
      app: request-tm-services
      chart: ratpack-1.1.0
    name: request-tm-services
    namespace: redsky
    resourceVersion: "166415146"
    selfLink: /apis/extensions/v1beta1/namespaces/redsky/ingresses/request-tm-services
    uid: 7586e4a2-2895-11e9-a621-525400d4de49
  spec:
    rules:
    - host: redsky-request-tm-services.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: request-tm-services-service
            servicePort: 80
          path: /
    - host: redsky-request-tm-services.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: request-tm-services-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - redsky-request-tm-services.ttc-test.k8s.target.com
      - redsky-request-tm-services.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-22T20:23:42Z
    generation: 1
    labels:
      app: sdp-hollow-producer
      chart: redsky-1.1.0
    name: sdp-hollow-producer
    namespace: redsky
    resourceVersion: "171989638"
    selfLink: /apis/extensions/v1beta1/namespaces/redsky/ingresses/sdp-hollow-producer
    uid: 5e73e2b2-d638-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: redsky-sdp-hollow-producer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: sdp-hollow-producer-service
            servicePort: 80
          path: /
    - host: redsky-sdp-hollow-producer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: sdp-hollow-producer-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - redsky-sdp-hollow-producer.ttc-test.k8s.target.com
      - redsky-sdp-hollow-producer.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-08-22T01:34:15Z
    generation: 2
    labels:
      app: ship-aggregator-api
      chart: ratpack-1.1.0
    name: ship-aggregator-api
    namespace: redsky
    resourceVersion: "49225397"
    selfLink: /apis/extensions/v1beta1/namespaces/redsky/ingresses/ship-aggregator-api
    uid: 7b17ee09-a5ab-11e8-bd18-525400524761
  spec:
    rules:
    - host: redsky-ship-aggregator-api.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ship-aggregator-api
            servicePort: 80
          path: /
    - host: redsky-ship-aggregator-api.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ship-aggregator-api
            servicePort: 80
          path: /
    tls:
    - hosts:
      - redsky-ship-aggregator-api.ttc-test.k8s.target.com
      - redsky-ship-aggregator-api.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-22T18:13:35Z
    generation: 1
    labels:
      app: zip-hollow-producer
      chart: redsky-1.1.0
    name: zip-hollow-producer
    namespace: redsky
    resourceVersion: "171663441"
    selfLink: /apis/extensions/v1beta1/namespaces/redsky/ingresses/zip-hollow-producer
    uid: 30db80c1-d626-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: redsky-zip-hollow-producer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: zip-hollow-producer-service
            servicePort: 80
          path: /
    - host: redsky-zip-hollow-producer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: zip-hollow-producer-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - redsky-zip-hollow-producer.ttc-test.k8s.target.com
      - redsky-zip-hollow-producer.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"run":"inr-distribution-v2"},"name":"inr-distribution-v2","namespace":"ree-test-env"},"spec":{"rules":[{"host":"ree-test-env-inr-distribution-v2.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"inr-distribution-v2","servicePort":80},"path":"/"}]}},{"host":"ree-test-env-inr-distribution-v2.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"inr-distribution-v2","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-09T15:50:52Z
    generation: 1
    labels:
      run: inr-distribution-v2
    name: inr-distribution-v2
    namespace: ree-test-env
    resourceVersion: "49225795"
    selfLink: /apis/extensions/v1beta1/namespaces/ree-test-env/ingresses/inr-distribution-v2
    uid: 19ee65d2-cbdb-11e8-9369-525400a3d3a1
  spec:
    rules:
    - host: ree-test-env-inr-distribution-v2.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: inr-distribution-v2
            servicePort: 80
          path: /
    - host: ree-test-env-inr-distribution-v2.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: inr-distribution-v2
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"retention-policies-app","name":"retention-policies-ingress"},"name":"retention-policies-ingress","namespace":"retention-dev"},"spec":{"rules":[{"host":"retention-policies-t.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"retention-policies-service","servicePort":7777},"path":"/"}]}},{"host":"retention-policies-t.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"retention-policies-service","servicePort":7777},"path":"/"}]}}],"tls":[{"hosts":["retention-policies-t.ttc-test.k8s.target.com","retention-policies-t.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-18T19:02:27Z
    generation: 1
    labels:
      app: retention-policies-app
      name: retention-policies-ingress
    name: retention-policies-ingress
    namespace: retention-dev
    resourceVersion: "49225470"
    selfLink: /apis/extensions/v1beta1/namespaces/retention-dev/ingresses/retention-policies-ingress
    uid: 62c22071-bb75-11e8-8462-525400b93a8e
  spec:
    rules:
    - host: retention-policies-t.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: retention-policies-service
            servicePort: 7777
          path: /
    - host: retention-policies-t.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: retention-policies-service
            servicePort: 7777
          path: /
    tls:
    - hosts:
      - retention-policies-t.ttc-test.k8s.target.com
      - retention-policies-t.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"retention-policies-app","name":"retention-policies-ingress"},"name":"retention-policies-ingress","namespace":"retention-stage"},"spec":{"rules":[{"host":"retention-policies-s.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"retention-policies-service","servicePort":7777},"path":"/"}]}},{"host":"retention-policies-s.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"retention-policies-service","servicePort":7777},"path":"/"}]}}],"tls":[{"hosts":["retention-policies-s.ttc-test.k8s.target.com","retention-policies-s.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-18T19:10:16Z
    generation: 1
    labels:
      app: retention-policies-app
      name: retention-policies-ingress
    name: retention-policies-ingress
    namespace: retention-stage
    resourceVersion: "49225690"
    selfLink: /apis/extensions/v1beta1/namespaces/retention-stage/ingresses/retention-policies-ingress
    uid: 7a38ae4a-bb76-11e8-8488-525400b06b0f
  spec:
    rules:
    - host: retention-policies-s.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: retention-policies-service
            servicePort: 7777
          path: /
    - host: retention-policies-s.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: retention-policies-service
            servicePort: 7777
          path: /
    tls:
    - hosts:
      - retention-policies-s.ttc-test.k8s.target.com
      - retention-policies-s.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"inventory-analysis-ingress","namespace":"rfid-test"},"spec":{"rules":[{"host":"inventory-analysis.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"inventory-analysis-grafana","servicePort":80},"path":"/"}]}},{"host":"inventory-line-of-sight.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"inventory-analysis-grafana","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-27T03:03:06Z
    generation: 5
    name: inventory-analysis-ingress
    namespace: rfid-test
    resourceVersion: "205405544"
    selfLink: /apis/extensions/v1beta1/namespaces/rfid-test/ingresses/inventory-analysis-ingress
    uid: 349b9137-3a3c-11e9-a157-52540070e292
  spec:
    rules:
    - host: inventory-analysis.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: inventory-analysis-grafana
            servicePort: 80
          path: /
    - host: inventory-line-of-sight.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: inventory-analysis-grafana
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"scmdpackrounder-prep-ingress-stage-ttc"},"name":"scmdpackrounder-prep-ingress-stage-ttc","namespace":"scmd-ent"},"spec":{"rules":[{"host":"scmdpackrounder-prep.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"scmdpackrounder-prep-service-stage","servicePort":80},"path":"/"}]}},{"host":"scmdpackrounder-prep.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"scmdpackrounder-prep-service-stage","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["scmdpackrounder-prep.ttc-test.k8s.target.com","scmdpackrounder-prep.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-05T09:26:30Z
    generation: 1
    labels:
      name: scmdpackrounder-prep-ingress-stage-ttc
    name: scmdpackrounder-prep-ingress-stage-ttc
    namespace: scmd-ent
    resourceVersion: "49225979"
    selfLink: /apis/extensions/v1beta1/namespaces/scmd-ent/ingresses/scmdpackrounder-prep-ingress-stage-ttc
    uid: c5ecfc0b-b0ed-11e8-84e0-525400b06b0f
  spec:
    rules:
    - host: scmdpackrounder-prep.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: scmdpackrounder-prep-service-stage
            servicePort: 80
          path: /
    - host: scmdpackrounder-prep.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: scmdpackrounder-prep-service-stage
            servicePort: 80
          path: /
    tls:
    - hosts:
      - scmdpackrounder-prep.ttc-test.k8s.target.com
      - scmdpackrounder-prep.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"darwin-api-ingress"},"name":"darwin-api-ingress","namespace":"smartbuildings-dev"},"spec":{"rules":[{"host":"darwin-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"darwin-api-service","servicePort":80},"path":"/"}]}},{"host":"darwin-api-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"darwin-api-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["darwin-api-dev.test.k8s.target.com","darwin-api-dev.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-28T21:39:28Z
    generation: 3
    labels:
      name: darwin-api-ingress
    name: darwin-api-ingress
    namespace: smartbuildings-dev
    resourceVersion: "49225378"
    selfLink: /apis/extensions/v1beta1/namespaces/smartbuildings-dev/ingresses/darwin-api-ingress
    uid: d7720bf5-ab0a-11e8-b402-525400b06b0f
  spec:
    rules:
    - host: darwin-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: darwin-api-service
            servicePort: 80
          path: /
    - host: darwin-api-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: darwin-api-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - darwin-api-dev.test.k8s.target.com
      - darwin-api-dev.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"darwinui-ingress","namespace":"smartbuildings-dev"},"spec":{"rules":[{"host":"darwinui-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"darwinui-service","servicePort":80},"path":"/"}]}},{"host":"darwinui-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"darwinui-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["darwinui-dev.test.k8s.target.com","darwinui-dev.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-13T14:46:56Z
    generation: 2
    name: darwinui-ingress
    namespace: smartbuildings-dev
    resourceVersion: "49225813"
    selfLink: /apis/extensions/v1beta1/namespaces/smartbuildings-dev/ingresses/darwinui-ingress
    uid: dcd52732-b763-11e8-8488-525400b06b0f
  spec:
    rules:
    - host: darwinui-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: darwinui-service
            servicePort: 80
          path: /
    - host: darwinui-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: darwinui-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - darwinui-dev.test.k8s.target.com
      - darwinui-dev.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"flamingo-ingress"},"name":"flamingo-ingress","namespace":"smartbuildings-dev"},"spec":{"rules":[{"host":"flamingo-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"flamingo-service","servicePort":80},"path":"/"}]}},{"host":"flamingo-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"flamingo-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["flamingo-dev.test.k8s.target.com","flamingo-dev.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-11T15:51:12Z
    generation: 2
    labels:
      name: flamingo-ingress
    name: flamingo-ingress
    namespace: smartbuildings-dev
    resourceVersion: "49258889"
    selfLink: /apis/extensions/v1beta1/namespaces/smartbuildings-dev/ingresses/flamingo-ingress
    uid: 7a6f4335-cd6d-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: flamingo-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: flamingo-service
            servicePort: 80
          path: /
    - host: flamingo-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: flamingo-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - flamingo-dev.test.k8s.target.com
      - flamingo-dev.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"toucan-ingress"},"name":"toucan-ingress","namespace":"smartbuildings-dev"},"spec":{"rules":[{"host":"toucan-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"toucan-service","servicePort":80},"path":"/"}]}},{"host":"toucan-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"toucan-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["toucan-dev.test.k8s.target.com","toucan-dev.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-10T19:50:48Z
    generation: 1
    labels:
      name: toucan-ingress
    name: toucan-ingress
    namespace: smartbuildings-dev
    resourceVersion: "49225873"
    selfLink: /apis/extensions/v1beta1/namespaces/smartbuildings-dev/ingresses/toucan-ingress
    uid: c8cdef34-ccc5-11e8-ad5b-5254008c264f
  spec:
    rules:
    - host: toucan-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: toucan-service
            servicePort: 80
          path: /
    - host: toucan-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: toucan-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - toucan-dev.test.k8s.target.com
      - toucan-dev.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"darwinui-ingress","namespace":"smartbuildings-stg"},"spec":{"rules":[{"host":"darwinui-stg.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"darwinui-service","servicePort":80},"path":"/"}]}},{"host":"darwinui-stg.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"darwinui-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["darwinui-stg.test.k8s.target.com","darwinui-stg.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-18T16:03:29Z
    generation: 3
    name: darwinui-ingress
    namespace: smartbuildings-stg
    resourceVersion: "49225675"
    selfLink: /apis/extensions/v1beta1/namespaces/smartbuildings-stg/ingresses/darwinui-ingress
    uid: 624eaeb1-bb5c-11e8-a71c-525400524761
  spec:
    rules:
    - host: darwinui-stg.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: darwinui-service
            servicePort: 80
          path: /
    - host: darwinui-stg.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: darwinui-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - darwinui-stg.test.k8s.target.com
      - darwinui-stg.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"flamingo-ingress"},"name":"flamingo-ingress","namespace":"smartbuildings-stg"},"spec":{"rules":[{"host":"flamingo-stg.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"flamingo-service","servicePort":80},"path":"/"}]}},{"host":"flamingo-stg.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"flamingo-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["flamingo-stg.test.k8s.target.com","flamingo-stg.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-26T20:17:56Z
    generation: 1
    labels:
      name: flamingo-ingress
    name: flamingo-ingress
    namespace: smartbuildings-stg
    resourceVersion: "61077568"
    selfLink: /apis/extensions/v1beta1/namespaces/smartbuildings-stg/ingresses/flamingo-ingress
    uid: 39cc0b5d-d95c-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: flamingo-stg.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: flamingo-service
            servicePort: 80
          path: /
    - host: flamingo-stg.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: flamingo-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - flamingo-stg.test.k8s.target.com
      - flamingo-stg.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"toucan-ingress"},"name":"toucan-ingress","namespace":"smartbuildings-stg"},"spec":{"rules":[{"host":"toucan-stg.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"toucan-service","servicePort":80},"path":"/"}]}},{"host":"toucan-stg.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"toucan-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["toucan-stg.test.k8s.target.com","toucan-stg.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-25T19:21:56Z
    generation: 1
    labels:
      name: toucan-ingress
    name: toucan-ingress
    namespace: smartbuildings-stg
    resourceVersion: "60201058"
    selfLink: /apis/extensions/v1beta1/namespaces/smartbuildings-stg/ingresses/toucan-ingress
    uid: 3ca9051e-d88b-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: toucan-stg.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: toucan-service
            servicePort: 80
          path: /
    - host: toucan-stg.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: toucan-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - toucan-stg.test.k8s.target.com
      - toucan-stg.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"acm-oauth"},"name":"acm-oauth-ingress","namespace":"snp-common-dev"},"spec":{"rules":[{"host":"acm-oauth-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"acm-oauth-svc","servicePort":80},"path":"/"}]}},{"host":"acm-oauth-api-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"acm-oauth-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["acm-oauth-api-dev.test.k8s.target.com","acm-oauth-api-dev.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-19T14:31:55Z
    generation: 1
    labels:
      app: acm-oauth
    name: acm-oauth-ingress
    namespace: snp-common-dev
    resourceVersion: "49225775"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-dev/ingresses/acm-oauth-ingress
    uid: c2072a9e-bc18-11e8-8488-525400b06b0f
  spec:
    rules:
    - host: acm-oauth-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: acm-oauth-svc
            servicePort: 80
          path: /
    - host: acm-oauth-api-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: acm-oauth-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - acm-oauth-api-dev.test.k8s.target.com
      - acm-oauth-api-dev.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planogram-swap-items-svc"},"name":"planogram-swap-items-svc-ingress","namespace":"snp-common-dev"},"spec":{"rules":[{"host":"planogram-swap-items-svc-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-swap-items-svc","servicePort":80},"path":"/"}]}},{"host":"planogram-swap-items-svc-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-swap-items-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planogram-swap-items-svc-dev.test.k8s.target.com","planogram-swap-items-svc-dev.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-08T18:30:34Z
    generation: 1
    labels:
      app: planogram-swap-items-svc
    name: planogram-swap-items-svc-ingress
    namespace: snp-common-dev
    resourceVersion: "136328364"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-dev/ingresses/planogram-swap-items-svc-ingress
    uid: 7c69717c-1373-11e9-9edf-52540027f265
  spec:
    rules:
    - host: planogram-swap-items-svc-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-swap-items-svc
            servicePort: 80
          path: /
    - host: planogram-swap-items-svc-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-swap-items-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planogram-swap-items-svc-dev.test.k8s.target.com
      - planogram-swap-items-svc-dev.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planograms-assist-svc"},"name":"planograms-assist-svc-ingress","namespace":"snp-common-dev"},"spec":{"rules":[{"host":"planograms-assist-svc-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planograms-assist-svc-svc","servicePort":80},"path":"/"}]}},{"host":"planograms-assist-svc-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planograms-assist-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planograms-assist-svc-dev.test.k8s.target.com","planograms-assist-svc-dev.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T20:52:27Z
    generation: 5
    labels:
      app: planograms-assist-svc
    name: planograms-assist-svc-ingress
    namespace: snp-common-dev
    resourceVersion: "75164803"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-dev/ingresses/planograms-assist-svc-ingress
    uid: 15363073-bd17-11e8-b822-525400b06b0f
  spec:
    rules:
    - host: planograms-assist-svc-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planograms-assist-svc-svc
            servicePort: 80
          path: /
    - host: planograms-assist-svc-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planograms-assist-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planograms-assist-svc-dev.test.k8s.target.com
      - planograms-assist-svc-dev.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-planogram-assist-ingress"},"name":"singularity-planogram-assist-ingress","namespace":"snp-common-dev"},"spec":{"rules":[{"host":"singularity-planogram-assist-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-assist-service","servicePort":80},"path":"/"}]}},{"host":"singularity-planogram-assist-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-assist-service","servicePort":80},"path":"/"}]}},{"host":"singularity-planogram-assist-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-assist-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-planogram-assist-dev.ttc-test.k8s.target.com","singularity-planogram-assist-dev.tte-test.k8s.target.com","singularity-planogram-assist-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-16T18:03:35Z
    generation: 1
    labels:
      name: singularity-planogram-assist-ingress
    name: singularity-planogram-assist-ingress
    namespace: snp-common-dev
    resourceVersion: "79167462"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-dev/ingresses/singularity-planogram-assist-ingress
    uid: efa4907d-e9c9-11e8-9e69-525400e51df1
  spec:
    rules:
    - host: singularity-planogram-assist-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-assist-service
            servicePort: 80
          path: /
    - host: singularity-planogram-assist-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-assist-service
            servicePort: 80
          path: /
    - host: singularity-planogram-assist-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-assist-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-planogram-assist-dev.ttc-test.k8s.target.com
      - singularity-planogram-assist-dev.tte-test.k8s.target.com
      - singularity-planogram-assist-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-planogram-autofill-ingress"},"name":"singularity-planogram-autofill-ingress","namespace":"snp-common-dev"},"spec":{"rules":[{"host":"singularity-planogram-autofill-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-autofill-service","servicePort":80},"path":"/"}]}},{"host":"singularity-planogram-autofill-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-autofill-service","servicePort":80},"path":"/"}]}},{"host":"singularity-planogram-autofill-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-autofill-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-planogram-autofill-dev.ttc-test.k8s.target.com","singularity-planogram-autofill-dev.tte-test.k8s.target.com","singularity-planogram-autofill-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-15T17:29:08Z
    generation: 1
    labels:
      name: singularity-planogram-autofill-ingress
    name: singularity-planogram-autofill-ingress
    namespace: snp-common-dev
    resourceVersion: "78090876"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-dev/ingresses/singularity-planogram-autofill-ingress
    uid: f55b67f7-e8fb-11e8-981f-5254001f7df6
  spec:
    rules:
    - host: singularity-planogram-autofill-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-autofill-service
            servicePort: 80
          path: /
    - host: singularity-planogram-autofill-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-autofill-service
            servicePort: 80
          path: /
    - host: singularity-planogram-autofill-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-autofill-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-planogram-autofill-dev.ttc-test.k8s.target.com
      - singularity-planogram-autofill-dev.tte-test.k8s.target.com
      - singularity-planogram-autofill-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-planogram-update-ingress"},"name":"singularity-planogram-update-ingress","namespace":"snp-common-dev"},"spec":{"rules":[{"host":"singularity-planogram-update-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-update-service","servicePort":80},"path":"/"}]}},{"host":"singularity-planogram-update-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-update-service","servicePort":80},"path":"/"}]}},{"host":"singularity-planogram-update-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-update-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-planogram-update-dev.ttc-test.k8s.target.com","singularity-planogram-update-dev.tte-test.k8s.target.com","singularity-planogram-update-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-05T14:12:33Z
    generation: 1
    labels:
      name: singularity-planogram-update-ingress
    name: singularity-planogram-update-ingress
    namespace: snp-common-dev
    resourceVersion: "49225707"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-dev/ingresses/singularity-planogram-update-ingress
    uid: b4330b57-c8a8-11e8-8d90-525400b0e110
  spec:
    rules:
    - host: singularity-planogram-update-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-update-service
            servicePort: 80
          path: /
    - host: singularity-planogram-update-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-update-service
            servicePort: 80
          path: /
    - host: singularity-planogram-update-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-update-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-planogram-update-dev.ttc-test.k8s.target.com
      - singularity-planogram-update-dev.tte-test.k8s.target.com
      - singularity-planogram-update-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-pog-assist-ingress"},"name":"singularity-pog-assist-ingress","namespace":"snp-common-dev"},"spec":{"rules":[{"host":"singularity-pog-assist-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-pog-assist-service","servicePort":80},"path":"/"}]}},{"host":"singularity-pog-assist-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-pog-assist-service","servicePort":80},"path":"/"}]}},{"host":"singularity-pog-assist-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-pog-assist-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-pog-assist-dev.ttc-test.k8s.target.com","singularity-pog-assist-dev.tte-test.k8s.target.com","singularity-pog-assist-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-01T14:25:10Z
    generation: 2
    labels:
      name: singularity-pog-assist-ingress
    name: singularity-pog-assist-ingress
    namespace: snp-common-dev
    resourceVersion: "49225447"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-dev/ingresses/singularity-pog-assist-ingress
    uid: cd79ad9d-c585-11e8-9a78-525400d8fde0
  spec:
    rules:
    - host: singularity-pog-assist-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-pog-assist-service
            servicePort: 80
          path: /
    - host: singularity-pog-assist-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-pog-assist-service
            servicePort: 80
          path: /
    - host: singularity-pog-assist-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-pog-assist-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-pog-assist-dev.ttc-test.k8s.target.com
      - singularity-pog-assist-dev.tte-test.k8s.target.com
      - singularity-pog-assist-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"space-analytics-api"},"name":"space-analytics-api-ingress","namespace":"snp-common-dev"},"spec":{"rules":[{"host":"space-analytics-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"space-analytics-api-svc","servicePort":80},"path":"/"}]}},{"host":"space-analytics-api-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"space-analytics-api-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["space-analytics-api-dev.test.k8s.target.com","space-analytics-api-dev.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T18:47:00Z
    generation: 1
    labels:
      app: space-analytics-api
    name: space-analytics-api-ingress
    namespace: snp-common-dev
    resourceVersion: "49225983"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-dev/ingresses/space-analytics-api-ingress
    uid: 8f261068-bd05-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: space-analytics-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: space-analytics-api-svc
            servicePort: 80
          path: /
    - host: space-analytics-api-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: space-analytics-api-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - space-analytics-api-dev.test.k8s.target.com
      - space-analytics-api-dev.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"space-analytics"},"name":"space-analytics-ingress","namespace":"snp-common-dev"},"spec":{"rules":[{"host":"space-analytics-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"space-analytics-svc","servicePort":80},"path":"/"}]}},{"host":"space-analytics-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"space-analytics-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["space-analytics-dev.test.k8s.target.com","space-analytics-dev.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-24T14:13:16Z
    generation: 1
    labels:
      app: space-analytics
    name: space-analytics-ingress
    namespace: snp-common-dev
    resourceVersion: "49225634"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-dev/ingresses/space-analytics-ingress
    uid: fb31ccb0-c003-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: space-analytics-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: space-analytics-svc
            servicePort: 80
          path: /
    - host: space-analytics-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: space-analytics-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - space-analytics-dev.test.k8s.target.com
      - space-analytics-dev.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"space-analytics-oauth"},"name":"space-analytics-oauth-ingress","namespace":"snp-common-dev"},"spec":{"rules":[{"host":"space-analytics-oauth-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"space-analytics-oauth-svc","servicePort":80},"path":"/"}]}},{"host":"space-analytics-oauth-api-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"space-analytics-oauth-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["space-analytics-oauth-api-dev.test.k8s.target.com","space-analytics-oauth-api-dev.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-19T14:31:56Z
    generation: 1
    labels:
      app: space-analytics-oauth
    name: space-analytics-oauth-ingress
    namespace: snp-common-dev
    resourceVersion: "49225906"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-dev/ingresses/space-analytics-oauth-ingress
    uid: c2c74df0-bc18-11e8-8488-525400b06b0f
  spec:
    rules:
    - host: space-analytics-oauth-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: space-analytics-oauth-svc
            servicePort: 80
          path: /
    - host: space-analytics-oauth-api-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: space-analytics-oauth-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - space-analytics-oauth-api-dev.test.k8s.target.com
      - space-analytics-oauth-api-dev.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"acm-oauth"},"name":"acm-oauth-ingress","namespace":"snp-common-stage"},"spec":{"rules":[{"host":"acm-oauth-api-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"acm-oauth-svc","servicePort":80},"path":"/"}]}},{"host":"acm-oauth-api-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"acm-oauth-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["acm-oauth-api-stage.test.k8s.target.com","acm-oauth-api-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-24T17:12:51Z
    generation: 1
    labels:
      app: acm-oauth
    name: acm-oauth-ingress
    namespace: snp-common-stage
    resourceVersion: "49225481"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-stage/ingresses/acm-oauth-ingress
    uid: 118c782a-c01d-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: acm-oauth-api-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: acm-oauth-svc
            servicePort: 80
          path: /
    - host: acm-oauth-api-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: acm-oauth-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - acm-oauth-api-stage.test.k8s.target.com
      - acm-oauth-api-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planogram-swap-items-svc"},"name":"planogram-swap-items-svc-ingress","namespace":"snp-common-stage"},"spec":{"rules":[{"host":"planogram-swap-items-svc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-swap-items-svc","servicePort":80},"path":"/"}]}},{"host":"planogram-swap-items-svc-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-swap-items-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planogram-swap-items-svc-stage.test.k8s.target.com","planogram-swap-items-svc-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-08T18:34:27Z
    generation: 1
    labels:
      app: planogram-swap-items-svc
    name: planogram-swap-items-svc-ingress
    namespace: snp-common-stage
    resourceVersion: "136332056"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-stage/ingresses/planogram-swap-items-svc-ingress
    uid: 07ce84b6-1374-11e9-9fcc-525400f72165
  spec:
    rules:
    - host: planogram-swap-items-svc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-swap-items-svc
            servicePort: 80
          path: /
    - host: planogram-swap-items-svc-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-swap-items-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planogram-swap-items-svc-stage.test.k8s.target.com
      - planogram-swap-items-svc-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planograms-assist-svc"},"name":"planograms-assist-svc-ingress","namespace":"snp-common-stage"},"spec":{"rules":[{"host":"planograms-assist-svc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planograms-assist-svc-svc","servicePort":80},"path":"/"}]}},{"host":"planograms-assist-svc-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planograms-assist-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planograms-assist-svc-stage.test.k8s.target.com","planograms-assist-svc-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T13:58:06Z
    generation: 1
    labels:
      app: planograms-assist-svc
    name: planograms-assist-svc-ingress
    namespace: snp-common-stage
    resourceVersion: "49225522"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-stage/ingresses/planograms-assist-svc-ingress
    uid: 5d3278b2-bda6-11e8-b822-525400b06b0f
  spec:
    rules:
    - host: planograms-assist-svc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planograms-assist-svc-svc
            servicePort: 80
          path: /
    - host: planograms-assist-svc-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planograms-assist-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planograms-assist-svc-stage.test.k8s.target.com
      - planograms-assist-svc-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-planogram-assist-ingress"},"name":"singularity-planogram-assist-ingress","namespace":"snp-common-stage"},"spec":{"rules":[{"host":"singularity-planogram-assist-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-assist-service","servicePort":80},"path":"/"}]}},{"host":"singularity-planogram-assist-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-assist-service","servicePort":80},"path":"/"}]}},{"host":"singularity-planogram-assist-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-assist-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-planogram-assist-stage.ttc-test.k8s.target.com","singularity-planogram-assist-stage.tte-test.k8s.target.com","singularity-planogram-assist-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-16T18:28:38Z
    generation: 1
    labels:
      name: singularity-planogram-assist-ingress
    name: singularity-planogram-assist-ingress
    namespace: snp-common-stage
    resourceVersion: "79186356"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-stage/ingresses/singularity-planogram-assist-ingress
    uid: 6fe2f6c1-e9cd-11e8-9e69-525400e51df1
  spec:
    rules:
    - host: singularity-planogram-assist-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-assist-service
            servicePort: 80
          path: /
    - host: singularity-planogram-assist-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-assist-service
            servicePort: 80
          path: /
    - host: singularity-planogram-assist-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-assist-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-planogram-assist-stage.ttc-test.k8s.target.com
      - singularity-planogram-assist-stage.tte-test.k8s.target.com
      - singularity-planogram-assist-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-planogram-autofill-ingress"},"name":"singularity-planogram-autofill-ingress","namespace":"snp-common-stage"},"spec":{"rules":[{"host":"singularity-planogram-autofill-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-autofill-service","servicePort":80},"path":"/"}]}},{"host":"singularity-planogram-autofill-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-autofill-service","servicePort":80},"path":"/"}]}},{"host":"singularity-planogram-autofill-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-autofill-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-planogram-autofill-stage.ttc-test.k8s.target.com","singularity-planogram-autofill-stage.tte-test.k8s.target.com","singularity-planogram-autofill-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-15T17:56:41Z
    generation: 1
    labels:
      name: singularity-planogram-autofill-ingress
    name: singularity-planogram-autofill-ingress
    namespace: snp-common-stage
    resourceVersion: "78111129"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-stage/ingresses/singularity-planogram-autofill-ingress
    uid: ce7a28c3-e8ff-11e8-981f-5254001f7df6
  spec:
    rules:
    - host: singularity-planogram-autofill-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-autofill-service
            servicePort: 80
          path: /
    - host: singularity-planogram-autofill-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-autofill-service
            servicePort: 80
          path: /
    - host: singularity-planogram-autofill-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-autofill-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-planogram-autofill-stage.ttc-test.k8s.target.com
      - singularity-planogram-autofill-stage.tte-test.k8s.target.com
      - singularity-planogram-autofill-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-planogram-update-ingress"},"name":"singularity-planogram-update-ingress","namespace":"snp-common-stage"},"spec":{"rules":[{"host":"singularity-planogram-update-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-update-service","servicePort":80},"path":"/"}]}},{"host":"singularity-planogram-update-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-update-service","servicePort":80},"path":"/"}]}},{"host":"singularity-planogram-update-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-update-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-planogram-update-stage.ttc-test.k8s.target.com","singularity-planogram-update-stage.tte-test.k8s.target.com","singularity-planogram-update-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-05T16:55:38Z
    generation: 1
    labels:
      name: singularity-planogram-update-ingress
    name: singularity-planogram-update-ingress
    namespace: snp-common-stage
    resourceVersion: "49225390"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-stage/ingresses/singularity-planogram-update-ingress
    uid: 7c1c66e9-c8bf-11e8-8d90-525400b0e110
  spec:
    rules:
    - host: singularity-planogram-update-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-update-service
            servicePort: 80
          path: /
    - host: singularity-planogram-update-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-update-service
            servicePort: 80
          path: /
    - host: singularity-planogram-update-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-update-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-planogram-update-stage.ttc-test.k8s.target.com
      - singularity-planogram-update-stage.tte-test.k8s.target.com
      - singularity-planogram-update-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-pog-assist-ingress"},"name":"singularity-pog-assist-ingress","namespace":"snp-common-stage"},"spec":{"rules":[{"host":"singularity-pog-assist-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-pog-assist-service","servicePort":80},"path":"/"}]}},{"host":"singularity-pog-assist-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-pog-assist-service","servicePort":80},"path":"/"}]}},{"host":"singularity-pog-assist-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-pog-assist-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-pog-assist-stage.ttc-test.k8s.target.com","singularity-pog-assist-stage.tte-test.k8s.target.com","singularity-pog-assist-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T16:44:05Z
    generation: 2
    labels:
      name: singularity-pog-assist-ingress
    name: singularity-pog-assist-ingress
    namespace: snp-common-stage
    resourceVersion: "49225821"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-stage/ingresses/singularity-pog-assist-ingress
    uid: 8da61de4-bdbd-11e8-a79d-525400524761
  spec:
    rules:
    - host: singularity-pog-assist-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-pog-assist-service
            servicePort: 80
          path: /
    - host: singularity-pog-assist-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-pog-assist-service
            servicePort: 80
          path: /
    - host: singularity-pog-assist-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-pog-assist-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-pog-assist-stage.ttc-test.k8s.target.com
      - singularity-pog-assist-stage.tte-test.k8s.target.com
      - singularity-pog-assist-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"space-analytics-api"},"name":"space-analytics-api-ingress","namespace":"snp-common-stage"},"spec":{"rules":[{"host":"space-analytics-api-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"space-analytics-api-svc","servicePort":80},"path":"/"}]}},{"host":"space-analytics-api-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"space-analytics-api-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["space-analytics-api-stage.test.k8s.target.com","space-analytics-api-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-24T17:11:30Z
    generation: 1
    labels:
      app: space-analytics-api
    name: space-analytics-api-ingress
    namespace: snp-common-stage
    resourceVersion: "49226000"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-stage/ingresses/space-analytics-api-ingress
    uid: e0efe271-c01c-11e8-a79d-525400524761
  spec:
    rules:
    - host: space-analytics-api-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: space-analytics-api-svc
            servicePort: 80
          path: /
    - host: space-analytics-api-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: space-analytics-api-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - space-analytics-api-stage.test.k8s.target.com
      - space-analytics-api-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"space-analytics"},"name":"space-analytics-ingress","namespace":"snp-common-stage"},"spec":{"rules":[{"host":"space-analytics-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"space-analytics-svc","servicePort":80},"path":"/"}]}},{"host":"space-analytics-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"space-analytics-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["space-analytics-stage.test.k8s.target.com","space-analytics-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-24T17:21:52Z
    generation: 1
    labels:
      app: space-analytics
    name: space-analytics-ingress
    namespace: snp-common-stage
    resourceVersion: "49225577"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-stage/ingresses/space-analytics-ingress
    uid: 540a939f-c01e-11e8-b822-525400b06b0f
  spec:
    rules:
    - host: space-analytics-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: space-analytics-svc
            servicePort: 80
          path: /
    - host: space-analytics-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: space-analytics-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - space-analytics-stage.test.k8s.target.com
      - space-analytics-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"space-analytics-oauth"},"name":"space-analytics-oauth-ingress","namespace":"snp-common-stage"},"spec":{"rules":[{"host":"space-analytics-oauth-api-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"space-analytics-oauth-svc","servicePort":80},"path":"/"}]}},{"host":"space-analytics-oauth-api-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"space-analytics-oauth-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["space-analytics-oauth-api-stage.test.k8s.target.com","space-analytics-oauth-api-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-24T17:12:51Z
    generation: 1
    labels:
      app: space-analytics-oauth
    name: space-analytics-oauth-ingress
    namespace: snp-common-stage
    resourceVersion: "49225940"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-stage/ingresses/space-analytics-oauth-ingress
    uid: 1143acda-c01d-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: space-analytics-oauth-api-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: space-analytics-oauth-svc
            servicePort: 80
          path: /
    - host: space-analytics-oauth-api-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: space-analytics-oauth-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - space-analytics-oauth-api-stage.test.k8s.target.com
      - space-analytics-oauth-api-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planogram-swap-items-svc"},"name":"planogram-swap-items-svc-ingress","namespace":"snp-common-test"},"spec":{"rules":[{"host":"planogram-swap-items-svc-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-swap-items-svc","servicePort":80},"path":"/"}]}},{"host":"planogram-swap-items-svc-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-swap-items-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planogram-swap-items-svc-test.test.k8s.target.com","planogram-swap-items-svc-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-08T18:32:30Z
    generation: 1
    labels:
      app: planogram-swap-items-svc
    name: planogram-swap-items-svc-ingress
    namespace: snp-common-test
    resourceVersion: "136330281"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-test/ingresses/planogram-swap-items-svc-ingress
    uid: c195a866-1373-11e9-9edf-52540027f265
  spec:
    rules:
    - host: planogram-swap-items-svc-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-swap-items-svc
            servicePort: 80
          path: /
    - host: planogram-swap-items-svc-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-swap-items-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planogram-swap-items-svc-test.test.k8s.target.com
      - planogram-swap-items-svc-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planograms-assist-svc"},"name":"planograms-assist-svc-ingress","namespace":"snp-common-test"},"spec":{"rules":[{"host":"planograms-assist-svc-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planograms-assist-svc-svc","servicePort":80},"path":"/"}]}},{"host":"planograms-assist-svc-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planograms-assist-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planograms-assist-svc-test.test.k8s.target.com","planograms-assist-svc-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T13:56:10Z
    generation: 1
    labels:
      app: planograms-assist-svc
    name: planograms-assist-svc-ingress
    namespace: snp-common-test
    resourceVersion: "49225750"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-test/ingresses/planograms-assist-svc-ingress
    uid: 18355b65-bda6-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: planograms-assist-svc-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planograms-assist-svc-svc
            servicePort: 80
          path: /
    - host: planograms-assist-svc-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planograms-assist-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planograms-assist-svc-test.test.k8s.target.com
      - planograms-assist-svc-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-planogram-assist-ingress"},"name":"singularity-planogram-assist-ingress","namespace":"snp-common-test"},"spec":{"rules":[{"host":"singularity-planogram-assist-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-assist-service","servicePort":80},"path":"/"}]}},{"host":"singularity-planogram-assist-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-assist-service","servicePort":80},"path":"/"}]}},{"host":"singularity-planogram-assist-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-assist-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-planogram-assist-test.ttc-test.k8s.target.com","singularity-planogram-assist-test.tte-test.k8s.target.com","singularity-planogram-assist-test.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-16T18:25:23Z
    generation: 1
    labels:
      name: singularity-planogram-assist-ingress
    name: singularity-planogram-assist-ingress
    namespace: snp-common-test
    resourceVersion: "79183374"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-test/ingresses/singularity-planogram-assist-ingress
    uid: fb5dfbc0-e9cc-11e8-ad5a-525400a9bf14
  spec:
    rules:
    - host: singularity-planogram-assist-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-assist-service
            servicePort: 80
          path: /
    - host: singularity-planogram-assist-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-assist-service
            servicePort: 80
          path: /
    - host: singularity-planogram-assist-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-assist-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-planogram-assist-test.ttc-test.k8s.target.com
      - singularity-planogram-assist-test.tte-test.k8s.target.com
      - singularity-planogram-assist-test.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-planogram-autofill-ingress"},"name":"singularity-planogram-autofill-ingress","namespace":"snp-common-test"},"spec":{"rules":[{"host":"singularity-planogram-autofill-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-autofill-service","servicePort":80},"path":"/"}]}},{"host":"singularity-planogram-autofill-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-autofill-service","servicePort":80},"path":"/"}]}},{"host":"singularity-planogram-autofill-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-autofill-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-planogram-autofill-test.ttc-test.k8s.target.com","singularity-planogram-autofill-test.tte-test.k8s.target.com","singularity-planogram-autofill-test.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-15T17:54:17Z
    generation: 1
    labels:
      name: singularity-planogram-autofill-ingress
    name: singularity-planogram-autofill-ingress
    namespace: snp-common-test
    resourceVersion: "78108924"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-test/ingresses/singularity-planogram-autofill-ingress
    uid: 7885e241-e8ff-11e8-981f-5254001f7df6
  spec:
    rules:
    - host: singularity-planogram-autofill-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-autofill-service
            servicePort: 80
          path: /
    - host: singularity-planogram-autofill-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-autofill-service
            servicePort: 80
          path: /
    - host: singularity-planogram-autofill-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-autofill-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-planogram-autofill-test.ttc-test.k8s.target.com
      - singularity-planogram-autofill-test.tte-test.k8s.target.com
      - singularity-planogram-autofill-test.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-planogram-update-ingress"},"name":"singularity-planogram-update-ingress","namespace":"snp-common-test"},"spec":{"rules":[{"host":"singularity-planogram-update-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-update-service","servicePort":80},"path":"/"}]}},{"host":"singularity-planogram-update-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-update-service","servicePort":80},"path":"/"}]}},{"host":"singularity-planogram-update-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-planogram-update-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-planogram-update-test.ttc-test.k8s.target.com","singularity-planogram-update-test.tte-test.k8s.target.com","singularity-planogram-update-test.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-05T16:52:03Z
    generation: 1
    labels:
      name: singularity-planogram-update-ingress
    name: singularity-planogram-update-ingress
    namespace: snp-common-test
    resourceVersion: "49225726"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-test/ingresses/singularity-planogram-update-ingress
    uid: fc198a18-c8be-11e8-8d90-525400b0e110
  spec:
    rules:
    - host: singularity-planogram-update-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-update-service
            servicePort: 80
          path: /
    - host: singularity-planogram-update-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-update-service
            servicePort: 80
          path: /
    - host: singularity-planogram-update-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-planogram-update-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-planogram-update-test.ttc-test.k8s.target.com
      - singularity-planogram-update-test.tte-test.k8s.target.com
      - singularity-planogram-update-test.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-pog-assist-ingress"},"name":"singularity-pog-assist-ingress","namespace":"snp-common-test"},"spec":{"rules":[{"host":"singularity-pog-assist-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-pog-assist-service","servicePort":80},"path":"/"}]}},{"host":"singularity-pog-assist-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-pog-assist-service","servicePort":80},"path":"/"}]}},{"host":"singularity-pog-assist-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-pog-assist-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-pog-assist-test.ttc-test.k8s.target.com","singularity-pog-assist-test.tte-test.k8s.target.com","singularity-pog-assist-test.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-01T14:36:01Z
    generation: 2
    labels:
      name: singularity-pog-assist-ingress
    name: singularity-pog-assist-ingress
    namespace: snp-common-test
    resourceVersion: "49225761"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-test/ingresses/singularity-pog-assist-ingress
    uid: 51ac2473-c587-11e8-90a0-525400d38b79
  spec:
    rules:
    - host: singularity-pog-assist-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-pog-assist-service
            servicePort: 80
          path: /
    - host: singularity-pog-assist-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-pog-assist-service
            servicePort: 80
          path: /
    - host: singularity-pog-assist-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-pog-assist-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-pog-assist-test.ttc-test.k8s.target.com
      - singularity-pog-assist-test.tte-test.k8s.target.com
      - singularity-pog-assist-test.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"space-analytics-api"},"name":"space-analytics-api-ingress","namespace":"snp-common-test"},"spec":{"rules":[{"host":"space-analytics-api-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"space-analytics-api-svc","servicePort":80},"path":"/"}]}},{"host":"space-analytics-api-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"space-analytics-api-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["space-analytics-api-test.test.k8s.target.com","space-analytics-api-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T19:59:24Z
    generation: 1
    labels:
      app: space-analytics-api
    name: space-analytics-api-ingress
    namespace: snp-common-test
    resourceVersion: "49225532"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-test/ingresses/space-analytics-api-ingress
    uid: ac431ae6-bd0f-11e8-b822-525400b06b0f
  spec:
    rules:
    - host: space-analytics-api-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: space-analytics-api-svc
            servicePort: 80
          path: /
    - host: space-analytics-api-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: space-analytics-api-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - space-analytics-api-test.test.k8s.target.com
      - space-analytics-api-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"space-analytics"},"name":"space-analytics-ingress","namespace":"snp-common-test"},"spec":{"rules":[{"host":"space-analytics-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"space-analytics-svc","servicePort":80},"path":"/"}]}},{"host":"space-analytics-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"space-analytics-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["space-analytics-test.test.k8s.target.com","space-analytics-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-24T14:16:47Z
    generation: 1
    labels:
      app: space-analytics
    name: space-analytics-ingress
    namespace: snp-common-test
    resourceVersion: "49225627"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-test/ingresses/space-analytics-ingress
    uid: 78d6d0a4-c004-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: space-analytics-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: space-analytics-svc
            servicePort: 80
          path: /
    - host: space-analytics-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: space-analytics-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - space-analytics-test.test.k8s.target.com
      - space-analytics-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"space-analytics-oauth"},"name":"space-analytics-oauth-ingress","namespace":"snp-common-test"},"spec":{"rules":[{"host":"space-analytics-oauth-api-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"space-analytics-oauth-svc","servicePort":80},"path":"/"}]}},{"host":"space-analytics-oauth-api-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"space-analytics-oauth-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["space-analytics-oauth-api-test.test.k8s.target.com","space-analytics-oauth-api-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-19T15:19:30Z
    generation: 1
    labels:
      app: space-analytics-oauth
    name: space-analytics-oauth-ingress
    namespace: snp-common-test
    resourceVersion: "49225393"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-common-test/ingresses/space-analytics-oauth-ingress
    uid: 679a3dc9-bc1f-11e8-a71c-525400524761
  spec:
    rules:
    - host: space-analytics-oauth-api-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: space-analytics-oauth-svc
            servicePort: 80
          path: /
    - host: space-analytics-oauth-api-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: space-analytics-oauth-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - space-analytics-oauth-api-test.test.k8s.target.com
      - space-analytics-oauth-api-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"hubble-locations-svc"},"name":"hubble-locations-svc-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"hubble-locations-svc-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"hubble-locations-svc-svc","servicePort":80},"path":"/"}]}},{"host":"hubble-locations-svc-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"hubble-locations-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["hubble-locations-svc-dev.test.k8s.target.com","hubble-locations-svc-dev.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-19T13:17:54Z
    generation: 1
    labels:
      app: hubble-locations-svc
    name: hubble-locations-svc-ingress
    namespace: snp-core-api-dev
    resourceVersion: "49225826"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/hubble-locations-svc-ingress
    uid: 6aeac751-bc0e-11e8-8488-525400b06b0f
  spec:
    rules:
    - host: hubble-locations-svc-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: hubble-locations-svc-svc
            servicePort: 80
          path: /
    - host: hubble-locations-svc-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: hubble-locations-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - hubble-locations-svc-dev.test.k8s.target.com
      - hubble-locations-svc-dev.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-adjacency-svc"},"name":"merch-adjacency-svc-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"merch-adjacency-svc-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-adjacency-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-adjacency-svc-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-adjacency-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-adjacency-svc-dev.test.k8s.target.com","merch-adjacency-svc-dev.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-19T15:22:35Z
    generation: 1
    labels:
      app: merch-adjacency-svc
    name: merch-adjacency-svc-ingress
    namespace: snp-core-api-dev
    resourceVersion: "49225487"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/merch-adjacency-svc-ingress
    uid: d6395af2-bc1f-11e8-8488-525400b06b0f
  spec:
    rules:
    - host: merch-adjacency-svc-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-adjacency-svc-svc
            servicePort: 80
          path: /
    - host: merch-adjacency-svc-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-adjacency-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-adjacency-svc-dev.test.k8s.target.com
      - merch-adjacency-svc-dev.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-cad-inputs-svc"},"name":"merch-cad-inputs-svc-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"merch-cad-inputs-svc-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-cad-inputs-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-cad-inputs-svc-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-cad-inputs-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-cad-inputs-svc-dev.test.k8s.target.com","merch-cad-inputs-svc-dev.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-23T18:29:18Z
    generation: 1
    labels:
      app: merch-cad-inputs-svc
    name: merch-cad-inputs-svc-ingress
    namespace: snp-core-api-dev
    resourceVersion: "151851212"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/merch-cad-inputs-svc-ingress
    uid: cb9556b9-1f3c-11e9-bdc1-525400cfa7b2
  spec:
    rules:
    - host: merch-cad-inputs-svc-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-cad-inputs-svc-svc
            servicePort: 80
          path: /
    - host: merch-cad-inputs-svc-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-cad-inputs-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-cad-inputs-svc-dev.test.k8s.target.com
      - merch-cad-inputs-svc-dev.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-category-svc-v3"},"name":"merch-category-svc-v3-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"merch-category-svc-v3-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-category-svc-v3-svc","servicePort":80},"path":"/"}]}},{"host":"merch-category-svc-v3-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-category-svc-v3-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-category-svc-v3-dev.test.k8s.target.com","merch-category-svc-v3-dev.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T14:20:52Z
    generation: 1
    labels:
      app: merch-category-svc-v3
    name: merch-category-svc-v3-ingress
    namespace: snp-core-api-dev
    resourceVersion: "49225445"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/merch-category-svc-v3-ingress
    uid: 61581eb9-bce0-11e8-a79d-525400524761
  spec:
    rules:
    - host: merch-category-svc-v3-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-category-svc-v3-svc
            servicePort: 80
          path: /
    - host: merch-category-svc-v3-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-category-svc-v3-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-category-svc-v3-dev.test.k8s.target.com
      - merch-category-svc-v3-dev.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-project-reports-svc-v2"},"name":"merch-project-reports-svc-v2-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"merch-project-reports-svc-v2-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-project-reports-svc-v2-svc","servicePort":80},"path":"/"}]}},{"host":"merch-project-reports-svc-v2-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-project-reports-svc-v2-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-project-reports-svc-v2-dev.test.k8s.target.com","merch-project-reports-svc-v2-dev.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-07T14:54:07Z
    generation: 1
    labels:
      app: merch-project-reports-svc-v2
    name: merch-project-reports-svc-v2-ingress
    namespace: snp-core-api-dev
    resourceVersion: "71082569"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/merch-project-reports-svc-v2-ingress
    uid: f9f1e969-e29c-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: merch-project-reports-svc-v2-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-project-reports-svc-v2-svc
            servicePort: 80
          path: /
    - host: merch-project-reports-svc-v2-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-project-reports-svc-v2-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-project-reports-svc-v2-dev.test.k8s.target.com
      - merch-project-reports-svc-v2-dev.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-project-svc-v3"},"name":"merch-project-svc-v3-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"merch-project-svc-v3-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-project-svc-v3-svc","servicePort":80},"path":"/"}]}},{"host":"merch-project-svc-v3-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-project-svc-v3-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-project-svc-v3-dev.test.k8s.target.com","merch-project-svc-v3-dev.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-12T19:21:23Z
    generation: 1
    labels:
      app: merch-project-svc-v3
    name: merch-project-svc-v3-ingress
    namespace: snp-core-api-dev
    resourceVersion: "50204450"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/merch-project-svc-v3-ingress
    uid: 019ef433-ce54-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: merch-project-svc-v3-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-project-svc-v3-svc
            servicePort: 80
          path: /
    - host: merch-project-svc-v3-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-project-svc-v3-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-project-svc-v3-dev.test.k8s.target.com
      - merch-project-svc-v3-dev.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-remodels-svc"},"name":"merch-remodels-svc-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"merch-remodels-svc-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-remodels-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-remodels-svc-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-remodels-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-remodels-svc-dev.test.k8s.target.com","merch-remodels-svc-dev.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-07T15:34:10Z
    generation: 1
    labels:
      app: merch-remodels-svc
    name: merch-remodels-svc-ingress
    namespace: snp-core-api-dev
    resourceVersion: "101223300"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/merch-remodels-svc-ingress
    uid: 8ab53377-fa35-11e8-9e69-525400e51df1
  spec:
    rules:
    - host: merch-remodels-svc-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-remodels-svc-svc
            servicePort: 80
          path: /
    - host: merch-remodels-svc-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-remodels-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-remodels-svc-dev.test.k8s.target.com
      - merch-remodels-svc-dev.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-ties-svc"},"name":"merch-ties-svc-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"merch-ties-svc-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-ties-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-ties-svc-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-ties-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-ties-svc-dev.test.k8s.target.com","merch-ties-svc-dev.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-05T17:35:39Z
    generation: 2
    labels:
      app: merch-ties-svc
    name: merch-ties-svc-ingress
    namespace: snp-core-api-dev
    resourceVersion: "99217843"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/merch-ties-svc-ingress
    uid: 2e9803ed-f8b4-11e8-9e69-525400e51df1
  spec:
    rules:
    - host: merch-ties-svc-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-ties-svc-svc
            servicePort: 80
          path: /
    - host: merch-ties-svc-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-ties-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-ties-svc-dev.test.k8s.target.com
      - merch-ties-svc-dev.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-transition-store-placements-svc"},"name":"merch-transition-store-placements-svc-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"merch-transition-store-placements-svc-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-transition-store-placements-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-transition-store-placements-svc-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-transition-store-placements-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-transition-store-placements-svc-dev.test.k8s.target.com","merch-transition-store-placements-svc-dev.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-25T17:05:38Z
    generation: 1
    labels:
      app: merch-transition-store-placements-svc
    name: merch-transition-store-placements-svc-ingress
    namespace: snp-core-api-dev
    resourceVersion: "153996417"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/merch-transition-store-placements-svc-ingress
    uid: 703d2e64-20c3-11e9-b102-525400053814
  spec:
    rules:
    - host: merch-transition-store-placements-svc-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-transition-store-placements-svc-svc
            servicePort: 80
          path: /
    - host: merch-transition-store-placements-svc-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-transition-store-placements-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-transition-store-placements-svc-dev.test.k8s.target.com
      - merch-transition-store-placements-svc-dev.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-transition-stores-svc"},"name":"merch-transition-stores-svc-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"merch-transition-stores-svc-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-transition-stores-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-transition-stores-svc-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-transition-stores-svc-svc","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-01-16T14:08:33Z
    generation: 1
    labels:
      app: merch-transition-stores-svc
    name: merch-transition-stores-svc-ingress
    namespace: snp-core-api-dev
    resourceVersion: "144647715"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/merch-transition-stores-svc-ingress
    uid: 35c7fd17-1998-11e9-bdc1-525400cfa7b2
  spec:
    rules:
    - host: merch-transition-stores-svc-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-transition-stores-svc-svc
            servicePort: 80
          path: /
    - host: merch-transition-stores-svc-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-transition-stores-svc-svc
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-workers"},"name":"merch-workers-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"merch-workers-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-workers-svc","servicePort":80},"path":"/"}]}},{"host":"merch-workers-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-workers-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-workers-dev.test.k8s.target.com","merch-workers-dev.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-25T19:34:12Z
    generation: 1
    labels:
      app: merch-workers
    name: merch-workers-ingress
    namespace: snp-core-api-dev
    resourceVersion: "60208598"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/merch-workers-ingress
    uid: f321490f-d88c-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: merch-workers-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-workers-svc
            servicePort: 80
          path: /
    - host: merch-workers-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-workers-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-workers-dev.test.k8s.target.com
      - merch-workers-dev.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planogram-drawings-api"},"name":"planogram-drawings-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"planogram-drawings-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-drawings-svc","servicePort":80},"path":"/"}]}},{"host":"planogram-drawings-api-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-drawings-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planogram-drawings-api-dev.test.k8s.target.com","planogram-drawings-api-dev.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-19T20:47:02Z
    generation: 1
    labels:
      app: planogram-drawings-api
    name: planogram-drawings-ingress
    namespace: snp-core-api-dev
    resourceVersion: "49225354"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/planogram-drawings-ingress
    uid: 29373a9d-bc4d-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: planogram-drawings-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-drawings-svc
            servicePort: 80
          path: /
    - host: planogram-drawings-api-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-drawings-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planogram-drawings-api-dev.test.k8s.target.com
      - planogram-drawings-api-dev.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planogram-fixtures-api"},"name":"planogram-fixtures-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"planogram-fixtures-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-fixtures-svc","servicePort":80},"path":"/"}]}},{"host":"planogram-fixtures-api-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-fixtures-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planogram-fixtures-api-dev.test.k8s.target.com","planogram-fixtures-api-dev.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-18T05:31:43Z
    generation: 1
    labels:
      app: planogram-fixtures-api
    name: planogram-fixtures-ingress
    namespace: snp-core-api-dev
    resourceVersion: "49225886"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/planogram-fixtures-ingress
    uid: 20a6e3a8-bb04-11e8-a71c-525400524761
  spec:
    rules:
    - host: planogram-fixtures-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-fixtures-svc
            servicePort: 80
          path: /
    - host: planogram-fixtures-api-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-fixtures-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planogram-fixtures-api-dev.test.k8s.target.com
      - planogram-fixtures-api-dev.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planogram-generations-api"},"name":"planogram-generations-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"planogram-generations-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-generations-svc","servicePort":80},"path":"/"}]}},{"host":"planogram-generations-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-generations-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planogram-generations-dev.test.k8s.target.com","planogram-generations-dev.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T07:12:50Z
    generation: 1
    labels:
      app: planogram-generations-api
    name: planogram-generations-ingress
    namespace: snp-core-api-dev
    resourceVersion: "49225409"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/planogram-generations-ingress
    uid: 95d0a7d6-bca4-11e8-b822-525400b06b0f
  spec:
    rules:
    - host: planogram-generations-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-generations-svc
            servicePort: 80
          path: /
    - host: planogram-generations-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-generations-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planogram-generations-dev.test.k8s.target.com
      - planogram-generations-dev.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planogram-items-api"},"name":"planogram-items-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"planogram-items-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-items-svc","servicePort":80},"path":"/"}]}},{"host":"planogram-items-api-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-items-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planogram-items-api-dev.test.k8s.target.com","planogram-items-api-dev.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-19T16:54:02Z
    generation: 1
    labels:
      app: planogram-items-api
    name: planogram-items-ingress
    namespace: snp-core-api-dev
    resourceVersion: "49225469"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/planogram-items-ingress
    uid: 9c485d6f-bc2c-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: planogram-items-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-items-svc
            servicePort: 80
          path: /
    - host: planogram-items-api-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-items-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planogram-items-api-dev.test.k8s.target.com
      - planogram-items-api-dev.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planogram-stores-api"},"name":"planogram-stores-api-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"planogram-stores-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-stores-api","servicePort":80},"path":"/"}]}},{"host":"planogram-stores-api-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-stores-api","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planogram-stores-api-dev.test.k8s.target.com","planogram-stores-api-dev.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T05:40:26Z
    generation: 1
    labels:
      app: planogram-stores-api
    name: planogram-stores-api-ingress
    namespace: snp-core-api-dev
    resourceVersion: "49225872"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/planogram-stores-api-ingress
    uid: d7ba5157-bd60-11e8-a79d-525400524761
  spec:
    rules:
    - host: planogram-stores-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-stores-api
            servicePort: 80
          path: /
    - host: planogram-stores-api-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-stores-api
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planogram-stores-api-dev.test.k8s.target.com
      - planogram-stores-api-dev.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planograms-api"},"name":"planograms-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"planograms-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planograms-svc","servicePort":80},"path":"/"}]}},{"host":"planograms-api-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planograms-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planograms-api-dev.test.k8s.target.com","planograms-api-dev.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T01:31:05Z
    generation: 1
    labels:
      app: planograms-api
    name: planograms-ingress
    namespace: snp-core-api-dev
    resourceVersion: "49225770"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/planograms-ingress
    uid: d7e4482c-bc74-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: planograms-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planograms-svc
            servicePort: 80
          path: /
    - host: planograms-api-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planograms-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planograms-api-dev.test.k8s.target.com
      - planograms-api-dev.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-department-svc"},"name":"presentation-department-svc-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"presentation-department-svc-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-department-svc-svc","servicePort":80},"path":"/"}]}},{"host":"presentation-department-svc-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-department-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-department-svc-dev.test.k8s.target.com","presentation-department-svc-dev.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-18T13:49:10Z
    generation: 1
    labels:
      app: presentation-department-svc
    name: presentation-department-svc-ingress
    namespace: snp-core-api-dev
    resourceVersion: "49225733"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/presentation-department-svc-ingress
    uid: 9ea7cb4f-bb49-11e8-a71c-525400524761
  spec:
    rules:
    - host: presentation-department-svc-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-department-svc-svc
            servicePort: 80
          path: /
    - host: presentation-department-svc-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-department-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-department-svc-dev.test.k8s.target.com
      - presentation-department-svc-dev.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-display-stores-api"},"name":"presentation-display-stores-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"presentation-display-stores-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pres-display-stores-svc","servicePort":80},"path":"/"}]}},{"host":"presentation-display-stores-api-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pres-display-stores-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-display-stores-api-dev.test.k8s.target.com","presentation-display-stores-api-dev.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T01:38:07Z
    generation: 1
    labels:
      app: presentation-display-stores-api
    name: presentation-display-stores-ingress
    namespace: snp-core-api-dev
    resourceVersion: "49225585"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/presentation-display-stores-ingress
    uid: d34c60c4-bc75-11e8-b822-525400b06b0f
  spec:
    rules:
    - host: presentation-display-stores-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pres-display-stores-svc
            servicePort: 80
          path: /
    - host: presentation-display-stores-api-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pres-display-stores-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-display-stores-api-dev.test.k8s.target.com
      - presentation-display-stores-api-dev.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-item-checkins-api"},"name":"presentation-item-checkins-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"presentation-item-checkins-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-item-checkins-svc","servicePort":80},"path":"/"}]}},{"host":"presentation-item-checkins-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-item-checkins-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-item-checkins-api-dev.test.k8s.target.com","presentation-item-checkins-api-dev.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T01:56:56Z
    generation: 1
    labels:
      app: presentation-item-checkins-api
    name: presentation-item-checkins-ingress
    namespace: snp-core-api-dev
    resourceVersion: "49225650"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/presentation-item-checkins-ingress
    uid: 9e459187-bd41-11e8-b822-525400b06b0f
  spec:
    rules:
    - host: presentation-item-checkins-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-item-checkins-svc
            servicePort: 80
          path: /
    - host: presentation-item-checkins-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-item-checkins-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-item-checkins-api-dev.test.k8s.target.com
      - presentation-item-checkins-api-dev.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-items-api"},"name":"presentation-items-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"presentation-items-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-items-svc","servicePort":80},"path":"/"}]}},{"host":"presentation-items-api-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-items-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-items-api-dev.test.k8s.target.com","presentation-items-api-dev.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T18:39:21Z
    generation: 1
    labels:
      app: presentation-items-api
    name: presentation-items-ingress
    namespace: snp-core-api-dev
    resourceVersion: "49225597"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/presentation-items-ingress
    uid: 7d2523b4-bd04-11e8-b822-525400b06b0f
  spec:
    rules:
    - host: presentation-items-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-items-svc
            servicePort: 80
          path: /
    - host: presentation-items-api-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-items-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-items-api-dev.test.k8s.target.com
      - presentation-items-api-dev.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-subgroups-api"},"name":"presentation-subgroups-ingress","namespace":"snp-core-api-dev"},"spec":{"rules":[{"host":"presentation-subgroups-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-subgroups-svc","servicePort":80},"path":"/"}]}},{"host":"presentation-subgroups-api-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-subgroups-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-subgroups-api-dev.test.k8s.target.com","presentation-subgroups-api-dev.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T02:35:50Z
    generation: 1
    labels:
      app: presentation-subgroups-api
    name: presentation-subgroups-ingress
    namespace: snp-core-api-dev
    resourceVersion: "49225556"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-dev/ingresses/presentation-subgroups-ingress
    uid: 0db52353-bd47-11e8-a79d-525400524761
  spec:
    rules:
    - host: presentation-subgroups-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-subgroups-svc
            servicePort: 80
          path: /
    - host: presentation-subgroups-api-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-subgroups-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-subgroups-api-dev.test.k8s.target.com
      - presentation-subgroups-api-dev.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"hubble-locations-svc"},"name":"hubble-locations-svc-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"hubble-locations-svc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"hubble-locations-svc-svc","servicePort":80},"path":"/"}]}},{"host":"hubble-locations-svc-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"hubble-locations-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["hubble-locations-svc-stage.test.k8s.target.com","hubble-locations-svc-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-02T17:11:30Z
    generation: 1
    labels:
      app: hubble-locations-svc
    name: hubble-locations-svc-ingress
    namespace: snp-core-api-stage
    resourceVersion: "49225561"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/hubble-locations-svc-ingress
    uid: 344c53ca-c666-11e8-9f4c-525400adf9ce
  spec:
    rules:
    - host: hubble-locations-svc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: hubble-locations-svc-svc
            servicePort: 80
          path: /
    - host: hubble-locations-svc-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: hubble-locations-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - hubble-locations-svc-stage.test.k8s.target.com
      - hubble-locations-svc-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-adjacency-svc"},"name":"merch-adjacency-svc-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"merch-adjacency-svc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-adjacency-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-adjacency-svc-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-adjacency-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-adjacency-svc-stage.test.k8s.target.com","merch-adjacency-svc-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-19T19:21:07Z
    generation: 1
    labels:
      app: merch-adjacency-svc
    name: merch-adjacency-svc-ingress
    namespace: snp-core-api-stage
    resourceVersion: "49225898"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/merch-adjacency-svc-ingress
    uid: 2864bc2d-bc41-11e8-a79d-525400524761
  spec:
    rules:
    - host: merch-adjacency-svc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-adjacency-svc-svc
            servicePort: 80
          path: /
    - host: merch-adjacency-svc-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-adjacency-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-adjacency-svc-stage.test.k8s.target.com
      - merch-adjacency-svc-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-cad-inputs-svc"},"name":"merch-cad-inputs-svc-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"merch-cad-inputs-svc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-cad-inputs-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-cad-inputs-svc-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-cad-inputs-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-cad-inputs-svc-stage.test.k8s.target.com","merch-cad-inputs-svc-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-24T18:51:51Z
    generation: 1
    labels:
      app: merch-cad-inputs-svc
    name: merch-cad-inputs-svc-ingress
    namespace: snp-core-api-stage
    resourceVersion: "152914687"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/merch-cad-inputs-svc-ingress
    uid: 1c8d6d26-2009-11e9-b102-525400053814
  spec:
    rules:
    - host: merch-cad-inputs-svc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-cad-inputs-svc-svc
            servicePort: 80
          path: /
    - host: merch-cad-inputs-svc-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-cad-inputs-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-cad-inputs-svc-stage.test.k8s.target.com
      - merch-cad-inputs-svc-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-category-svc-v3"},"name":"merch-category-svc-v3-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"merch-category-svc-v3-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-category-svc-v3-svc","servicePort":80},"path":"/"}]}},{"host":"merch-category-svc-v3-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-category-svc-v3-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-category-svc-v3-stage.test.k8s.target.com","merch-category-svc-v3-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T15:32:42Z
    generation: 1
    labels:
      app: merch-category-svc-v3
    name: merch-category-svc-v3-ingress
    namespace: snp-core-api-stage
    resourceVersion: "49225455"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/merch-category-svc-v3-ingress
    uid: 6a1b0c02-bcea-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: merch-category-svc-v3-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-category-svc-v3-svc
            servicePort: 80
          path: /
    - host: merch-category-svc-v3-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-category-svc-v3-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-category-svc-v3-stage.test.k8s.target.com
      - merch-category-svc-v3-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-project-reports-svc-v2"},"name":"merch-project-reports-svc-v2-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"merch-project-reports-svc-v2-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-project-reports-svc-v2-svc","servicePort":80},"path":"/"}]}},{"host":"merch-project-reports-svc-v2-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-project-reports-svc-v2-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-project-reports-svc-v2-stage.test.k8s.target.com","merch-project-reports-svc-v2-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-08T21:43:20Z
    generation: 1
    labels:
      app: merch-project-reports-svc-v2
    name: merch-project-reports-svc-v2-ingress
    namespace: snp-core-api-stage
    resourceVersion: "72135917"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/merch-project-reports-svc-v2-ingress
    uid: 4f470d49-e39f-11e8-80ff-5254001f7df6
  spec:
    rules:
    - host: merch-project-reports-svc-v2-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-project-reports-svc-v2-svc
            servicePort: 80
          path: /
    - host: merch-project-reports-svc-v2-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-project-reports-svc-v2-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-project-reports-svc-v2-stage.test.k8s.target.com
      - merch-project-reports-svc-v2-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-project-svc-v3"},"name":"merch-project-svc-v3-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"merch-project-svc-v3-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-project-svc-v3-svc","servicePort":80},"path":"/"}]}},{"host":"merch-project-svc-v3-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-project-svc-v3-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-project-svc-v3-stage.test.k8s.target.com","merch-project-svc-v3-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-12T19:27:50Z
    generation: 1
    labels:
      app: merch-project-svc-v3
    name: merch-project-svc-v3-ingress
    namespace: snp-core-api-stage
    resourceVersion: "50208203"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/merch-project-svc-v3-ingress
    uid: e8826660-ce54-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: merch-project-svc-v3-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-project-svc-v3-svc
            servicePort: 80
          path: /
    - host: merch-project-svc-v3-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-project-svc-v3-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-project-svc-v3-stage.test.k8s.target.com
      - merch-project-svc-v3-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-remodels-svc"},"name":"merch-remodels-svc-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"merch-remodels-svc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-remodels-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-remodels-svc-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-remodels-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-remodels-svc-stage.test.k8s.target.com","merch-remodels-svc-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-07T18:57:59Z
    generation: 1
    labels:
      app: merch-remodels-svc
    name: merch-remodels-svc-ingress
    namespace: snp-core-api-stage
    resourceVersion: "101384301"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/merch-remodels-svc-ingress
    uid: 042ef3ae-fa52-11e8-981f-5254001f7df6
  spec:
    rules:
    - host: merch-remodels-svc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-remodels-svc-svc
            servicePort: 80
          path: /
    - host: merch-remodels-svc-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-remodels-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-remodels-svc-stage.test.k8s.target.com
      - merch-remodels-svc-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-ties-svc"},"name":"merch-ties-svc-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"merch-ties-svc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-ties-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-ties-svc-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-ties-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-ties-svc-stage.test.k8s.target.com","merch-ties-svc-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-05T20:02:17Z
    generation: 1
    labels:
      app: merch-ties-svc
    name: merch-ties-svc-ingress
    namespace: snp-core-api-stage
    resourceVersion: "99242110"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/merch-ties-svc-ingress
    uid: aa829d1a-f8c8-11e8-981f-5254001f7df6
  spec:
    rules:
    - host: merch-ties-svc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-ties-svc-svc
            servicePort: 80
          path: /
    - host: merch-ties-svc-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-ties-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-ties-svc-stage.test.k8s.target.com
      - merch-ties-svc-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-transition-store-placements-svc"},"name":"merch-transition-store-placements-svc-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"merch-transition-store-placements-svc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-transition-store-placements-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-transition-store-placements-svc-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-transition-store-placements-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-transition-store-placements-svc-stage.test.k8s.target.com","merch-transition-store-placements-svc-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-28T15:58:40Z
    generation: 1
    labels:
      app: merch-transition-store-placements-svc
    name: merch-transition-store-placements-svc-ingress
    namespace: snp-core-api-stage
    resourceVersion: "157964566"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/merch-transition-store-placements-svc-ingress
    uid: 94bf5fc0-2315-11e9-910d-525400c0733c
  spec:
    rules:
    - host: merch-transition-store-placements-svc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-transition-store-placements-svc-svc
            servicePort: 80
          path: /
    - host: merch-transition-store-placements-svc-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-transition-store-placements-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-transition-store-placements-svc-stage.test.k8s.target.com
      - merch-transition-store-placements-svc-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-transition-stores-svc"},"name":"merch-transition-stores-svc-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"merch-transition-stores-svc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-transition-stores-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-transition-stores-svc-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-transition-stores-svc-svc","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-01-16T14:56:31Z
    generation: 1
    labels:
      app: merch-transition-stores-svc
    name: merch-transition-stores-svc-ingress
    namespace: snp-core-api-stage
    resourceVersion: "144683179"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/merch-transition-stores-svc-ingress
    uid: e91f4860-199e-11e9-a085-525400e7b4ef
  spec:
    rules:
    - host: merch-transition-stores-svc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-transition-stores-svc-svc
            servicePort: 80
          path: /
    - host: merch-transition-stores-svc-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-transition-stores-svc-svc
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-workers"},"name":"merch-workers-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"merch-workers-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-workers-svc","servicePort":80},"path":"/"}]}},{"host":"merch-workers-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-workers-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-workers-stage.test.k8s.target.com","merch-workers-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-25T19:56:50Z
    generation: 1
    labels:
      app: merch-workers
    name: merch-workers-ingress
    namespace: snp-core-api-stage
    resourceVersion: "60224434"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/merch-workers-ingress
    uid: 1ce7dda3-d890-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: merch-workers-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-workers-svc
            servicePort: 80
          path: /
    - host: merch-workers-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-workers-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-workers-stage.test.k8s.target.com
      - merch-workers-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planogram-drawings-api"},"name":"planogram-drawings-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"planogram-drawings-api-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-drawings-svc","servicePort":80},"path":"/"}]}},{"host":"planogram-drawings-api-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-drawings-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planogram-drawings-api-stage.test.k8s.target.com","planogram-drawings-api-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-19T20:56:58Z
    generation: 1
    labels:
      app: planogram-drawings-api
    name: planogram-drawings-ingress
    namespace: snp-core-api-stage
    resourceVersion: "49225352"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/planogram-drawings-ingress
    uid: 8cb6d023-bc4e-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: planogram-drawings-api-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-drawings-svc
            servicePort: 80
          path: /
    - host: planogram-drawings-api-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-drawings-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planogram-drawings-api-stage.test.k8s.target.com
      - planogram-drawings-api-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planogram-fixtures-api"},"name":"planogram-fixtures-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"planogram-fixtures-api-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-fixtures-svc","servicePort":80},"path":"/"}]}},{"host":"planogram-fixtures-api-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-fixtures-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planogram-fixtures-api-stage.test.k8s.target.com","planogram-fixtures-api-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-18T06:12:04Z
    generation: 1
    labels:
      app: planogram-fixtures-api
    name: planogram-fixtures-ingress
    namespace: snp-core-api-stage
    resourceVersion: "49225836"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/planogram-fixtures-ingress
    uid: c3b97340-bb09-11e8-a71c-525400524761
  spec:
    rules:
    - host: planogram-fixtures-api-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-fixtures-svc
            servicePort: 80
          path: /
    - host: planogram-fixtures-api-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-fixtures-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planogram-fixtures-api-stage.test.k8s.target.com
      - planogram-fixtures-api-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planogram-generations-api"},"name":"planogram-generations-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"planogram-generations-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-generations-svc","servicePort":80},"path":"/"}]}},{"host":"planogram-generations-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-generations-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planogram-generations-stage.test.k8s.target.com","planogram-generations-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T07:18:56Z
    generation: 1
    labels:
      app: planogram-generations-api
    name: planogram-generations-ingress
    namespace: snp-core-api-stage
    resourceVersion: "49225925"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/planogram-generations-ingress
    uid: 6f84b8c2-bca5-11e8-b822-525400b06b0f
  spec:
    rules:
    - host: planogram-generations-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-generations-svc
            servicePort: 80
          path: /
    - host: planogram-generations-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-generations-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planogram-generations-stage.test.k8s.target.com
      - planogram-generations-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planogram-items-api"},"name":"planogram-items-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"planogram-items-api-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-items-svc","servicePort":80},"path":"/"}]}},{"host":"planogram-items-api-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-items-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planogram-items-api-stage.test.k8s.target.com","planogram-items-api-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-19T19:05:43Z
    generation: 1
    labels:
      app: planogram-items-api
    name: planogram-items-ingress
    namespace: snp-core-api-stage
    resourceVersion: "49225467"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/planogram-items-ingress
    uid: 01d5c6f1-bc3f-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: planogram-items-api-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-items-svc
            servicePort: 80
          path: /
    - host: planogram-items-api-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-items-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planogram-items-api-stage.test.k8s.target.com
      - planogram-items-api-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planogram-segments-api"},"name":"planogram-segments-api","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"planogram-segments-api-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-segments-api-k8svc","servicePort":80},"path":"/"}]}},{"host":"planogram-segments-api-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-segments-api-k8svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planogram-segments-api-stage.test.k8s.target.com","planogram-segments-api-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-24T09:40:47Z
    generation: 1
    labels:
      app: planogram-segments-api
    name: planogram-segments-api
    namespace: snp-core-api-stage
    resourceVersion: "49225691"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/planogram-segments-api
    uid: ea2b9c81-bfdd-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: planogram-segments-api-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-segments-api-k8svc
            servicePort: 80
          path: /
    - host: planogram-segments-api-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-segments-api-k8svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planogram-segments-api-stage.test.k8s.target.com
      - planogram-segments-api-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planogram-stores-api"},"name":"planogram-stores-api-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"planogram-stores-api-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-stores-api","servicePort":80},"path":"/"}]}},{"host":"planogram-stores-api-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-stores-api","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planogram-stores-api-stage.test.k8s.target.com","planogram-stores-api-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T06:00:25Z
    generation: 1
    labels:
      app: planogram-stores-api
    name: planogram-stores-api-ingress
    namespace: snp-core-api-stage
    resourceVersion: "49225902"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/planogram-stores-api-ingress
    uid: a206d0d1-bd63-11e8-b822-525400b06b0f
  spec:
    rules:
    - host: planogram-stores-api-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-stores-api
            servicePort: 80
          path: /
    - host: planogram-stores-api-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-stores-api
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planogram-stores-api-stage.test.k8s.target.com
      - planogram-stores-api-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planograms-api"},"name":"planograms-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"planograms-api-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planograms-svc","servicePort":80},"path":"/"}]}},{"host":"planograms-api-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planograms-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planograms-api-stage.test.k8s.target.com","planograms-api-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T10:50:34Z
    generation: 1
    labels:
      app: planograms-api
    name: planograms-ingress
    namespace: snp-core-api-stage
    resourceVersion: "49225807"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/planograms-ingress
    uid: 0064e8e7-bcc3-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: planograms-api-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planograms-svc
            servicePort: 80
          path: /
    - host: planograms-api-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planograms-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planograms-api-stage.test.k8s.target.com
      - planograms-api-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-department-svc"},"name":"presentation-department-svc-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"presentation-department-svc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-department-svc-svc","servicePort":80},"path":"/"}]}},{"host":"presentation-department-svc-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-department-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-department-svc-stage.test.k8s.target.com","presentation-department-svc-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-18T18:11:36Z
    generation: 1
    labels:
      app: presentation-department-svc
    name: presentation-department-svc-ingress
    namespace: snp-core-api-stage
    resourceVersion: "49225867"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/presentation-department-svc-ingress
    uid: 481d8922-bb6e-11e8-a71c-525400524761
  spec:
    rules:
    - host: presentation-department-svc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-department-svc-svc
            servicePort: 80
          path: /
    - host: presentation-department-svc-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-department-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-department-svc-stage.test.k8s.target.com
      - presentation-department-svc-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-display-stores-api"},"name":"presentation-display-stores-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"presentation-display-stores-api-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pres-display-stores-svc","servicePort":80},"path":"/"}]}},{"host":"presentation-display-stores-api-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pres-display-stores-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-display-stores-api-stage.test.k8s.target.com","presentation-display-stores-api-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T14:27:29Z
    generation: 1
    labels:
      app: presentation-display-stores-api
    name: presentation-display-stores-ingress
    namespace: snp-core-api-stage
    resourceVersion: "49225432"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/presentation-display-stores-ingress
    uid: 4de823f8-bce1-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: presentation-display-stores-api-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pres-display-stores-svc
            servicePort: 80
          path: /
    - host: presentation-display-stores-api-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pres-display-stores-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-display-stores-api-stage.test.k8s.target.com
      - presentation-display-stores-api-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-item-checkins-api"},"name":"presentation-item-checkins-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"presentation-item-checkins-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-item-checkins-svc","servicePort":80},"path":"/"}]}},{"host":"presentation-item-checkins-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-item-checkins-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-item-checkins-stage.test.k8s.target.com","presentation-item-checkins-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T02:06:29Z
    generation: 1
    labels:
      app: presentation-item-checkins-api
    name: presentation-item-checkins-ingress
    namespace: snp-core-api-stage
    resourceVersion: "49225528"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/presentation-item-checkins-ingress
    uid: f43db8cb-bd42-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: presentation-item-checkins-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-item-checkins-svc
            servicePort: 80
          path: /
    - host: presentation-item-checkins-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-item-checkins-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-item-checkins-stage.test.k8s.target.com
      - presentation-item-checkins-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-items-api"},"name":"presentation-items-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"presentation-items-api-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-items-svc","servicePort":80},"path":"/"}]}},{"host":"presentation-items-api-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-items-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-items-api-stage.test.k8s.target.com","presentation-items-api-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T18:45:45Z
    generation: 1
    labels:
      app: presentation-items-api
    name: presentation-items-ingress
    namespace: snp-core-api-stage
    resourceVersion: "49225762"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/presentation-items-ingress
    uid: 62259ada-bd05-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: presentation-items-api-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-items-svc
            servicePort: 80
          path: /
    - host: presentation-items-api-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-items-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-items-api-stage.test.k8s.target.com
      - presentation-items-api-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-subgroups-api"},"name":"presentation-subgroups-ingress","namespace":"snp-core-api-stage"},"spec":{"rules":[{"host":"presentation-subgroups-api-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-subgroups-svc","servicePort":80},"path":"/"}]}},{"host":"presentation-subgroups-api-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-subgroups-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-subgroups-api-stage.test.k8s.target.com","presentation-subgroups-api-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T02:40:22Z
    generation: 1
    labels:
      app: presentation-subgroups-api
    name: presentation-subgroups-ingress
    namespace: snp-core-api-stage
    resourceVersion: "49225581"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-stage/ingresses/presentation-subgroups-ingress
    uid: afe460ba-bd47-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: presentation-subgroups-api-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-subgroups-svc
            servicePort: 80
          path: /
    - host: presentation-subgroups-api-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-subgroups-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-subgroups-api-stage.test.k8s.target.com
      - presentation-subgroups-api-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"hubble-locations-svc"},"name":"hubble-locations-svc-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"hubble-locations-svc-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"hubble-locations-svc-svc","servicePort":80},"path":"/"}]}},{"host":"hubble-locations-svc-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"hubble-locations-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["hubble-locations-svc-test.test.k8s.target.com","hubble-locations-svc-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-02T16:40:22Z
    generation: 1
    labels:
      app: hubble-locations-svc
    name: hubble-locations-svc-ingress
    namespace: snp-core-api-test
    resourceVersion: "49225591"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/hubble-locations-svc-ingress
    uid: db1f28f3-c661-11e8-8d90-525400b0e110
  spec:
    rules:
    - host: hubble-locations-svc-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: hubble-locations-svc-svc
            servicePort: 80
          path: /
    - host: hubble-locations-svc-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: hubble-locations-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - hubble-locations-svc-test.test.k8s.target.com
      - hubble-locations-svc-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-adjacency-svc"},"name":"merch-adjacency-svc-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"merch-adjacency-svc-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-adjacency-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-adjacency-svc-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-adjacency-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-adjacency-svc-test.test.k8s.target.com","merch-adjacency-svc-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-19T17:38:02Z
    generation: 1
    labels:
      app: merch-adjacency-svc
    name: merch-adjacency-svc-ingress
    namespace: snp-core-api-test
    resourceVersion: "49225550"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/merch-adjacency-svc-ingress
    uid: c2264516-bc32-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: merch-adjacency-svc-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-adjacency-svc-svc
            servicePort: 80
          path: /
    - host: merch-adjacency-svc-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-adjacency-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-adjacency-svc-test.test.k8s.target.com
      - merch-adjacency-svc-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-cad-inputs-svc"},"name":"merch-cad-inputs-svc-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"merch-cad-inputs-svc-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-cad-inputs-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-cad-inputs-svc-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-cad-inputs-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-cad-inputs-svc-test.test.k8s.target.com","merch-cad-inputs-svc-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-24T17:48:28Z
    generation: 1
    labels:
      app: merch-cad-inputs-svc
    name: merch-cad-inputs-svc-ingress
    namespace: snp-core-api-test
    resourceVersion: "152863781"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/merch-cad-inputs-svc-ingress
    uid: 41677934-2000-11e9-bdc1-525400cfa7b2
  spec:
    rules:
    - host: merch-cad-inputs-svc-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-cad-inputs-svc-svc
            servicePort: 80
          path: /
    - host: merch-cad-inputs-svc-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-cad-inputs-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-cad-inputs-svc-test.test.k8s.target.com
      - merch-cad-inputs-svc-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-category-svc-v3"},"name":"merch-category-svc-v3-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"merch-category-svc-v3-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-category-svc-v3-svc","servicePort":80},"path":"/"}]}},{"host":"merch-category-svc-v3-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-category-svc-v3-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-category-svc-v3-test.test.k8s.target.com","merch-category-svc-v3-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T15:15:43Z
    generation: 1
    labels:
      app: merch-category-svc-v3
    name: merch-category-svc-v3-ingress
    namespace: snp-core-api-test
    resourceVersion: "49225992"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/merch-category-svc-v3-ingress
    uid: 0b032132-bce8-11e8-b822-525400b06b0f
  spec:
    rules:
    - host: merch-category-svc-v3-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-category-svc-v3-svc
            servicePort: 80
          path: /
    - host: merch-category-svc-v3-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-category-svc-v3-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-category-svc-v3-test.test.k8s.target.com
      - merch-category-svc-v3-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-project-reports-svc-v2"},"name":"merch-project-reports-svc-v2-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"merch-project-reports-svc-v2-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-project-reports-svc-v2-svc","servicePort":80},"path":"/"}]}},{"host":"merch-project-reports-svc-v2-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-project-reports-svc-v2-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-project-reports-svc-v2-test.test.k8s.target.com","merch-project-reports-svc-v2-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-08T21:38:49Z
    generation: 1
    labels:
      app: merch-project-reports-svc-v2
    name: merch-project-reports-svc-v2-ingress
    namespace: snp-core-api-test
    resourceVersion: "72133339"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/merch-project-reports-svc-v2-ingress
    uid: adbbdd4b-e39e-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: merch-project-reports-svc-v2-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-project-reports-svc-v2-svc
            servicePort: 80
          path: /
    - host: merch-project-reports-svc-v2-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-project-reports-svc-v2-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-project-reports-svc-v2-test.test.k8s.target.com
      - merch-project-reports-svc-v2-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-project-svc-v3"},"name":"merch-project-svc-v3-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"merch-project-svc-v3-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-project-svc-v3-svc","servicePort":80},"path":"/"}]}},{"host":"merch-project-svc-v3-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-project-svc-v3-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-project-svc-v3-test.test.k8s.target.com","merch-project-svc-v3-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-12T19:24:39Z
    generation: 1
    labels:
      app: merch-project-svc-v3
    name: merch-project-svc-v3-ingress
    namespace: snp-core-api-test
    resourceVersion: "50206275"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/merch-project-svc-v3-ingress
    uid: 76ae6828-ce54-11e8-ad5b-5254008c264f
  spec:
    rules:
    - host: merch-project-svc-v3-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-project-svc-v3-svc
            servicePort: 80
          path: /
    - host: merch-project-svc-v3-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-project-svc-v3-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-project-svc-v3-test.test.k8s.target.com
      - merch-project-svc-v3-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-remodels-svc"},"name":"merch-remodels-svc-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"merch-remodels-svc-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-remodels-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-remodels-svc-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-remodels-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-remodels-svc-test.test.k8s.target.com","merch-remodels-svc-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-07T18:52:11Z
    generation: 1
    labels:
      app: merch-remodels-svc
    name: merch-remodels-svc-ingress
    namespace: snp-core-api-test
    resourceVersion: "101379603"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/merch-remodels-svc-ingress
    uid: 34821fe7-fa51-11e8-9e69-525400e51df1
  spec:
    rules:
    - host: merch-remodels-svc-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-remodels-svc-svc
            servicePort: 80
          path: /
    - host: merch-remodels-svc-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-remodels-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-remodels-svc-test.test.k8s.target.com
      - merch-remodels-svc-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-ties-svc"},"name":"merch-ties-svc-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"merch-ties-svc-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-ties-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-ties-svc-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-ties-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-ties-svc-test.test.k8s.target.com","merch-ties-svc-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-05T19:57:10Z
    generation: 1
    labels:
      app: merch-ties-svc
    name: merch-ties-svc-ingress
    namespace: snp-core-api-test
    resourceVersion: "99236719"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/merch-ties-svc-ingress
    uid: f36cf94f-f8c7-11e8-981f-5254001f7df6
  spec:
    rules:
    - host: merch-ties-svc-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-ties-svc-svc
            servicePort: 80
          path: /
    - host: merch-ties-svc-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-ties-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-ties-svc-test.test.k8s.target.com
      - merch-ties-svc-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-transition-store-placements-svc"},"name":"merch-transition-store-placements-svc-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"merch-transition-store-placements-svc-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-transition-store-placements-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-transition-store-placements-svc-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-transition-store-placements-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-transition-store-placements-svc-test.test.k8s.target.com","merch-transition-store-placements-svc-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-28T15:00:18Z
    generation: 1
    labels:
      app: merch-transition-store-placements-svc
    name: merch-transition-store-placements-svc-ingress
    namespace: snp-core-api-test
    resourceVersion: "157918748"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/merch-transition-store-placements-svc-ingress
    uid: 6d22d40a-230d-11e9-8c8e-525400a2ecd3
  spec:
    rules:
    - host: merch-transition-store-placements-svc-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-transition-store-placements-svc-svc
            servicePort: 80
          path: /
    - host: merch-transition-store-placements-svc-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-transition-store-placements-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-transition-store-placements-svc-test.test.k8s.target.com
      - merch-transition-store-placements-svc-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-transition-stores-svc"},"name":"merch-transition-stores-svc-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"merch-transition-stores-svc-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-transition-stores-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-transition-stores-svc-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-transition-stores-svc-svc","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-01-16T14:18:01Z
    generation: 1
    labels:
      app: merch-transition-stores-svc
    name: merch-transition-stores-svc-ingress
    namespace: snp-core-api-test
    resourceVersion: "144655555"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/merch-transition-stores-svc-ingress
    uid: 87cab195-1999-11e9-bdc1-525400cfa7b2
  spec:
    rules:
    - host: merch-transition-stores-svc-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-transition-stores-svc-svc
            servicePort: 80
          path: /
    - host: merch-transition-stores-svc-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-transition-stores-svc-svc
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-workers"},"name":"merch-workers-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"merch-workers-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-workers-svc","servicePort":80},"path":"/"}]}},{"host":"merch-workers-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-workers-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-workers-test.test.k8s.target.com","merch-workers-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-25T19:46:43Z
    generation: 1
    labels:
      app: merch-workers
    name: merch-workers-ingress
    namespace: snp-core-api-test
    resourceVersion: "60217784"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/merch-workers-ingress
    uid: b2b71f63-d88e-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: merch-workers-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-workers-svc
            servicePort: 80
          path: /
    - host: merch-workers-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-workers-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-workers-test.test.k8s.target.com
      - merch-workers-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planogram-drawings-api"},"name":"planogram-drawings-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"planogram-drawings-api-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-drawings-svc","servicePort":80},"path":"/"}]}},{"host":"planogram-drawings-api-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-drawings-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planogram-drawings-api-test.test.k8s.target.com","planogram-drawings-api-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-19T20:53:23Z
    generation: 1
    labels:
      app: planogram-drawings-api
    name: planogram-drawings-ingress
    namespace: snp-core-api-test
    resourceVersion: "49225931"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/planogram-drawings-ingress
    uid: 0c893804-bc4e-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: planogram-drawings-api-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-drawings-svc
            servicePort: 80
          path: /
    - host: planogram-drawings-api-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-drawings-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planogram-drawings-api-test.test.k8s.target.com
      - planogram-drawings-api-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planogram-fixtures-api"},"name":"planogram-fixtures-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"planogram-fixtures-api-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-fixtures-svc","servicePort":80},"path":"/"}]}},{"host":"planogram-fixtures-api-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-fixtures-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planogram-fixtures-api-test.test.k8s.target.com","planogram-fixtures-api-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-18T12:35:18Z
    generation: 1
    labels:
      app: planogram-fixtures-api
    name: planogram-fixtures-ingress
    namespace: snp-core-api-test
    resourceVersion: "49225963"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/planogram-fixtures-ingress
    uid: 4cd67594-bb3f-11e8-a71c-525400524761
  spec:
    rules:
    - host: planogram-fixtures-api-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-fixtures-svc
            servicePort: 80
          path: /
    - host: planogram-fixtures-api-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-fixtures-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planogram-fixtures-api-test.test.k8s.target.com
      - planogram-fixtures-api-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planogram-generations-api"},"name":"planogram-generations-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"planogram-generations-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-generations-svc","servicePort":80},"path":"/"}]}},{"host":"planogram-generations-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-generations-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planogram-generations-test.test.k8s.target.com","planogram-generations-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T07:17:03Z
    generation: 1
    labels:
      app: planogram-generations-api
    name: planogram-generations-ingress
    namespace: snp-core-api-test
    resourceVersion: "49225327"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/planogram-generations-ingress
    uid: 2c63aab9-bca5-11e8-b822-525400b06b0f
  spec:
    rules:
    - host: planogram-generations-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-generations-svc
            servicePort: 80
          path: /
    - host: planogram-generations-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-generations-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planogram-generations-test.test.k8s.target.com
      - planogram-generations-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planogram-items-api"},"name":"planogram-items-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"planogram-items-api-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-items-svc","servicePort":80},"path":"/"}]}},{"host":"planogram-items-api-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-items-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planogram-items-api-test.test.k8s.target.com","planogram-items-api-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-19T17:03:40Z
    generation: 1
    labels:
      app: planogram-items-api
    name: planogram-items-ingress
    namespace: snp-core-api-test
    resourceVersion: "49225910"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/planogram-items-ingress
    uid: f516ab30-bc2d-11e8-8488-525400b06b0f
  spec:
    rules:
    - host: planogram-items-api-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-items-svc
            servicePort: 80
          path: /
    - host: planogram-items-api-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-items-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planogram-items-api-test.test.k8s.target.com
      - planogram-items-api-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planogram-stores-api"},"name":"planogram-stores-api-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"planogram-stores-api-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-stores-api","servicePort":80},"path":"/"}]}},{"host":"planogram-stores-api-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planogram-stores-api","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planogram-stores-api-test.test.k8s.target.com","planogram-stores-api-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T05:57:05Z
    generation: 1
    labels:
      app: planogram-stores-api
    name: planogram-stores-api-ingress
    namespace: snp-core-api-test
    resourceVersion: "49225773"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/planogram-stores-api-ingress
    uid: 2b41b1e8-bd63-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: planogram-stores-api-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-stores-api
            servicePort: 80
          path: /
    - host: planogram-stores-api-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planogram-stores-api
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planogram-stores-api-test.test.k8s.target.com
      - planogram-stores-api-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"planograms-api"},"name":"planograms-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"planograms-api-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planograms-svc","servicePort":80},"path":"/"}]}},{"host":"planograms-api-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"planograms-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["planograms-api-test.test.k8s.target.com","planograms-api-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T10:48:50Z
    generation: 1
    labels:
      app: planograms-api
    name: planograms-ingress
    namespace: snp-core-api-test
    resourceVersion: "49225404"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/planograms-ingress
    uid: c20b9a4a-bcc2-11e8-a79d-525400524761
  spec:
    rules:
    - host: planograms-api-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planograms-svc
            servicePort: 80
          path: /
    - host: planograms-api-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: planograms-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - planograms-api-test.test.k8s.target.com
      - planograms-api-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-department-svc"},"name":"presentation-department-svc-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"presentation-department-svc-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-department-svc-svc","servicePort":80},"path":"/"}]}},{"host":"presentation-department-svc-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-department-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-department-svc-test.test.k8s.target.com","presentation-department-svc-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-18T15:41:13Z
    generation: 1
    labels:
      app: presentation-department-svc
    name: presentation-department-svc-ingress
    namespace: snp-core-api-test
    resourceVersion: "49225824"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/presentation-department-svc-ingress
    uid: 46305ccb-bb59-11e8-8462-525400b93a8e
  spec:
    rules:
    - host: presentation-department-svc-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-department-svc-svc
            servicePort: 80
          path: /
    - host: presentation-department-svc-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-department-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-department-svc-test.test.k8s.target.com
      - presentation-department-svc-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-display-stores-api"},"name":"presentation-display-stores-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"presentation-display-stores-api-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pres-display-stores-svc","servicePort":80},"path":"/"}]}},{"host":"presentation-display-stores-api-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"pres-display-stores-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-display-stores-api-test.test.k8s.target.com","presentation-display-stores-api-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T14:25:50Z
    generation: 1
    labels:
      app: presentation-display-stores-api
    name: presentation-display-stores-ingress
    namespace: snp-core-api-test
    resourceVersion: "49226002"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/presentation-display-stores-ingress
    uid: 12e388f2-bce1-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: presentation-display-stores-api-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pres-display-stores-svc
            servicePort: 80
          path: /
    - host: presentation-display-stores-api-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: pres-display-stores-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-display-stores-api-test.test.k8s.target.com
      - presentation-display-stores-api-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-item-checkins-api"},"name":"presentation-item-checkins-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"presentation-item-checkins-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-item-checkins-svc","servicePort":80},"path":"/"}]}},{"host":"presentation-item-checkins-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-item-checkins-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-item-checkins-test.test.k8s.target.com","presentation-item-checkins-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T02:03:00Z
    generation: 1
    labels:
      app: presentation-item-checkins-api
    name: presentation-item-checkins-ingress
    namespace: snp-core-api-test
    resourceVersion: "49225721"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/presentation-item-checkins-ingress
    uid: 7778f7b9-bd42-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: presentation-item-checkins-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-item-checkins-svc
            servicePort: 80
          path: /
    - host: presentation-item-checkins-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-item-checkins-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-item-checkins-test.test.k8s.target.com
      - presentation-item-checkins-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-items-api"},"name":"presentation-items-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"presentation-items-api-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-items-svc","servicePort":80},"path":"/"}]}},{"host":"presentation-items-api-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-items-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-items-api-test.test.k8s.target.com","presentation-items-api-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T18:43:23Z
    generation: 1
    labels:
      app: presentation-items-api
    name: presentation-items-ingress
    namespace: snp-core-api-test
    resourceVersion: "49225516"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/presentation-items-ingress
    uid: 0daad5d7-bd05-11e8-a79d-525400524761
  spec:
    rules:
    - host: presentation-items-api-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-items-svc
            servicePort: 80
          path: /
    - host: presentation-items-api-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-items-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-items-api-test.test.k8s.target.com
      - presentation-items-api-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-subgroups-api"},"name":"presentation-subgroups-ingress","namespace":"snp-core-api-test"},"spec":{"rules":[{"host":"presentation-subgroups-api-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-subgroups-svc","servicePort":80},"path":"/"}]}},{"host":"presentation-subgroups-api-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-subgroups-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-subgroups-api-test.test.k8s.target.com","presentation-subgroups-api-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T02:39:08Z
    generation: 1
    labels:
      app: presentation-subgroups-api
    name: presentation-subgroups-ingress
    namespace: snp-core-api-test
    resourceVersion: "49225575"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-core-api-test/ingresses/presentation-subgroups-ingress
    uid: 83b18ad2-bd47-11e8-b822-525400b06b0f
  spec:
    rules:
    - host: presentation-subgroups-api-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-subgroups-svc
            servicePort: 80
          path: /
    - host: presentation-subgroups-api-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-subgroups-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-subgroups-api-test.test.k8s.target.com
      - presentation-subgroups-api-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-category-manager-ingress"},"name":"singularity-category-manager-ingress","namespace":"snp-hubble-dev"},"spec":{"rules":[{"host":"singularity-category-manager-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-category-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-category-manager-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-category-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-category-manager-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-category-manager-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-category-manager-dev.ttc-test.k8s.target.com","singularity-category-manager-dev.tte-test.k8s.target.com","singularity-category-manager-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-01T16:53:04Z
    generation: 3
    labels:
      name: singularity-category-manager-ingress
    name: singularity-category-manager-ingress
    namespace: snp-hubble-dev
    resourceVersion: "49225725"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-dev/ingresses/singularity-category-manager-ingress
    uid: 76d49302-c59a-11e8-90a0-525400d38b79
  spec:
    rules:
    - host: singularity-category-manager-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-category-manager-service
            servicePort: 80
          path: /
    - host: singularity-category-manager-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-category-manager-service
            servicePort: 80
          path: /
    - host: singularity-category-manager-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-category-manager-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-category-manager-dev.ttc-test.k8s.target.com
      - singularity-category-manager-dev.tte-test.k8s.target.com
      - singularity-category-manager-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-department-manager-ingress"},"name":"singularity-department-manager-ingress","namespace":"snp-hubble-dev"},"spec":{"rules":[{"host":"singularity-department-manager-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-department-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-department-manager-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-department-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-department-manager-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-department-manager-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-department-manager-dev.ttc-test.k8s.target.com","singularity-department-manager-dev.tte-test.k8s.target.com","singularity-department-manager-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-01T13:40:34Z
    generation: 3
    labels:
      name: singularity-department-manager-ingress
    name: singularity-department-manager-ingress
    namespace: snp-hubble-dev
    resourceVersion: "49225850"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-dev/ingresses/singularity-department-manager-ingress
    uid: 9264fc2e-c57f-11e8-9a78-525400d8fde0
  spec:
    rules:
    - host: singularity-department-manager-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-department-manager-service
            servicePort: 80
          path: /
    - host: singularity-department-manager-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-department-manager-service
            servicePort: 80
          path: /
    - host: singularity-department-manager-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-department-manager-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-department-manager-dev.ttc-test.k8s.target.com
      - singularity-department-manager-dev.tte-test.k8s.target.com
      - singularity-department-manager-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-hubble-oauth-ingress"},"name":"singularity-hubble-oauth-ingress","namespace":"snp-hubble-dev"},"spec":{"rules":[{"host":"singularity-hubble-oauth-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-hubble-oauth-service","servicePort":80},"path":"/"}]}},{"host":"singularity-hubble-oauth-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-hubble-oauth-service","servicePort":80},"path":"/"}]}},{"host":"singularity-hubble-oauth-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-hubble-oauth-service","servicePort":80},"path":"/"}]}},{"host":"hubble-dev.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-hubble-oauth-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-hubble-oauth-dev.ttc-test.k8s.target.com","singularity-hubble-oauth-dev.tte-test.k8s.target.com","singularity-hubble-oauth-dev.test.k8s.target.com","hubble-dev.target.com"],"secretName":"vanitysecret"}]}}
    creationTimestamp: 2018-09-28T21:00:34Z
    generation: 7
    labels:
      name: singularity-hubble-oauth-ingress
    name: singularity-hubble-oauth-ingress
    namespace: snp-hubble-dev
    resourceVersion: "49225376"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-dev/ingresses/singularity-hubble-oauth-ingress
    uid: 8ae339b3-c361-11e8-90a0-525400d38b79
  spec:
    rules:
    - host: singularity-hubble-oauth-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-hubble-oauth-service
            servicePort: 80
          path: /
    - host: singularity-hubble-oauth-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-hubble-oauth-service
            servicePort: 80
          path: /
    - host: singularity-hubble-oauth-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-hubble-oauth-service
            servicePort: 80
          path: /
    - host: hubble-dev.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-hubble-oauth-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-hubble-oauth-dev.ttc-test.k8s.target.com
      - singularity-hubble-oauth-dev.tte-test.k8s.target.com
      - singularity-hubble-oauth-dev.test.k8s.target.com
      - hubble-dev.target.com
      secretName: vanitysecret
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-tie-manager-ingress"},"name":"singularity-tie-manager-ingress","namespace":"snp-hubble-dev"},"spec":{"rules":[{"host":"singularity-tie-manager-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-tie-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-tie-manager-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-tie-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-tie-manager-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-tie-manager-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-tie-manager-dev.ttc-test.k8s.target.com","singularity-tie-manager-dev.tte-test.k8s.target.com","singularity-tie-manager-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-27T15:41:44Z
    generation: 1
    labels:
      name: singularity-tie-manager-ingress
    name: singularity-tie-manager-ingress
    namespace: snp-hubble-dev
    resourceVersion: "90441846"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-dev/ingresses/singularity-tie-manager-ingress
    uid: f13ef73e-f25a-11e8-9e69-525400e51df1
  spec:
    rules:
    - host: singularity-tie-manager-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-tie-manager-service
            servicePort: 80
          path: /
    - host: singularity-tie-manager-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-tie-manager-service
            servicePort: 80
          path: /
    - host: singularity-tie-manager-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-tie-manager-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-tie-manager-dev.ttc-test.k8s.target.com
      - singularity-tie-manager-dev.tte-test.k8s.target.com
      - singularity-tie-manager-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-transition-manager-ingress"},"name":"singularity-transition-manager-ingress","namespace":"snp-hubble-dev"},"spec":{"rules":[{"host":"singularity-transition-manager-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-transition-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-transition-manager-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-transition-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-transition-manager-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-transition-manager-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-transition-manager-dev.ttc-test.k8s.target.com","singularity-transition-manager-dev.tte-test.k8s.target.com","singularity-transition-manager-dev.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-01T16:56:29Z
    generation: 3
    labels:
      name: singularity-transition-manager-ingress
    name: singularity-transition-manager-ingress
    namespace: snp-hubble-dev
    resourceVersion: "49225915"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-dev/ingresses/singularity-transition-manager-ingress
    uid: f136fe3a-c59a-11e8-9a78-525400d8fde0
  spec:
    rules:
    - host: singularity-transition-manager-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-transition-manager-service
            servicePort: 80
          path: /
    - host: singularity-transition-manager-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-transition-manager-service
            servicePort: 80
          path: /
    - host: singularity-transition-manager-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-transition-manager-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-transition-manager-dev.ttc-test.k8s.target.com
      - singularity-transition-manager-dev.tte-test.k8s.target.com
      - singularity-transition-manager-dev.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"hubble-locations-svc"},"name":"hubble-locations-svc-ingress","namespace":"snp-hubble-prod-demo"},"spec":{"rules":[{"host":"hubble-locations-svc-prod-demo.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"hubble-locations-svc-svc","servicePort":80},"path":"/"}]}},{"host":"hubble-locations-svc-prod-demo.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"hubble-locations-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["hubble-locations-svc-prod-demo.test.k8s.target.com","hubble-locations-svc-prod-demo.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-02T23:29:24Z
    generation: 1
    labels:
      app: hubble-locations-svc
    name: hubble-locations-svc-ingress
    namespace: snp-hubble-prod-demo
    resourceVersion: "49225874"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-demo/ingresses/hubble-locations-svc-ingress
    uid: ff781d6b-c69a-11e8-b53b-5254000e56fe
  spec:
    rules:
    - host: hubble-locations-svc-prod-demo.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: hubble-locations-svc-svc
            servicePort: 80
          path: /
    - host: hubble-locations-svc-prod-demo.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: hubble-locations-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - hubble-locations-svc-prod-demo.test.k8s.target.com
      - hubble-locations-svc-prod-demo.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-adjacency-svc"},"name":"merch-adjacency-svc-ingress","namespace":"snp-hubble-prod-demo"},"spec":{"rules":[{"host":"merch-adjacency-svc-prod-demo.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-adjacency-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-adjacency-svc-prod-demo.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-adjacency-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-adjacency-svc-prod-demo.test.k8s.target.com","merch-adjacency-svc-prod-demo.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T13:15:46Z
    generation: 2
    labels:
      app: merch-adjacency-svc
    name: merch-adjacency-svc-ingress
    namespace: snp-hubble-prod-demo
    resourceVersion: "49225331"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-demo/ingresses/merch-adjacency-svc-ingress
    uid: 491dcb82-bcd7-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: merch-adjacency-svc-prod-demo.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-adjacency-svc-svc
            servicePort: 80
          path: /
    - host: merch-adjacency-svc-prod-demo.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-adjacency-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-adjacency-svc-prod-demo.test.k8s.target.com
      - merch-adjacency-svc-prod-demo.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-cad-inputs-svc"},"name":"merch-cad-inputs-svc-ingress","namespace":"snp-hubble-prod-demo"},"spec":{"rules":[{"host":"merch-cad-inputs-svc-prod-demo.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-cad-inputs-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-cad-inputs-svc-prod-demo.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-cad-inputs-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-cad-inputs-svc-prod-demo.test.k8s.target.com","merch-cad-inputs-svc-prod-demo.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-24T19:12:15Z
    generation: 1
    labels:
      app: merch-cad-inputs-svc
    name: merch-cad-inputs-svc-ingress
    namespace: snp-hubble-prod-demo
    resourceVersion: "152931684"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-demo/ingresses/merch-cad-inputs-svc-ingress
    uid: f60c7253-200b-11e9-bdc1-525400cfa7b2
  spec:
    rules:
    - host: merch-cad-inputs-svc-prod-demo.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-cad-inputs-svc-svc
            servicePort: 80
          path: /
    - host: merch-cad-inputs-svc-prod-demo.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-cad-inputs-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-cad-inputs-svc-prod-demo.test.k8s.target.com
      - merch-cad-inputs-svc-prod-demo.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-category-svc-v3"},"name":"merch-category-svc-v3-ingress","namespace":"snp-hubble-prod-demo"},"spec":{"rules":[{"host":"merch-category-svc-v3-prod-demo.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-category-svc-v3-svc","servicePort":80},"path":"/"}]}},{"host":"merch-category-svc-v3-prod-demo.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-category-svc-v3-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-category-svc-v3-prod-demo.test.k8s.target.com","merch-category-svc-v3-prod-demo.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-24T16:09:16Z
    generation: 1
    labels:
      app: merch-category-svc-v3
    name: merch-category-svc-v3-ingress
    namespace: snp-hubble-prod-demo
    resourceVersion: "49225792"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-demo/ingresses/merch-category-svc-v3-ingress
    uid: 2fc4dea2-c014-11e8-b822-525400b06b0f
  spec:
    rules:
    - host: merch-category-svc-v3-prod-demo.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-category-svc-v3-svc
            servicePort: 80
          path: /
    - host: merch-category-svc-v3-prod-demo.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-category-svc-v3-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-category-svc-v3-prod-demo.test.k8s.target.com
      - merch-category-svc-v3-prod-demo.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-project-reports-svc-v2"},"name":"merch-project-reports-svc-v2-ingress","namespace":"snp-hubble-prod-demo"},"spec":{"rules":[{"host":"merch-project-reports-svc-v2-prod-demo.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-project-reports-svc-v2-svc","servicePort":80},"path":"/"}]}},{"host":"merch-project-reports-svc-v2-prod-demo.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-project-reports-svc-v2-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-project-reports-svc-v2-prod-demo.test.k8s.target.com","merch-project-reports-svc-v2-prod-demo.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-13T19:21:02Z
    generation: 1
    labels:
      app: merch-project-reports-svc-v2
    name: merch-project-reports-svc-v2-ingress
    namespace: snp-hubble-prod-demo
    resourceVersion: "76152444"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-demo/ingresses/merch-project-reports-svc-v2-ingress
    uid: 4224ea30-e779-11e8-981f-5254001f7df6
  spec:
    rules:
    - host: merch-project-reports-svc-v2-prod-demo.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-project-reports-svc-v2-svc
            servicePort: 80
          path: /
    - host: merch-project-reports-svc-v2-prod-demo.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-project-reports-svc-v2-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-project-reports-svc-v2-prod-demo.test.k8s.target.com
      - merch-project-reports-svc-v2-prod-demo.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-project-svc-v3"},"name":"merch-project-svc-v3-ingress","namespace":"snp-hubble-prod-demo"},"spec":{"rules":[{"host":"merch-project-svc-v3-prod-demo.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-project-svc-v3-svc","servicePort":80},"path":"/"}]}},{"host":"merch-project-svc-v3-prod-demo.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-project-svc-v3-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-project-svc-v3-prod-demo.test.k8s.target.com","merch-project-svc-v3-prod-demo.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-22T14:20:31Z
    generation: 1
    labels:
      app: merch-project-svc-v3
    name: merch-project-svc-v3-ingress
    namespace: snp-hubble-prod-demo
    resourceVersion: "57705281"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-demo/ingresses/merch-project-svc-v3-ingress
    uid: a2366f3b-d605-11e8-ad5b-5254008c264f
  spec:
    rules:
    - host: merch-project-svc-v3-prod-demo.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-project-svc-v3-svc
            servicePort: 80
          path: /
    - host: merch-project-svc-v3-prod-demo.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-project-svc-v3-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-project-svc-v3-prod-demo.test.k8s.target.com
      - merch-project-svc-v3-prod-demo.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-remodels-svc"},"name":"merch-remodels-svc-ingress","namespace":"snp-hubble-prod-demo"},"spec":{"rules":[{"host":"merch-remodels-svc-prod-demo.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-remodels-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-remodels-svc-prod-demo.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-remodels-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-remodels-svc-prod-demo.test.k8s.target.com","merch-remodels-svc-prod-demo.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-07T19:51:17Z
    generation: 1
    labels:
      app: merch-remodels-svc
    name: merch-remodels-svc-ingress
    namespace: snp-hubble-prod-demo
    resourceVersion: "101426183"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-demo/ingresses/merch-remodels-svc-ingress
    uid: 75fad6a1-fa59-11e8-ad5a-525400a9bf14
  spec:
    rules:
    - host: merch-remodels-svc-prod-demo.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-remodels-svc-svc
            servicePort: 80
          path: /
    - host: merch-remodels-svc-prod-demo.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-remodels-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-remodels-svc-prod-demo.test.k8s.target.com
      - merch-remodels-svc-prod-demo.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-ties-svc"},"name":"merch-ties-svc-ingress","namespace":"snp-hubble-prod-demo"},"spec":{"rules":[{"host":"merch-ties-svc-prod-demo.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-ties-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-ties-svc-prod-demo.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-ties-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-ties-svc-prod-demo.test.k8s.target.com","merch-ties-svc-prod-demo.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-05T22:36:45Z
    generation: 1
    labels:
      app: merch-ties-svc
    name: merch-ties-svc-ingress
    namespace: snp-hubble-prod-demo
    resourceVersion: "99365392"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-demo/ingresses/merch-ties-svc-ingress
    uid: 3ea665c6-f8de-11e8-ad5a-525400a9bf14
  spec:
    rules:
    - host: merch-ties-svc-prod-demo.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-ties-svc-svc
            servicePort: 80
          path: /
    - host: merch-ties-svc-prod-demo.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-ties-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-ties-svc-prod-demo.test.k8s.target.com
      - merch-ties-svc-prod-demo.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-transition-store-placements-svc"},"name":"merch-transition-store-placements-svc-ingress","namespace":"snp-hubble-prod-demo"},"spec":{"rules":[{"host":"merch-transition-store-placements-svc-prod-demo.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-transition-store-placements-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-transition-store-placements-svc-prod-demo.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-transition-store-placements-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-transition-store-placements-svc-prod-demo.test.k8s.target.com","merch-transition-store-placements-svc-prod-demo.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-20T17:51:11Z
    generation: 1
    labels:
      app: merch-transition-store-placements-svc
    name: merch-transition-store-placements-svc-ingress
    namespace: snp-hubble-prod-demo
    resourceVersion: "184023857"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-demo/ingresses/merch-transition-store-placements-svc-ingress
    uid: 1becbb7b-3538-11e9-a2e8-52540055f679
  spec:
    rules:
    - host: merch-transition-store-placements-svc-prod-demo.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-transition-store-placements-svc-svc
            servicePort: 80
          path: /
    - host: merch-transition-store-placements-svc-prod-demo.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-transition-store-placements-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-transition-store-placements-svc-prod-demo.test.k8s.target.com
      - merch-transition-store-placements-svc-prod-demo.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-transition-stores-svc"},"name":"merch-transition-stores-svc-ingress","namespace":"snp-hubble-prod-demo"},"spec":{"rules":[{"host":"merch-transition-stores-svc-prod-demo.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-transition-stores-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-transition-stores-svc-prod-demo.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-transition-stores-svc-svc","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-01-18T15:16:26Z
    generation: 1
    labels:
      app: merch-transition-stores-svc
    name: merch-transition-stores-svc-ingress
    namespace: snp-hubble-prod-demo
    resourceVersion: "146777222"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-demo/ingresses/merch-transition-stores-svc-ingress
    uid: 0609096d-1b34-11e9-a085-525400e7b4ef
  spec:
    rules:
    - host: merch-transition-stores-svc-prod-demo.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-transition-stores-svc-svc
            servicePort: 80
          path: /
    - host: merch-transition-stores-svc-prod-demo.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-transition-stores-svc-svc
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-workers"},"name":"merch-workers-ingress","namespace":"snp-hubble-prod-demo"},"spec":{"rules":[{"host":"merch-workers-prod-demo.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-workers-svc","servicePort":80},"path":"/"}]}},{"host":"merch-workers-prod-demo.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-workers-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-workers-prod-demo.test.k8s.target.com","merch-workers-prod-demo.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-25T20:07:20Z
    generation: 1
    labels:
      app: merch-workers
    name: merch-workers-ingress
    namespace: snp-hubble-prod-demo
    resourceVersion: "60231245"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-demo/ingresses/merch-workers-ingress
    uid: 945512c6-d891-11e8-80ff-5254001f7df6
  spec:
    rules:
    - host: merch-workers-prod-demo.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-workers-svc
            servicePort: 80
          path: /
    - host: merch-workers-prod-demo.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-workers-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-workers-prod-demo.test.k8s.target.com
      - merch-workers-prod-demo.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-department-svc"},"name":"presentation-department-svc-ingress","namespace":"snp-hubble-prod-demo"},"spec":{"rules":[{"host":"presentation-department-svc-prod-demo.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-department-svc-svc","servicePort":80},"path":"/"}]}},{"host":"presentation-department-svc-prod-demo.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-department-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-department-svc-prod-demo.test.k8s.target.com","presentation-department-svc-prod-demo.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-19T19:32:07Z
    generation: 1
    labels:
      app: presentation-department-svc
    name: presentation-department-svc-ingress
    namespace: snp-hubble-prod-demo
    resourceVersion: "49225621"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-demo/ingresses/presentation-department-svc-ingress
    uid: b1d02bea-bc42-11e8-a79d-525400524761
  spec:
    rules:
    - host: presentation-department-svc-prod-demo.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-department-svc-svc
            servicePort: 80
          path: /
    - host: presentation-department-svc-prod-demo.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-department-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-department-svc-prod-demo.test.k8s.target.com
      - presentation-department-svc-prod-demo.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-category-manager-ingress"},"name":"singularity-category-manager-ingress","namespace":"snp-hubble-prod-demo"},"spec":{"rules":[{"host":"singularity-category-manager-prod-demo.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-category-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-category-manager-prod-demo.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-category-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-category-manager-prod-demo.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-category-manager-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-category-manager-prod-demo.ttc-test.k8s.target.com","singularity-category-manager-prod-demo.tte-test.k8s.target.com","singularity-category-manager-prod-demo.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-03T16:35:20Z
    generation: 1
    labels:
      name: singularity-category-manager-ingress
    name: singularity-category-manager-ingress
    namespace: snp-hubble-prod-demo
    resourceVersion: "49225346"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-demo/ingresses/singularity-category-manager-ingress
    uid: 514bd7cd-c72a-11e8-b53b-5254000e56fe
  spec:
    rules:
    - host: singularity-category-manager-prod-demo.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-category-manager-service
            servicePort: 80
          path: /
    - host: singularity-category-manager-prod-demo.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-category-manager-service
            servicePort: 80
          path: /
    - host: singularity-category-manager-prod-demo.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-category-manager-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-category-manager-prod-demo.ttc-test.k8s.target.com
      - singularity-category-manager-prod-demo.tte-test.k8s.target.com
      - singularity-category-manager-prod-demo.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-department-manager-ingress"},"name":"singularity-department-manager-ingress","namespace":"snp-hubble-prod-demo"},"spec":{"rules":[{"host":"singularity-department-manager-prod-demo.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-department-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-department-manager-prod-demo.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-department-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-department-manager-prod-demo.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-department-manager-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-department-manager-prod-demo.ttc-test.k8s.target.com","singularity-department-manager-prod-demo.tte-test.k8s.target.com","singularity-department-manager-prod-demo.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-03T16:44:15Z
    generation: 1
    labels:
      name: singularity-department-manager-ingress
    name: singularity-department-manager-ingress
    namespace: snp-hubble-prod-demo
    resourceVersion: "49225401"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-demo/ingresses/singularity-department-manager-ingress
    uid: 90694ac4-c72b-11e8-b53b-5254000e56fe
  spec:
    rules:
    - host: singularity-department-manager-prod-demo.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-department-manager-service
            servicePort: 80
          path: /
    - host: singularity-department-manager-prod-demo.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-department-manager-service
            servicePort: 80
          path: /
    - host: singularity-department-manager-prod-demo.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-department-manager-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-department-manager-prod-demo.ttc-test.k8s.target.com
      - singularity-department-manager-prod-demo.tte-test.k8s.target.com
      - singularity-department-manager-prod-demo.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-hubble-oauth-ingress"},"name":"singularity-hubble-oauth-ingress","namespace":"snp-hubble-prod-demo"},"spec":{"rules":[{"host":"singularity-hubble-oauth-prod-demo.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-hubble-oauth-service","servicePort":80},"path":"/"}]}},{"host":"singularity-hubble-oauth-prod-demo.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-hubble-oauth-service","servicePort":80},"path":"/"}]}},{"host":"singularity-hubble-oauth-prod-demo.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-hubble-oauth-service","servicePort":80},"path":"/"}]}},{"host":"hubble-prod-demo.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-hubble-oauth-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-hubble-oauth-prod-demo.ttc-test.k8s.target.com","singularity-hubble-oauth-prod-demo.tte-test.k8s.target.com","singularity-hubble-oauth-prod-demo.test.k8s.target.com","hubble-prod-demo.target.com"],"secretName":"vanitysecret"}]}}
    creationTimestamp: 2018-10-03T16:34:56Z
    generation: 2
    labels:
      name: singularity-hubble-oauth-ingress
    name: singularity-hubble-oauth-ingress
    namespace: snp-hubble-prod-demo
    resourceVersion: "49225852"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-demo/ingresses/singularity-hubble-oauth-ingress
    uid: 430a1739-c72a-11e8-9f4c-525400adf9ce
  spec:
    rules:
    - host: singularity-hubble-oauth-prod-demo.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-hubble-oauth-service
            servicePort: 80
          path: /
    - host: singularity-hubble-oauth-prod-demo.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-hubble-oauth-service
            servicePort: 80
          path: /
    - host: singularity-hubble-oauth-prod-demo.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-hubble-oauth-service
            servicePort: 80
          path: /
    - host: hubble-prod-demo.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-hubble-oauth-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-hubble-oauth-prod-demo.ttc-test.k8s.target.com
      - singularity-hubble-oauth-prod-demo.tte-test.k8s.target.com
      - singularity-hubble-oauth-prod-demo.test.k8s.target.com
      - hubble-prod-demo.target.com
      secretName: vanitysecret
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-tie-manager-ingress"},"name":"singularity-tie-manager-ingress","namespace":"snp-hubble-prod-demo"},"spec":{"rules":[{"host":"singularity-tie-manager-prod-demo.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-tie-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-tie-manager-prod-demo.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-tie-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-tie-manager-prod-demo.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-tie-manager-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-tie-manager-prod-demo.ttc-test.k8s.target.com","singularity-tie-manager-prod-demo.tte-test.k8s.target.com","singularity-tie-manager-prod-demo.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-14T19:17:55Z
    generation: 1
    labels:
      name: singularity-tie-manager-ingress
    name: singularity-tie-manager-ingress
    namespace: snp-hubble-prod-demo
    resourceVersion: "142665565"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-demo/ingresses/singularity-tie-manager-ingress
    uid: 18b61b18-1831-11e9-bdc1-525400cfa7b2
  spec:
    rules:
    - host: singularity-tie-manager-prod-demo.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-tie-manager-service
            servicePort: 80
          path: /
    - host: singularity-tie-manager-prod-demo.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-tie-manager-service
            servicePort: 80
          path: /
    - host: singularity-tie-manager-prod-demo.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-tie-manager-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-tie-manager-prod-demo.ttc-test.k8s.target.com
      - singularity-tie-manager-prod-demo.tte-test.k8s.target.com
      - singularity-tie-manager-prod-demo.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-transition-manager-ingress"},"name":"singularity-transition-manager-ingress","namespace":"snp-hubble-prod-demo"},"spec":{"rules":[{"host":"singularity-transition-manager-prod-demo.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-transition-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-transition-manager-prod-demo.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-transition-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-transition-manager-prod-demo.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-transition-manager-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-transition-manager-prod-demo.ttc-test.k8s.target.com","singularity-transition-manager-prod-demo.tte-test.k8s.target.com","singularity-transition-manager-prod-demo.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-03T16:35:35Z
    generation: 1
    labels:
      name: singularity-transition-manager-ingress
    name: singularity-transition-manager-ingress
    namespace: snp-hubble-prod-demo
    resourceVersion: "49225645"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-demo/ingresses/singularity-transition-manager-ingress
    uid: 5a6b1e95-c72a-11e8-8d90-525400b0e110
  spec:
    rules:
    - host: singularity-transition-manager-prod-demo.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-transition-manager-service
            servicePort: 80
          path: /
    - host: singularity-transition-manager-prod-demo.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-transition-manager-service
            servicePort: 80
          path: /
    - host: singularity-transition-manager-prod-demo.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-transition-manager-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-transition-manager-prod-demo.ttc-test.k8s.target.com
      - singularity-transition-manager-prod-demo.tte-test.k8s.target.com
      - singularity-transition-manager-prod-demo.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"hubble-locations-svc"},"name":"hubble-locations-svc-ingress","namespace":"snp-hubble-prod-training"},"spec":{"rules":[{"host":"hubble-locations-svc-prod-training.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"hubble-locations-svc-svc","servicePort":80},"path":"/"}]}},{"host":"hubble-locations-svc-prod-training.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"hubble-locations-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["hubble-locations-svc-prod-training.test.k8s.target.com","hubble-locations-svc-prod-training.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-02T23:29:24Z
    generation: 1
    labels:
      app: hubble-locations-svc
    name: hubble-locations-svc-ingress
    namespace: snp-hubble-prod-training
    resourceVersion: "49225753"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-training/ingresses/hubble-locations-svc-ingress
    uid: ff26808e-c69a-11e8-9f4c-525400adf9ce
  spec:
    rules:
    - host: hubble-locations-svc-prod-training.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: hubble-locations-svc-svc
            servicePort: 80
          path: /
    - host: hubble-locations-svc-prod-training.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: hubble-locations-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - hubble-locations-svc-prod-training.test.k8s.target.com
      - hubble-locations-svc-prod-training.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-adjacency-svc"},"name":"merch-adjacency-svc-ingress","namespace":"snp-hubble-prod-training"},"spec":{"rules":[{"host":"merch-adjacency-svc-prod-training.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-adjacency-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-adjacency-svc-prod-training.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-adjacency-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-adjacency-svc-prod-training.test.k8s.target.com","merch-adjacency-svc-prod-training.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T13:15:50Z
    generation: 2
    labels:
      app: merch-adjacency-svc
    name: merch-adjacency-svc-ingress
    namespace: snp-hubble-prod-training
    resourceVersion: "49225588"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-training/ingresses/merch-adjacency-svc-ingress
    uid: 4b327bdd-bcd7-11e8-b822-525400b06b0f
  spec:
    rules:
    - host: merch-adjacency-svc-prod-training.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-adjacency-svc-svc
            servicePort: 80
          path: /
    - host: merch-adjacency-svc-prod-training.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-adjacency-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-adjacency-svc-prod-training.test.k8s.target.com
      - merch-adjacency-svc-prod-training.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-cad-inputs-svc"},"name":"merch-cad-inputs-svc-ingress","namespace":"snp-hubble-prod-training"},"spec":{"rules":[{"host":"merch-cad-inputs-svc-prod-training.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-cad-inputs-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-cad-inputs-svc-prod-training.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-cad-inputs-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-cad-inputs-svc-prod-training.test.k8s.target.com","merch-cad-inputs-svc-prod-training.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-24T19:12:14Z
    generation: 1
    labels:
      app: merch-cad-inputs-svc
    name: merch-cad-inputs-svc-ingress
    namespace: snp-hubble-prod-training
    resourceVersion: "152931683"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-training/ingresses/merch-cad-inputs-svc-ingress
    uid: f52b4a78-200b-11e9-bdc1-525400cfa7b2
  spec:
    rules:
    - host: merch-cad-inputs-svc-prod-training.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-cad-inputs-svc-svc
            servicePort: 80
          path: /
    - host: merch-cad-inputs-svc-prod-training.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-cad-inputs-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-cad-inputs-svc-prod-training.test.k8s.target.com
      - merch-cad-inputs-svc-prod-training.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-category-svc-v3"},"name":"merch-category-svc-v3-ingress","namespace":"snp-hubble-prod-training"},"spec":{"rules":[{"host":"merch-category-svc-v3-prod-training.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-category-svc-v3-svc","servicePort":80},"path":"/"}]}},{"host":"merch-category-svc-v3-prod-training.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-category-svc-v3-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-category-svc-v3-prod-training.test.k8s.target.com","merch-category-svc-v3-prod-training.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T19:22:44Z
    generation: 2
    labels:
      app: merch-category-svc-v3
    name: merch-category-svc-v3-ingress
    namespace: snp-hubble-prod-training
    resourceVersion: "49225323"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-training/ingresses/merch-category-svc-v3-ingress
    uid: 8cfcfc80-bd0a-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: merch-category-svc-v3-prod-training.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-category-svc-v3-svc
            servicePort: 80
          path: /
    - host: merch-category-svc-v3-prod-training.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-category-svc-v3-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-category-svc-v3-prod-training.test.k8s.target.com
      - merch-category-svc-v3-prod-training.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-project-reports-svc-v2"},"name":"merch-project-reports-svc-v2-ingress","namespace":"snp-hubble-prod-training"},"spec":{"rules":[{"host":"merch-project-reports-svc-v2-prod-training.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-project-reports-svc-v2-svc","servicePort":80},"path":"/"}]}},{"host":"merch-project-reports-svc-v2-prod-training.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-project-reports-svc-v2-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-project-reports-svc-v2-prod-training.test.k8s.target.com","merch-project-reports-svc-v2-prod-training.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-13T19:25:16Z
    generation: 1
    labels:
      app: merch-project-reports-svc-v2
    name: merch-project-reports-svc-v2-ingress
    namespace: snp-hubble-prod-training
    resourceVersion: "76155690"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-training/ingresses/merch-project-reports-svc-v2-ingress
    uid: d99222c9-e779-11e8-ad5a-525400a9bf14
  spec:
    rules:
    - host: merch-project-reports-svc-v2-prod-training.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-project-reports-svc-v2-svc
            servicePort: 80
          path: /
    - host: merch-project-reports-svc-v2-prod-training.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-project-reports-svc-v2-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-project-reports-svc-v2-prod-training.test.k8s.target.com
      - merch-project-reports-svc-v2-prod-training.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-project-svc-v3"},"name":"merch-project-svc-v3-ingress","namespace":"snp-hubble-prod-training"},"spec":{"rules":[{"host":"merch-project-svc-v3-prod-training.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-project-svc-v3-svc","servicePort":80},"path":"/"}]}},{"host":"merch-project-svc-v3-prod-training.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-project-svc-v3-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-project-svc-v3-prod-training.test.k8s.target.com","merch-project-svc-v3-prod-training.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-22T14:25:34Z
    generation: 1
    labels:
      app: merch-project-svc-v3
    name: merch-project-svc-v3-ingress
    namespace: snp-hubble-prod-training
    resourceVersion: "57708002"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-training/ingresses/merch-project-svc-v3-ingress
    uid: 566125f6-d606-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: merch-project-svc-v3-prod-training.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-project-svc-v3-svc
            servicePort: 80
          path: /
    - host: merch-project-svc-v3-prod-training.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-project-svc-v3-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-project-svc-v3-prod-training.test.k8s.target.com
      - merch-project-svc-v3-prod-training.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-remodels-svc"},"name":"merch-remodels-svc-ingress","namespace":"snp-hubble-prod-training"},"spec":{"rules":[{"host":"merch-remodels-svc-prod-training.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-remodels-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-remodels-svc-prod-training.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-remodels-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-remodels-svc-prod-training.test.k8s.target.com","merch-remodels-svc-prod-training.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-10T20:42:23Z
    generation: 1
    labels:
      app: merch-remodels-svc
    name: merch-remodels-svc-ingress
    namespace: snp-hubble-prod-training
    resourceVersion: "104636701"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-training/ingresses/merch-remodels-svc-ingress
    uid: 18c9beb2-fcbc-11e8-ad5a-525400a9bf14
  spec:
    rules:
    - host: merch-remodels-svc-prod-training.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-remodels-svc-svc
            servicePort: 80
          path: /
    - host: merch-remodels-svc-prod-training.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-remodels-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-remodels-svc-prod-training.test.k8s.target.com
      - merch-remodels-svc-prod-training.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-ties-svc"},"name":"merch-ties-svc-ingress","namespace":"snp-hubble-prod-training"},"spec":{"rules":[{"host":"merch-ties-svc-prod-training.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-ties-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-ties-svc-prod-training.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-ties-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-ties-svc-prod-training.test.k8s.target.com","merch-ties-svc-prod-training.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-10T20:19:21Z
    generation: 1
    labels:
      app: merch-ties-svc
    name: merch-ties-svc-ingress
    namespace: snp-hubble-prod-training
    resourceVersion: "104618236"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-training/ingresses/merch-ties-svc-ingress
    uid: e13b76c8-fcb8-11e8-9e69-525400e51df1
  spec:
    rules:
    - host: merch-ties-svc-prod-training.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-ties-svc-svc
            servicePort: 80
          path: /
    - host: merch-ties-svc-prod-training.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-ties-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-ties-svc-prod-training.test.k8s.target.com
      - merch-ties-svc-prod-training.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-transition-store-placements-svc"},"name":"merch-transition-store-placements-svc-ingress","namespace":"snp-hubble-prod-training"},"spec":{"rules":[{"host":"merch-transition-store-placements-svc-prod-training.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-transition-store-placements-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-transition-store-placements-svc-prod-training.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-transition-store-placements-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-transition-store-placements-svc-prod-training.test.k8s.target.com","merch-transition-store-placements-svc-prod-training.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-20T20:17:01Z
    generation: 1
    labels:
      app: merch-transition-store-placements-svc
    name: merch-transition-store-placements-svc-ingress
    namespace: snp-hubble-prod-training
    resourceVersion: "184132524"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-training/ingresses/merch-transition-store-placements-svc-ingress
    uid: 7b47ebe2-354c-11e9-a2e8-52540055f679
  spec:
    rules:
    - host: merch-transition-store-placements-svc-prod-training.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-transition-store-placements-svc-svc
            servicePort: 80
          path: /
    - host: merch-transition-store-placements-svc-prod-training.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-transition-store-placements-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-transition-store-placements-svc-prod-training.test.k8s.target.com
      - merch-transition-store-placements-svc-prod-training.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-transition-stores-svc"},"name":"merch-transition-stores-svc-ingress","namespace":"snp-hubble-prod-training"},"spec":{"rules":[{"host":"merch-transition-stores-svc-prod-training.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-transition-stores-svc-svc","servicePort":80},"path":"/"}]}},{"host":"merch-transition-stores-svc-prod-training.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-transition-stores-svc-svc","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-01-18T15:16:26Z
    generation: 1
    labels:
      app: merch-transition-stores-svc
    name: merch-transition-stores-svc-ingress
    namespace: snp-hubble-prod-training
    resourceVersion: "146777223"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-training/ingresses/merch-transition-stores-svc-ingress
    uid: 063134e0-1b34-11e9-b102-525400053814
  spec:
    rules:
    - host: merch-transition-stores-svc-prod-training.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-transition-stores-svc-svc
            servicePort: 80
          path: /
    - host: merch-transition-stores-svc-prod-training.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-transition-stores-svc-svc
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"merch-workers"},"name":"merch-workers-ingress","namespace":"snp-hubble-prod-training"},"spec":{"rules":[{"host":"merch-workers-prod-training.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-workers-svc","servicePort":80},"path":"/"}]}},{"host":"merch-workers-prod-training.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"merch-workers-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["merch-workers-prod-training.test.k8s.target.com","merch-workers-prod-training.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-25T20:07:24Z
    generation: 1
    labels:
      app: merch-workers
    name: merch-workers-ingress
    namespace: snp-hubble-prod-training
    resourceVersion: "60231247"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-training/ingresses/merch-workers-ingress
    uid: 96a1a5ce-d891-11e8-80ff-5254001f7df6
  spec:
    rules:
    - host: merch-workers-prod-training.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-workers-svc
            servicePort: 80
          path: /
    - host: merch-workers-prod-training.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: merch-workers-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - merch-workers-prod-training.test.k8s.target.com
      - merch-workers-prod-training.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-department-svc"},"name":"presentation-department-svc-ingress","namespace":"snp-hubble-prod-training"},"spec":{"rules":[{"host":"presentation-department-svc-prod-training.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-department-svc-svc","servicePort":80},"path":"/"}]}},{"host":"presentation-department-svc-prod-training.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-department-svc-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-department-svc-prod-training.test.k8s.target.com","presentation-department-svc-prod-training.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-19T19:32:10Z
    generation: 1
    labels:
      app: presentation-department-svc
    name: presentation-department-svc-ingress
    namespace: snp-hubble-prod-training
    resourceVersion: "49225954"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-training/ingresses/presentation-department-svc-ingress
    uid: b3963d14-bc42-11e8-a79d-525400524761
  spec:
    rules:
    - host: presentation-department-svc-prod-training.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-department-svc-svc
            servicePort: 80
          path: /
    - host: presentation-department-svc-prod-training.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-department-svc-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-department-svc-prod-training.test.k8s.target.com
      - presentation-department-svc-prod-training.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-category-manager-ingress"},"name":"singularity-category-manager-ingress","namespace":"snp-hubble-prod-training"},"spec":{"rules":[{"host":"singularity-category-manager-prod-training.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-category-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-category-manager-prod-training.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-category-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-category-manager-prod-training.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-category-manager-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-category-manager-prod-training.ttc-test.k8s.target.com","singularity-category-manager-prod-training.tte-test.k8s.target.com","singularity-category-manager-prod-training.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-03T16:44:45Z
    generation: 1
    labels:
      name: singularity-category-manager-ingress
    name: singularity-category-manager-ingress
    namespace: snp-hubble-prod-training
    resourceVersion: "49225693"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-training/ingresses/singularity-category-manager-ingress
    uid: a25f029e-c72b-11e8-b53b-5254000e56fe
  spec:
    rules:
    - host: singularity-category-manager-prod-training.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-category-manager-service
            servicePort: 80
          path: /
    - host: singularity-category-manager-prod-training.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-category-manager-service
            servicePort: 80
          path: /
    - host: singularity-category-manager-prod-training.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-category-manager-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-category-manager-prod-training.ttc-test.k8s.target.com
      - singularity-category-manager-prod-training.tte-test.k8s.target.com
      - singularity-category-manager-prod-training.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-department-manager-ingress"},"name":"singularity-department-manager-ingress","namespace":"snp-hubble-prod-training"},"spec":{"rules":[{"host":"singularity-department-manager-prod-training.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-department-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-department-manager-prod-training.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-department-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-department-manager-prod-training.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-department-manager-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-department-manager-prod-training.ttc-test.k8s.target.com","singularity-department-manager-prod-training.tte-test.k8s.target.com","singularity-department-manager-prod-training.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-04T02:58:26Z
    generation: 1
    labels:
      name: singularity-department-manager-ingress
    name: singularity-department-manager-ingress
    namespace: snp-hubble-prod-training
    resourceVersion: "49225684"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-training/ingresses/singularity-department-manager-ingress
    uid: 5d47b328-c781-11e8-8d90-525400b0e110
  spec:
    rules:
    - host: singularity-department-manager-prod-training.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-department-manager-service
            servicePort: 80
          path: /
    - host: singularity-department-manager-prod-training.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-department-manager-service
            servicePort: 80
          path: /
    - host: singularity-department-manager-prod-training.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-department-manager-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-department-manager-prod-training.ttc-test.k8s.target.com
      - singularity-department-manager-prod-training.tte-test.k8s.target.com
      - singularity-department-manager-prod-training.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-hubble-oauth-ingress"},"name":"singularity-hubble-oauth-ingress","namespace":"snp-hubble-prod-training"},"spec":{"rules":[{"host":"singularity-hubble-oauth-prod-training.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-hubble-oauth-service","servicePort":80},"path":"/"}]}},{"host":"singularity-hubble-oauth-prod-training.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-hubble-oauth-service","servicePort":80},"path":"/"}]}},{"host":"singularity-hubble-oauth-prod-training.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-hubble-oauth-service","servicePort":80},"path":"/"}]}},{"host":"hubble-prod-training.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-hubble-oauth-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-hubble-oauth-prod-training.ttc-test.k8s.target.com","singularity-hubble-oauth-prod-training.tte-test.k8s.target.com","singularity-hubble-oauth-prod-training.test.k8s.target.com","hubble-prod-training.target.com"],"secretName":"vanitysecret"}]}}
    creationTimestamp: 2018-10-03T16:44:30Z
    generation: 2
    labels:
      name: singularity-hubble-oauth-ingress
    name: singularity-hubble-oauth-ingress
    namespace: snp-hubble-prod-training
    resourceVersion: "49225417"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-training/ingresses/singularity-hubble-oauth-ingress
    uid: 999be790-c72b-11e8-b53b-5254000e56fe
  spec:
    rules:
    - host: singularity-hubble-oauth-prod-training.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-hubble-oauth-service
            servicePort: 80
          path: /
    - host: singularity-hubble-oauth-prod-training.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-hubble-oauth-service
            servicePort: 80
          path: /
    - host: singularity-hubble-oauth-prod-training.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-hubble-oauth-service
            servicePort: 80
          path: /
    - host: hubble-prod-training.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-hubble-oauth-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-hubble-oauth-prod-training.ttc-test.k8s.target.com
      - singularity-hubble-oauth-prod-training.tte-test.k8s.target.com
      - singularity-hubble-oauth-prod-training.test.k8s.target.com
      - hubble-prod-training.target.com
      secretName: vanitysecret
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-tie-manager-ingress"},"name":"singularity-tie-manager-ingress","namespace":"snp-hubble-prod-training"},"spec":{"rules":[{"host":"singularity-tie-manager-prod-training.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-tie-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-tie-manager-prod-training.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-tie-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-tie-manager-prod-training.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-tie-manager-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-tie-manager-prod-training.ttc-test.k8s.target.com","singularity-tie-manager-prod-training.tte-test.k8s.target.com","singularity-tie-manager-prod-training.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-14T19:18:09Z
    generation: 1
    labels:
      name: singularity-tie-manager-ingress
    name: singularity-tie-manager-ingress
    namespace: snp-hubble-prod-training
    resourceVersion: "142666047"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-training/ingresses/singularity-tie-manager-ingress
    uid: 209b0f52-1831-11e9-a085-525400e7b4ef
  spec:
    rules:
    - host: singularity-tie-manager-prod-training.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-tie-manager-service
            servicePort: 80
          path: /
    - host: singularity-tie-manager-prod-training.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-tie-manager-service
            servicePort: 80
          path: /
    - host: singularity-tie-manager-prod-training.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-tie-manager-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-tie-manager-prod-training.ttc-test.k8s.target.com
      - singularity-tie-manager-prod-training.tte-test.k8s.target.com
      - singularity-tie-manager-prod-training.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-transition-manager-ingress"},"name":"singularity-transition-manager-ingress","namespace":"snp-hubble-prod-training"},"spec":{"rules":[{"host":"singularity-transition-manager-prod-training.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-transition-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-transition-manager-prod-training.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-transition-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-transition-manager-prod-training.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-transition-manager-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-transition-manager-prod-training.ttc-test.k8s.target.com","singularity-transition-manager-prod-training.tte-test.k8s.target.com","singularity-transition-manager-prod-training.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-03T16:45:05Z
    generation: 1
    labels:
      name: singularity-transition-manager-ingress
    name: singularity-transition-manager-ingress
    namespace: snp-hubble-prod-training
    resourceVersion: "49225843"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-prod-training/ingresses/singularity-transition-manager-ingress
    uid: ae641a52-c72b-11e8-9f4c-525400adf9ce
  spec:
    rules:
    - host: singularity-transition-manager-prod-training.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-transition-manager-service
            servicePort: 80
          path: /
    - host: singularity-transition-manager-prod-training.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-transition-manager-service
            servicePort: 80
          path: /
    - host: singularity-transition-manager-prod-training.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-transition-manager-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-transition-manager-prod-training.ttc-test.k8s.target.com
      - singularity-transition-manager-prod-training.tte-test.k8s.target.com
      - singularity-transition-manager-prod-training.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-category-manager-ingress"},"name":"singularity-category-manager-ingress","namespace":"snp-hubble-stage"},"spec":{"rules":[{"host":"singularity-category-manager-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-category-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-category-manager-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-category-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-category-manager-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-category-manager-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-category-manager-stage.ttc-test.k8s.target.com","singularity-category-manager-stage.tte-test.k8s.target.com","singularity-category-manager-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-03T15:59:48Z
    generation: 1
    labels:
      name: singularity-category-manager-ingress
    name: singularity-category-manager-ingress
    namespace: snp-hubble-stage
    resourceVersion: "49225513"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-stage/ingresses/singularity-category-manager-ingress
    uid: 5abaf14c-c725-11e8-8d90-525400b0e110
  spec:
    rules:
    - host: singularity-category-manager-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-category-manager-service
            servicePort: 80
          path: /
    - host: singularity-category-manager-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-category-manager-service
            servicePort: 80
          path: /
    - host: singularity-category-manager-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-category-manager-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-category-manager-stage.ttc-test.k8s.target.com
      - singularity-category-manager-stage.tte-test.k8s.target.com
      - singularity-category-manager-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-department-manager-ingress"},"name":"singularity-department-manager-ingress","namespace":"snp-hubble-stage"},"spec":{"rules":[{"host":"singularity-department-manager-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-department-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-department-manager-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-department-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-department-manager-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-department-manager-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-department-manager-stage.ttc-test.k8s.target.com","singularity-department-manager-stage.tte-test.k8s.target.com","singularity-department-manager-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-03T15:59:29Z
    generation: 1
    labels:
      name: singularity-department-manager-ingress
    name: singularity-department-manager-ingress
    namespace: snp-hubble-stage
    resourceVersion: "49225879"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-stage/ingresses/singularity-department-manager-ingress
    uid: 4f34a216-c725-11e8-b53b-5254000e56fe
  spec:
    rules:
    - host: singularity-department-manager-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-department-manager-service
            servicePort: 80
          path: /
    - host: singularity-department-manager-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-department-manager-service
            servicePort: 80
          path: /
    - host: singularity-department-manager-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-department-manager-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-department-manager-stage.ttc-test.k8s.target.com
      - singularity-department-manager-stage.tte-test.k8s.target.com
      - singularity-department-manager-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-hubble-oauth-ingress"},"name":"singularity-hubble-oauth-ingress","namespace":"snp-hubble-stage"},"spec":{"rules":[{"host":"singularity-hubble-oauth-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-hubble-oauth-service","servicePort":80},"path":"/"}]}},{"host":"singularity-hubble-oauth-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-hubble-oauth-service","servicePort":80},"path":"/"}]}},{"host":"singularity-hubble-oauth-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-hubble-oauth-service","servicePort":80},"path":"/"}]}},{"host":"hubble-stage.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-hubble-oauth-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-hubble-oauth-stage.ttc-test.k8s.target.com","singularity-hubble-oauth-stage.tte-test.k8s.target.com","singularity-hubble-oauth-stage.test.k8s.target.com","hubble-stage.target.com"],"secretName":"vanitysecret"}]}}
    creationTimestamp: 2018-10-03T16:00:00Z
    generation: 2
    labels:
      name: singularity-hubble-oauth-ingress
    name: singularity-hubble-oauth-ingress
    namespace: snp-hubble-stage
    resourceVersion: "49225326"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-stage/ingresses/singularity-hubble-oauth-ingress
    uid: 6217b8d3-c725-11e8-b53b-5254000e56fe
  spec:
    rules:
    - host: singularity-hubble-oauth-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-hubble-oauth-service
            servicePort: 80
          path: /
    - host: singularity-hubble-oauth-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-hubble-oauth-service
            servicePort: 80
          path: /
    - host: singularity-hubble-oauth-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-hubble-oauth-service
            servicePort: 80
          path: /
    - host: hubble-stage.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-hubble-oauth-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-hubble-oauth-stage.ttc-test.k8s.target.com
      - singularity-hubble-oauth-stage.tte-test.k8s.target.com
      - singularity-hubble-oauth-stage.test.k8s.target.com
      - hubble-stage.target.com
      secretName: vanitysecret
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-tie-manager-ingress"},"name":"singularity-tie-manager-ingress","namespace":"snp-hubble-stage"},"spec":{"rules":[{"host":"singularity-tie-manager-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-tie-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-tie-manager-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-tie-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-tie-manager-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-tie-manager-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-tie-manager-stage.ttc-test.k8s.target.com","singularity-tie-manager-stage.tte-test.k8s.target.com","singularity-tie-manager-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-11T21:23:16Z
    generation: 1
    labels:
      name: singularity-tie-manager-ingress
    name: singularity-tie-manager-ingress
    namespace: snp-hubble-stage
    resourceVersion: "139782237"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-stage/ingresses/singularity-tie-manager-ingress
    uid: 1c225b00-15e7-11e9-a085-525400e7b4ef
  spec:
    rules:
    - host: singularity-tie-manager-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-tie-manager-service
            servicePort: 80
          path: /
    - host: singularity-tie-manager-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-tie-manager-service
            servicePort: 80
          path: /
    - host: singularity-tie-manager-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-tie-manager-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-tie-manager-stage.ttc-test.k8s.target.com
      - singularity-tie-manager-stage.tte-test.k8s.target.com
      - singularity-tie-manager-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-transition-manager-ingress"},"name":"singularity-transition-manager-ingress","namespace":"snp-hubble-stage"},"spec":{"rules":[{"host":"singularity-transition-manager-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-transition-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-transition-manager-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-transition-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-transition-manager-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-transition-manager-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-transition-manager-stage.ttc-test.k8s.target.com","singularity-transition-manager-stage.tte-test.k8s.target.com","singularity-transition-manager-stage.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-03T15:59:17Z
    generation: 1
    labels:
      name: singularity-transition-manager-ingress
    name: singularity-transition-manager-ingress
    namespace: snp-hubble-stage
    resourceVersion: "49225891"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-stage/ingresses/singularity-transition-manager-ingress
    uid: 481a0793-c725-11e8-9f4c-525400adf9ce
  spec:
    rules:
    - host: singularity-transition-manager-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-transition-manager-service
            servicePort: 80
          path: /
    - host: singularity-transition-manager-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-transition-manager-service
            servicePort: 80
          path: /
    - host: singularity-transition-manager-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-transition-manager-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-transition-manager-stage.ttc-test.k8s.target.com
      - singularity-transition-manager-stage.tte-test.k8s.target.com
      - singularity-transition-manager-stage.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-category-manager-ingress"},"name":"singularity-category-manager-ingress","namespace":"snp-hubble-test"},"spec":{"rules":[{"host":"singularity-category-manager-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-category-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-category-manager-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-category-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-category-manager-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-category-manager-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-category-manager-test.ttc-test.k8s.target.com","singularity-category-manager-test.tte-test.k8s.target.com","singularity-category-manager-test.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-01T21:30:26Z
    generation: 1
    labels:
      name: singularity-category-manager-ingress
    name: singularity-category-manager-ingress
    namespace: snp-hubble-test
    resourceVersion: "49225786"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-test/ingresses/singularity-category-manager-ingress
    uid: 361c8daa-c5c1-11e8-b53b-5254000e56fe
  spec:
    rules:
    - host: singularity-category-manager-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-category-manager-service
            servicePort: 80
          path: /
    - host: singularity-category-manager-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-category-manager-service
            servicePort: 80
          path: /
    - host: singularity-category-manager-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-category-manager-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-category-manager-test.ttc-test.k8s.target.com
      - singularity-category-manager-test.tte-test.k8s.target.com
      - singularity-category-manager-test.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-department-manager-ingress"},"name":"singularity-department-manager-ingress","namespace":"snp-hubble-test"},"spec":{"rules":[{"host":"singularity-department-manager-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-department-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-department-manager-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-department-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-department-manager-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-department-manager-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-department-manager-test.ttc-test.k8s.target.com","singularity-department-manager-test.tte-test.k8s.target.com","singularity-department-manager-test.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-01T21:31:09Z
    generation: 1
    labels:
      name: singularity-department-manager-ingress
    name: singularity-department-manager-ingress
    namespace: snp-hubble-test
    resourceVersion: "49225808"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-test/ingresses/singularity-department-manager-ingress
    uid: 4ff276d7-c5c1-11e8-b53b-5254000e56fe
  spec:
    rules:
    - host: singularity-department-manager-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-department-manager-service
            servicePort: 80
          path: /
    - host: singularity-department-manager-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-department-manager-service
            servicePort: 80
          path: /
    - host: singularity-department-manager-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-department-manager-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-department-manager-test.ttc-test.k8s.target.com
      - singularity-department-manager-test.tte-test.k8s.target.com
      - singularity-department-manager-test.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-hubble-oauth-ingress"},"name":"singularity-hubble-oauth-ingress","namespace":"snp-hubble-test"},"spec":{"rules":[{"host":"singularity-hubble-oauth-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-hubble-oauth-service","servicePort":80},"path":"/"}]}},{"host":"singularity-hubble-oauth-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-hubble-oauth-service","servicePort":80},"path":"/"}]}},{"host":"singularity-hubble-oauth-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-hubble-oauth-service","servicePort":80},"path":"/"}]}},{"host":"hubble-test.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-hubble-oauth-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-hubble-oauth-test.ttc-test.k8s.target.com","singularity-hubble-oauth-test.tte-test.k8s.target.com","singularity-hubble-oauth-test.test.k8s.target.com","hubble-test.target.com"],"secretName":"vanitysecret"}]}}
    creationTimestamp: 2018-10-01T21:28:35Z
    generation: 2
    labels:
      name: singularity-hubble-oauth-ingress
    name: singularity-hubble-oauth-ingress
    namespace: snp-hubble-test
    resourceVersion: "49225631"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-test/ingresses/singularity-hubble-oauth-ingress
    uid: f43661b8-c5c0-11e8-9f4c-525400adf9ce
  spec:
    rules:
    - host: singularity-hubble-oauth-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-hubble-oauth-service
            servicePort: 80
          path: /
    - host: singularity-hubble-oauth-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-hubble-oauth-service
            servicePort: 80
          path: /
    - host: singularity-hubble-oauth-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-hubble-oauth-service
            servicePort: 80
          path: /
    - host: hubble-test.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-hubble-oauth-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-hubble-oauth-test.ttc-test.k8s.target.com
      - singularity-hubble-oauth-test.tte-test.k8s.target.com
      - singularity-hubble-oauth-test.test.k8s.target.com
      - hubble-test.target.com
      secretName: vanitysecret
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-tie-manager-ingress"},"name":"singularity-tie-manager-ingress","namespace":"snp-hubble-test"},"spec":{"rules":[{"host":"singularity-tie-manager-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-tie-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-tie-manager-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-tie-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-tie-manager-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-tie-manager-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-tie-manager-test.ttc-test.k8s.target.com","singularity-tie-manager-test.tte-test.k8s.target.com","singularity-tie-manager-test.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-11T21:14:07Z
    generation: 1
    labels:
      name: singularity-tie-manager-ingress
    name: singularity-tie-manager-ingress
    namespace: snp-hubble-test
    resourceVersion: "139775050"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-test/ingresses/singularity-tie-manager-ingress
    uid: d4fb6b1c-15e5-11e9-b102-525400053814
  spec:
    rules:
    - host: singularity-tie-manager-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-tie-manager-service
            servicePort: 80
          path: /
    - host: singularity-tie-manager-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-tie-manager-service
            servicePort: 80
          path: /
    - host: singularity-tie-manager-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-tie-manager-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-tie-manager-test.ttc-test.k8s.target.com
      - singularity-tie-manager-test.tte-test.k8s.target.com
      - singularity-tie-manager-test.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"singularity-transition-manager-ingress"},"name":"singularity-transition-manager-ingress","namespace":"snp-hubble-test"},"spec":{"rules":[{"host":"singularity-transition-manager-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-transition-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-transition-manager-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-transition-manager-service","servicePort":80},"path":"/"}]}},{"host":"singularity-transition-manager-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"singularity-transition-manager-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["singularity-transition-manager-test.ttc-test.k8s.target.com","singularity-transition-manager-test.tte-test.k8s.target.com","singularity-transition-manager-test.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-01T21:33:03Z
    generation: 1
    labels:
      name: singularity-transition-manager-ingress
    name: singularity-transition-manager-ingress
    namespace: snp-hubble-test
    resourceVersion: "49225392"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-hubble-test/ingresses/singularity-transition-manager-ingress
    uid: 93b0f993-c5c1-11e8-8d90-525400b0e110
  spec:
    rules:
    - host: singularity-transition-manager-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-transition-manager-service
            servicePort: 80
          path: /
    - host: singularity-transition-manager-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-transition-manager-service
            servicePort: 80
          path: /
    - host: singularity-transition-manager-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: singularity-transition-manager-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - singularity-transition-manager-test.ttc-test.k8s.target.com
      - singularity-transition-manager-test.tte-test.k8s.target.com
      - singularity-transition-manager-test.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-ids-api"},"name":"presentation-ids-api","namespace":"snp-pog-management-dev"},"spec":{"rules":[{"host":"presentation-ids-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-ids-api","servicePort":80},"path":"/"}]}},{"host":"presentation-ids-api-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-ids-api","servicePort":80},"path":"/"}]}},{"host":"presentation-ids-api-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-ids-api","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-ids-api-dev.test.k8s.target.com","presentation-ids-api-dev.ttc-test.k8s.target.com","presentation-ids-api-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-03-13T16:14:40Z
    generation: 1
    labels:
      app: presentation-ids-api
    name: presentation-ids-api
    namespace: snp-pog-management-dev
    resourceVersion: "207283437"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-pog-management-dev/ingresses/presentation-ids-api
    uid: 1b17e370-45ab-11e9-ad0c-5254005cae79
  spec:
    rules:
    - host: presentation-ids-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-ids-api
            servicePort: 80
          path: /
    - host: presentation-ids-api-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-ids-api
            servicePort: 80
          path: /
    - host: presentation-ids-api-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-ids-api
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-ids-api-dev.test.k8s.target.com
      - presentation-ids-api-dev.ttc-test.k8s.target.com
      - presentation-ids-api-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-strategies-api"},"name":"presentation-strategies-api","namespace":"snp-pog-management-dev"},"spec":{"rules":[{"host":"presentation-strategies-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-strategies-api","servicePort":80},"path":"/"}]}},{"host":"presentation-strategies-api-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-strategies-api","servicePort":80},"path":"/"}]}},{"host":"presentation-strategies-api-dev.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-strategies-api","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-strategies-api-dev.test.k8s.target.com","presentation-strategies-api-dev.ttc-test.k8s.target.com","presentation-strategies-api-dev.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-03-12T21:13:57Z
    generation: 1
    labels:
      app: presentation-strategies-api
    name: presentation-strategies-api
    namespace: snp-pog-management-dev
    resourceVersion: "206487676"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-pog-management-dev/ingresses/presentation-strategies-api
    uid: bf72415a-450b-11e9-ad0c-5254005cae79
  spec:
    rules:
    - host: presentation-strategies-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-strategies-api
            servicePort: 80
          path: /
    - host: presentation-strategies-api-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-strategies-api
            servicePort: 80
          path: /
    - host: presentation-strategies-api-dev.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-strategies-api
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-strategies-api-dev.test.k8s.target.com
      - presentation-strategies-api-dev.ttc-test.k8s.target.com
      - presentation-strategies-api-dev.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-ids-api"},"name":"presentation-ids-api","namespace":"snp-pog-management-stage"},"spec":{"rules":[{"host":"presentation-ids-api-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-ids-api","servicePort":80},"path":"/"}]}},{"host":"presentation-ids-api-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-ids-api","servicePort":80},"path":"/"}]}},{"host":"presentation-ids-api-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-ids-api","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-ids-api-stage.test.k8s.target.com","presentation-ids-api-stage.ttc-test.k8s.target.com","presentation-ids-api-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-03-13T16:51:35Z
    generation: 1
    labels:
      app: presentation-ids-api
    name: presentation-ids-api
    namespace: snp-pog-management-stage
    resourceVersion: "207309408"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-pog-management-stage/ingresses/presentation-ids-api
    uid: 43761ff9-45b0-11e9-9ed7-5254006b625b
  spec:
    rules:
    - host: presentation-ids-api-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-ids-api
            servicePort: 80
          path: /
    - host: presentation-ids-api-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-ids-api
            servicePort: 80
          path: /
    - host: presentation-ids-api-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-ids-api
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-ids-api-stage.test.k8s.target.com
      - presentation-ids-api-stage.ttc-test.k8s.target.com
      - presentation-ids-api-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-strategies-api"},"name":"presentation-strategies-api","namespace":"snp-pog-management-stage"},"spec":{"rules":[{"host":"presentation-strategies-api-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-strategies-api","servicePort":80},"path":"/"}]}},{"host":"presentation-strategies-api-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-strategies-api","servicePort":80},"path":"/"}]}},{"host":"presentation-strategies-api-stage.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-strategies-api","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-strategies-api-stage.test.k8s.target.com","presentation-strategies-api-stage.ttc-test.k8s.target.com","presentation-strategies-api-stage.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-03-12T21:55:33Z
    generation: 1
    labels:
      app: presentation-strategies-api
    name: presentation-strategies-api
    namespace: snp-pog-management-stage
    resourceVersion: "206518275"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-pog-management-stage/ingresses/presentation-strategies-api
    uid: 8f430e67-4511-11e9-ad0c-5254005cae79
  spec:
    rules:
    - host: presentation-strategies-api-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-strategies-api
            servicePort: 80
          path: /
    - host: presentation-strategies-api-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-strategies-api
            servicePort: 80
          path: /
    - host: presentation-strategies-api-stage.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-strategies-api
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-strategies-api-stage.test.k8s.target.com
      - presentation-strategies-api-stage.ttc-test.k8s.target.com
      - presentation-strategies-api-stage.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-ids-api"},"name":"presentation-ids-api","namespace":"snp-pog-management-test"},"spec":{"rules":[{"host":"presentation-ids-api-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-ids-api","servicePort":80},"path":"/"}]}},{"host":"presentation-ids-api-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-ids-api","servicePort":80},"path":"/"}]}},{"host":"presentation-ids-api-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-ids-api","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-ids-api-test.test.k8s.target.com","presentation-ids-api-test.ttc-test.k8s.target.com","presentation-ids-api-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-03-13T16:16:09Z
    generation: 1
    labels:
      app: presentation-ids-api
    name: presentation-ids-api
    namespace: snp-pog-management-test
    resourceVersion: "207284310"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-pog-management-test/ingresses/presentation-ids-api
    uid: 4fee0c5d-45ab-11e9-ab79-525400fe4551
  spec:
    rules:
    - host: presentation-ids-api-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-ids-api
            servicePort: 80
          path: /
    - host: presentation-ids-api-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-ids-api
            servicePort: 80
          path: /
    - host: presentation-ids-api-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-ids-api
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-ids-api-test.test.k8s.target.com
      - presentation-ids-api-test.ttc-test.k8s.target.com
      - presentation-ids-api-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentation-strategies-api"},"name":"presentation-strategies-api","namespace":"snp-pog-management-test"},"spec":{"rules":[{"host":"presentation-strategies-api-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-strategies-api","servicePort":80},"path":"/"}]}},{"host":"presentation-strategies-api-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-strategies-api","servicePort":80},"path":"/"}]}},{"host":"presentation-strategies-api-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentation-strategies-api","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentation-strategies-api-test.test.k8s.target.com","presentation-strategies-api-test.ttc-test.k8s.target.com","presentation-strategies-api-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-03-12T21:49:22Z
    generation: 1
    labels:
      app: presentation-strategies-api
    name: presentation-strategies-api
    namespace: snp-pog-management-test
    resourceVersion: "206513935"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-pog-management-test/ingresses/presentation-strategies-api
    uid: b2676e1c-4510-11e9-ad0c-5254005cae79
  spec:
    rules:
    - host: presentation-strategies-api-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-strategies-api
            servicePort: 80
          path: /
    - host: presentation-strategies-api-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-strategies-api
            servicePort: 80
          path: /
    - host: presentation-strategies-api-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentation-strategies-api
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentation-strategies-api-test.test.k8s.target.com
      - presentation-strategies-api-test.ttc-test.k8s.target.com
      - presentation-strategies-api-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentations-elastic-api"},"name":"presentations-elastic-api-ingress","namespace":"snp-presentations-dev"},"spec":{"rules":[{"host":"presentations-elastic-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentations-elastic-api-svc","servicePort":80},"path":"/"}]}},{"host":"presentations-elastic-api-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentations-elastic-api-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentations-elastic-api-dev.test.k8s.target.com","presentations-elastic-api-dev.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-16T10:47:37Z
    generation: 2
    labels:
      app: presentations-elastic-api
    name: presentations-elastic-api-ingress
    namespace: snp-presentations-dev
    resourceVersion: "145289095"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-presentations-dev/ingresses/presentations-elastic-api-ingress
    uid: 23c21657-197c-11e9-bdc1-525400cfa7b2
  spec:
    rules:
    - host: presentations-elastic-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentations-elastic-api-svc
            servicePort: 80
          path: /
    - host: presentations-elastic-api-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentations-elastic-api-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentations-elastic-api-dev.test.k8s.target.com
      - presentations-elastic-api-dev.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentations-api"},"name":"presentations-history-ingress","namespace":"snp-presentations-dev"},"spec":{"rules":[{"host":"presentations-history-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentations-svc","servicePort":7777},"path":"/"}]}},{"host":"presentations-history-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentations-svc","servicePort":7777},"path":"/"}]}}],"tls":[{"hosts":["presentations-history-dev.test.k8s.target.com","presentations-history-dev.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-29T07:22:20Z
    generation: 1
    labels:
      app: presentations-api
    name: presentations-history-ingress
    namespace: snp-presentations-dev
    resourceVersion: "92211300"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-presentations-dev/ingresses/presentations-history-ingress
    uid: 81fc92a9-f3a7-11e8-ad5a-525400a9bf14
  spec:
    rules:
    - host: presentations-history-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentations-svc
            servicePort: 7777
          path: /
    - host: presentations-history-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentations-svc
            servicePort: 7777
          path: /
    tls:
    - hosts:
      - presentations-history-dev.test.k8s.target.com
      - presentations-history-dev.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentations-api"},"name":"presentations-hollow-ingress","namespace":"snp-presentations-dev"},"spec":{"rules":[{"host":"presentations-hollow-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentations-svc","servicePort":7778},"path":"/"}]}},{"host":"presentations-hollow-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentations-svc","servicePort":7778},"path":"/"}]}}],"tls":[{"hosts":["presentations-hollow-dev.test.k8s.target.com","presentations-hollow-dev.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T03:07:52Z
    generation: 1
    labels:
      app: presentations-api
    name: presentations-hollow-ingress
    namespace: snp-presentations-dev
    resourceVersion: "49225798"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-presentations-dev/ingresses/presentations-hollow-ingress
    uid: 873f2b81-bd4b-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: presentations-hollow-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentations-svc
            servicePort: 7778
          path: /
    - host: presentations-hollow-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentations-svc
            servicePort: 7778
          path: /
    tls:
    - hosts:
      - presentations-hollow-dev.test.k8s.target.com
      - presentations-hollow-dev.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentations-api"},"name":"presentations-ingress","namespace":"snp-presentations-dev"},"spec":{"rules":[{"host":"presentations-api-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentations-svc","servicePort":80},"path":"/"}]}},{"host":"presentations-api-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentations-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentations-api-dev.test.k8s.target.com","presentations-api-dev.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T03:07:50Z
    generation: 2
    labels:
      app: presentations-api
    name: presentations-ingress
    namespace: snp-presentations-dev
    resourceVersion: "49225664"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-presentations-dev/ingresses/presentations-ingress
    uid: 85ec2978-bd4b-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: presentations-api-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentations-svc
            servicePort: 80
          path: /
    - host: presentations-api-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentations-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentations-api-dev.test.k8s.target.com
      - presentations-api-dev.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentations-api"},"name":"presentations-noproxy-ingress","namespace":"snp-presentations-dev"},"spec":{"rules":[{"host":"presentations-api-noproxy-dev.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentations-svc","servicePort":8080},"path":"/"}]}},{"host":"presentations-api-noproxy-dev.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentations-svc","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["presentations-api-noproxy-dev.test.k8s.target.com","presentations-api-noproxy-dev.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T03:07:51Z
    generation: 1
    labels:
      app: presentations-api
    name: presentations-noproxy-ingress
    namespace: snp-presentations-dev
    resourceVersion: "49225737"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-presentations-dev/ingresses/presentations-noproxy-ingress
    uid: 86885bc4-bd4b-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: presentations-api-noproxy-dev.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentations-svc
            servicePort: 8080
          path: /
    - host: presentations-api-noproxy-dev.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentations-svc
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - presentations-api-noproxy-dev.test.k8s.target.com
      - presentations-api-noproxy-dev.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentations-api"},"name":"presentations-history-ingress","namespace":"snp-presentations-stage"},"spec":{"rules":[{"host":"presentations-history-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentations-svc","servicePort":7777},"path":"/"}]}},{"host":"presentations-history-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentations-svc","servicePort":7777},"path":"/"}]}}],"tls":[{"hosts":["presentations-history-stage.test.k8s.target.com","presentations-history-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-03T15:48:36Z
    generation: 1
    labels:
      app: presentations-api
    name: presentations-history-ingress
    namespace: snp-presentations-stage
    resourceVersion: "96855068"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-presentations-stage/ingresses/presentations-history-ingress
    uid: e51af78b-f712-11e8-9e69-525400e51df1
  spec:
    rules:
    - host: presentations-history-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentations-svc
            servicePort: 7777
          path: /
    - host: presentations-history-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentations-svc
            servicePort: 7777
          path: /
    tls:
    - hosts:
      - presentations-history-stage.test.k8s.target.com
      - presentations-history-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentations-api"},"name":"presentations-hollow-ingress","namespace":"snp-presentations-stage"},"spec":{"rules":[{"host":"presentations-hollow-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentations-svc","servicePort":7778},"path":"/"}]}},{"host":"presentations-hollow-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentations-svc","servicePort":7778},"path":"/"}]}}],"tls":[{"hosts":["presentations-hollow-stage.test.k8s.target.com","presentations-hollow-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-03T15:45:27Z
    generation: 1
    labels:
      app: presentations-api
    name: presentations-hollow-ingress
    namespace: snp-presentations-stage
    resourceVersion: "96852632"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-presentations-stage/ingresses/presentations-hollow-ingress
    uid: 74fe33d5-f712-11e8-981f-5254001f7df6
  spec:
    rules:
    - host: presentations-hollow-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentations-svc
            servicePort: 7778
          path: /
    - host: presentations-hollow-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentations-svc
            servicePort: 7778
          path: /
    tls:
    - hosts:
      - presentations-hollow-stage.test.k8s.target.com
      - presentations-hollow-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentations-api"},"name":"presentations-ingress","namespace":"snp-presentations-stage"},"spec":{"rules":[{"host":"presentations-api-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentations-svc","servicePort":80},"path":"/"}]}},{"host":"presentations-api-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentations-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["presentations-api-stage.test.k8s.target.com","presentations-api-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-03T15:45:22Z
    generation: 1
    labels:
      app: presentations-api
    name: presentations-ingress
    namespace: snp-presentations-stage
    resourceVersion: "96852631"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-presentations-stage/ingresses/presentations-ingress
    uid: 71c0d6ff-f712-11e8-981f-5254001f7df6
  spec:
    rules:
    - host: presentations-api-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentations-svc
            servicePort: 80
          path: /
    - host: presentations-api-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentations-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - presentations-api-stage.test.k8s.target.com
      - presentations-api-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"presentations-api"},"name":"presentations-noproxy-ingress","namespace":"snp-presentations-stage"},"spec":{"rules":[{"host":"presentations-api-noproxy-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentations-svc","servicePort":8080},"path":"/"}]}},{"host":"presentations-api-noproxy-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"presentations-svc","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["presentations-api-noproxy-stage.test.k8s.target.com","presentations-api-noproxy-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-03T15:45:24Z
    generation: 1
    labels:
      app: presentations-api
    name: presentations-noproxy-ingress
    namespace: snp-presentations-stage
    resourceVersion: "96852629"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-presentations-stage/ingresses/presentations-noproxy-ingress
    uid: 731766cc-f712-11e8-981f-5254001f7df6
  spec:
    rules:
    - host: presentations-api-noproxy-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentations-svc
            servicePort: 8080
          path: /
    - host: presentations-api-noproxy-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: presentations-svc
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - presentations-api-noproxy-stage.test.k8s.target.com
      - presentations-api-noproxy-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"mm-attachscan-svc"},"name":"mm-attachscan-svc-ingress","namespace":"snp-print-stage"},"spec":{"rules":[{"host":"mm-attachscan-svc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-attachscan-svc-k8svc","servicePort":80},"path":"/"}]}},{"host":"mm-attachscan-svc-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-attachscan-svc-k8svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["mm-attachscan-svc-stage.test.k8s.target.com","mm-attachscan-svc-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-24T05:44:01Z
    generation: 1
    labels:
      app: mm-attachscan-svc
    name: mm-attachscan-svc-ingress
    namespace: snp-print-stage
    resourceVersion: "49225562"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-print-stage/ingresses/mm-attachscan-svc-ingress
    uid: d6ce0f77-bfbc-11e8-a79d-525400524761
  spec:
    rules:
    - host: mm-attachscan-svc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-attachscan-svc-k8svc
            servicePort: 80
          path: /
    - host: mm-attachscan-svc-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-attachscan-svc-k8svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - mm-attachscan-svc-stage.test.k8s.target.com
      - mm-attachscan-svc-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"mm-attachscan-ui"},"name":"mm-attachscan-ui-ingress","namespace":"snp-print-stage"},"spec":{"rules":[{"host":"mm-attachscan-ui-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-attachscan-ui-k8svc","servicePort":80},"path":"/"}]}},{"host":"mm-attachscan-ui-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-attachscan-ui-k8svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["mm-attachscan-ui-stage.test.k8s.target.com","mm-attachscan-ui-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-24T09:13:41Z
    generation: 1
    labels:
      app: mm-attachscan-ui
    name: mm-attachscan-ui-ingress
    namespace: snp-print-stage
    resourceVersion: "49225427"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-print-stage/ingresses/mm-attachscan-ui-ingress
    uid: 20fa3fa9-bfda-11e8-a79d-525400524761
  spec:
    rules:
    - host: mm-attachscan-ui-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-attachscan-ui-k8svc
            servicePort: 80
          path: /
    - host: mm-attachscan-ui-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-attachscan-ui-k8svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - mm-attachscan-ui-stage.test.k8s.target.com
      - mm-attachscan-ui-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"mm-label-formatter-svc"},"name":"mm-label-formatter-svc-ingress","namespace":"snp-print-stage"},"spec":{"rules":[{"host":"mm-label-formatter-svc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-label-formatter-svc-k8svc","servicePort":80},"path":"/"}]}},{"host":"mm-label-formatter-svc-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-label-formatter-svc-k8svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["mm-label-formatter-svc-stage.test.k8s.target.com","mm-label-formatter-svc-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T05:01:05Z
    generation: 1
    labels:
      app: mm-label-formatter-svc
    name: mm-label-formatter-svc-ingress
    namespace: snp-print-stage
    resourceVersion: "49225329"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-print-stage/ingresses/mm-label-formatter-svc-ingress
    uid: 585a9020-bd5b-11e8-b822-525400b06b0f
  spec:
    rules:
    - host: mm-label-formatter-svc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-label-formatter-svc-k8svc
            servicePort: 80
          path: /
    - host: mm-label-formatter-svc-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-label-formatter-svc-k8svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - mm-label-formatter-svc-stage.test.k8s.target.com
      - mm-label-formatter-svc-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"mm-label-host-svc"},"name":"mm-label-host-svc-ingress","namespace":"snp-print-stage"},"spec":{"rules":[{"host":"mm-label-host-svc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-label-host-svc-k8svc","servicePort":80},"path":"/"}]}},{"host":"mm-label-host-svc-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-label-host-svc-k8svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["mm-label-host-svc-stage.test.k8s.target.com","mm-label-host-svc-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T09:31:48Z
    generation: 1
    labels:
      app: mm-label-host-svc
    name: mm-label-host-svc-ingress
    namespace: snp-print-stage
    resourceVersion: "49225459"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-print-stage/ingresses/mm-label-host-svc-ingress
    uid: 29e1c6f0-bd81-11e8-b822-525400b06b0f
  spec:
    rules:
    - host: mm-label-host-svc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-label-host-svc-k8svc
            servicePort: 80
          path: /
    - host: mm-label-host-svc-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-label-host-svc-k8svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - mm-label-host-svc-stage.test.k8s.target.com
      - mm-label-host-svc-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"mm-label-poller-svc"},"name":"mm-label-poller-svc-ingress","namespace":"snp-print-stage"},"spec":{"rules":[{"host":"mm-label-poller-svc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-label-poller-svc-k8svc","servicePort":80},"path":"/"}]}},{"host":"mm-label-poller-svc-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-label-poller-svc-k8svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["mm-label-poller-svc-stage.test.k8s.target.com","mm-label-poller-svc-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-25T06:10:36Z
    generation: 1
    labels:
      app: mm-label-poller-svc
    name: mm-label-poller-svc-ingress
    namespace: snp-print-stage
    resourceVersion: "49226004"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-print-stage/ingresses/mm-label-poller-svc-ingress
    uid: b7f7ca78-c089-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: mm-label-poller-svc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-label-poller-svc-k8svc
            servicePort: 80
          path: /
    - host: mm-label-poller-svc-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-label-poller-svc-k8svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - mm-label-poller-svc-stage.test.k8s.target.com
      - mm-label-poller-svc-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"mm-label-processor-svc"},"name":"mm-label-processor-svc-ingress","namespace":"snp-print-stage"},"spec":{"rules":[{"host":"mm-label-processor-svc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-label-processor-svc-k8svc","servicePort":80},"path":"/"}]}},{"host":"mm-label-processor-svc-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-label-processor-svc-k8svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["mm-label-processor-svc-stage.test.k8s.target.com","mm-label-processor-svc-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-24T05:07:36Z
    generation: 2
    labels:
      app: mm-label-processor-svc
    name: mm-label-processor-svc-ingress
    namespace: snp-print-stage
    resourceVersion: "49225780"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-print-stage/ingresses/mm-label-processor-svc-ingress
    uid: c0a087ca-bfb7-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: mm-label-processor-svc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-label-processor-svc-k8svc
            servicePort: 80
          path: /
    - host: mm-label-processor-svc-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-label-processor-svc-k8svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - mm-label-processor-svc-stage.test.k8s.target.com
      - mm-label-processor-svc-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"mm-label-writer-svc"},"name":"mm-label-writer-svc-ingress","namespace":"snp-print-stage"},"spec":{"rules":[{"host":"mm-label-writer-svc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-label-writer-svc-k8svc","servicePort":80},"path":"/"}]}},{"host":"mm-label-writer-svc-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-label-writer-svc-k8svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["mm-label-writer-svc-stage.test.k8s.target.com","mm-label-writer-svc-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T07:29:33Z
    generation: 2
    labels:
      app: mm-label-writer-svc
    name: mm-label-writer-svc-ingress
    namespace: snp-print-stage
    resourceVersion: "49225473"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-print-stage/ingresses/mm-label-writer-svc-ingress
    uid: 15f6c9e2-bd70-11e8-a79d-525400524761
  spec:
    rules:
    - host: mm-label-writer-svc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-label-writer-svc-k8svc
            servicePort: 80
          path: /
    - host: mm-label-writer-svc-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-label-writer-svc-k8svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - mm-label-writer-svc-stage.test.k8s.target.com
      - mm-label-writer-svc-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"mm-mass-maintenance-svc"},"name":"mm-mass-maintenance-svc-ingress","namespace":"snp-print-stage"},"spec":{"rules":[{"host":"mm-mass-maintenance-svc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-mass-maintenance-svc-k8svc","servicePort":80},"path":"/"}]}},{"host":"mm-mass-maintenance-svc-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-mass-maintenance-svc-k8svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["mm-mass-maintenance-svc-stage.test.k8s.target.com","mm-mass-maintenance-svc-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-04T10:48:57Z
    generation: 1
    labels:
      app: mm-mass-maintenance-svc
    name: mm-mass-maintenance-svc-ingress
    namespace: snp-print-stage
    resourceVersion: "166172863"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-print-stage/ingresses/mm-mass-maintenance-svc-ingress
    uid: 795d006c-286a-11e9-a621-525400d4de49
  spec:
    rules:
    - host: mm-mass-maintenance-svc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-mass-maintenance-svc-k8svc
            servicePort: 80
          path: /
    - host: mm-mass-maintenance-svc-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-mass-maintenance-svc-k8svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - mm-mass-maintenance-svc-stage.test.k8s.target.com
      - mm-mass-maintenance-svc-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"mm-mass-maintenance-ui"},"name":"mm-mass-maintenance-ui-ingress","namespace":"snp-print-stage"},"spec":{"rules":[{"host":"mm-mass-maintenance-ui-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-mass-maintenance-ui-k8svc","servicePort":80},"path":"/"}]}},{"host":"mm-mass-maintenance-ui-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-mass-maintenance-ui-k8svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["mm-mass-maintenance-ui-stage.test.k8s.target.com","mm-mass-maintenance-ui-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-03-18T08:33:48Z
    generation: 1
    labels:
      app: mm-mass-maintenance-ui
    name: mm-mass-maintenance-ui-ingress
    namespace: snp-print-stage
    resourceVersion: "211934602"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-print-stage/ingresses/mm-mass-maintenance-ui-ingress
    uid: 8cec80ec-4958-11e9-86b4-525400993427
  spec:
    rules:
    - host: mm-mass-maintenance-ui-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-mass-maintenance-ui-k8svc
            servicePort: 80
          path: /
    - host: mm-mass-maintenance-ui-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-mass-maintenance-ui-k8svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - mm-mass-maintenance-ui-stage.test.k8s.target.com
      - mm-mass-maintenance-ui-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"mm-poglblprint-scheduler-svc"},"name":"mm-poglblprint-scheduler-svc-ingress","namespace":"snp-print-stage"},"spec":{"rules":[{"host":"mm-poglblprint-scheduler-svc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-poglblprint-scheduler-svc-k8svc","servicePort":80},"path":"/"}]}},{"host":"mm-poglblprint-scheduler-svc-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-poglblprint-scheduler-svc-k8svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["mm-poglblprint-scheduler-svc-stage.test.k8s.target.com","mm-poglblprint-scheduler-svc-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-24T04:48:41Z
    generation: 1
    labels:
      app: mm-poglblprint-scheduler-svc
    name: mm-poglblprint-scheduler-svc-ingress
    namespace: snp-print-stage
    resourceVersion: "49225916"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-print-stage/ingresses/mm-poglblprint-scheduler-svc-ingress
    uid: 1c0c18c6-bfb5-11e8-b822-525400b06b0f
  spec:
    rules:
    - host: mm-poglblprint-scheduler-svc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-poglblprint-scheduler-svc-k8svc
            servicePort: 80
          path: /
    - host: mm-poglblprint-scheduler-svc-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-poglblprint-scheduler-svc-k8svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - mm-poglblprint-scheduler-svc-stage.test.k8s.target.com
      - mm-poglblprint-scheduler-svc-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"mm-print-formatter-svc"},"name":"mm-print-formatter-svc-ingress","namespace":"snp-print-stage"},"spec":{"rules":[{"host":"mm-print-formatter-svc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-print-formatter-svc-k8svc","servicePort":1007},"path":"/"}]}},{"host":"mm-print-formatter-svc-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-print-formatter-svc-k8svc","servicePort":1007},"path":"/"}]}}],"tls":[{"hosts":["mm-print-formatter-svc-stage.test.k8s.target.com","mm-print-formatter-svc-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-24T03:37:52Z
    generation: 1
    labels:
      app: mm-print-formatter-svc
    name: mm-print-formatter-svc-ingress
    namespace: snp-print-stage
    resourceVersion: "49225557"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-print-stage/ingresses/mm-print-formatter-svc-ingress
    uid: 379de48c-bfab-11e8-a79d-525400524761
  spec:
    rules:
    - host: mm-print-formatter-svc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-print-formatter-svc-k8svc
            servicePort: 1007
          path: /
    - host: mm-print-formatter-svc-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-print-formatter-svc-k8svc
            servicePort: 1007
          path: /
    tls:
    - hosts:
      - mm-print-formatter-svc-stage.test.k8s.target.com
      - mm-print-formatter-svc-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"mm-print-monitor-ui"},"name":"mm-print-monitor-ui-ingress","namespace":"snp-print-stage"},"spec":{"rules":[{"host":"mm-print-monitor-ui-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-print-monitor-ui-k8svc","servicePort":80},"path":"/"}]}},{"host":"mm-print-monitor-ui-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-print-monitor-ui-k8svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["mm-print-monitor-ui-stage.test.k8s.target.com","mm-print-monitor-ui-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-24T09:05:16Z
    generation: 1
    labels:
      app: mm-print-monitor-ui
    name: mm-print-monitor-ui-ingress
    namespace: snp-print-stage
    resourceVersion: "49225702"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-print-stage/ingresses/mm-print-monitor-ui-ingress
    uid: f400e52e-bfd8-11e8-b822-525400b06b0f
  spec:
    rules:
    - host: mm-print-monitor-ui-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-print-monitor-ui-k8svc
            servicePort: 80
          path: /
    - host: mm-print-monitor-ui-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-print-monitor-ui-k8svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - mm-print-monitor-ui-stage.test.k8s.target.com
      - mm-print-monitor-ui-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"mm-print-processor-svc"},"name":"mm-print-processor-svc-ingress","namespace":"snp-print-stage"},"spec":{"rules":[{"host":"mm-print-processor-svc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-print-processor-svc-k8svc","servicePort":1014},"path":"/"}]}},{"host":"mm-print-processor-svc-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-print-processor-svc-k8svc","servicePort":1014},"path":"/"}]}}],"tls":[{"hosts":["mm-print-processor-svc-stage.test.k8s.target.com","mm-print-processor-svc-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-24T04:09:58Z
    generation: 1
    labels:
      app: mm-print-processor-svc
    name: mm-print-processor-svc-ingress
    namespace: snp-print-stage
    resourceVersion: "49225589"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-print-stage/ingresses/mm-print-processor-svc-ingress
    uid: b3926987-bfaf-11e8-b822-525400b06b0f
  spec:
    rules:
    - host: mm-print-processor-svc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-print-processor-svc-k8svc
            servicePort: 1014
          path: /
    - host: mm-print-processor-svc-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-print-processor-svc-k8svc
            servicePort: 1014
          path: /
    tls:
    - hosts:
      - mm-print-processor-svc-stage.test.k8s.target.com
      - mm-print-processor-svc-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"mm-print-scheduler-svc"},"name":"mm-print-scheduler-svc-ingress","namespace":"snp-print-stage"},"spec":{"rules":[{"host":"mm-print-scheduler-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-print-scheduler-svc-k8svc","servicePort":1008},"path":"/"}]}},{"host":"mm-print-scheduler-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-print-scheduler-svc-k8svc","servicePort":1008},"path":"/"}]}}],"tls":[{"hosts":["mm-print-scheduler-stage.test.k8s.target.com","mm-print-scheduler-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-24T04:25:47Z
    generation: 1
    labels:
      app: mm-print-scheduler-svc
    name: mm-print-scheduler-svc-ingress
    namespace: snp-print-stage
    resourceVersion: "49225866"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-print-stage/ingresses/mm-print-scheduler-svc-ingress
    uid: e947ab8b-bfb1-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: mm-print-scheduler-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-print-scheduler-svc-k8svc
            servicePort: 1008
          path: /
    - host: mm-print-scheduler-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-print-scheduler-svc-k8svc
            servicePort: 1008
          path: /
    tls:
    - hosts:
      - mm-print-scheduler-stage.test.k8s.target.com
      - mm-print-scheduler-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"mm-revhist-loader"},"name":"mm-revhist-loader-ingress","namespace":"snp-print-stage"},"spec":{"rules":[{"host":"mm-revhist-loader-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-revhist-loader-k8svc","servicePort":80},"path":"/"}]}},{"host":"mm-revhist-loader-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-revhist-loader-k8svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["mm-revhist-loader-stage.test.k8s.target.com","mm-revhist-loader-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-24T06:15:15Z
    generation: 1
    labels:
      app: mm-revhist-loader
    name: mm-revhist-loader-ingress
    namespace: snp-print-stage
    resourceVersion: "49225751"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-print-stage/ingresses/mm-revhist-loader-ingress
    uid: 33e54a55-bfc1-11e8-a79d-525400524761
  spec:
    rules:
    - host: mm-revhist-loader-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-revhist-loader-k8svc
            servicePort: 80
          path: /
    - host: mm-revhist-loader-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-revhist-loader-k8svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - mm-revhist-loader-stage.test.k8s.target.com
      - mm-revhist-loader-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"mm-store-label-styles-ui"},"name":"mm-store-label-styles-ui-ingress","namespace":"snp-print-stage"},"spec":{"rules":[{"host":"mm-store-label-styles-ui-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-store-label-styles-ui-k8svc","servicePort":80},"path":"/"}]}},{"host":"mm-store-label-styles-ui-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-store-label-styles-ui-k8svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["mm-store-label-styles-ui-stage.test.k8s.target.com","mm-store-label-styles-ui-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-23T06:41:14Z
    generation: 1
    labels:
      app: mm-store-label-styles-ui
    name: mm-store-label-styles-ui-ingress
    namespace: snp-print-stage
    resourceVersion: "85994065"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-print-stage/ingresses/mm-store-label-styles-ui-ingress
    uid: c61cddb7-eeea-11e8-981f-5254001f7df6
  spec:
    rules:
    - host: mm-store-label-styles-ui-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-store-label-styles-ui-k8svc
            servicePort: 80
          path: /
    - host: mm-store-label-styles-ui-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-store-label-styles-ui-k8svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - mm-store-label-styles-ui-stage.test.k8s.target.com
      - mm-store-label-styles-ui-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"mm-utility-svc"},"name":"mm-utility-svc-ingress","namespace":"snp-print-stage"},"spec":{"rules":[{"host":"mm-utility-svc-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-utility-svc-k8svc","servicePort":80},"path":"/"}]}},{"host":"mm-utility-svc-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"mm-utility-svc-k8svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["mm-utility-svc-stage.test.k8s.target.com","mm-utility-svc-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-30T13:39:58Z
    generation: 1
    labels:
      app: mm-utility-svc
    name: mm-utility-svc-ingress
    namespace: snp-print-stage
    resourceVersion: "64219733"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-print-stage/ingresses/mm-utility-svc-ingress
    uid: 4b273af8-dc49-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: mm-utility-svc-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-utility-svc-k8svc
            servicePort: 80
          path: /
    - host: mm-utility-svc-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mm-utility-svc-k8svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - mm-utility-svc-stage.test.k8s.target.com
      - mm-utility-svc-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"snp-mm-mainmenu"},"name":"snp-mm-mainmenu-ingress","namespace":"snp-print-stage"},"spec":{"rules":[{"host":"snp-mm-mainmenu-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"snp-mm-mainmenu-k8svc","servicePort":80},"path":"/"}]}},{"host":"snp-mm-mainmenu-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"snp-mm-mainmenu-k8svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["snp-mm-mainmenu-stage.test.k8s.target.com","snp-mm-mainmenu-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-17T09:27:56Z
    generation: 1
    labels:
      app: snp-mm-mainmenu
    name: snp-mm-mainmenu-ingress
    namespace: snp-print-stage
    resourceVersion: "53758376"
    selfLink: /apis/extensions/v1beta1/namespaces/snp-print-stage/ingresses/snp-mm-mainmenu-ingress
    uid: ee159807-d1ee-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: snp-mm-mainmenu-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: snp-mm-mainmenu-k8svc
            servicePort: 80
          path: /
    - host: snp-mm-mainmenu-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: snp-mm-mainmenu-k8svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - snp-mm-mainmenu-stage.test.k8s.target.com
      - snp-mm-mainmenu-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-10T14:58:30Z
    generation: 2
    labels:
      app: softcell-helm
      chart: softcell-helm-0.4.7
      heritage: Tiller
      release: softcell
    name: softcell-softcell-helm
    namespace: softcell-dev
    resourceVersion: "78194161"
    selfLink: /apis/extensions/v1beta1/namespaces/softcell-dev/ingresses/softcell-softcell-helm
    uid: f34b9a3a-cc9c-11e8-886a-525400a9bf14
  spec:
    rules:
    - host: softcell-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: softcell-softcell-helm
            servicePort: http
          path: /metrics
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-11T21:19:09Z
    generation: 1
    labels:
      app: softcell-helm
      chart: softcell-helm-0.4.7
      heritage: Tiller
      release: softcell
    name: softcell-softcell-helm
    namespace: softcell
    resourceVersion: "90651069"
    selfLink: /apis/extensions/v1beta1/namespaces/softcell/ingresses/softcell-softcell-helm
    uid: 4aaecdca-cd9b-11e8-ad5b-5254008c264f
  spec:
    rules:
    - host: softcell.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: softcell-softcell-helm
            servicePort: http
          path: /metrics
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"hello"},"name":"hello","namespace":"spa-dev"},"spec":{"rules":[{"host":"spa-dev-hello.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"hello","servicePort":8080},"path":"/hello"},{"backend":{"serviceName":"hello","servicePort":8080},"path":"/hello"}]}},{"host":"spa-dev-hello.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"hello","servicePort":8080},"path":"/hello"},{"backend":{"serviceName":"hello","servicePort":8080},"path":"/hello"}]}}],"tls":[{"hosts":["spa-dev-hello.ttc-test.k8s.target.com","spa-dev-hello.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-25T20:11:37Z
    generation: 2
    labels:
      name: hello
    name: hello
    namespace: spa-dev
    resourceVersion: "60239315"
    selfLink: /apis/extensions/v1beta1/namespaces/spa-dev/ingresses/hello
    uid: 2d838e63-d892-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: spa-dev-hello.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: hello
            servicePort: 8080
          path: /hello
        - backend:
            serviceName: hello
            servicePort: 8080
          path: /hello
    - host: spa-dev-hello.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: hello
            servicePort: 8080
          path: /hello
        - backend:
            serviceName: hello
            servicePort: 8080
          path: /hello
    tls:
    - hosts:
      - spa-dev-hello.ttc-test.k8s.target.com
      - spa-dev-hello.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-19T14:26:44Z
    generation: 1
    labels:
      name: sba
    name: sba
    namespace: spa-dev
    resourceVersion: "55463258"
    selfLink: /apis/extensions/v1beta1/namespaces/spa-dev/ingresses/sba
    uid: 00c4daae-d3ab-11e8-ad5b-5254008c264f
  spec:
    rules:
    - host: spa-dev-sba.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: sba
            servicePort: 8999
          path: /
    - host: spa-dev-sba.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: sba
            servicePort: 8999
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"spa4"},"name":"spa4","namespace":"spa-dev"},"spec":{"rules":[{"host":"spa-dev-spa4.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spa4","servicePort":8512},"path":"/spa4"},{"backend":{"serviceName":"spa4","servicePort":8512},"path":"/spa4"}]}},{"host":"spa-dev-spa4.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spa4","servicePort":8512},"path":"/spa4"},{"backend":{"serviceName":"spa4","servicePort":8512},"path":"/spa4"}]}}],"tls":[{"hosts":["spa-dev-spa4.ttc-test.k8s.target.com","spa-dev-spa4.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-17T23:21:10Z
    generation: 1
    labels:
      name: spa4
    name: spa4
    namespace: spa-dev
    resourceVersion: "60270432"
    selfLink: /apis/extensions/v1beta1/namespaces/spa-dev/ingresses/spa4
    uid: 54d6f29e-d263-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: spa-dev-spa4.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spa4
            servicePort: 8512
          path: /spa4
        - backend:
            serviceName: spa4
            servicePort: 8512
          path: /spa4
    - host: spa-dev-spa4.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spa4
            servicePort: 8512
          path: /spa4
        - backend:
            serviceName: spa4
            servicePort: 8512
          path: /spa4
    tls:
    - hosts:
      - spa-dev-spa4.ttc-test.k8s.target.com
      - spa-dev-spa4.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-10-19T15:36:01Z
    generation: 1
    labels:
      name: sba
    name: sba
    namespace: spa-stage
    resourceVersion: "55501408"
    selfLink: /apis/extensions/v1beta1/namespaces/spa-stage/ingresses/sba
    uid: aeec246d-d3b4-11e8-ad5b-5254008c264f
  spec:
    rules:
    - host: spa-stage-sba.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: sba
            servicePort: 8999
          path: /
    - host: spa-stage-sba.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: sba
            servicePort: 8999
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"spa4"},"name":"spa4","namespace":"spa-stage"},"spec":{"rules":[{"host":"spa-stage-spa4.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spa4","servicePort":8512},"path":"/spa4"},{"backend":{"serviceName":"spa4","servicePort":8512},"path":"/spa4"}]}},{"host":"spa-stage-spa4.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spa4","servicePort":8512},"path":"/spa4"},{"backend":{"serviceName":"spa4","servicePort":8512},"path":"/spa4"}]}}],"tls":[{"hosts":["spa-stage-spa4.ttc-test.k8s.target.com","spa-stage-spa4.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-18T20:04:05Z
    generation: 1
    labels:
      name: spa4
    name: spa4
    namespace: spa-stage
    resourceVersion: "70418204"
    selfLink: /apis/extensions/v1beta1/namespaces/spa-stage/ingresses/spa4
    uid: f6faaecf-d310-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: spa-stage-spa4.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spa4
            servicePort: 8512
          path: /spa4
        - backend:
            serviceName: spa4
            servicePort: 8512
          path: /spa4
    - host: spa-stage-spa4.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spa4
            servicePort: 8512
          path: /spa4
        - backend:
            serviceName: spa4
            servicePort: 8512
          path: /spa4
    tls:
    - hosts:
      - spa-stage-spa4.ttc-test.k8s.target.com
      - spa-stage-spa4.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"spark-access-control-ingress"},"name":"spark-access-control-ingress","namespace":"spark-common-dev"},"spec":{"rules":[{"host":"devspark-access-control.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-access-control-svc","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-11T16:01:11Z
    generation: 1
    labels:
      name: spark-access-control-ingress
    name: spark-access-control-ingress
    namespace: spark-common-dev
    resourceVersion: "49243772"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-common-dev/ingresses/spark-access-control-ingress
    uid: dfbbbde5-cd6e-11e8-ad5b-5254008c264f
  spec:
    rules:
    - host: devspark-access-control.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-access-control-svc
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"spark-access-control-load-ingress"},"name":"spark-access-control-load-ingress","namespace":"spark-common-dev"},"spec":{"rules":[{"host":"devspark-access-control-load.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-access-control-load-svc","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-12-13T22:52:38Z
    generation: 1
    labels:
      name: spark-access-control-load-ingress
    name: spark-access-control-load-ingress
    namespace: spark-common-dev
    resourceVersion: "108005830"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-common-dev/ingresses/spark-access-control-load-ingress
    uid: ca3c9bb4-ff29-11e8-ad5a-525400a9bf14
  spec:
    rules:
    - host: devspark-access-control-load.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-access-control-load-svc
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-attachment-ingress","namespace":"spark-common-dev"},"spec":{"rules":[{"host":"devspark-attachment.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-attachment-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-attachment.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-24T14:28:21Z
    generation: 1
    name: spark-attachment-ingress
    namespace: spark-common-dev
    resourceVersion: "49225964"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-common-dev/ingresses/spark-attachment-ingress
    uid: 16b61fdb-c006-11e8-a79d-525400524761
  spec:
    rules:
    - host: devspark-attachment.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-attachment-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-attachment.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"spark-elastic-search-hub-ingress"},"name":"spark-elastic-search-hub-ingress","namespace":"spark-common-dev"},"spec":{"rules":[{"host":"devspark-es-search-hub.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-elastic-search-hub-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-es-search-hub.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-24T20:01:03Z
    generation: 1
    labels:
      name: spark-elastic-search-hub-ingress
    name: spark-elastic-search-hub-ingress
    namespace: spark-common-dev
    resourceVersion: "49225524"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-common-dev/ingresses/spark-elastic-search-hub-ingress
    uid: 90ce4623-c034-11e8-b822-525400b06b0f
  spec:
    rules:
    - host: devspark-es-search-hub.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-elastic-search-hub-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-es-search-hub.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-graphql-ingress","namespace":"spark-common-dev"},"spec":{"rules":[{"host":"devspark-graphql.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-graphql-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-graphql.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-10T18:09:10Z
    generation: 1
    name: spark-graphql-ingress
    namespace: spark-common-dev
    resourceVersion: "49225489"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-common-dev/ingresses/spark-graphql-ingress
    uid: 964167f2-ccb7-11e8-ad5b-5254008c264f
  spec:
    rules:
    - host: devspark-graphql.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-graphql-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-graphql.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-graphql-ingress-c","namespace":"spark-common-dev"},"spec":{"rules":[{"host":"devspark-graphql.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-graphql-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-graphql.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-28T14:18:16Z
    generation: 1
    name: spark-graphql-ingress-c
    namespace: spark-common-dev
    resourceVersion: "49225494"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-common-dev/ingresses/spark-graphql-ingress-c
    uid: 35079181-aacd-11e8-bf09-525400b93a8e
  spec:
    rules:
    - host: devspark-graphql.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-graphql-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-graphql.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-kibana-ingress","namespace":"spark-common-dev"},"spec":{"rules":[{"host":"devspark-kibana.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-kibana-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-kibana.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-05T16:52:44Z
    generation: 2
    name: spark-kibana-ingress
    namespace: spark-common-dev
    resourceVersion: "71265068"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-common-dev/ingresses/spark-kibana-ingress
    uid: 3748504f-e11b-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: devspark-kibana.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-kibana-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-kibana.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-notifications-ingress","namespace":"spark-common-dev"},"spec":{"rules":[{"host":"devspark-notifications.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-notifications-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-notifications.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-16T19:06:53Z
    generation: 1
    name: spark-notifications-ingress
    namespace: spark-common-dev
    resourceVersion: "79214844"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-common-dev/ingresses/spark-notifications-ingress
    uid: c772627d-e9d2-11e8-9e69-525400e51df1
  spec:
    rules:
    - host: devspark-notifications.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-notifications-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-notifications.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"spark-relationship-ingress"},"name":"spark-relationship-ingress","namespace":"spark-common-dev"},"spec":{"rules":[{"host":"devspark-relationship.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-relationship-svc","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-11-07T16:03:22Z
    generation: 1
    labels:
      name: spark-relationship-ingress
    name: spark-relationship-ingress
    namespace: spark-common-dev
    resourceVersion: "71122034"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-common-dev/ingresses/spark-relationship-ingress
    uid: a6d9d87b-e2a6-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: devspark-relationship.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-relationship-svc
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"spark-sample-ingress"},"name":"spark-sample-ingress","namespace":"spark-common-dev"},"spec":{"rules":[{"host":"devspark-sample-v2.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-sample-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-sample-v2.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-03-02T01:06:56Z
    generation: 1
    labels:
      name: spark-sample-ingress
    name: spark-sample-ingress
    namespace: spark-common-dev
    resourceVersion: "195386488"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-common-dev/ingresses/spark-sample-ingress
    uid: 79188394-3c87-11e9-ab00-525400a77f96
  spec:
    rules:
    - host: devspark-sample-v2.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-sample-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-sample-v2.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-sample-ingress-c","namespace":"spark-common-dev"},"spec":{"rules":[{"host":"devspark-sample-v2.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-sample-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-sample-v2.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-03-02T01:06:58Z
    generation: 1
    name: spark-sample-ingress-c
    namespace: spark-common-dev
    resourceVersion: "195386494"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-common-dev/ingresses/spark-sample-ingress-c
    uid: 7a3ac577-3c87-11e9-9b40-525400e10f08
  spec:
    rules:
    - host: devspark-sample-v2.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-sample-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-sample-v2.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-activity-center-ingress","namespace":"spark-dev"},"spec":{"rules":[{"host":"devspark-activity-center.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-activity-center-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-activity-center.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-20T20:36:11Z
    generation: 6
    name: spark-activity-center-ingress
    namespace: spark-dev
    resourceVersion: "49225953"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-dev/ingresses/spark-activity-center-ingress
    uid: acb4789d-a4b8-11e8-962d-525400b93a8e
  spec:
    rules:
    - host: devspark-activity-center.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-activity-center-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-activity-center.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-discussion-ingress","namespace":"spark-dev"},"spec":{"rules":[{"host":"devspark-discussion.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-discussion-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-discussion.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-26T10:10:42Z
    generation: 1
    name: spark-discussion-ingress
    namespace: spark-dev
    resourceVersion: "60721881"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-dev/ingresses/spark-discussion-ingress
    uid: 65aefd6a-d907-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: devspark-discussion.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-discussion-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-discussion.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-discussion-ingress-c","namespace":"spark-dev"},"spec":{"rules":[{"host":"devspark-discussion.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-discussion-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-discussion.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-26T17:03:38Z
    generation: 1
    name: spark-discussion-ingress-c
    namespace: spark-dev
    resourceVersion: "49225497"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-dev/ingresses/spark-discussion-ingress-c
    uid: 1c81b059-c1ae-11e8-981f-525400343c24
  spec:
    rules:
    - host: devspark-discussion.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-discussion-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-discussion.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-edge-ingress","namespace":"spark-dev"},"spec":{"rules":[{"host":"devspark-edge.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-edge-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-edge.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-28T13:05:42Z
    generation: 7
    name: spark-edge-ingress
    namespace: spark-dev
    resourceVersion: "49225457"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-dev/ingresses/spark-edge-ingress
    uid: 11693d1c-aac3-11e8-bd18-525400524761
  spec:
    rules:
    - host: devspark-edge.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-edge-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-edge.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-edge-ingress-c","namespace":"spark-dev"},"spec":{"rules":[{"host":"devspark-edge.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-edge-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-edge.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-28T16:22:46Z
    generation: 1
    name: spark-edge-ingress-c
    namespace: spark-dev
    resourceVersion: "49225576"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-dev/ingresses/spark-edge-ingress-c
    uid: 99278ca1-aade-11e8-8462-525400b93a8e
  spec:
    rules:
    - host: devspark-edge.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-edge-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-edge.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-old-attachment-ingress","namespace":"spark-dev"},"spec":{"rules":[{"host":"devspark-old-attachment.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-attachment-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-old-attachment.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-24T19:09:05Z
    generation: 1
    name: spark-old-attachment-ingress
    namespace: spark-dev
    resourceVersion: "59415926"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-dev/ingresses/spark-old-attachment-ingress
    uid: 46a171c8-d7c0-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: devspark-old-attachment.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-attachment-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-old-attachment.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-pdf-ingress","namespace":"spark-dev"},"spec":{"rules":[{"host":"devspark-pdf.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-pdf-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-pdf.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-22T05:22:37Z
    generation: 1
    name: spark-pdf-ingress
    namespace: spark-dev
    resourceVersion: "49225504"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-dev/ingresses/spark-pdf-ingress
    uid: 84c6e678-be27-11e8-a79d-525400524761
  spec:
    rules:
    - host: devspark-pdf.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-pdf-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-pdf.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-product-ingress","namespace":"spark-dev"},"spec":{"rules":[{"host":"devspark-product.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-product-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-product.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-23T14:14:19Z
    generation: 38
    name: spark-product-ingress
    namespace: spark-dev
    resourceVersion: "49225366"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-dev/ingresses/spark-product-ingress
    uid: d35933b3-a6de-11e8-a2fd-525400b06b0f
  spec:
    rules:
    - host: devspark-product.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-product-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-product.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-product-ingress-c","namespace":"spark-dev"},"spec":{"rules":[{"host":"devspark-status-app.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-status-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-status-app.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-10T20:30:01Z
    generation: 1
    name: spark-product-ingress-c
    namespace: spark-dev
    resourceVersion: "49225548"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-dev/ingresses/spark-product-ingress-c
    uid: 432a186c-cccb-11e8-ad5b-5254008c264f
  spec:
    rules:
    - host: devspark-status-app.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-status-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-status-app.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-sample-ingress","namespace":"spark-dev"},"spec":{"rules":[{"host":"devspark-sample.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-sample-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-sample.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-27T20:02:31Z
    generation: 31
    name: spark-sample-ingress
    namespace: spark-dev
    resourceVersion: "49225892"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-dev/ingresses/spark-sample-ingress
    uid: 216c877f-aa34-11e8-962d-525400b93a8e
  spec:
    rules:
    - host: devspark-sample.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-sample-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-sample.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-sample-ingress-c","namespace":"spark-dev"},"spec":{"rules":[{"host":"devspark-sample.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-sample-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-sample.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-18T17:01:07Z
    generation: 1
    name: spark-sample-ingress-c
    namespace: spark-dev
    resourceVersion: "49225985"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-dev/ingresses/spark-sample-ingress-c
    uid: 6f3bb5a8-bb64-11e8-8462-525400b93a8e
  spec:
    rules:
    - host: devspark-sample.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-sample-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-sample.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"spark-security-ingress"},"name":"spark-security-ingress","namespace":"spark-dev"},"spec":{"rules":[{"host":"devspark-security.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-security-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-security.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-15T16:25:12Z
    generation: 1
    labels:
      name: spark-security-ingress
    name: spark-security-ingress
    namespace: spark-dev
    resourceVersion: "52292046"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-dev/ingresses/spark-security-ingress
    uid: e4581b1a-d096-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: devspark-security.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-security-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-security.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-tag-ingress","namespace":"spark-dev"},"spec":{"rules":[{"host":"devspark-tag.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-tag-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-tag.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-28T13:06:01Z
    generation: 3
    name: spark-tag-ingress
    namespace: spark-dev
    resourceVersion: "49225515"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-dev/ingresses/spark-tag-ingress
    uid: 1caa119a-aac3-11e8-a2fd-525400b06b0f
  spec:
    rules:
    - host: devspark-tag.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-tag-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-tag.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-user-profile-ingress","namespace":"spark-dev"},"spec":{"rules":[{"host":"devspark-user-profile.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-user-profile-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-user-profile.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-28T13:09:20Z
    generation: 3
    name: spark-user-profile-ingress
    namespace: spark-dev
    resourceVersion: "49225342"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-dev/ingresses/spark-user-profile-ingress
    uid: 93890dc9-aac3-11e8-bd18-525400524761
  spec:
    rules:
    - host: devspark-user-profile.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-user-profile-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-user-profile.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-user-profile-ingress-c","namespace":"spark-dev"},"spec":{"rules":[{"host":"devspark-user-profile.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-user-profile-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-user-profile.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-28T14:42:50Z
    generation: 1
    name: spark-user-profile-ingress-c
    namespace: spark-dev
    resourceVersion: "49225711"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-dev/ingresses/spark-user-profile-ingress-c
    uid: a3548e5f-aad0-11e8-a2fd-525400b06b0f
  spec:
    rules:
    - host: devspark-user-profile.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-user-profile-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-user-profile.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-workspace-ingress","namespace":"spark-dev"},"spec":{"rules":[{"host":"devspark-workspace.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-workspace-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-workspace.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-10T17:46:37Z
    generation: 1
    name: spark-workspace-ingress
    namespace: spark-dev
    resourceVersion: "49225766"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-dev/ingresses/spark-workspace-ingress
    uid: 6f9a236a-ccb4-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: devspark-workspace.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-workspace-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-workspace.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"spark-workspace-ingress-c","namespace":"spark-dev"},"spec":{"rules":[{"host":"devspark-workspace.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-workspace-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-workspace.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-10T17:46:38Z
    generation: 1
    name: spark-workspace-ingress-c
    namespace: spark-dev
    resourceVersion: "49225605"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-dev/ingresses/spark-workspace-ingress-c
    uid: 7020e79d-ccb4-11e8-ad5b-5254008c264f
  spec:
    rules:
    - host: devspark-workspace.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-workspace-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-workspace.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"spark-artwork-ingress"},"name":"spark-artwork-ingress","namespace":"spark-material-dev"},"spec":{"rules":[{"host":"devspark-artwork.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-artwork-svc","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-09-24T18:26:42Z
    generation: 1
    labels:
      name: spark-artwork-ingress
    name: spark-artwork-ingress
    namespace: spark-material-dev
    resourceVersion: "49225803"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-material-dev/ingresses/spark-artwork-ingress
    uid: 627826cd-c027-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: devspark-artwork.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-artwork-svc
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"spark-color-ingress"},"name":"spark-color-ingress","namespace":"spark-material-dev"},"spec":{"rules":[{"host":"devspark-color.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-color-svc","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-09-24T18:40:57Z
    generation: 1
    labels:
      name: spark-color-ingress
    name: spark-color-ingress
    namespace: spark-material-dev
    resourceVersion: "49225656"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-material-dev/ingresses/spark-color-ingress
    uid: 603070db-c029-11e8-b822-525400b06b0f
  spec:
    rules:
    - host: devspark-color.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-color-svc
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"spark-fabric-ingress"},"name":"spark-fabric-ingress","namespace":"spark-material-dev"},"spec":{"rules":[{"host":"devspark-fabric.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-fabric-svc","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-01-17T21:47:37Z
    generation: 2
    labels:
      name: spark-fabric-ingress
    name: spark-fabric-ingress
    namespace: spark-material-dev
    resourceVersion: "151891122"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-material-dev/ingresses/spark-fabric-ingress
    uid: 815880b1-1aa1-11e9-a085-525400e7b4ef
  spec:
    rules:
    - host: devspark-fabric.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-fabric-svc
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"spark-palette-ingress"},"name":"spark-palette-ingress","namespace":"spark-material-dev"},"spec":{"rules":[{"host":"devspark-palette.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-palette-svc","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2018-09-24T15:18:28Z
    generation: 1
    labels:
      name: spark-palette-ingress
    name: spark-palette-ingress
    namespace: spark-material-dev
    resourceVersion: "49225620"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-material-dev/ingresses/spark-palette-ingress
    uid: 16ea9eb4-c00d-11e8-b822-525400b06b0f
  spec:
    rules:
    - host: devspark-palette.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-palette-svc
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"spark-ui-admin-ingress"},"name":"spark-ui-admin-ingress","namespace":"spark-ui-dev"},"spec":{"rules":[{"host":"devspark-ui-admin.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-ui-admin-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-ui-admin.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-20T19:54:58Z
    generation: 1
    labels:
      name: spark-ui-admin-ingress
    name: spark-ui-admin-ingress
    namespace: spark-ui-dev
    resourceVersion: "148912926"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-ui-dev/ingresses/spark-ui-admin-ingress
    uid: 43da4921-1ced-11e9-a085-525400e7b4ef
  spec:
    rules:
    - host: devspark-ui-admin.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-ui-admin-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-ui-admin.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"spark-ui-admin-ingress-c"},"name":"spark-ui-admin-ingress-c","namespace":"spark-ui-dev"},"spec":{"rules":[{"host":"devspark-ui-admin.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-ui-admin-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-ui-admin.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-01-20T19:55:00Z
    generation: 1
    labels:
      name: spark-ui-admin-ingress-c
    name: spark-ui-admin-ingress-c
    namespace: spark-ui-dev
    resourceVersion: "148912927"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-ui-dev/ingresses/spark-ui-admin-ingress-c
    uid: 450d815e-1ced-11e9-bdc1-525400cfa7b2
  spec:
    rules:
    - host: devspark-ui-admin.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-ui-admin-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-ui-admin.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"spark-ui-ingress"},"name":"spark-ui-ingress","namespace":"spark-ui-dev"},"spec":{"rules":[{"host":"devspark-ui.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-ui-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-ui.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-19T19:50:11Z
    generation: 1
    labels:
      name: spark-ui-ingress
    name: spark-ui-ingress
    namespace: spark-ui-dev
    resourceVersion: "49225412"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-ui-dev/ingresses/spark-ui-ingress
    uid: 37e0eb47-bc45-11e8-b822-525400b06b0f
  spec:
    rules:
    - host: devspark-ui.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-ui-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-ui.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"spark-ui-ingress-c"},"name":"spark-ui-ingress-c","namespace":"spark-ui-dev"},"spec":{"rules":[{"host":"devspark-ui.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"spark-ui-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["devspark-ui.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-19T19:50:15Z
    generation: 1
    labels:
      name: spark-ui-ingress-c
    name: spark-ui-ingress-c
    namespace: spark-ui-dev
    resourceVersion: "49225951"
    selfLink: /apis/extensions/v1beta1/namespaces/spark-ui-dev/ingresses/spark-ui-ingress-c
    uid: 3aa7ad5e-bc45-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: devspark-ui.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: spark-ui-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - devspark-ui.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"storelabels"},"name":"storelabels","namespace":"storesprint"},"spec":{"rules":[{"host":"storelabels.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"storelabels","servicePort":80},"path":"/"}]}},{"host":"storelabels.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"storelabels","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["storelabels.test.k8s.target.com","storelabels.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-15T20:21:10Z
    generation: 1
    labels:
      app: storelabels
    name: storelabels
    namespace: storesprint
    resourceVersion: "78219121"
    selfLink: /apis/extensions/v1beta1/namespaces/storesprint/ingresses/storelabels
    uid: fd7476d1-e913-11e8-9e69-525400e51df1
  spec:
    rules:
    - host: storelabels.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: storelabels
            servicePort: 80
          path: /
    - host: storelabels.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: storelabels
            servicePort: 80
          path: /
    tls:
    - hosts:
      - storelabels.test.k8s.target.com
      - storelabels.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"admin-api-ingress"},"name":"admin-api-ingress","namespace":"streaming-platform"},"spec":{"rules":[{"host":"kafka-admin-api.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"go-proxy-service-admin-api","servicePort":8888},"path":"/"}]}},{"host":"kafka-admin-api.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"go-proxy-service-admin-api","servicePort":8888},"path":"/"}]}}],"tls":[{"hosts":["kafka-admin-api.test.k8s.target.com","kafka-admin-api.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-18T13:27:50Z
    generation: 7
    labels:
      name: admin-api-ingress
    name: admin-api-ingress
    namespace: streaming-platform
    resourceVersion: "49225746"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/admin-api-ingress
    uid: a3c4a3e6-bb46-11e8-8462-525400b93a8e
  spec:
    rules:
    - host: kafka-admin-api.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: go-proxy-service-admin-api
            servicePort: 8888
          path: /
    - host: kafka-admin-api.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: go-proxy-service-admin-api
            servicePort: 8888
          path: /
    tls:
    - hosts:
      - kafka-admin-api.test.k8s.target.com
      - kafka-admin-api.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-14T08:16:41Z
    generation: 1
    labels:
      name: app-mirus-ttc-stg
    name: app-mirus-ttc-stg
    namespace: streaming-platform
    resourceVersion: "207946056"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/app-mirus-ttc-stg
    uid: 7f1cab91-4631-11e9-9ed7-5254006b625b
  spec:
    rules:
    - host: mirus-app-ttc-stg.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: mirus-service-app
            servicePort: 8083
          path: /
    tls:
    - hosts:
      - mirus-app-ttc-stg.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-01-03T12:23:53Z
    generation: 1
    labels:
      name: app-ttc-stg
    name: app-ttc-stg
    namespace: streaming-platform
    resourceVersion: "130577195"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/app-ttc-stg
    uid: 6ef3cf32-0f52-11e9-9edf-52540027f265
  spec:
    rules:
    - host: app-ttc-stg.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cruisecontrol-service-app
            servicePort: 9090
          path: /
    tls:
    - hosts:
      - app-ttc-stg.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-13T11:02:57Z
    generation: 1
    labels:
      name: atp-ttc-stg
    name: atp-ttc-stg
    namespace: streaming-platform
    resourceVersion: "207063512"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/atp-ttc-stg
    uid: 8f552ca9-457f-11e9-ab79-525400fe4551
  spec:
    rules:
    - host: atp-ttc-stg.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cruisecontrol-service-atp
            servicePort: 9090
          path: /
    tls:
    - hosts:
      - atp-ttc-stg.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-gcpshr-central-measurement-test"},"name":"burrow-gcpshr-central-measurement-test","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-gcpshr-central-measurement-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-gcpshr-central-measurement-test","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-gcpshr-central-measurement-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-01T20:36:39Z
    generation: 3
    labels:
      name: burrow-gcpshr-central-measurement-test
    name: burrow-gcpshr-central-measurement-test
    namespace: streaming-platform
    resourceVersion: "49225579"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-gcpshr-central-measurement-test
    uid: b2ed9b2d-c5b9-11e8-b53b-5254000e56fe
  spec:
    rules:
    - host: burrow-gcpshr-central-measurement-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-gcpshr-central-measurement-test
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-gcpshr-central-measurement-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-gcpshr-central1-test-app"},"name":"burrow-ingress-gcpshr-central1-test-app","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-gcpshr-central1-test-app.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-gcpshr-central1-test-app","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-gcpshr-central1-test-app.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-15T21:43:06Z
    generation: 1
    labels:
      name: burrow-ingress-gcpshr-central1-test-app
    name: burrow-ingress-gcpshr-central1-test-app
    namespace: streaming-platform
    resourceVersion: "52509126"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-gcpshr-central1-test-app
    uid: 4d475625-d0c3-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: burrow-gcpshr-central1-test-app.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-gcpshr-central1-test-app
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-gcpshr-central1-test-app.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-gcpshr-central1-test-checkout"},"name":"burrow-ingress-gcpshr-central1-test-checkout","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-gcpshr-central1-test-checkout.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-gcpshr-central1-test-checkout","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-gcpshr-central1-test-checkout.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-15T21:51:21Z
    generation: 1
    labels:
      name: burrow-ingress-gcpshr-central1-test-checkout
    name: burrow-ingress-gcpshr-central1-test-checkout
    namespace: streaming-platform
    resourceVersion: "52513485"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-gcpshr-central1-test-checkout
    uid: 742d6c9d-d0c4-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: burrow-gcpshr-central1-test-checkout.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-gcpshr-central1-test-checkout
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-gcpshr-central1-test-checkout.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-gcpshr-central1-test-measurement"},"name":"burrow-ingress-gcpshr-central1-test-measurement","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-gcpshr-central1-test-measurement.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-gcpshr-central1-test-measurement","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-gcpshr-central1-test-measurement.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-09T17:53:17Z
    generation: 1
    labels:
      name: burrow-ingress-gcpshr-central1-test-measurement
    name: burrow-ingress-gcpshr-central1-test-measurement
    namespace: streaming-platform
    resourceVersion: "49225765"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-gcpshr-central1-test-measurement
    uid: 33d08b79-cbec-11e8-9369-525400a3d3a1
  spec:
    rules:
    - host: burrow-gcpshr-central1-test-measurement.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-gcpshr-central1-test-measurement
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-gcpshr-central1-test-measurement.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-ost-ttc-app-test"},"name":"burrow-ingress-ost-ttc-app-test","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-ost-ttc-app-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-ost-ttc-app-test","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-ost-ttc-app-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-25T19:48:40Z
    generation: 1
    labels:
      name: burrow-ingress-ost-ttc-app-test
    name: burrow-ingress-ost-ttc-app-test
    namespace: streaming-platform
    resourceVersion: "49225960"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-ost-ttc-app-test
    uid: 007f6c51-c0fc-11e8-b822-525400b06b0f
  spec:
    rules:
    - host: burrow-ost-ttc-app-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-ost-ttc-app-test
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-ost-ttc-app-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-ost-ttc-test-app"},"name":"burrow-ingress-ost-ttc-test-app","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-ost-ttc-test-app.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-ost-ttc-test-app","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-ost-ttc-test-app.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-10T17:56:31Z
    generation: 3
    labels:
      name: burrow-ingress-ost-ttc-test-app
    name: burrow-ingress-ost-ttc-test-app
    namespace: streaming-platform
    resourceVersion: "49225435"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-ost-ttc-test-app
    uid: d91eb2f4-b522-11e8-8488-525400b06b0f
  spec:
    rules:
    - host: burrow-ost-ttc-test-app.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-ost-ttc-test-app
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-ost-ttc-test-app.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-ost-ttc-test-atp"},"name":"burrow-ingress-ost-ttc-test-atp","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-ost-ttc-test-atp.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-ost-ttc-test-atp","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-ost-ttc-test-atp.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-16T00:43:04Z
    generation: 1
    labels:
      name: burrow-ingress-ost-ttc-test-atp
    name: burrow-ingress-ost-ttc-test-atp
    namespace: streaming-platform
    resourceVersion: "52600622"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-ost-ttc-test-atp
    uid: 7108ac08-d0dc-11e8-ad5b-5254008c264f
  spec:
    rules:
    - host: burrow-ost-ttc-test-atp.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-ost-ttc-test-atp
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-ost-ttc-test-atp.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-ost-ttc-test-checkout"},"name":"burrow-ingress-ost-ttc-test-checkout","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-ost-ttc-test-checkout.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-ost-ttc-test-checkout","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-ost-ttc-test-checkout.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-16T01:05:02Z
    generation: 1
    labels:
      name: burrow-ingress-ost-ttc-test-checkout
    name: burrow-ingress-ost-ttc-test-checkout
    namespace: streaming-platform
    resourceVersion: "52611785"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-ost-ttc-test-checkout
    uid: 8292fb99-d0df-11e8-ad5b-5254008c264f
  spec:
    rules:
    - host: burrow-ost-ttc-test-checkout.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-ost-ttc-test-checkout
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-ost-ttc-test-checkout.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-ost-ttc-test-echo"},"name":"burrow-ingress-ost-ttc-test-echo","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-ost-ttc-test-echo.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-ost-ttc-test-echo","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-ost-ttc-test-echo.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-16T01:15:14Z
    generation: 1
    labels:
      name: burrow-ingress-ost-ttc-test-echo
    name: burrow-ingress-ost-ttc-test-echo
    namespace: streaming-platform
    resourceVersion: "52617008"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-ost-ttc-test-echo
    uid: efbf478a-d0e0-11e8-ad5b-5254008c264f
  spec:
    rules:
    - host: burrow-ost-ttc-test-echo.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-ost-ttc-test-echo
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-ost-ttc-test-echo.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-ost-ttc-test-firefly"},"name":"burrow-ingress-ost-ttc-test-firefly","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-ost-ttc-test-firefly.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-ost-ttc-test-firefly","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-ost-ttc-test-firefly.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-16T01:32:20Z
    generation: 1
    labels:
      name: burrow-ingress-ost-ttc-test-firefly
    name: burrow-ingress-ost-ttc-test-firefly
    namespace: streaming-platform
    resourceVersion: "52625597"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-ost-ttc-test-firefly
    uid: 5362f7df-d0e3-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: burrow-ost-ttc-test-firefly.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-ost-ttc-test-firefly
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-ost-ttc-test-firefly.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-ost-ttc-test-gom"},"name":"burrow-ingress-ost-ttc-test-gom","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-ost-ttc-test-gom.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-ost-ttc-test-gom","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-ost-ttc-test-gom.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-16T01:34:49Z
    generation: 1
    labels:
      name: burrow-ingress-ost-ttc-test-gom
    name: burrow-ingress-ost-ttc-test-gom
    namespace: streaming-platform
    resourceVersion: "52626653"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-ost-ttc-test-gom
    uid: ac27af2c-d0e3-11e8-ad5b-5254008c264f
  spec:
    rules:
    - host: burrow-ost-ttc-test-gom.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-ost-ttc-test-gom
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-ost-ttc-test-gom.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-ost-ttc-test-inr"},"name":"burrow-ingress-ost-ttc-test-inr","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-ost-ttc-test-inr.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-ost-ttc-test-inr","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-ost-ttc-test-inr.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-16T01:35:44Z
    generation: 1
    labels:
      name: burrow-ingress-ost-ttc-test-inr
    name: burrow-ingress-ost-ttc-test-inr
    namespace: streaming-platform
    resourceVersion: "52627192"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-ost-ttc-test-inr
    uid: cce3fba4-d0e3-11e8-ad5b-5254008c264f
  spec:
    rules:
    - host: burrow-ost-ttc-test-inr.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-ost-ttc-test-inr
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-ost-ttc-test-inr.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-ost-ttc-test-internal"},"name":"burrow-ingress-ost-ttc-test-internal","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-ost-ttc-test-internal.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-ost-ttc-test-internal","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-ost-ttc-test-internal.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-15T20:19:44Z
    generation: 1
    labels:
      name: burrow-ingress-ost-ttc-test-internal
    name: burrow-ingress-ost-ttc-test-internal
    namespace: streaming-platform
    resourceVersion: "52460725"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-ost-ttc-test-internal
    uid: a786762d-d0b7-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: burrow-ost-ttc-test-internal.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-ost-ttc-test-internal
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-ost-ttc-test-internal.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-ost-ttc-test-measurement"},"name":"burrow-ingress-ost-ttc-test-measurement","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-ost-ttc-test-measurement.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-ost-ttc-test-measurement","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-ost-ttc-test-measurement.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-16T01:39:49Z
    generation: 1
    labels:
      name: burrow-ingress-ost-ttc-test-measurement
    name: burrow-ingress-ost-ttc-test-measurement
    namespace: streaming-platform
    resourceVersion: "52629115"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-ost-ttc-test-measurement
    uid: 5ecd7969-d0e4-11e8-ad5b-5254008c264f
  spec:
    rules:
    - host: burrow-ost-ttc-test-measurement.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-ost-ttc-test-measurement
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-ost-ttc-test-measurement.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-ost-ttc-test-ndii"},"name":"burrow-ingress-ost-ttc-test-ndii","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-ost-ttc-test-ndii.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-ost-ttc-test-ndii","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-ost-ttc-test-ndii.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-26T18:47:52Z
    generation: 1
    labels:
      name: burrow-ingress-ost-ttc-test-ndii
    name: burrow-ingress-ost-ttc-test-ndii
    namespace: streaming-platform
    resourceVersion: "191289231"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-ost-ttc-test-ndii
    uid: 05da7498-39f7-11e9-a2e8-52540055f679
  spec:
    rules:
    - host: burrow-ost-ttc-test-ndii.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-ost-ttc-test-ndii
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-ost-ttc-test-ndii.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-ost-ttc-test-ole"},"name":"burrow-ingress-ost-ttc-test-ole","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-ost-ttc-test-ole.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-ost-ttc-test-ole","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-ost-ttc-test-ole.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-16T01:44:14Z
    generation: 1
    labels:
      name: burrow-ingress-ost-ttc-test-ole
    name: burrow-ingress-ost-ttc-test-ole
    namespace: streaming-platform
    resourceVersion: "52631599"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-ost-ttc-test-ole
    uid: fc6b0749-d0e4-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: burrow-ost-ttc-test-ole.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-ost-ttc-test-ole
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-ost-ttc-test-ole.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-ost-ttc-test-pci"},"name":"burrow-ingress-ost-ttc-test-pci","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-ost-ttc-test-pci.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-ost-ttc-test-pci","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-ost-ttc-test-pci.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-26T19:17:48Z
    generation: 1
    labels:
      name: burrow-ingress-ost-ttc-test-pci
    name: burrow-ingress-ost-ttc-test-pci
    namespace: streaming-platform
    resourceVersion: "191325479"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-ost-ttc-test-pci
    uid: 34273519-39fb-11e9-bfe7-525400721049
  spec:
    rules:
    - host: burrow-ost-ttc-test-pci.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-ost-ttc-test-pci
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-ost-ttc-test-pci.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-ost-ttc-test-search"},"name":"burrow-ingress-ost-ttc-test-search","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-ost-ttc-test-search.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-ost-ttc-test-search","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-ost-ttc-test-search.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-26T19:12:42Z
    generation: 1
    labels:
      name: burrow-ingress-ost-ttc-test-search
    name: burrow-ingress-ost-ttc-test-search
    namespace: streaming-platform
    resourceVersion: "191319496"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-ost-ttc-test-search
    uid: 7dea9225-39fa-11e9-a157-52540070e292
  spec:
    rules:
    - host: burrow-ost-ttc-test-search.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-ost-ttc-test-search
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-ost-ttc-test-search.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-ost-ttc-test-stores"},"name":"burrow-ingress-ost-ttc-test-stores","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-ost-ttc-test-stores.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-ost-ttc-test-stores","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-ost-ttc-test-stores.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-16T01:46:25Z
    generation: 1
    labels:
      name: burrow-ingress-ost-ttc-test-stores
    name: burrow-ingress-ost-ttc-test-stores
    namespace: streaming-platform
    resourceVersion: "52632704"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-ost-ttc-test-stores
    uid: 4a9ad1b0-d0e5-11e8-ad5b-5254008c264f
  spec:
    rules:
    - host: burrow-ost-ttc-test-stores.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-ost-ttc-test-stores
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-ost-ttc-test-stores.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-ost-ttc-test-tap"},"name":"burrow-ingress-ost-ttc-test-tap","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-ost-ttc-test-tap.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-ost-ttc-test-tap","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-ost-ttc-test-tap.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-16T01:54:25Z
    generation: 1
    labels:
      name: burrow-ingress-ost-ttc-test-tap
    name: burrow-ingress-ost-ttc-test-tap
    namespace: streaming-platform
    resourceVersion: "52636647"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-ost-ttc-test-tap
    uid: 6913698d-d0e6-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: burrow-ost-ttc-test-tap.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-ost-ttc-test-tap
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-ost-ttc-test-tap.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"burrow-ingress-ost-ttc-test-tracing"},"name":"burrow-ingress-ost-ttc-test-tracing","namespace":"streaming-platform"},"spec":{"rules":[{"host":"burrow-ost-ttc-test-tracing.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"burrow-service-ost-ttc-test-tracing","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["burrow-ost-ttc-test-tracing.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-16T01:57:38Z
    generation: 1
    labels:
      name: burrow-ingress-ost-ttc-test-tracing
    name: burrow-ingress-ost-ttc-test-tracing
    namespace: streaming-platform
    resourceVersion: "52638141"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/burrow-ingress-ost-ttc-test-tracing
    uid: dc0fee43-d0e6-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: burrow-ost-ttc-test-tracing.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: burrow-service-ost-ttc-test-tracing
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - burrow-ost-ttc-test-tracing.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cc-ttc-stg"},"name":"cc-ttc-stg","namespace":"streaming-platform"},"spec":{"rules":[{"host":"cc-ui-ttc-stg.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cc-service-ui","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["cc-ui-ttc-stg.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-03-01T05:48:22Z
    generation: 1
    labels:
      name: cc-ttc-stg
    name: cc-ttc-stg
    namespace: streaming-platform
    resourceVersion: "206948110"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/cc-ttc-stg
    uid: 9ffe0ac6-3be5-11e9-9b40-525400e10f08
  spec:
    rules:
    - host: cc-ui-ttc-stg.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cc-service-ui
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - cc-ui-ttc-stg.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-12-03T11:55:02Z
    generation: 1
    labels:
      name: checkout-ttc-stg
    name: checkout-ttc-stg
    namespace: streaming-platform
    resourceVersion: "96679883"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/checkout-ttc-stg
    uid: 44379006-f6f2-11e8-981f-5254001f7df6
  spec:
    rules:
    - host: checkout-ttc-stg.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cruisecontrol-service-checkout
            servicePort: 9090
          path: /
    tls:
    - hosts:
      - checkout-ttc-stg.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"cluster-admin-api-ingress"},"name":"cluster-admin-api-ingress","namespace":"streaming-platform"},"spec":{"rules":[{"host":"cluster-admin-api.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"go-proxy-service-admin-api","servicePort":8888},"path":"/"}]}},{"host":"cluster-admin-api.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"go-proxy-service-admin-api","servicePort":8888},"path":"/"}]}}],"tls":[{"hosts":["cluster-admin-api.test.k8s.target.com","cluster-admin-api.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-22T19:13:23Z
    generation: 7
    labels:
      name: cluster-admin-api-ingress
    name: cluster-admin-api-ingress
    namespace: streaming-platform
    resourceVersion: "143964875"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/cluster-admin-api-ingress
    uid: 8b72f338-d62e-11e8-ad5b-5254008c264f
  spec:
    rules:
    - host: cluster-admin-api.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: go-proxy-service-admin-api
            servicePort: 8888
          path: /
    - host: cluster-admin-api.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: go-proxy-service-admin-api
            servicePort: 8888
          path: /
    tls:
    - hosts:
      - cluster-admin-api.test.k8s.target.com
      - cluster-admin-api.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"consul"},"name":"consul","namespace":"streaming-platform"},"spec":{"rules":[{"host":"consul-kafka.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"consul","servicePort":8500},"path":"/"}]}}],"tls":[{"hosts":["consul-kafka.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-08T13:51:22Z
    generation: 3
    labels:
      name: consul
    name: consul
    namespace: streaming-platform
    resourceVersion: "49225863"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/consul
    uid: 2286b13a-9b12-11e8-a2fd-525400b06b0f
  spec:
    rules:
    - host: consul-kafka.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: consul
            servicePort: 8500
          path: /
    tls:
    - hosts:
      - consul-kafka.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-12-03T17:17:53Z
    generation: 1
    labels:
      name: echo-ttc-stg
    name: echo-ttc-stg
    namespace: streaming-platform
    resourceVersion: "96924532"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/echo-ttc-stg
    uid: 5e96ced0-f71f-11e8-981f-5254001f7df6
  spec:
    rules:
    - host: echo-ttc-stg.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cruisecontrol-service-echo
            servicePort: 9090
          path: /
    tls:
    - hosts:
      - echo-ttc-stg.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"firefly-ttc-stg"},"name":"firefly-ttc-stg","namespace":"streaming-platform"},"spec":{"rules":[{"host":"firefly-ttc-stg.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"cruisecontrol-service-firefly","servicePort":9090},"path":"/"}]}}],"tls":[{"hosts":["firefly-ttc-stg.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-03-06T08:09:15Z
    generation: 1
    labels:
      name: firefly-ttc-stg
    name: firefly-ttc-stg
    namespace: streaming-platform
    resourceVersion: "200997090"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/firefly-ttc-stg
    uid: 221d2217-3fe7-11e9-ab00-525400a77f96
  spec:
    rules:
    - host: firefly-ttc-stg.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cruisecontrol-service-firefly
            servicePort: 9090
          path: /
    tls:
    - hosts:
      - firefly-ttc-stg.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"gcpshr-central-test-app"},"name":"gcpshr-central-test-app","namespace":"streaming-platform"},"spec":{"rules":[{"host":"kafka-monitor-gcpshr-central-test-app.ttc-prod.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"kafka-monitor-service-gcpshr-central-test-app","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["kafka-monitor-gcpshr-central-test-app.ttc-prod.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-06T18:28:39Z
    generation: 2
    labels:
      name: gcpshr-central-test-app
    name: gcpshr-central-test-app
    namespace: streaming-platform
    resourceVersion: "174645110"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/gcpshr-central-test-app
    uid: 05d7079c-2a3d-11e9-9a91-525400fb923b
  spec:
    rules:
    - host: kafka-monitor-gcpshr-central-test-app.ttc-prod.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: kafka-monitor-service-gcpshr-central-test-app
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - kafka-monitor-gcpshr-central-test-app.ttc-prod.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"gcpshr-central-test-checkout"},"name":"gcpshr-central-test-checkout","namespace":"streaming-platform"},"spec":{"rules":[{"host":"kafka-monitor-gcpshr-central-test-checkout.ttc-prod.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"kafka-monitor-service-gcpshr-central-test-checkout","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["kafka-monitor-gcpshr-central-test-checkout.ttc-prod.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-07T15:41:06Z
    generation: 2
    labels:
      name: gcpshr-central-test-checkout
    name: gcpshr-central-test-checkout
    namespace: streaming-platform
    resourceVersion: "174647166"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/gcpshr-central-test-checkout
    uid: c8692b3b-2aee-11e9-a157-52540070e292
  spec:
    rules:
    - host: kafka-monitor-gcpshr-central-test-checkout.ttc-prod.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: kafka-monitor-service-gcpshr-central-test-checkout
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - kafka-monitor-gcpshr-central-test-checkout.ttc-prod.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"gcpshr-central-test-measurement"},"name":"gcpshr-central-test-measurement","namespace":"streaming-platform"},"spec":{"rules":[{"host":"kafka-monitor-gcpshr-central-test-measurement.ttc-prod.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"kafka-monitor-service-gcpshr-central-test-measurement","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["kafka-monitor-gcpshr-central-test-measurement.ttc-prod.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-07T16:54:01Z
    generation: 1
    labels:
      name: gcpshr-central-test-measurement
    name: gcpshr-central-test-measurement
    namespace: streaming-platform
    resourceVersion: "170313464"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/gcpshr-central-test-measurement
    uid: f84e2bd7-2af8-11e9-a157-52540070e292
  spec:
    rules:
    - host: kafka-monitor-gcpshr-central-test-measurement.ttc-prod.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: kafka-monitor-service-gcpshr-central-test-measurement
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - kafka-monitor-gcpshr-central-test-measurement.ttc-prod.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"gcpshr-east-test-app"},"name":"gcpshr-east-test-app","namespace":"streaming-platform"},"spec":{"rules":[{"host":"kafka-monitor-gcpshr-east-test-app.k8s-test.us-east1.tgt-pe-test.gcp.cloud.target.internal","http":{"paths":[{"backend":{"serviceName":"kafka-monitor-service-gcpshr-east-test-app","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["kafka-monitor-gcpshr-east-test-app.k8s-test.us-east1.tgt-pe-test.gcp.cloud.target.internal"]}]}}
    creationTimestamp: 2019-02-06T21:01:36Z
    generation: 1
    labels:
      name: gcpshr-east-test-app
    name: gcpshr-east-test-app
    namespace: streaming-platform
    resourceVersion: "169232148"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/gcpshr-east-test-app
    uid: 644a53e9-2a52-11e9-9a91-525400fb923b
  spec:
    rules:
    - host: kafka-monitor-gcpshr-east-test-app.k8s-test.us-east1.tgt-pe-test.gcp.cloud.target.internal
      http:
        paths:
        - backend:
            serviceName: kafka-monitor-service-gcpshr-east-test-app
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - kafka-monitor-gcpshr-east-test-app.k8s-test.us-east1.tgt-pe-test.gcp.cloud.target.internal
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"gcpshr-east-test-checkout"},"name":"gcpshr-east-test-checkout","namespace":"streaming-platform"},"spec":{"rules":[{"host":"kafka-monitor-gcpshr-east-test-checkout.tte-prod.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"kafka-monitor-service-gcpshr-east-test-checkout","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["kafka-monitor-gcpshr-east-test-checkout.tte-prod.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-07T16:37:58Z
    generation: 2
    labels:
      name: gcpshr-east-test-checkout
    name: gcpshr-east-test-checkout
    namespace: streaming-platform
    resourceVersion: "174648005"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/gcpshr-east-test-checkout
    uid: ba458945-2af6-11e9-bfe7-525400721049
  spec:
    rules:
    - host: kafka-monitor-gcpshr-east-test-checkout.tte-prod.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: kafka-monitor-service-gcpshr-east-test-checkout
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - kafka-monitor-gcpshr-east-test-checkout.tte-prod.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"gcpshr-east-test-measurement"},"name":"gcpshr-east-test-measurement","namespace":"streaming-platform"},"spec":{"rules":[{"host":"kafka-monitor-gcpshr-east-test-measurement.tte-prod.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"kafka-monitor-service-gcpshr-east-test-measurement","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["kafka-monitor-gcpshr-east-test-measurement.tte-prod.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-11T18:57:14Z
    generation: 1
    labels:
      name: gcpshr-east-test-measurement
    name: gcpshr-east-test-measurement
    namespace: streaming-platform
    resourceVersion: "174650101"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/gcpshr-east-test-measurement
    uid: d8816e0a-2e2e-11e9-bfe7-525400721049
  spec:
    rules:
    - host: kafka-monitor-gcpshr-east-test-measurement.tte-prod.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: kafka-monitor-service-gcpshr-east-test-measurement
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - kafka-monitor-gcpshr-east-test-measurement.tte-prod.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-12-04T14:40:11Z
    generation: 1
    labels:
      name: gom-ttc-stg
    name: gom-ttc-stg
    namespace: streaming-platform
    resourceVersion: "97911975"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/gom-ttc-stg
    uid: 80dbca0b-f7d2-11e8-ad5a-525400a9bf14
  spec:
    rules:
    - host: gom-ttc-stg.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cruisecontrol-service-gom
            servicePort: 9090
          path: /
    tls:
    - hosts:
      - gom-ttc-stg.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-12-04T14:53:35Z
    generation: 1
    labels:
      name: inr-ttc-stg
    name: inr-ttc-stg
    namespace: streaming-platform
    resourceVersion: "97922290"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/inr-ttc-stg
    uid: 602d74e0-f7d4-11e8-981f-5254001f7df6
  spec:
    rules:
    - host: inr-ttc-stg.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cruisecontrol-service-inr
            servicePort: 9090
          path: /
    tls:
    - hosts:
      - inr-ttc-stg.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-11T13:50:40Z
    generation: 1
    labels:
      name: internal-ttc-stg
    name: internal-ttc-stg
    namespace: streaming-platform
    resourceVersion: "205147747"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/internal-ttc-stg
    uid: a80ff6a7-4404-11e9-9ed7-5254006b625b
  spec:
    rules:
    - host: internal-ttc-stg.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cruisecontrol-service-internal
            servicePort: 9090
          path: /
    tls:
    - hosts:
      - internal-ttc-stg.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"kafka-rest-ost-ttc-test-app"},"name":"kafka-rest-ost-ttc-test-app","namespace":"streaming-platform"},"spec":{"rules":[{"host":"kafka-rest-ost-ttc-test-app.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"go-proxy-service-ost-ttc-test-app","servicePort":8888},"path":"/"}]}}],"tls":[{"hosts":["kafka-rest-ost-ttc-test-app.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-31T13:02:13Z
    generation: 1
    labels:
      name: kafka-rest-ost-ttc-test-app
    name: kafka-rest-ost-ttc-test-app
    namespace: streaming-platform
    resourceVersion: "49225546"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/kafka-rest-ost-ttc-test-app
    uid: 1482a33d-ad1e-11e8-a71c-525400524761
  spec:
    rules:
    - host: kafka-rest-ost-ttc-test-app.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: go-proxy-service-ost-ttc-test-app
            servicePort: 8888
          path: /
    tls:
    - hosts:
      - kafka-rest-ost-ttc-test-app.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"kafka-rest-ttc-stg"},"name":"kafka-rest-ttc-stg","namespace":"streaming-platform"},"spec":{"rules":[{"host":"kafka-rest-ttc-stg.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"go-proxy-service-ttc-stg","servicePort":8888},"path":"/"}]}}],"tls":[{"hosts":["kafka-rest-ttc-stg.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-16T19:31:35Z
    generation: 1
    labels:
      name: kafka-rest-ttc-stg
    name: kafka-rest-ttc-stg
    namespace: streaming-platform
    resourceVersion: "49225686"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/kafka-rest-ttc-stg
    uid: fc9f9e65-a18a-11e8-bd18-525400524761
  spec:
    rules:
    - host: kafka-rest-ttc-stg.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: go-proxy-service-ttc-stg
            servicePort: 8888
          path: /
    tls:
    - hosts:
      - kafka-rest-ttc-stg.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-05T14:46:08Z
    generation: 1
    labels:
      name: ksql-ttc-stg
    name: ksql-ttc-stg
    namespace: streaming-platform
    resourceVersion: "199044981"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/ksql-ttc-stg
    uid: 6952fbc7-3f55-11e9-9a69-52540002191d
  spec:
    rules:
    - host: ksql-ttc-stg.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cruisecontrol-service-ksql
            servicePort: 9090
          path: /
    tls:
    - hosts:
      - ksql-ttc-stg.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-01-29T10:01:56Z
    generation: 1
    labels:
      name: ksqlkafka-ttc-stg
    name: ksqlkafka-ttc-stg
    namespace: streaming-platform
    resourceVersion: "159357625"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/ksqlkafka-ttc-stg
    uid: e8fb509b-23ac-11e9-879f-5254005a994c
  spec:
    rules:
    - host: ksqlkafka-ksql-ttc-stg.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ksql-service-ksql
            servicePort: 8088
          path: /
    tls:
    - hosts:
      - ksqlkafka-ksql-ttc-stg.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-12-04T11:10:13Z
    generation: 1
    labels:
      name: ole-ttc-stg
    name: ole-ttc-stg
    namespace: streaming-platform
    resourceVersion: "97753088"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/ole-ttc-stg
    uid: 2c299a68-f7b5-11e8-ad5a-525400a9bf14
  spec:
    rules:
    - host: ole-ttc-stg.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cruisecontrol-service-ole
            servicePort: 9090
          path: /
    tls:
    - hosts:
      - ole-ttc-stg.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"ost-ttc-test-app"},"name":"ost-ttc-test-app","namespace":"streaming-platform"},"spec":{"rules":[{"host":"kafka-monitor-ost-ttc-test-app.ttc-prod.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"kafka-monitor-service-ost-ttc-test-app","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["kafka-monitor-ost-ttc-test-app.ttc-prod.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-15T18:41:24Z
    generation: 1
    labels:
      name: ost-ttc-test-app
    name: ost-ttc-test-app
    namespace: streaming-platform
    resourceVersion: "78143845"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/ost-ttc-test-app
    uid: 0d7f174e-e906-11e8-ad5a-525400a9bf14
  spec:
    rules:
    - host: kafka-monitor-ost-ttc-test-app.ttc-prod.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: kafka-monitor-service-ost-ttc-test-app
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - kafka-monitor-ost-ttc-test-app.ttc-prod.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"ost-ttc-test-atp"},"name":"ost-ttc-test-atp","namespace":"streaming-platform"},"spec":{"rules":[{"host":"kafka-monitor-ost-ttc-test-atp.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"kafka-monitor-service-ost-ttc-test-atp","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["kafka-monitor-ost-ttc-test-atp.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-17T17:06:29Z
    generation: 1
    labels:
      name: ost-ttc-test-atp
    name: ost-ttc-test-atp
    namespace: streaming-platform
    resourceVersion: "112082883"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/ost-ttc-test-atp
    uid: 18caf416-021e-11e9-aa7e-5254007ca0e4
  spec:
    rules:
    - host: kafka-monitor-ost-ttc-test-atp.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: kafka-monitor-service-ost-ttc-test-atp
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - kafka-monitor-ost-ttc-test-atp.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"ost-ttc-test-internal"},"name":"ost-ttc-test-internal","namespace":"streaming-platform"},"spec":{"rules":[{"host":"kafka-monitor-ost-ttc-test-internal.ttc-prod.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"kafka-monitor-service-ost-ttc-test-internal","servicePort":8000},"path":"/"}]}}],"tls":[{"hosts":["kafka-monitor-ost-ttc-test-internal.ttc-prod.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-07T14:19:30Z
    generation: 1
    labels:
      name: ost-ttc-test-internal
    name: ost-ttc-test-internal
    namespace: streaming-platform
    resourceVersion: "71062762"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/ost-ttc-test-internal
    uid: 241cf233-e298-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: kafka-monitor-ost-ttc-test-internal.ttc-prod.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: kafka-monitor-service-ost-ttc-test-internal
            servicePort: 8000
          path: /
    tls:
    - hosts:
      - kafka-monitor-ost-ttc-test-internal.ttc-prod.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2018-12-04T13:20:17Z
    generation: 1
    labels:
      name: stores-ttc-stg
    name: stores-ttc-stg
    namespace: streaming-platform
    resourceVersion: "97851646"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/stores-ttc-stg
    uid: 57d88d6d-f7c7-11e8-981f-5254001f7df6
  spec:
    rules:
    - host: stores-ttc-stg.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cruisecontrol-service-stores
            servicePort: 9090
          path: /
    tls:
    - hosts:
      - stores-ttc-stg.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    creationTimestamp: 2019-03-19T10:18:41Z
    generation: 1
    labels:
      name: tap-ttc-stg
    name: tap-ttc-stg
    namespace: streaming-platform
    resourceVersion: "213022534"
    selfLink: /apis/extensions/v1beta1/namespaces/streaming-platform/ingresses/tap-ttc-stg
    uid: 5e7fe72a-4a30-11e9-86b4-525400993427
  spec:
    rules:
    - host: tap-ttc-stg.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: cruisecontrol-service-tap
            servicePort: 9090
          path: /
    tls:
    - hosts:
      - tap-ttc-stg.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"tacalertsbatchprocessor-ingress"},"name":"tacalertsbatchprocessor-ingress","namespace":"tac-platform"},"spec":{"rules":[{"host":"tacalertsbatchprocessor-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"tacalertsbatchprocessor-service","servicePort":80},"path":"/"}]}},{"host":"tacalertsbatchprocessor.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"tacalertsbatchprocessor-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["tacalertsprocessor-test.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-17T16:24:33Z
    generation: 3
    labels:
      name: tacalertsbatchprocessor-ingress
    name: tacalertsbatchprocessor-ingress
    namespace: tac-platform
    resourceVersion: "49225723"
    selfLink: /apis/extensions/v1beta1/namespaces/tac-platform/ingresses/tacalertsbatchprocessor-ingress
    uid: 2963011f-ba96-11e8-8488-525400b06b0f
  spec:
    rules:
    - host: tacalertsbatchprocessor-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: tacalertsbatchprocessor-service
            servicePort: 80
          path: /
    - host: tacalertsbatchprocessor.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: tacalertsbatchprocessor-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - tacalertsprocessor-test.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"tacalertserrorprocessor-ingress"},"name":"tacalertserrorprocessor-ingress","namespace":"tac-platform"},"spec":{"rules":[{"host":"tacalertserrorprocessor-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"tacalertserrorprocessor-service","servicePort":80},"path":"/"}]}},{"host":"tacalertserrorprocessor.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"tacalertserrorprocessor-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["tacalertserrorprocessor-test.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-18T14:42:25Z
    generation: 3
    labels:
      name: tacalertserrorprocessor-ingress
    name: tacalertserrorprocessor-ingress
    namespace: tac-platform
    resourceVersion: "49225694"
    selfLink: /apis/extensions/v1beta1/namespaces/tac-platform/ingresses/tacalertserrorprocessor-ingress
    uid: 0f49a248-bb51-11e8-8462-525400b93a8e
  spec:
    rules:
    - host: tacalertserrorprocessor-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: tacalertserrorprocessor-service
            servicePort: 80
          path: /
    - host: tacalertserrorprocessor.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: tacalertserrorprocessor-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - tacalertserrorprocessor-test.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"tacalertsprocessor-ingress"},"name":"tacalertsprocessor-ingress","namespace":"tac-platform"},"spec":{"rules":[{"host":"tacalertsprocessor-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"tacalertsprocessor-service","servicePort":80},"path":"/"}]}},{"host":"tacalertsprocessor.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"tacalertsprocessor-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["tacalertsprocessor-test.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-10T16:32:00Z
    generation: 2
    labels:
      name: tacalertsprocessor-ingress
    name: tacalertsprocessor-ingress
    namespace: tac-platform
    resourceVersion: "49225391"
    selfLink: /apis/extensions/v1beta1/namespaces/tac-platform/ingresses/tacalertsprocessor-ingress
    uid: 0aef92ae-b517-11e8-8488-525400b06b0f
  spec:
    rules:
    - host: tacalertsprocessor-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: tacalertsprocessor-service
            servicePort: 80
          path: /
    - host: tacalertsprocessor.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: tacalertsprocessor-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - tacalertsprocessor-test.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"tacalertsreceiver-api-ingress"},"name":"tacalertsreceiver-api-ingress","namespace":"tac-platform"},"spec":{"rules":[{"host":"tacalertsreceiver-api-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"tacalertsreceiver-api-service","servicePort":80},"path":"/"}]}},{"host":"tacalertsreceiver-api.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"tacalertsreceiver-api-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["tacalertsreceiver-api-test.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-25T13:43:24Z
    generation: 1
    labels:
      name: tacalertsreceiver-api-ingress
    name: tacalertsreceiver-api-ingress
    namespace: tac-platform
    resourceVersion: "49225692"
    selfLink: /apis/extensions/v1beta1/namespaces/tac-platform/ingresses/tacalertsreceiver-api-ingress
    uid: f9249f47-c0c8-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: tacalertsreceiver-api-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: tacalertsreceiver-api-service
            servicePort: 80
          path: /
    - host: tacalertsreceiver-api.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: tacalertsreceiver-api-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - tacalertsreceiver-api-test.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"tactoken-api-ingress"},"name":"tactoken-api-ingress","namespace":"tac-platform"},"spec":{"rules":[{"host":"tactoken-v1-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"tactoken-api-service","servicePort":80},"path":"/"}]}},{"host":"tactoken-v1.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"tactoken-api-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["tactoken-v1-test.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-20T13:50:36Z
    generation: 11
    labels:
      name: tactoken-api-ingress
    name: tactoken-api-ingress
    namespace: tac-platform
    resourceVersion: "49225857"
    selfLink: /apis/extensions/v1beta1/namespaces/tac-platform/ingresses/tactoken-api-ingress
    uid: 269aff9b-bcdc-11e8-a79d-525400524761
  spec:
    rules:
    - host: tactoken-v1-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: tactoken-api-service
            servicePort: 80
          path: /
    - host: tactoken-v1.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: tactoken-api-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - tactoken-v1-test.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"content-ingress"},"name":"content-ingress","namespace":"tc-ivrnp"},"spec":{"rules":[{"host":"content-api.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"content-service","servicePort":8080},"path":"/"}]}},{"host":"content-api.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"content-service","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2018-11-21T08:19:26Z
    generation: 1
    labels:
      name: content-ingress
    name: content-ingress
    namespace: tc-ivrnp
    resourceVersion: "83958589"
    selfLink: /apis/extensions/v1beta1/namespaces/tc-ivrnp/ingresses/content-ingress
    uid: 2922bdea-ed66-11e8-ad5a-525400a9bf14
  spec:
    rules:
    - host: content-api.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: content-service
            servicePort: 8080
          path: /
    - host: content-api.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: content-service
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"ddustore-api"},"name":"ddustore-api","namespace":"tfm-stage"},"spec":{"rules":[{"host":"ddustore-api.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ddustore-api","servicePort":8080},"path":"/"}]}},{"host":"ddustore-api.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ddustore-api","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["ddustore-api.test.k8s.target.com","ddustore-api.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-13T22:09:07Z
    generation: 1
    labels:
      name: ddustore-api
    name: ddustore-api
    namespace: tfm-stage
    resourceVersion: "49225825"
    selfLink: /apis/extensions/v1beta1/namespaces/tfm-stage/ingresses/ddustore-api
    uid: a1fed953-b7a1-11e8-8488-525400b06b0f
  spec:
    rules:
    - host: ddustore-api.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ddustore-api
            servicePort: 8080
          path: /
    - host: ddustore-api.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ddustore-api
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - ddustore-api.test.k8s.target.com
      - ddustore-api.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"tgtv-filters-edge-v1-ingress"},"name":"tgtv-filters-edge-v1-ingress","namespace":"tgtv"},"spec":{"rules":[{"host":"tgtv-filters-edge-v1.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"tgtv-filters-edge-v1-service","servicePort":80},"path":"/"}]}},{"host":"tgtv-filters-edge-v1.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"tgtv-filters-edge-v1-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["tgtv-filters-edge-v1.ttc-test.k8s.target.com","tgtv-filters-edge-v1.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-03-07T18:30:57Z
    generation: 1
    labels:
      name: tgtv-filters-edge-v1-ingress
    name: tgtv-filters-edge-v1-ingress
    namespace: tgtv
    resourceVersion: "201348219"
    selfLink: /apis/extensions/v1beta1/namespaces/tgtv/ingresses/tgtv-filters-edge-v1-ingress
    uid: 2662e28c-4107-11e9-ad0c-5254005cae79
  spec:
    rules:
    - host: tgtv-filters-edge-v1.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: tgtv-filters-edge-v1-service
            servicePort: 80
          path: /
    - host: tgtv-filters-edge-v1.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: tgtv-filters-edge-v1-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - tgtv-filters-edge-v1.ttc-test.k8s.target.com
      - tgtv-filters-edge-v1.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"tgtv-superset-ingress"},"name":"tgtv-superset-ingress","namespace":"tgtv"},"spec":{"rules":[{"host":"tgtv-superset.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"tgtv-superset-service","servicePort":80},"path":"/"}]}},{"host":"tgtv-superset.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"tgtv-superset-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["tgtv-superset.ttc-test.k8s.target.com","tgtv-superset.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-11T17:07:53Z
    generation: 1
    labels:
      name: tgtv-superset-ingress
    name: tgtv-superset-ingress
    namespace: tgtv
    resourceVersion: "49225602"
    selfLink: /apis/extensions/v1beta1/namespaces/tgtv/ingresses/tgtv-superset-ingress
    uid: 38b2c631-b5e5-11e8-a71c-525400524761
  spec:
    rules:
    - host: tgtv-superset.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: tgtv-superset-service
            servicePort: 80
          path: /
    - host: tgtv-superset.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: tgtv-superset-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - tgtv-superset.ttc-test.k8s.target.com
      - tgtv-superset.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"tgtv-vizceral-ingress"},"name":"tgtv-vizceral-ingress","namespace":"tgtv"},"spec":{"rules":[{"host":"tgtv-vizceral.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"tgtv-vizceral-service","servicePort":80},"path":"/"}]}},{"host":"tgtv-vizceral.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"tgtv-vizceral-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["tgtv-vizceral.ttc-test.k8s.target.com","tgtv-vizceral.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-19T13:56:44Z
    generation: 1
    labels:
      name: tgtv-vizceral-ingress
    name: tgtv-vizceral-ingress
    namespace: tgtv
    resourceVersion: "49225553"
    selfLink: /apis/extensions/v1beta1/namespaces/tgtv/ingresses/tgtv-vizceral-ingress
    uid: d7e8d94f-bc13-11e8-8488-525400b06b0f
  spec:
    rules:
    - host: tgtv-vizceral.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: tgtv-vizceral-service
            servicePort: 80
          path: /
    - host: tgtv-vizceral.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: tgtv-vizceral-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - tgtv-vizceral.ttc-test.k8s.target.com
      - tgtv-vizceral.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"rest-api-postgres-ti-test-ingress"},"name":"rest-api-postgres-ti-test-ingress","namespace":"ti-test"},"spec":{"rules":[{"host":"rest-api-postgres-ti-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rest-api-postgres-service","servicePort":80},"path":"/"}]}},{"host":"rest-api-postgres-ti-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rest-api-postgres-service","servicePort":80},"path":"/"}]}},{"host":"rest-api-postgres-ti-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rest-api-postgres-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["rest-api-postgres-ti-test.tte-test.k8s.target.com","rest-api-postgres-ti-test.ttc-test.k8s.target.com","rest-api-postgres-ti-test.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-07T06:36:02Z
    generation: 1
    labels:
      name: rest-api-postgres-ti-test-ingress
    name: rest-api-postgres-ti-test-ingress
    namespace: ti-test
    resourceVersion: "70804057"
    selfLink: /apis/extensions/v1beta1/namespaces/ti-test/ingresses/rest-api-postgres-ti-test-ingress
    uid: 652cabf3-e257-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: rest-api-postgres-ti-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rest-api-postgres-service
            servicePort: 80
          path: /
    - host: rest-api-postgres-ti-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rest-api-postgres-service
            servicePort: 80
          path: /
    - host: rest-api-postgres-ti-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rest-api-postgres-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - rest-api-postgres-ti-test.tte-test.k8s.target.com
      - rest-api-postgres-ti-test.ttc-test.k8s.target.com
      - rest-api-postgres-ti-test.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"sample-app-sox-ti-test-ingress"},"name":"sample-app-sox-ti-test-ingress","namespace":"ti-test"},"spec":{"rules":[{"host":"sample-app-sox-ti-test.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"sample-app-sox-service","servicePort":80},"path":"/"}]}},{"host":"sample-app-sox-ti-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"sample-app-sox-service","servicePort":80},"path":"/"}]}},{"host":"sample-app-sox-ti-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"sample-app-sox-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["sample-app-sox-ti-test.tte-test.k8s.target.com","sample-app-sox-ti-test.ttc-test.k8s.target.com","sample-app-sox-ti-test.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-06T05:56:23Z
    generation: 1
    labels:
      name: sample-app-sox-ti-test-ingress
    name: sample-app-sox-ti-test-ingress
    namespace: ti-test
    resourceVersion: "69949101"
    selfLink: /apis/extensions/v1beta1/namespaces/ti-test/ingresses/sample-app-sox-ti-test-ingress
    uid: b0c4e49c-e188-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: sample-app-sox-ti-test.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: sample-app-sox-service
            servicePort: 80
          path: /
    - host: sample-app-sox-ti-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: sample-app-sox-service
            servicePort: 80
          path: /
    - host: sample-app-sox-ti-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: sample-app-sox-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - sample-app-sox-ti-test.tte-test.k8s.target.com
      - sample-app-sox-ti-test.ttc-test.k8s.target.com
      - sample-app-sox-ti-test.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"3d-receive-event-processor"},"name":"3d-receive-event-processor","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"3d-receive-event-processor-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ddd-receive-event-processor","servicePort":9314},"path":"/"}]}},{"host":"3d-receive-event-processor-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ddd-receive-event-processor","servicePort":9314},"path":"/"}]}}],"tls":[{"hosts":["3d-receive-event-processor-stage.test.k8s.target.com","3d-receive-event-processor-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-29T16:29:47Z
    generation: 1
    labels:
      app: 3d-receive-event-processor
    name: 3d-receive-event-processor
    namespace: transfer-order-stage
    resourceVersion: "49225970"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/3d-receive-event-processor
    uid: be68eb13-aba8-11e8-8462-525400b93a8e
  spec:
    rules:
    - host: 3d-receive-event-processor-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ddd-receive-event-processor
            servicePort: 9314
          path: /
    - host: 3d-receive-event-processor-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ddd-receive-event-processor
            servicePort: 9314
          path: /
    tls:
    - hosts:
      - 3d-receive-event-processor-stage.test.k8s.target.com
      - 3d-receive-event-processor-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"3d-receive-event-processor-release-2-4-0"},"name":"3d-receive-event-processor-release-2-4-0","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"3d-receive-event-processor-release-2-4-0.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"svc-3d-receive-event-processor-release-2-4-0","servicePort":9314},"path":"/"}]}},{"host":"3d-receive-event-processor-release-2-4-0.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"svc-3d-receive-event-processor-release-2-4-0","servicePort":9314},"path":"/"}]}}],"tls":[{"hosts":["3d-receive-event-processor-release-2-4-0.test.k8s.target.com","3d-receive-event-processor-release-2-4-0.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-29T20:28:27Z
    generation: 1
    labels:
      app: 3d-receive-event-processor-release-2-4-0
    name: 3d-receive-event-processor-release-2-4-0
    namespace: transfer-order-stage
    resourceVersion: "63587867"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/3d-receive-event-processor-release-2-4-0
    uid: 311ac176-dbb9-11e8-80ff-5254001f7df6
  spec:
    rules:
    - host: 3d-receive-event-processor-release-2-4-0.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: svc-3d-receive-event-processor-release-2-4-0
            servicePort: 9314
          path: /
    - host: 3d-receive-event-processor-release-2-4-0.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: svc-3d-receive-event-processor-release-2-4-0
            servicePort: 9314
          path: /
    tls:
    - hosts:
      - 3d-receive-event-processor-release-2-4-0.test.k8s.target.com
      - 3d-receive-event-processor-release-2-4-0.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"3d-ship-event-processor"},"name":"3d-ship-event-processor","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"3d-ship-event-processor-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ddd-ship-event-processor","servicePort":9310},"path":"/"}]}},{"host":"3d-ship-event-processor-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ddd-ship-event-processor","servicePort":9310},"path":"/"}]}}],"tls":[{"hosts":["3d-ship-event-processor-stage.test.k8s.target.com","3d-ship-event-processor-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-29T16:10:07Z
    generation: 1
    labels:
      app: 3d-ship-event-processor
    name: 3d-ship-event-processor
    namespace: transfer-order-stage
    resourceVersion: "49225911"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/3d-ship-event-processor
    uid: ff0653c2-aba5-11e8-a71c-525400524761
  spec:
    rules:
    - host: 3d-ship-event-processor-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ddd-ship-event-processor
            servicePort: 9310
          path: /
    - host: 3d-ship-event-processor-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ddd-ship-event-processor
            servicePort: 9310
          path: /
    tls:
    - hosts:
      - 3d-ship-event-processor-stage.test.k8s.target.com
      - 3d-ship-event-processor-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"3pl-event-consumer"},"name":"3pl-event-consumer","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"3pl-event-consumer-stage.us-central-1.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"threepl-event-consumer","servicePort":9309},"path":"/"}]}},{"host":"3pl-event-consumer-stage.us-central-1ttc.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"threepl-event-consumer","servicePort":9309},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-09T17:58:56Z
    generation: 1
    labels:
      app: 3pl-event-consumer
    name: 3pl-event-consumer
    namespace: transfer-order-stage
    resourceVersion: "49225622"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/3pl-event-consumer
    uid: fdc9eed1-cbec-11e8-82d1-5254009c2c25
  spec:
    rules:
    - host: 3pl-event-consumer-stage.us-central-1.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: threepl-event-consumer
            servicePort: 9309
          path: /
    - host: 3pl-event-consumer-stage.us-central-1ttc.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: threepl-event-consumer
            servicePort: 9309
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"3pl-event-consumer-release-1-0-0"},"name":"3pl-event-consumer-release-1-0-0","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"3pl-event-consumer-release-1-0-0.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"svc-3pl-event-consumer-release-1-0-0","servicePort":9309},"path":"/"}]}},{"host":"3pl-event-consumer-release-1-0-0.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"svc-3pl-event-consumer-release-1-0-0","servicePort":9309},"path":"/"}]}}],"tls":[{"hosts":["3pl-event-consumer-release-1-0-0.test.k8s.target.com","3pl-event-consumer-release-1-0-0.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T20:38:49Z
    generation: 1
    labels:
      app: 3pl-event-consumer-release-1-0-0
    name: 3pl-event-consumer-release-1-0-0
    namespace: transfer-order-stage
    resourceVersion: "49225464"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/3pl-event-consumer-release-1-0-0
    uid: 586b83c1-bdde-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: 3pl-event-consumer-release-1-0-0.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: svc-3pl-event-consumer-release-1-0-0
            servicePort: 9309
          path: /
    - host: 3pl-event-consumer-release-1-0-0.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: svc-3pl-event-consumer-release-1-0-0
            servicePort: 9309
          path: /
    tls:
    - hosts:
      - 3pl-event-consumer-release-1-0-0.test.k8s.target.com
      - 3pl-event-consumer-release-1-0-0.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"3pl-event-consumer-release-2-2-1"},"name":"3pl-event-consumer-release-2-2-1","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"3pl-event-consumer-release-2-2-1.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"svc-3pl-event-consumer-release-2-2-1","servicePort":9309},"path":"/"}]}},{"host":"3pl-event-consumer-release-2-2-1.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"svc-3pl-event-consumer-release-2-2-1","servicePort":9309},"path":"/"}]}}],"tls":[{"hosts":["3pl-event-consumer-release-2-2-1.test.k8s.target.com","3pl-event-consumer-release-2-2-1.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T20:34:29Z
    generation: 1
    labels:
      app: 3pl-event-consumer-release-2-2-1
    name: 3pl-event-consumer-release-2-2-1
    namespace: transfer-order-stage
    resourceVersion: "49226011"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/3pl-event-consumer-release-2-2-1
    uid: bd600136-bddd-11e8-b822-525400b06b0f
  spec:
    rules:
    - host: 3pl-event-consumer-release-2-2-1.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: svc-3pl-event-consumer-release-2-2-1
            servicePort: 9309
          path: /
    - host: 3pl-event-consumer-release-2-2-1.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: svc-3pl-event-consumer-release-2-2-1
            servicePort: 9309
          path: /
    tls:
    - hosts:
      - 3pl-event-consumer-release-2-2-1.test.k8s.target.com
      - 3pl-event-consumer-release-2-2-1.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"3pl-event-publisher"},"name":"3pl-event-publisher","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"3pl-event-publisher-stage.us-central-1.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"threepl-event-publisher","servicePort":9310},"path":"/"}]}},{"host":"3pl-event-publisher-stage.us-central-1ttc.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"threepl-event-publisher","servicePort":9310},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-08T16:09:53Z
    generation: 1
    labels:
      app: 3pl-event-publisher
    name: 3pl-event-publisher
    namespace: transfer-order-stage
    resourceVersion: "49225507"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/3pl-event-publisher
    uid: 97ac0892-cb14-11e8-9f4c-525400adf9ce
  spec:
    rules:
    - host: 3pl-event-publisher-stage.us-central-1.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: threepl-event-publisher
            servicePort: 9310
          path: /
    - host: 3pl-event-publisher-stage.us-central-1ttc.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: threepl-event-publisher
            servicePort: 9310
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"3pl-event-publisher-release-1-0-0"},"name":"3pl-event-publisher-release-1-0-0","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"3pl-event-publisher-release-1-0-0.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"svc-3pl-event-publisher-release-1-0-0","servicePort":9310},"path":"/"}]}},{"host":"3pl-event-publisher-release-1-0-0.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"svc-3pl-event-publisher-release-1-0-0","servicePort":9310},"path":"/"}]}}],"tls":[{"hosts":["3pl-event-publisher-release-1-0-0.test.k8s.target.com","3pl-event-publisher-release-1-0-0.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-21T19:05:28Z
    generation: 1
    labels:
      app: 3pl-event-publisher-release-1-0-0
    name: 3pl-event-publisher-release-1-0-0
    namespace: transfer-order-stage
    resourceVersion: "49225521"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/3pl-event-publisher-release-1-0-0
    uid: 4dac5c5e-bdd1-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: 3pl-event-publisher-release-1-0-0.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: svc-3pl-event-publisher-release-1-0-0
            servicePort: 9310
          path: /
    - host: 3pl-event-publisher-release-1-0-0.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: svc-3pl-event-publisher-release-1-0-0
            servicePort: 9310
          path: /
    tls:
    - hosts:
      - 3pl-event-publisher-release-1-0-0.test.k8s.target.com
      - 3pl-event-publisher-release-1-0-0.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"adjustment-event-processor"},"name":"adjustment-event-processor","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"adjustment-event-processor-stage.us-central-1.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"adjustment-event-processor","servicePort":9313},"path":"/"}]}},{"host":"adjustment-event-processor-stage.us-central-1ttc.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"adjustment-event-processor","servicePort":9313},"path":"/"}]}}]}}
    creationTimestamp: 2018-09-25T16:31:27Z
    generation: 1
    labels:
      app: adjustment-event-processor
    name: adjustment-event-processor
    namespace: transfer-order-stage
    resourceVersion: "49225418"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/adjustment-event-processor
    uid: 73359949-c0e0-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: adjustment-event-processor-stage.us-central-1.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: adjustment-event-processor
            servicePort: 9313
          path: /
    - host: adjustment-event-processor-stage.us-central-1ttc.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: adjustment-event-processor
            servicePort: 9313
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"crc-receive-event-processor"},"name":"crc-receive-event-processor","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"crc-receive-event-processor-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"crc-receive-event-processor","servicePort":9305},"path":"/"}]}},{"host":"crc-receive-event-processor-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"crc-receive-event-processor","servicePort":9305},"path":"/"}]}}],"tls":[{"hosts":["crc-receive-event-processor-stage.test.k8s.target.com","crc-receive-event-processor-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-30T20:12:10Z
    generation: 1
    labels:
      app: crc-receive-event-processor
    name: crc-receive-event-processor
    namespace: transfer-order-stage
    resourceVersion: "49225946"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/crc-receive-event-processor
    uid: fa206d9b-ac90-11e8-b402-525400b06b0f
  spec:
    rules:
    - host: crc-receive-event-processor-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: crc-receive-event-processor
            servicePort: 9305
          path: /
    - host: crc-receive-event-processor-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: crc-receive-event-processor
            servicePort: 9305
          path: /
    tls:
    - hosts:
      - crc-receive-event-processor-stage.test.k8s.target.com
      - crc-receive-event-processor-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"ing-3d-ship-event-processor-release-3-7-0"},"name":"ing-3d-ship-event-processor-release-3-7-0","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"ing-3d-ship-event-processor-release-3-7-0.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"svc-3d-ship-event-processor-release-3-7-0","servicePort":9310},"path":"/"}]}},{"host":"ing-3d-ship-event-processor-release-3-7-0.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"svc-3d-ship-event-processor-release-3-7-0","servicePort":9310},"path":"/"}]}}],"tls":[{"hosts":["ing-3d-ship-event-processor-release-3-7-0.test.k8s.target.com","ing-3d-ship-event-processor-release-3-7-0.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-06T20:26:56Z
    generation: 1
    labels:
      app: ing-3d-ship-event-processor-release-3-7-0
    name: ing-3d-ship-event-processor-release-3-7-0
    namespace: transfer-order-stage
    resourceVersion: "100358191"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/ing-3d-ship-event-processor-release-3-7-0
    uid: 4672b309-f995-11e8-981f-5254001f7df6
  spec:
    rules:
    - host: ing-3d-ship-event-processor-release-3-7-0.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: svc-3d-ship-event-processor-release-3-7-0
            servicePort: 9310
          path: /
    - host: ing-3d-ship-event-processor-release-3-7-0.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: svc-3d-ship-event-processor-release-3-7-0
            servicePort: 9310
          path: /
    tls:
    - hosts:
      - ing-3d-ship-event-processor-release-3-7-0.test.k8s.target.com
      - ing-3d-ship-event-processor-release-3-7-0.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"ing-3d-ship-event-processor-release-3-9-0"},"name":"ing-3d-ship-event-processor-release-3-9-0","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"ing-3d-ship-event-processor-release-3-9-0.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"svc-3d-ship-event-processor-release-3-9-0","servicePort":9310},"path":"/"}]}},{"host":"ing-3d-ship-event-processor-release-3-9-0.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"svc-3d-ship-event-processor-release-3-9-0","servicePort":9310},"path":"/"}]}}],"tls":[{"hosts":["ing-3d-ship-event-processor-release-3-9-0.test.k8s.target.com","ing-3d-ship-event-processor-release-3-9-0.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-12T19:53:03Z
    generation: 1
    labels:
      app: ing-3d-ship-event-processor-release-3-9-0
    name: ing-3d-ship-event-processor-release-3-9-0
    namespace: transfer-order-stage
    resourceVersion: "175754212"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/ing-3d-ship-event-processor-release-3-9-0
    uid: cebc4e50-2eff-11e9-bfe7-525400721049
  spec:
    rules:
    - host: ing-3d-ship-event-processor-release-3-9-0.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: svc-3d-ship-event-processor-release-3-9-0
            servicePort: 9310
          path: /
    - host: ing-3d-ship-event-processor-release-3-9-0.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: svc-3d-ship-event-processor-release-3-9-0
            servicePort: 9310
          path: /
    tls:
    - hosts:
      - ing-3d-ship-event-processor-release-3-9-0.test.k8s.target.com
      - ing-3d-ship-event-processor-release-3-9-0.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"ing-3d-ship-event-processor-release-4-0-0"},"name":"ing-3d-ship-event-processor-release-4-0-0","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"ing-3d-ship-event-processor-release-4-0-0.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"svc-3d-ship-event-processor-release-4-0-0","servicePort":9310},"path":"/"}]}},{"host":"ing-3d-ship-event-processor-release-4-0-0.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"svc-3d-ship-event-processor-release-4-0-0","servicePort":9310},"path":"/"}]}}],"tls":[{"hosts":["ing-3d-ship-event-processor-release-4-0-0.test.k8s.target.com","ing-3d-ship-event-processor-release-4-0-0.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-13T14:37:50Z
    generation: 1
    labels:
      app: ing-3d-ship-event-processor-release-4-0-0
    name: ing-3d-ship-event-processor-release-4-0-0
    namespace: transfer-order-stage
    resourceVersion: "176552128"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/ing-3d-ship-event-processor-release-4-0-0
    uid: f0545515-2f9c-11e9-a157-52540070e292
  spec:
    rules:
    - host: ing-3d-ship-event-processor-release-4-0-0.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: svc-3d-ship-event-processor-release-4-0-0
            servicePort: 9310
          path: /
    - host: ing-3d-ship-event-processor-release-4-0-0.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: svc-3d-ship-event-processor-release-4-0-0
            servicePort: 9310
          path: /
    tls:
    - hosts:
      - ing-3d-ship-event-processor-release-4-0-0.test.k8s.target.com
      - ing-3d-ship-event-processor-release-4-0-0.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"lifecycle-event-processor"},"name":"lifecycle-event-processor","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"lifecycle-event-processor-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lifecycle-event-processor","servicePort":9306},"path":"/"}]}},{"host":"lifecycle-event-processor-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lifecycle-event-processor","servicePort":9306},"path":"/"}]}}],"tls":[{"hosts":["lifecycle-event-processor-stage.test.k8s.target.com","lifecycle-event-processor-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-12T12:44:47Z
    generation: 1
    labels:
      app: lifecycle-event-processor
    name: lifecycle-event-processor
    namespace: transfer-order-stage
    resourceVersion: "49877101"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/lifecycle-event-processor
    uid: 9a1d118f-ce1c-11e8-ad5b-5254008c264f
  spec:
    rules:
    - host: lifecycle-event-processor-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lifecycle-event-processor
            servicePort: 9306
          path: /
    - host: lifecycle-event-processor-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lifecycle-event-processor
            servicePort: 9306
          path: /
    tls:
    - hosts:
      - lifecycle-event-processor-stage.test.k8s.target.com
      - lifecycle-event-processor-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"lifecycle-event-processor-release-1-0-0"},"name":"lifecycle-event-processor-release-1-0-0","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"lifecycle-event-processor-release-1-0-0.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lifecycle-event-processor-release-1-0-0","servicePort":9315},"path":"/"}]}},{"host":"lifecycle-event-processor-release-1-0-0.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lifecycle-event-processor-release-1-0-0","servicePort":9315},"path":"/"}]}}],"tls":[{"hosts":["lifecycle-event-processor-release-1-0-0.test.k8s.target.com","lifecycle-event-processor-release-1-0-0.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-02T20:29:58Z
    generation: 2
    labels:
      app: lifecycle-event-processor-release-1-0-0
    name: lifecycle-event-processor-release-1-0-0
    namespace: transfer-order-stage
    resourceVersion: "49225920"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/lifecycle-event-processor-release-1-0-0
    uid: ee4815e5-c681-11e8-b53b-5254000e56fe
  spec:
    rules:
    - host: lifecycle-event-processor-release-1-0-0.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lifecycle-event-processor-release-1-0-0
            servicePort: 9315
          path: /
    - host: lifecycle-event-processor-release-1-0-0.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lifecycle-event-processor-release-1-0-0
            servicePort: 9315
          path: /
    tls:
    - hosts:
      - lifecycle-event-processor-release-1-0-0.test.k8s.target.com
      - lifecycle-event-processor-release-1-0-0.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"lifecycle-event-processor-release-1-0-1"},"name":"lifecycle-event-processor-release-1-0-1","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"lifecycle-event-processor-release-1-0-1.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lifecycle-event-processor-release-1-0-1","servicePort":9315},"path":"/"}]}},{"host":"lifecycle-event-processor-release-1-0-1.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lifecycle-event-processor-release-1-0-1","servicePort":9315},"path":"/"}]}}],"tls":[{"hosts":["lifecycle-event-processor-release-1-0-1.test.k8s.target.com","lifecycle-event-processor-release-1-0-1.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-31T02:30:43Z
    generation: 1
    labels:
      app: lifecycle-event-processor-release-1-0-1
    name: lifecycle-event-processor-release-1-0-1
    namespace: transfer-order-stage
    resourceVersion: "64708777"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/lifecycle-event-processor-release-1-0-1
    uid: f768b8f0-dcb4-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: lifecycle-event-processor-release-1-0-1.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lifecycle-event-processor-release-1-0-1
            servicePort: 9315
          path: /
    - host: lifecycle-event-processor-release-1-0-1.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lifecycle-event-processor-release-1-0-1
            servicePort: 9315
          path: /
    tls:
    - hosts:
      - lifecycle-event-processor-release-1-0-1.test.k8s.target.com
      - lifecycle-event-processor-release-1-0-1.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"lifecycle-event-processor-release-1-1-0"},"name":"lifecycle-event-processor-release-1-1-0","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"lifecycle-event-processor-release-1-1-0.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lifecycle-event-processor-release-1-1-0","servicePort":9306},"path":"/"}]}},{"host":"lifecycle-event-processor-release-1-1-0.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lifecycle-event-processor-release-1-1-0","servicePort":9306},"path":"/"}]}}],"tls":[{"hosts":["lifecycle-event-processor-release-1-1-0.test.k8s.target.com","lifecycle-event-processor-release-1-1-0.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-04T18:54:39Z
    generation: 1
    labels:
      app: lifecycle-event-processor-release-1-1-0
    name: lifecycle-event-processor-release-1-1-0
    namespace: transfer-order-stage
    resourceVersion: "49225740"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/lifecycle-event-processor-release-1-1-0
    uid: f23ced14-c806-11e8-b53b-5254000e56fe
  spec:
    rules:
    - host: lifecycle-event-processor-release-1-1-0.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lifecycle-event-processor-release-1-1-0
            servicePort: 9306
          path: /
    - host: lifecycle-event-processor-release-1-1-0.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lifecycle-event-processor-release-1-1-0
            servicePort: 9306
          path: /
    tls:
    - hosts:
      - lifecycle-event-processor-release-1-1-0.test.k8s.target.com
      - lifecycle-event-processor-release-1-1-0.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"lifecycle-event-processor-release-1-2-4"},"name":"lifecycle-event-processor-release-1-2-4","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"lifecycle-event-processor-release-1-2-4.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lifecycle-event-processor-release-1-2-4","servicePort":9315},"path":"/"}]}},{"host":"lifecycle-event-processor-release-1-2-4.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lifecycle-event-processor-release-1-2-4","servicePort":9315},"path":"/"}]}}],"tls":[{"hosts":["lifecycle-event-processor-release-1-2-4.test.k8s.target.com","lifecycle-event-processor-release-1-2-4.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-14T17:09:20Z
    generation: 1
    labels:
      app: lifecycle-event-processor-release-1-2-4
    name: lifecycle-event-processor-release-1-2-4
    namespace: transfer-order-stage
    resourceVersion: "77058572"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/lifecycle-event-processor-release-1-2-4
    uid: 06ba5dbd-e830-11e8-9e69-525400e51df1
  spec:
    rules:
    - host: lifecycle-event-processor-release-1-2-4.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lifecycle-event-processor-release-1-2-4
            servicePort: 9315
          path: /
    - host: lifecycle-event-processor-release-1-2-4.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lifecycle-event-processor-release-1-2-4
            servicePort: 9315
          path: /
    tls:
    - hosts:
      - lifecycle-event-processor-release-1-2-4.test.k8s.target.com
      - lifecycle-event-processor-release-1-2-4.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"lifecycle-event-processor-release-1-3-2"},"name":"lifecycle-event-processor-release-1-3-2","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"lifecycle-event-processor-release-1-3-2.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lifecycle-event-processor-release-1-3-2","servicePort":9315},"path":"/"}]}},{"host":"lifecycle-event-processor-release-1-3-2.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lifecycle-event-processor-release-1-3-2","servicePort":9315},"path":"/"}]}}],"tls":[{"hosts":["lifecycle-event-processor-release-1-3-2.test.k8s.target.com","lifecycle-event-processor-release-1-3-2.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-23T18:39:41Z
    generation: 1
    labels:
      app: lifecycle-event-processor-release-1-3-2
    name: lifecycle-event-processor-release-1-3-2
    namespace: transfer-order-stage
    resourceVersion: "86503666"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/lifecycle-event-processor-release-1-3-2
    uid: 23f8f290-ef4f-11e8-981f-5254001f7df6
  spec:
    rules:
    - host: lifecycle-event-processor-release-1-3-2.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lifecycle-event-processor-release-1-3-2
            servicePort: 9315
          path: /
    - host: lifecycle-event-processor-release-1-3-2.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lifecycle-event-processor-release-1-3-2
            servicePort: 9315
          path: /
    tls:
    - hosts:
      - lifecycle-event-processor-release-1-3-2.test.k8s.target.com
      - lifecycle-event-processor-release-1-3-2.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"lifecycle-event-processor-release-1-4-1"},"name":"lifecycle-event-processor-release-1-4-1","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"lifecycle-event-processor-release-1-4-1.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lifecycle-event-processor-release-1-4-1","servicePort":9315},"path":"/"}]}},{"host":"lifecycle-event-processor-release-1-4-1.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lifecycle-event-processor-release-1-4-1","servicePort":9315},"path":"/"}]}}],"tls":[{"hosts":["lifecycle-event-processor-release-1-4-1.test.k8s.target.com","lifecycle-event-processor-release-1-4-1.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-24T19:54:39Z
    generation: 1
    labels:
      app: lifecycle-event-processor-release-1-4-1
    name: lifecycle-event-processor-release-1-4-1
    namespace: transfer-order-stage
    resourceVersion: "87580873"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/lifecycle-event-processor-release-1-4-1
    uid: c73f623a-f022-11e8-981f-5254001f7df6
  spec:
    rules:
    - host: lifecycle-event-processor-release-1-4-1.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lifecycle-event-processor-release-1-4-1
            servicePort: 9315
          path: /
    - host: lifecycle-event-processor-release-1-4-1.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lifecycle-event-processor-release-1-4-1
            servicePort: 9315
          path: /
    tls:
    - hosts:
      - lifecycle-event-processor-release-1-4-1.test.k8s.target.com
      - lifecycle-event-processor-release-1-4-1.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"lifecycle-event-processor-release-2-0-0"},"name":"lifecycle-event-processor-release-2-0-0","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"lifecycle-event-processor-release-2-0-0.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lifecycle-event-processor-release-2-0-0","servicePort":9315},"path":"/"}]}},{"host":"lifecycle-event-processor-release-2-0-0.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lifecycle-event-processor-release-2-0-0","servicePort":9315},"path":"/"}]}}],"tls":[{"hosts":["lifecycle-event-processor-release-2-0-0.test.k8s.target.com","lifecycle-event-processor-release-2-0-0.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-30T01:50:59Z
    generation: 1
    labels:
      app: lifecycle-event-processor-release-2-0-0
    name: lifecycle-event-processor-release-2-0-0
    namespace: transfer-order-stage
    resourceVersion: "125708872"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/lifecycle-event-processor-release-2-0-0
    uid: 5b13a516-0bd5-11e9-9fcc-525400f72165
  spec:
    rules:
    - host: lifecycle-event-processor-release-2-0-0.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lifecycle-event-processor-release-2-0-0
            servicePort: 9315
          path: /
    - host: lifecycle-event-processor-release-2-0-0.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lifecycle-event-processor-release-2-0-0
            servicePort: 9315
          path: /
    tls:
    - hosts:
      - lifecycle-event-processor-release-2-0-0.test.k8s.target.com
      - lifecycle-event-processor-release-2-0-0.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"logstash-ing"},"name":"logstash-ing","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"transfer-order-logstash-stage.prod.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"transfer-order-logstash-svc","servicePort":9302},"path":"/"}]}},{"host":"transfer-order-logstash-stage.ttc-prod.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"transfer-order-logstash-svc","servicePort":9302},"path":"/"}]}}],"tls":[{"hosts":["transfer-order-logstash-stage.prod.k8s.target.com","transfer-order-logstash-stage.ttc-prod.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-06T15:37:58Z
    generation: 2
    labels:
      app: logstash-ing
    name: logstash-ing
    namespace: transfer-order-stage
    resourceVersion: "49225955"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/logstash-ing
    uid: d4a71d6a-b1ea-11e8-a71c-525400524761
  spec:
    rules:
    - host: transfer-order-logstash-stage.prod.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: transfer-order-logstash-svc
            servicePort: 9302
          path: /
    - host: transfer-order-logstash-stage.ttc-prod.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: transfer-order-logstash-svc
            servicePort: 9302
          path: /
    tls:
    - hosts:
      - transfer-order-logstash-stage.prod.k8s.target.com
      - transfer-order-logstash-stage.ttc-prod.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"manhattan-receive-event-processor"},"name":"manhattan-receive-event-processor","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"manhattan-receive-event-processor-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"manhattan-receive-event-processor","servicePort":9310},"path":"/"}]}},{"host":"manhattan-receive-event-processor-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"manhattan-receive-event-processor","servicePort":9310},"path":"/"}]}}],"tls":[{"hosts":["manhattan-receive-event-processor-stage.test.k8s.target.com","manhattan-receive-event-processor-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-24T17:09:27Z
    generation: 1
    labels:
      app: manhattan-receive-event-processor
    name: manhattan-receive-event-processor
    namespace: transfer-order-stage
    resourceVersion: "49225567"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/manhattan-receive-event-processor
    uid: 7547e83f-a7c0-11e8-962d-525400b93a8e
  spec:
    rules:
    - host: manhattan-receive-event-processor-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: manhattan-receive-event-processor
            servicePort: 9310
          path: /
    - host: manhattan-receive-event-processor-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: manhattan-receive-event-processor
            servicePort: 9310
          path: /
    tls:
    - hosts:
      - manhattan-receive-event-processor-stage.test.k8s.target.com
      - manhattan-receive-event-processor-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"manhattan-ship-event-processor"},"name":"manhattan-ship-event-processor","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"manhattan-ship-event-processor-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"manhattan-ship-event-processor","servicePort":9309},"path":"/"}]}},{"host":"manhattan-ship-event-processor-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"manhattan-ship-event-processor","servicePort":9309},"path":"/"}]}}],"tls":[{"hosts":["manhattan-ship-event-processor-stage.test.k8s.target.com","manhattan-ship-event-processor-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-23T18:09:43Z
    generation: 1
    labels:
      app: manhattan-ship-event-processor
    name: manhattan-ship-event-processor
    namespace: transfer-order-stage
    resourceVersion: "49225730"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/manhattan-ship-event-processor
    uid: b5e8408c-a6ff-11e8-962d-525400b93a8e
  spec:
    rules:
    - host: manhattan-ship-event-processor-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: manhattan-ship-event-processor
            servicePort: 9309
          path: /
    - host: manhattan-ship-event-processor-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: manhattan-ship-event-processor
            servicePort: 9309
          path: /
    tls:
    - hosts:
      - manhattan-ship-event-processor-stage.test.k8s.target.com
      - manhattan-ship-event-processor-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"move-complete-aggregator"},"name":"move-complete-aggregator","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"move-complete-aggregator-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"move-complete-aggregator","servicePort":9306},"path":"/"}]}},{"host":"move-complete-aggregator-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"move-complete-aggregator","servicePort":9306},"path":"/"}]}}],"tls":[{"hosts":["move-complete-aggregator-stage.test.k8s.target.com","move-complete-aggregator-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-30T15:18:18Z
    generation: 1
    labels:
      app: move-complete-aggregator
    name: move-complete-aggregator
    namespace: transfer-order-stage
    resourceVersion: "49225949"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/move-complete-aggregator
    uid: ec9eae1f-ac67-11e8-b402-525400b06b0f
  spec:
    rules:
    - host: move-complete-aggregator-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: move-complete-aggregator
            servicePort: 9306
          path: /
    - host: move-complete-aggregator-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: move-complete-aggregator
            servicePort: 9306
          path: /
    tls:
    - hosts:
      - move-complete-aggregator-stage.test.k8s.target.com
      - move-complete-aggregator-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"move-complete-prep"},"name":"move-complete-prep","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"move-complete-prep-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"move-complete-prep","servicePort":9306},"path":"/"}]}},{"host":"move-complete-prep-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"move-complete-prep","servicePort":9306},"path":"/"}]}}],"tls":[{"hosts":["move-complete-prep-stage.test.k8s.target.com","move-complete-prep-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-30T14:32:34Z
    generation: 1
    labels:
      app: move-complete-prep
    name: move-complete-prep
    namespace: transfer-order-stage
    resourceVersion: "49225339"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/move-complete-prep
    uid: 88eadad0-ac61-11e8-a71c-525400524761
  spec:
    rules:
    - host: move-complete-prep-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: move-complete-prep
            servicePort: 9306
          path: /
    - host: move-complete-prep-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: move-complete-prep
            servicePort: 9306
          path: /
    tls:
    - hosts:
      - move-complete-prep-stage.test.k8s.target.com
      - move-complete-prep-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"ole-receive-event-processor"},"name":"ole-receive-event-processor","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"ole-receive-event-processor-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ole-receive-event-processor","servicePort":9305},"path":"/"}]}},{"host":"ole-receive-event-processor-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ole-receive-event-processor","servicePort":9305},"path":"/"}]}}],"tls":[{"hosts":["ole-receive-event-processor-stage.test.k8s.target.com","ole-receive-event-processor-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-28T15:30:55Z
    generation: 1
    labels:
      app: ole-receive-event-processor
    name: ole-receive-event-processor
    namespace: transfer-order-stage
    resourceVersion: "49225923"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/ole-receive-event-processor
    uid: 5b255de5-aad7-11e8-bd18-525400524761
  spec:
    rules:
    - host: ole-receive-event-processor-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ole-receive-event-processor
            servicePort: 9305
          path: /
    - host: ole-receive-event-processor-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ole-receive-event-processor
            servicePort: 9305
          path: /
    tls:
    - hosts:
      - ole-receive-event-processor-stage.test.k8s.target.com
      - ole-receive-event-processor-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"ole-ship-event-processor"},"name":"ole-ship-event-processor","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"ole-ship-event-processor-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ole-ship-event-processor","servicePort":9302},"path":"/"}]}},{"host":"ole-ship-event-processor-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ole-ship-event-processor","servicePort":9302},"path":"/"}]}}],"tls":[{"hosts":["ole-ship-event-processor-stage.test.k8s.target.com","ole-ship-event-processor-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-27T15:39:13Z
    generation: 1
    labels:
      app: ole-ship-event-processor
    name: ole-ship-event-processor
    namespace: transfer-order-stage
    resourceVersion: "49225736"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/ole-ship-event-processor
    uid: 59562717-aa0f-11e8-bd18-525400524761
  spec:
    rules:
    - host: ole-ship-event-processor-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ole-ship-event-processor
            servicePort: 9302
          path: /
    - host: ole-ship-event-processor-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ole-ship-event-processor
            servicePort: 9302
          path: /
    tls:
    - hosts:
      - ole-ship-event-processor-stage.test.k8s.target.com
      - ole-ship-event-processor-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"ole-ship-event-processor-release-3-0-0"},"name":"ole-ship-event-processor-release-3-0-0","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"ole-ship-event-processor-release-3-0-0.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ole-ship-event-processor-release-3-0-0","servicePort":9302},"path":"/"}]}},{"host":"ole-ship-event-processor-release-3-0-0.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ole-ship-event-processor-release-3-0-0","servicePort":9302},"path":"/"}]}}],"tls":[{"hosts":["ole-ship-event-processor-release-3-0-0.test.k8s.target.com","ole-ship-event-processor-release-3-0-0.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-12-11T20:28:19Z
    generation: 1
    labels:
      app: ole-ship-event-processor-release-3-0-0
    name: ole-ship-event-processor-release-3-0-0
    namespace: transfer-order-stage
    resourceVersion: "105704421"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/ole-ship-event-processor-release-3-0-0
    uid: 4bdfb763-fd83-11e8-9e69-525400e51df1
  spec:
    rules:
    - host: ole-ship-event-processor-release-3-0-0.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ole-ship-event-processor-release-3-0-0
            servicePort: 9302
          path: /
    - host: ole-ship-event-processor-release-3-0-0.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ole-ship-event-processor-release-3-0-0
            servicePort: 9302
          path: /
    tls:
    - hosts:
      - ole-ship-event-processor-release-3-0-0.test.k8s.target.com
      - ole-ship-event-processor-release-3-0-0.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"request-event-processor"},"name":"request-event-processor","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"request-event-processor-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"request-event-processor","servicePort":9306},"path":"/"}]}},{"host":"request-event-processor-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"request-event-processor","servicePort":9306},"path":"/"}]}}],"tls":[{"hosts":["request-event-processor-stage.test.k8s.target.com","request-event-processor-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-30T15:54:45Z
    generation: 1
    labels:
      app: request-event-processor
    name: request-event-processor
    namespace: transfer-order-stage
    resourceVersion: "49225720"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/request-event-processor
    uid: 045938ac-ac6d-11e8-b402-525400b06b0f
  spec:
    rules:
    - host: request-event-processor-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: request-event-processor
            servicePort: 9306
          path: /
    - host: request-event-processor-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: request-event-processor
            servicePort: 9306
          path: /
    tls:
    - hosts:
      - request-event-processor-stage.test.k8s.target.com
      - request-event-processor-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"request-event-processor-release-4-2-0"},"name":"request-event-processor-release-4-2-0","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"request-event-processor-release-4-2-0.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"request-event-processor-release-4-2-0","servicePort":9306},"path":"/"}]}},{"host":"request-event-processor-release-4-2-0.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"request-event-processor-release-4-2-0","servicePort":9306},"path":"/"}]}}],"tls":[{"hosts":["request-event-processor-release-4-2-0.test.k8s.target.com","request-event-processor-release-4-2-0.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-12T21:04:52Z
    generation: 1
    labels:
      app: request-event-processor-release-4-2-0
    name: request-event-processor-release-4-2-0
    namespace: transfer-order-stage
    resourceVersion: "75286320"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/request-event-processor-release-4-2-0
    uid: 995d7fbf-e6be-11e8-9e69-525400e51df1
  spec:
    rules:
    - host: request-event-processor-release-4-2-0.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: request-event-processor-release-4-2-0
            servicePort: 9306
          path: /
    - host: request-event-processor-release-4-2-0.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: request-event-processor-release-4-2-0
            servicePort: 9306
          path: /
    tls:
    - hosts:
      - request-event-processor-release-4-2-0.test.k8s.target.com
      - request-event-processor-release-4-2-0.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"retry-service"},"name":"retry-service","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"retry-service-stage.us-central-1.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"retry-service","servicePort":9306},"path":"/"}]}},{"host":"retry-service-stage.us-central-1ttc.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"retry-service","servicePort":9306},"path":"/"}]}}]}}
    creationTimestamp: 2018-08-29T16:19:29Z
    generation: 1
    labels:
      app: retry-service
    name: retry-service
    namespace: transfer-order-stage
    resourceVersion: "49225565"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/retry-service
    uid: 4dfd3ae4-aba7-11e8-8462-525400b93a8e
  spec:
    rules:
    - host: retry-service-stage.us-central-1.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: retry-service
            servicePort: 9306
          path: /
    - host: retry-service-stage.us-central-1ttc.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: retry-service
            servicePort: 9306
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"retry-service-release-3-3-3"},"name":"retry-service-release-3-3-3","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"retry-service-release-3-3-3.us-central-1.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"retry-service-release-3-3-3","servicePort":9306},"path":"/"}]}},{"host":"retry-service-release-3-3-3.us-central-1ttc.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"retry-service-release-3-3-3","servicePort":9306},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-31T08:49:23Z
    generation: 1
    labels:
      app: retry-service-release-3-3-3
    name: retry-service-release-3-3-3
    namespace: transfer-order-stage
    resourceVersion: "64936801"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/retry-service-release-3-3-3
    uid: dd63da3b-dce9-11e8-80ff-5254001f7df6
  spec:
    rules:
    - host: retry-service-release-3-3-3.us-central-1.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: retry-service-release-3-3-3
            servicePort: 9306
          path: /
    - host: retry-service-release-3-3-3.us-central-1ttc.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: retry-service-release-3-3-3
            servicePort: 9306
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"retry-service-release-3-3-7"},"name":"retry-service-release-3-3-7","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"retry-service-release-3-3-7.us-central-1.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"retry-service-release-3-3-7","servicePort":9306},"path":"/"}]}},{"host":"retry-service-release-3-3-7.us-central-1ttc.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"retry-service-release-3-3-7","servicePort":9306},"path":"/"}]}}]}}
    creationTimestamp: 2018-11-04T06:16:35Z
    generation: 1
    labels:
      app: retry-service-release-3-3-7
    name: retry-service-release-3-3-7
    namespace: transfer-order-stage
    resourceVersion: "68306376"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/retry-service-release-3-3-7
    uid: 2ece3caa-dff9-11e8-87ab-525400e51df1
  spec:
    rules:
    - host: retry-service-release-3-3-7.us-central-1.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: retry-service-release-3-3-7
            servicePort: 9306
          path: /
    - host: retry-service-release-3-3-7.us-central-1ttc.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: retry-service-release-3-3-7
            servicePort: 9306
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"retry-service-release-3-5-1"},"name":"retry-service-release-3-5-1","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"retry-service-release-3-5-1.us-central-1.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"retry-service-release-3-5-1","servicePort":9306},"path":"/"}]}},{"host":"retry-service-release-3-5-1.us-central-1ttc.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"retry-service-release-3-5-1","servicePort":9306},"path":"/"}]}}]}}
    creationTimestamp: 2018-11-02T20:09:16Z
    generation: 1
    labels:
      app: retry-service-release-3-5-1
    name: retry-service-release-3-5-1
    namespace: transfer-order-stage
    resourceVersion: "67121456"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/retry-service-release-3-5-1
    uid: 2cb4c4d3-dedb-11e8-80ff-5254001f7df6
  spec:
    rules:
    - host: retry-service-release-3-5-1.us-central-1.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: retry-service-release-3-5-1
            servicePort: 9306
          path: /
    - host: retry-service-release-3-5-1.us-central-1ttc.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: retry-service-release-3-5-1
            servicePort: 9306
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"retry-service-release-3-6-1"},"name":"retry-service-release-3-6-1","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"retry-service-release-3-6-1.us-central-1.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"retry-service-release-3-6-1","servicePort":9306},"path":"/"}]}},{"host":"retry-service-release-3-6-1.us-central-1ttc.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"retry-service-release-3-6-1","servicePort":9306},"path":"/"}]}}]}}
    creationTimestamp: 2018-11-14T19:22:31Z
    generation: 1
    labels:
      app: retry-service-release-3-6-1
    name: retry-service-release-3-6-1
    namespace: transfer-order-stage
    resourceVersion: "77151595"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/retry-service-release-3-6-1
    uid: a1e376c4-e842-11e8-981f-5254001f7df6
  spec:
    rules:
    - host: retry-service-release-3-6-1.us-central-1.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: retry-service-release-3-6-1
            servicePort: 9306
          path: /
    - host: retry-service-release-3-6-1.us-central-1ttc.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: retry-service-release-3-6-1
            servicePort: 9306
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"retry-service-release-4-0-0"},"name":"retry-service-release-4-0-0","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"retry-service-release-4-0-0.us-central-1.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"retry-service-release-4-0-0","servicePort":9306},"path":"/"}]}},{"host":"retry-service-release-4-0-0.us-central-1ttc.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"retry-service-release-4-0-0","servicePort":9306},"path":"/"}]}}]}}
    creationTimestamp: 2018-11-04T06:19:32Z
    generation: 1
    labels:
      app: retry-service-release-4-0-0
    name: retry-service-release-4-0-0
    namespace: transfer-order-stage
    resourceVersion: "68307620"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/retry-service-release-4-0-0
    uid: 982c8f4b-dff9-11e8-a8a8-525400a9bf14
  spec:
    rules:
    - host: retry-service-release-4-0-0.us-central-1.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: retry-service-release-4-0-0
            servicePort: 9306
          path: /
    - host: retry-service-release-4-0-0.us-central-1ttc.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: retry-service-release-4-0-0
            servicePort: 9306
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"store-receive-event-processor"},"name":"store-receive-event-processor","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"store-receive-event-processor-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"store-receive-event-processor","servicePort":9308},"path":"/"}]}},{"host":"store-receive-event-processor-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"store-receive-event-processor","servicePort":9308},"path":"/"}]}}],"tls":[{"hosts":["store-receive-event-processor-stage.test.k8s.target.com","store-receive-event-processor-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-29T15:21:16Z
    generation: 1
    labels:
      app: store-receive-event-processor
    name: store-receive-event-processor
    namespace: transfer-order-stage
    resourceVersion: "49225967"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/store-receive-event-processor
    uid: 2c6d78af-ab9f-11e8-b402-525400b06b0f
  spec:
    rules:
    - host: store-receive-event-processor-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: store-receive-event-processor
            servicePort: 9308
          path: /
    - host: store-receive-event-processor-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: store-receive-event-processor
            servicePort: 9308
          path: /
    tls:
    - hosts:
      - store-receive-event-processor-stage.test.k8s.target.com
      - store-receive-event-processor-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"store-ship-event-processor"},"name":"store-ship-event-processor","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"store-ship-event-processor-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"store-ship-event-processor","servicePort":9309},"path":"/"}]}},{"host":"store-ship-event-processor-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"store-ship-event-processor","servicePort":9309},"path":"/"}]}}],"tls":[{"hosts":["store-ship-event-processor-stage.test.k8s.target.com","store-ship-event-processor-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-28T15:55:14Z
    generation: 1
    labels:
      app: store-ship-event-processor
    name: store-ship-event-processor
    namespace: transfer-order-stage
    resourceVersion: "49225547"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/store-ship-event-processor
    uid: c074e0dc-aada-11e8-a2fd-525400b06b0f
  spec:
    rules:
    - host: store-ship-event-processor-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: store-ship-event-processor
            servicePort: 9309
          path: /
    - host: store-ship-event-processor-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: store-ship-event-processor
            servicePort: 9309
          path: /
    tls:
    - hosts:
      - store-ship-event-processor-stage.test.k8s.target.com
      - store-ship-event-processor-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"transfer-orders-api-v2"},"name":"transfer-orders-api-v2","namespace":"transfer-order-stage"},"spec":{"rules":[{"host":"transfer-orders-api-v2-stage.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"transfer-orders-api-v2","servicePort":80},"path":"/"},{"backend":{"serviceName":"transfer-orders-api-v2","servicePort":8092},"path":"/transfer_orders/v2/health"},{"backend":{"serviceName":"transfer-orders-api-v2","servicePort":8093},"path":"/transfer_orders/v2/prometheus"}]}},{"host":"transfer-orders-api-v2-stage.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"transfer-orders-api-v2","servicePort":80},"path":"/"},{"backend":{"serviceName":"transfer-orders-api-v2","servicePort":8092},"path":"/transfer_orders/v2/health"},{"backend":{"serviceName":"transfer-orders-api-v2","servicePort":8093},"path":"/transfer_orders/v2/prometheus"}]}}],"tls":[{"hosts":["transfer-orders-api-v2-stage.test.k8s.target.com","transfer-orders-api-v2-stage.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-30T17:14:09Z
    generation: 1
    labels:
      app: transfer-orders-api-v2
    name: transfer-orders-api-v2
    namespace: transfer-order-stage
    resourceVersion: "49225812"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-stage/ingresses/transfer-orders-api-v2
    uid: 1be18c60-ac78-11e8-8462-525400b93a8e
  spec:
    rules:
    - host: transfer-orders-api-v2-stage.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: transfer-orders-api-v2
            servicePort: 80
          path: /
        - backend:
            serviceName: transfer-orders-api-v2
            servicePort: 8092
          path: /transfer_orders/v2/health
        - backend:
            serviceName: transfer-orders-api-v2
            servicePort: 8093
          path: /transfer_orders/v2/prometheus
    - host: transfer-orders-api-v2-stage.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: transfer-orders-api-v2
            servicePort: 80
          path: /
        - backend:
            serviceName: transfer-orders-api-v2
            servicePort: 8092
          path: /transfer_orders/v2/health
        - backend:
            serviceName: transfer-orders-api-v2
            servicePort: 8093
          path: /transfer_orders/v2/prometheus
    tls:
    - hosts:
      - transfer-orders-api-v2-stage.test.k8s.target.com
      - transfer-orders-api-v2-stage.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"3d-receive-event-processor"},"name":"3d-receive-event-processor","namespace":"transfer-order-test"},"spec":{"rules":[{"host":"3d-receive-event-processor-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ddd-receive-event-processor","servicePort":9314},"path":"/"}]}},{"host":"3d-receive-event-processor-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ddd-receive-event-processor","servicePort":9314},"path":"/"}]}}],"tls":[{"hosts":["3d-receive-event-processor-test.test.k8s.target.com","3d-receive-event-processor-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-29T16:23:44Z
    generation: 1
    labels:
      app: 3d-receive-event-processor
    name: 3d-receive-event-processor
    namespace: transfer-order-test
    resourceVersion: "49225894"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-test/ingresses/3d-receive-event-processor
    uid: e612a6e7-aba7-11e8-b402-525400b06b0f
  spec:
    rules:
    - host: 3d-receive-event-processor-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ddd-receive-event-processor
            servicePort: 9314
          path: /
    - host: 3d-receive-event-processor-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ddd-receive-event-processor
            servicePort: 9314
          path: /
    tls:
    - hosts:
      - 3d-receive-event-processor-test.test.k8s.target.com
      - 3d-receive-event-processor-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"3d-ship-event-processor"},"name":"3d-ship-event-processor","namespace":"transfer-order-test"},"spec":{"rules":[{"host":"3d-ship-event-processor-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ddd-ship-event-processor","servicePort":9310},"path":"/"}]}},{"host":"3d-ship-event-processor-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ddd-ship-event-processor","servicePort":9310},"path":"/"}]}}],"tls":[{"hosts":["3d-ship-event-processor-test.test.k8s.target.com","3d-ship-event-processor-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-29T15:53:32Z
    generation: 1
    labels:
      app: 3d-ship-event-processor
    name: 3d-ship-event-processor
    namespace: transfer-order-test
    resourceVersion: "49225790"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-test/ingresses/3d-ship-event-processor
    uid: ae175bb3-aba3-11e8-8462-525400b93a8e
  spec:
    rules:
    - host: 3d-ship-event-processor-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ddd-ship-event-processor
            servicePort: 9310
          path: /
    - host: 3d-ship-event-processor-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ddd-ship-event-processor
            servicePort: 9310
          path: /
    tls:
    - hosts:
      - 3d-ship-event-processor-test.test.k8s.target.com
      - 3d-ship-event-processor-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"3pl-event-consumer"},"name":"3pl-event-consumer","namespace":"transfer-order-test"},"spec":{"rules":[{"host":"3pl-event-consumer-test.us-central-1.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"threepl-event-consumer","servicePort":9309},"path":"/"}]}},{"host":"3pl-event-consumer-test.us-central-1ttc.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"threepl-event-consumer","servicePort":9309},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-09T17:54:14Z
    generation: 1
    labels:
      app: 3pl-event-consumer
    name: 3pl-event-consumer
    namespace: transfer-order-test
    resourceVersion: "49225999"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-test/ingresses/3pl-event-consumer
    uid: 5578ba39-cbec-11e8-82d1-5254009c2c25
  spec:
    rules:
    - host: 3pl-event-consumer-test.us-central-1.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: threepl-event-consumer
            servicePort: 9309
          path: /
    - host: 3pl-event-consumer-test.us-central-1ttc.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: threepl-event-consumer
            servicePort: 9309
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"3pl-event-publisher"},"name":"3pl-event-publisher","namespace":"transfer-order-test"},"spec":{"rules":[{"host":"3pl-event-publisher-test.us-central-1.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"threepl-event-publisher","servicePort":9310},"path":"/"}]}},{"host":"3pl-event-publisher-test.us-central-1ttc.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"threepl-event-publisher","servicePort":9310},"path":"/"}]}}]}}
    creationTimestamp: 2018-10-08T16:03:43Z
    generation: 1
    labels:
      app: 3pl-event-publisher
    name: 3pl-event-publisher
    namespace: transfer-order-test
    resourceVersion: "49225671"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-test/ingresses/3pl-event-publisher
    uid: bb2a0a13-cb13-11e8-b53b-5254000e56fe
  spec:
    rules:
    - host: 3pl-event-publisher-test.us-central-1.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: threepl-event-publisher
            servicePort: 9310
          path: /
    - host: 3pl-event-publisher-test.us-central-1ttc.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: threepl-event-publisher
            servicePort: 9310
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"adjustment-event-processor"},"name":"adjustment-event-processor","namespace":"transfer-order-test"},"spec":{"rules":[{"host":"adjustment-event-processor-test.us-central-1.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"adjustment-event-processor","servicePort":9313},"path":"/"}]}},{"host":"adjustment-event-processor-test.us-central-1ttc.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"adjustment-event-processor","servicePort":9313},"path":"/"}]}}]}}
    creationTimestamp: 2018-09-25T16:10:52Z
    generation: 1
    labels:
      app: adjustment-event-processor
    name: adjustment-event-processor
    namespace: transfer-order-test
    resourceVersion: "49225890"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-test/ingresses/adjustment-event-processor
    uid: 932be0df-c0dd-11e8-b677-525400b93a8e
  spec:
    rules:
    - host: adjustment-event-processor-test.us-central-1.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: adjustment-event-processor
            servicePort: 9313
          path: /
    - host: adjustment-event-processor-test.us-central-1ttc.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: adjustment-event-processor
            servicePort: 9313
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"crc-receive-event-processor"},"name":"crc-receive-event-processor","namespace":"transfer-order-test"},"spec":{"rules":[{"host":"crc-receive-event-processor-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"crc-receive-event-processor","servicePort":9305},"path":"/"}]}},{"host":"crc-receive-event-processor-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"crc-receive-event-processor","servicePort":9305},"path":"/"}]}}],"tls":[{"hosts":["crc-receive-event-processor-test.test.k8s.target.com","crc-receive-event-processor-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-30T19:09:20Z
    generation: 1
    labels:
      app: crc-receive-event-processor
    name: crc-receive-event-processor
    namespace: transfer-order-test
    resourceVersion: "49225942"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-test/ingresses/crc-receive-event-processor
    uid: 32fe133c-ac88-11e8-a71c-525400524761
  spec:
    rules:
    - host: crc-receive-event-processor-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: crc-receive-event-processor
            servicePort: 9305
          path: /
    - host: crc-receive-event-processor-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: crc-receive-event-processor
            servicePort: 9305
          path: /
    tls:
    - hosts:
      - crc-receive-event-processor-test.test.k8s.target.com
      - crc-receive-event-processor-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"kafka-appender-test"},"name":"kafka-appender-test","namespace":"transfer-order-test"},"spec":{"rules":[{"host":"kafka-appender-test-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"kafka-appender-test","servicePort":9306},"path":"/"}]}},{"host":"kafka-appender-test-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"kafka-appender-test","servicePort":9306},"path":"/"}]}}],"tls":[{"hosts":["kafka-appender-test-test.test.k8s.target.com","kafka-appender-test-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-11-30T20:59:18Z
    generation: 1
    labels:
      app: kafka-appender-test
    name: kafka-appender-test
    namespace: transfer-order-test
    resourceVersion: "93930606"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-test/ingresses/kafka-appender-test
    uid: cd9224dd-f4e2-11e8-9e69-525400e51df1
  spec:
    rules:
    - host: kafka-appender-test-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: kafka-appender-test
            servicePort: 9306
          path: /
    - host: kafka-appender-test-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: kafka-appender-test
            servicePort: 9306
          path: /
    tls:
    - hosts:
      - kafka-appender-test-test.test.k8s.target.com
      - kafka-appender-test-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"lifecycle-event-processor"},"name":"lifecycle-event-processor","namespace":"transfer-order-test"},"spec":{"rules":[{"host":"lifecycle-event-processor-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lifecycle-event-processor","servicePort":9315},"path":"/"}]}},{"host":"lifecycle-event-processor-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lifecycle-event-processor","servicePort":9306},"path":"/"}]}}],"tls":[{"hosts":["lifecycle-event-processor-test.test.k8s.target.com","lifecycle-event-processor-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-11T19:22:44Z
    generation: 2
    labels:
      app: lifecycle-event-processor
    name: lifecycle-event-processor
    namespace: transfer-order-test
    resourceVersion: "49390334"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-test/ingresses/lifecycle-event-processor
    uid: 076a4fc6-cd8b-11e8-ad5b-5254008c264f
  spec:
    rules:
    - host: lifecycle-event-processor-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lifecycle-event-processor
            servicePort: 9315
          path: /
    - host: lifecycle-event-processor-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lifecycle-event-processor
            servicePort: 9306
          path: /
    tls:
    - hosts:
      - lifecycle-event-processor-test.test.k8s.target.com
      - lifecycle-event-processor-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"logstash-ing"},"name":"logstash-ing","namespace":"transfer-order-test"},"spec":{"rules":[{"host":"transfer-order-logstash-test.prod.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"transfer-order-logstash-svc","servicePort":9302},"path":"/"}]}},{"host":"transfer-order-logstash-test.ttc-prod.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"transfer-order-logstash-svc","servicePort":9302},"path":"/"}]}}],"tls":[{"hosts":["transfer-order-logstash-test.prod.k8s.target.com","transfer-order-logstash-test.ttc-prod.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-05T21:02:01Z
    generation: 3
    labels:
      app: logstash-ing
    name: logstash-ing
    namespace: transfer-order-test
    resourceVersion: "49225471"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-test/ingresses/logstash-ing
    uid: ef5832ea-b14e-11e8-a71c-525400524761
  spec:
    rules:
    - host: transfer-order-logstash-test.prod.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: transfer-order-logstash-svc
            servicePort: 9302
          path: /
    - host: transfer-order-logstash-test.ttc-prod.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: transfer-order-logstash-svc
            servicePort: 9302
          path: /
    tls:
    - hosts:
      - transfer-order-logstash-test.prod.k8s.target.com
      - transfer-order-logstash-test.ttc-prod.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"manhattan-receive-event-processor"},"name":"manhattan-receive-event-processor","namespace":"transfer-order-test"},"spec":{"rules":[{"host":"manhattan-receive-event-processor-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"manhattan-receive-event-processor","servicePort":9310},"path":"/"}]}},{"host":"manhattan-receive-event-processor-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"manhattan-receive-event-processor","servicePort":9310},"path":"/"}]}}],"tls":[{"hosts":["manhattan-receive-event-processor-test.test.k8s.target.com","manhattan-receive-event-processor-test.tte-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-23T19:28:59Z
    generation: 1
    labels:
      app: manhattan-receive-event-processor
    name: manhattan-receive-event-processor
    namespace: transfer-order-test
    resourceVersion: "49225403"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-test/ingresses/manhattan-receive-event-processor
    uid: c8960f7e-a70a-11e8-a2fd-525400b06b0f
  spec:
    rules:
    - host: manhattan-receive-event-processor-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: manhattan-receive-event-processor
            servicePort: 9310
          path: /
    - host: manhattan-receive-event-processor-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: manhattan-receive-event-processor
            servicePort: 9310
          path: /
    tls:
    - hosts:
      - manhattan-receive-event-processor-test.test.k8s.target.com
      - manhattan-receive-event-processor-test.tte-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"manhattan-ship-event-processor"},"name":"manhattan-ship-event-processor","namespace":"transfer-order-test"},"spec":{"rules":[{"host":"manhattan-ship-event-processor-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"manhattan-ship-event-processor","servicePort":9309},"path":"/"}]}},{"host":"manhattan-ship-event-processor-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"manhattan-ship-event-processor","servicePort":9309},"path":"/"}]}}],"tls":[{"hosts":["manhattan-ship-event-processor-test.test.k8s.target.com","manhattan-ship-event-processor-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-21T17:52:50Z
    generation: 1
    labels:
      app: manhattan-ship-event-processor
    name: manhattan-ship-event-processor
    namespace: transfer-order-test
    resourceVersion: "49225468"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-test/ingresses/manhattan-ship-event-processor
    uid: 055896a8-a56b-11e8-962d-525400b93a8e
  spec:
    rules:
    - host: manhattan-ship-event-processor-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: manhattan-ship-event-processor
            servicePort: 9309
          path: /
    - host: manhattan-ship-event-processor-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: manhattan-ship-event-processor
            servicePort: 9309
          path: /
    tls:
    - hosts:
      - manhattan-ship-event-processor-test.test.k8s.target.com
      - manhattan-ship-event-processor-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"move-complete-aggregator"},"name":"move-complete-aggregator","namespace":"transfer-order-test"},"spec":{"rules":[{"host":"move-complete-aggregator-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"move-complete-aggregator","servicePort":9306},"path":"/"}]}},{"host":"move-complete-aggregator-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"move-complete-aggregator","servicePort":9306},"path":"/"}]}}],"tls":[{"hosts":["move-complete-aggregator-test.test.k8s.target.com","move-complete-aggregator-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-30T15:12:21Z
    generation: 1
    labels:
      app: move-complete-aggregator
    name: move-complete-aggregator
    namespace: transfer-order-test
    resourceVersion: "49225676"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-test/ingresses/move-complete-aggregator
    uid: 17d5eeb1-ac67-11e8-b402-525400b06b0f
  spec:
    rules:
    - host: move-complete-aggregator-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: move-complete-aggregator
            servicePort: 9306
          path: /
    - host: move-complete-aggregator-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: move-complete-aggregator
            servicePort: 9306
          path: /
    tls:
    - hosts:
      - move-complete-aggregator-test.test.k8s.target.com
      - move-complete-aggregator-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"move-complete-prep"},"name":"move-complete-prep","namespace":"transfer-order-test"},"spec":{"rules":[{"host":"move-complete-prep-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"move-complete-prep","servicePort":9306},"path":"/"}]}},{"host":"move-complete-prep-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"move-complete-prep","servicePort":9306},"path":"/"}]}}],"tls":[{"hosts":["move-complete-prep-test.test.k8s.target.com","move-complete-prep-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-30T14:18:28Z
    generation: 1
    labels:
      app: move-complete-prep
    name: move-complete-prep
    namespace: transfer-order-test
    resourceVersion: "49225414"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-test/ingresses/move-complete-prep
    uid: 90e6f374-ac5f-11e8-a71c-525400524761
  spec:
    rules:
    - host: move-complete-prep-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: move-complete-prep
            servicePort: 9306
          path: /
    - host: move-complete-prep-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: move-complete-prep
            servicePort: 9306
          path: /
    tls:
    - hosts:
      - move-complete-prep-test.test.k8s.target.com
      - move-complete-prep-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"ole-receive-event-processor"},"name":"ole-receive-event-processor","namespace":"transfer-order-test"},"spec":{"rules":[{"host":"ole-receive-event-processor-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ole-receive-event-processor","servicePort":9305},"path":"/"}]}},{"host":"ole-receive-event-processor-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ole-receive-event-processor","servicePort":9305},"path":"/"}]}}],"tls":[{"hosts":["ole-receive-event-processor-test.test.k8s.target.com","ole-receive-event-processor-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-27T15:59:03Z
    generation: 1
    labels:
      app: ole-receive-event-processor
    name: ole-receive-event-processor
    namespace: transfer-order-test
    resourceVersion: "49225819"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-test/ingresses/ole-receive-event-processor
    uid: 1ed038b1-aa12-11e8-962d-525400b93a8e
  spec:
    rules:
    - host: ole-receive-event-processor-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ole-receive-event-processor
            servicePort: 9305
          path: /
    - host: ole-receive-event-processor-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ole-receive-event-processor
            servicePort: 9305
          path: /
    tls:
    - hosts:
      - ole-receive-event-processor-test.test.k8s.target.com
      - ole-receive-event-processor-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"ole-ship-event-processor"},"name":"ole-ship-event-processor","namespace":"transfer-order-test"},"spec":{"rules":[{"host":"ole-ship-event-processor-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ole-ship-event-processor","servicePort":9302},"path":"/"}]}},{"host":"ole-ship-event-processor-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"ole-ship-event-processor","servicePort":9302},"path":"/"}]}}],"tls":[{"hosts":["ole-ship-event-processor-test.test.k8s.target.com","ole-ship-event-processor-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-27T15:34:19Z
    generation: 1
    labels:
      app: ole-ship-event-processor
    name: ole-ship-event-processor
    namespace: transfer-order-test
    resourceVersion: "49225670"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-test/ingresses/ole-ship-event-processor
    uid: a9ff9319-aa0e-11e8-962d-525400b93a8e
  spec:
    rules:
    - host: ole-ship-event-processor-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ole-ship-event-processor
            servicePort: 9302
          path: /
    - host: ole-ship-event-processor-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: ole-ship-event-processor
            servicePort: 9302
          path: /
    tls:
    - hosts:
      - ole-ship-event-processor-test.test.k8s.target.com
      - ole-ship-event-processor-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"request-event-processor"},"name":"request-event-processor","namespace":"transfer-order-test"},"spec":{"rules":[{"host":"request-event-processor-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"request-event-processor","servicePort":9306},"path":"/"}]}},{"host":"request-event-processor-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"request-event-processor","servicePort":9306},"path":"/"}]}}],"tls":[{"hosts":["request-event-processor-test.test.k8s.target.com","request-event-processor-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-30T15:31:03Z
    generation: 1
    labels:
      app: request-event-processor
    name: request-event-processor
    namespace: transfer-order-test
    resourceVersion: "49225446"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-test/ingresses/request-event-processor
    uid: b4403f21-ac69-11e8-8462-525400b93a8e
  spec:
    rules:
    - host: request-event-processor-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: request-event-processor
            servicePort: 9306
          path: /
    - host: request-event-processor-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: request-event-processor
            servicePort: 9306
          path: /
    tls:
    - hosts:
      - request-event-processor-test.test.k8s.target.com
      - request-event-processor-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"retry-service"},"name":"retry-service","namespace":"transfer-order-test"},"spec":{"rules":[{"host":"retry-service-test.us-central-1.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"retry-service","servicePort":9306},"path":"/"}]}},{"host":"retry-service-test.us-central-1ttc.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"retry-service","servicePort":9306},"path":"/"}]}}]}}
    creationTimestamp: 2018-08-29T15:18:16Z
    generation: 1
    labels:
      app: retry-service
    name: retry-service
    namespace: transfer-order-test
    resourceVersion: "49225612"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-test/ingresses/retry-service
    uid: c1115b1e-ab9e-11e8-b402-525400b06b0f
  spec:
    rules:
    - host: retry-service-test.us-central-1.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: retry-service
            servicePort: 9306
          path: /
    - host: retry-service-test.us-central-1ttc.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: retry-service
            servicePort: 9306
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"store-ship-event-processor"},"name":"store-ship-event-processor","namespace":"transfer-order-test"},"spec":{"rules":[{"host":"store-ship-event-processor-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"store-ship-event-processor","servicePort":9309},"path":"/"}]}},{"host":"store-ship-event-processor-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"store-ship-event-processor","servicePort":9309},"path":"/"}]}}],"tls":[{"hosts":["store-ship-event-processor-test.test.k8s.target.com","store-ship-event-processor-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-28T15:47:18Z
    generation: 1
    labels:
      app: store-ship-event-processor
    name: store-ship-event-processor
    namespace: transfer-order-test
    resourceVersion: "49225533"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-test/ingresses/store-ship-event-processor
    uid: a4b7662b-aad9-11e8-bf09-525400b93a8e
  spec:
    rules:
    - host: store-ship-event-processor-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: store-ship-event-processor
            servicePort: 9309
          path: /
    - host: store-ship-event-processor-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: store-ship-event-processor
            servicePort: 9309
          path: /
    tls:
    - hosts:
      - store-ship-event-processor-test.test.k8s.target.com
      - store-ship-event-processor-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"transfer-order-ui"},"name":"transfer-order-ui","namespace":"transfer-order-test"},"spec":{"rules":[{"host":"transfer-order-ui-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"transfer-order-ui","servicePort":3000},"path":"/"}]}},{"host":"transfer-order-ui-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"transfer-order-ui","servicePort":3000},"path":"/"}]}}],"tls":[{"hosts":["transfer-order-ui-test.test.k8s.target.com","transfer-order-ui-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-23T16:28:23Z
    generation: 1
    labels:
      app: transfer-order-ui
    name: transfer-order-ui
    namespace: transfer-order-test
    resourceVersion: "49225787"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-test/ingresses/transfer-order-ui
    uid: 8df34752-a6f1-11e8-962d-525400b93a8e
  spec:
    rules:
    - host: transfer-order-ui-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: transfer-order-ui
            servicePort: 3000
          path: /
    - host: transfer-order-ui-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: transfer-order-ui
            servicePort: 3000
          path: /
    tls:
    - hosts:
      - transfer-order-ui-test.test.k8s.target.com
      - transfer-order-ui-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"transfer-orders-api-v2"},"name":"transfer-orders-api-v2","namespace":"transfer-order-test"},"spec":{"rules":[{"host":"transfer-orders-api-v2-test.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"transfer-orders-api-v2","servicePort":80},"path":"/"},{"backend":{"serviceName":"transfer-orders-api-v2","servicePort":8092},"path":"/transfer_orders/v2/health"},{"backend":{"serviceName":"transfer-orders-api-v2","servicePort":8093},"path":"/transfer_orders/v2/prometheus"}]}},{"host":"transfer-orders-api-v2-test.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"transfer-orders-api-v2","servicePort":80},"path":"/"},{"backend":{"serviceName":"transfer-orders-api-v2","servicePort":8092},"path":"/transfer_orders/v2/health"},{"backend":{"serviceName":"transfer-orders-api-v2","servicePort":8093},"path":"/transfer_orders/v2/prometheus"}]}}],"tls":[{"hosts":["transfer-orders-api-v2-test.test.k8s.target.com","transfer-orders-api-v2-test.ttc-test.k8s.target.com"]}]}}
    creationTimestamp: 2018-08-30T16:22:46Z
    generation: 1
    labels:
      app: transfer-orders-api-v2
    name: transfer-orders-api-v2
    namespace: transfer-order-test
    resourceVersion: "49225815"
    selfLink: /apis/extensions/v1beta1/namespaces/transfer-order-test/ingresses/transfer-orders-api-v2
    uid: ee01de96-ac70-11e8-b402-525400b06b0f
  spec:
    rules:
    - host: transfer-orders-api-v2-test.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: transfer-orders-api-v2
            servicePort: 80
          path: /
        - backend:
            serviceName: transfer-orders-api-v2
            servicePort: 8092
          path: /transfer_orders/v2/health
        - backend:
            serviceName: transfer-orders-api-v2
            servicePort: 8093
          path: /transfer_orders/v2/prometheus
    - host: transfer-orders-api-v2-test.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: transfer-orders-api-v2
            servicePort: 80
          path: /
        - backend:
            serviceName: transfer-orders-api-v2
            servicePort: 8092
          path: /transfer_orders/v2/health
        - backend:
            serviceName: transfer-orders-api-v2
            servicePort: 8093
          path: /transfer_orders/v2/prometheus
    tls:
    - hosts:
      - transfer-orders-api-v2-test.test.k8s.target.com
      - transfer-orders-api-v2-test.ttc-test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"fuel-publish-api"},"name":"fuel-publish-api","namespace":"transportation-fuelcost"},"spec":{"rules":[{"host":"fuel-publish-api.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fuel-publish-api","servicePort":8080},"path":"/"}]}},{"host":"fuel-publish-api.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fuel-publish-api","servicePort":8080},"path":"/"}]}},{"host":"fuel-publish-api.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fuel-publish-api","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-18T19:56:53Z
    generation: 1
    labels:
      name: fuel-publish-api
    name: fuel-publish-api
    namespace: transportation-fuelcost
    resourceVersion: "182030271"
    selfLink: /apis/extensions/v1beta1/namespaces/transportation-fuelcost/ingresses/fuel-publish-api
    uid: 564b2c9f-33b7-11e9-a157-52540070e292
  spec:
    rules:
    - host: fuel-publish-api.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fuel-publish-api
            servicePort: 8080
          path: /
    - host: fuel-publish-api.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fuel-publish-api
            servicePort: 8080
          path: /
    - host: fuel-publish-api.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fuel-publish-api
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"fuel-response-api"},"name":"fuel-response-api","namespace":"transportation-fuelcost"},"spec":{"rules":[{"host":"fuel-response-api.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fuel-response-api","servicePort":8888},"path":"/"}]}},{"host":"fuel-response-api.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fuel-response-api","servicePort":8888},"path":"/"}]}},{"host":"fuel-response-api.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fuel-response-api","servicePort":8888},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-18T20:27:11Z
    generation: 1
    labels:
      name: fuel-response-api
    name: fuel-response-api
    namespace: transportation-fuelcost
    resourceVersion: "182052777"
    selfLink: /apis/extensions/v1beta1/namespaces/transportation-fuelcost/ingresses/fuel-response-api
    uid: 9256ec4f-33bb-11e9-a2e8-52540055f679
  spec:
    rules:
    - host: fuel-response-api.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fuel-response-api
            servicePort: 8888
          path: /
    - host: fuel-response-api.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fuel-response-api
            servicePort: 8888
          path: /
    - host: fuel-response-api.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fuel-response-api
            servicePort: 8888
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"fuel-response-consumer"},"name":"fuel-response-consumer","namespace":"transportation-fuelcost"},"spec":{"rules":[{"host":"fuel-response-consumer.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fuel-response-consumer","servicePort":8080},"path":"/"}]}},{"host":"fuel-response-consumer.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fuel-response-consumer","servicePort":8080},"path":"/"}]}},{"host":"fuel-response-consumer.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fuel-response-consumer","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-18T21:19:48Z
    generation: 1
    labels:
      name: fuel-response-consumer
    name: fuel-response-consumer
    namespace: transportation-fuelcost
    resourceVersion: "182091770"
    selfLink: /apis/extensions/v1beta1/namespaces/transportation-fuelcost/ingresses/fuel-response-consumer
    uid: eba80c09-33c2-11e9-a157-52540070e292
  spec:
    rules:
    - host: fuel-response-consumer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fuel-response-consumer
            servicePort: 8080
          path: /
    - host: fuel-response-consumer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fuel-response-consumer
            servicePort: 8080
          path: /
    - host: fuel-response-consumer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fuel-response-consumer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"dtm-fepa"},"name":"dtm-fepa","namespace":"transportation-integration"},"spec":{"rules":[{"host":"dtm-fepa.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dtm-fepa","servicePort":8080},"path":"/"}]}},{"host":"dtm-fepa.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dtm-fepa","servicePort":8080},"path":"/"}]}},{"host":"dtm-fepa.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dtm-fepa","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-27T20:55:34Z
    generation: 1
    labels:
      name: dtm-fepa
    name: dtm-fepa
    namespace: transportation-integration
    resourceVersion: "193048115"
    selfLink: /apis/extensions/v1beta1/namespaces/transportation-integration/ingresses/dtm-fepa
    uid: 06ebf9b0-3ad2-11e9-848c-525400721049
  spec:
    rules:
    - host: dtm-fepa.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dtm-fepa
            servicePort: 8080
          path: /
    - host: dtm-fepa.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dtm-fepa
            servicePort: 8080
          path: /
    - host: dtm-fepa.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dtm-fepa
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"edi-214-intg"},"name":"edi-214-intg","namespace":"transportation-integration"},"spec":{"rules":[{"host":"edi-214-intg.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"edi-214-intg","servicePort":8080},"path":"/"}]}},{"host":"edi-214-intg.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"edi-214-intg","servicePort":8080},"path":"/"}]}},{"host":"edi-214-intg.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"edi-214-intg","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-18T16:51:27Z
    generation: 2
    labels:
      name: edi-214-intg
    name: edi-214-intg
    namespace: transportation-integration
    resourceVersion: "182073975"
    selfLink: /apis/extensions/v1beta1/namespaces/transportation-integration/ingresses/edi-214-intg
    uid: 6effed33-339d-11e9-a157-52540070e292
  spec:
    rules:
    - host: edi-214-intg.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: edi-214-intg
            servicePort: 8080
          path: /
    - host: edi-214-intg.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: edi-214-intg
            servicePort: 8080
          path: /
    - host: edi-214-intg.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: edi-214-intg
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"edi-error-api"},"name":"edi-error-api","namespace":"transportation-integration"},"spec":{"rules":[{"host":"edi-error-api.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"edi-error-api","servicePort":8080},"path":"/"}]}},{"host":"edi-error-api.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"edi-error-api","servicePort":8080},"path":"/"}]}},{"host":"edi-error-api.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"edi-error-api","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-14T19:15:07Z
    generation: 1
    labels:
      name: edi-error-api
    name: edi-error-api
    namespace: transportation-integration
    resourceVersion: "177838651"
    selfLink: /apis/extensions/v1beta1/namespaces/transportation-integration/ingresses/edi-error-api
    uid: d751519e-308c-11e9-a157-52540070e292
  spec:
    rules:
    - host: edi-error-api.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: edi-error-api
            servicePort: 8080
          path: /
    - host: edi-error-api.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: edi-error-api
            servicePort: 8080
          path: /
    - host: edi-error-api.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: edi-error-api
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"edi210-api"},"name":"edi210-api","namespace":"transportation-integration"},"spec":{"rules":[{"host":"edi210-api.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"edi210-api","servicePort":8080},"path":"/"}]}},{"host":"edi210-api.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"edi210-api","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-18T22:20:31Z
    generation: 1
    labels:
      name: edi210-api
    name: edi210-api
    namespace: transportation-integration
    resourceVersion: "182137041"
    selfLink: /apis/extensions/v1beta1/namespaces/transportation-integration/ingresses/edi210-api
    uid: 672c4160-33cb-11e9-bfe7-525400721049
  spec:
    rules:
    - host: edi210-api.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: edi210-api
            servicePort: 8080
          path: /
    - host: edi210-api.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: edi210-api
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"edi212-api"},"name":"edi212-api","namespace":"transportation-integration"},"spec":{"rules":[{"host":"edi212-api.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"edi212-api","servicePort":8080},"path":"/"}]}},{"host":"edi212-api.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"edi212-api","servicePort":8080},"path":"/"}]}},{"host":"edi212-api.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"edi212-api","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-28T20:36:28Z
    generation: 1
    labels:
      name: edi212-api
    name: edi212-api
    namespace: transportation-integration
    resourceVersion: "194159387"
    selfLink: /apis/extensions/v1beta1/namespaces/transportation-integration/ingresses/edi212-api
    uid: 8669cd60-3b98-11e9-ab00-525400a77f96
  spec:
    rules:
    - host: edi212-api.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: edi212-api
            servicePort: 8080
          path: /
    - host: edi212-api.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: edi212-api
            servicePort: 8080
          path: /
    - host: edi212-api.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: edi212-api
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"edi214-pbt-api"},"name":"edi214-pbt-api","namespace":"transportation-integration"},"spec":{"rules":[{"host":"edi214-pbt-api.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"edi214-pbt-api","servicePort":8080},"path":"/"}]}},{"host":"edi214-pbt-api.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"edi214-pbt-api","servicePort":8080},"path":"/"}]}},{"host":"edi214-pbt-api.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"edi214-pbt-api","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-18T20:42:01Z
    generation: 1
    labels:
      name: edi214-pbt-api
    name: edi214-pbt-api
    namespace: transportation-integration
    resourceVersion: "182063807"
    selfLink: /apis/extensions/v1beta1/namespaces/transportation-integration/ingresses/edi214-pbt-api
    uid: a4d30abd-33bd-11e9-a157-52540070e292
  spec:
    rules:
    - host: edi214-pbt-api.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: edi214-pbt-api
            servicePort: 8080
          path: /
    - host: edi214-pbt-api.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: edi214-pbt-api
            servicePort: 8080
          path: /
    - host: edi214-pbt-api.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: edi214-pbt-api
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"edi214-plan-api"},"name":"edi214-plan-api","namespace":"transportation-integration"},"spec":{"rules":[{"host":"edi214-plan-api.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"edi214-plan-api","servicePort":8080},"path":"/"}]}},{"host":"edi214-plan-api.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"edi214-plan-api","servicePort":8080},"path":"/"}]}},{"host":"edi214-plan-api.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"edi214-plan-api","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-18T20:34:36Z
    generation: 1
    labels:
      name: edi214-plan-api
    name: edi214-plan-api
    namespace: transportation-integration
    resourceVersion: "182058120"
    selfLink: /apis/extensions/v1beta1/namespaces/transportation-integration/ingresses/edi214-plan-api
    uid: 9b2d3512-33bc-11e9-a2e8-52540055f679
  spec:
    rules:
    - host: edi214-plan-api.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: edi214-plan-api
            servicePort: 8080
          path: /
    - host: edi214-plan-api.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: edi214-plan-api
            servicePort: 8080
          path: /
    - host: edi214-plan-api.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: edi214-plan-api
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"edi214-splitter"},"name":"edi214-splitter","namespace":"transportation-integration"},"spec":{"rules":[{"host":"edi214-splitter.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"edi214-splitter","servicePort":8080},"path":"/"}]}},{"host":"edi214-splitter.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"edi214-splitter","servicePort":8080},"path":"/"}]}},{"host":"edi214-splitter.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"edi214-splitter","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-18T17:47:43Z
    generation: 1
    labels:
      name: edi214-splitter
    name: edi214-splitter
    namespace: transportation-integration
    resourceVersion: "181932285"
    selfLink: /apis/extensions/v1beta1/namespaces/transportation-integration/ingresses/edi214-splitter
    uid: 4b125114-33a5-11e9-a2e8-52540055f679
  spec:
    rules:
    - host: edi214-splitter.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: edi214-splitter
            servicePort: 8080
          path: /
    - host: edi214-splitter.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: edi214-splitter
            servicePort: 8080
          path: /
    - host: edi214-splitter.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: edi214-splitter
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"fepa-consumer"},"name":"fepa-consumer","namespace":"transportation-integration"},"spec":{"rules":[{"host":"fepa-consumer.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fepa-consumer","servicePort":8080},"path":"/"}]}},{"host":"fepa-consumer.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fepa-consumer","servicePort":8080},"path":"/"}]}},{"host":"fepa-consumer.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fepa-consumer","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2019-03-07T02:42:22Z
    generation: 1
    labels:
      name: fepa-consumer
    name: fepa-consumer
    namespace: transportation-integration
    resourceVersion: "200657396"
    selfLink: /apis/extensions/v1beta1/namespaces/transportation-integration/ingresses/fepa-consumer
    uid: a20eb1a9-4082-11e9-ab79-525400fe4551
  spec:
    rules:
    - host: fepa-consumer.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fepa-consumer
            servicePort: 8080
          path: /
    - host: fepa-consumer.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fepa-consumer
            servicePort: 8080
          path: /
    - host: fepa-consumer.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fepa-consumer
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"voucher-creation-api"},"name":"voucher-creation-api","namespace":"transportation-integration"},"spec":{"rules":[{"host":"voucher-creation-api.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"voucher-creation-api","servicePort":8080},"path":"/"}]}},{"host":"voucher-creation-api.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"voucher-creation-api","servicePort":8080},"path":"/"}]}},{"host":"voucher-creation-api.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"voucher-creation-api","servicePort":8080},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-20T16:08:36Z
    generation: 1
    labels:
      name: voucher-creation-api
    name: voucher-creation-api
    namespace: transportation-integration
    resourceVersion: "183949843"
    selfLink: /apis/extensions/v1beta1/namespaces/transportation-integration/ingresses/voucher-creation-api
    uid: c78a5e65-3529-11e9-a157-52540070e292
  spec:
    rules:
    - host: voucher-creation-api.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: voucher-creation-api
            servicePort: 8080
          path: /
    - host: voucher-creation-api.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: voucher-creation-api
            servicePort: 8080
          path: /
    - host: voucher-creation-api.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: voucher-creation-api
            servicePort: 8080
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"rundeck"},"name":"rundeck","namespace":"transportation-intg-rdk-stage"},"spec":{"rules":[{"host":"rundeck-transportation.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"rundeck","servicePort":4440},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-17T06:53:53Z
    generation: 1
    labels:
      name: rundeck
    name: rundeck
    namespace: transportation-intg-rdk-stage
    resourceVersion: "180443910"
    selfLink: /apis/extensions/v1beta1/namespaces/transportation-intg-rdk-stage/ingresses/rundeck
    uid: ca099064-3280-11e9-a2e8-52540055f679
  spec:
    rules:
    - host: rundeck-transportation.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: rundeck
            servicePort: 4440
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"trans-integration-freightalloc-ingress"},"name":"trans-integration-freightalloc-ingress","namespace":"transportation-intg-rdk-stage"},"spec":{"rules":[{"host":"trans-freightalloc.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"trans-integration-freightalloc-service","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-19T21:14:03Z
    generation: 1
    labels:
      name: trans-integration-freightalloc-ingress
    name: trans-integration-freightalloc-ingress
    namespace: transportation-intg-rdk-stage
    resourceVersion: "183140820"
    selfLink: /apis/extensions/v1beta1/namespaces/transportation-intg-rdk-stage/ingresses/trans-integration-freightalloc-ingress
    uid: 48e7225b-348b-11e9-a2e8-52540055f679
  spec:
    rules:
    - host: trans-freightalloc.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: trans-integration-freightalloc-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"trans-integration-item-ingress"},"name":"trans-integration-item-ingress","namespace":"transportation-intg-rdk-stage"},"spec":{"rules":[{"host":"trans-intg-item.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"trans-integration-item-service","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-19T20:26:27Z
    generation: 1
    labels:
      name: trans-integration-item-ingress
    name: trans-integration-item-ingress
    namespace: transportation-intg-rdk-stage
    resourceVersion: "183103288"
    selfLink: /apis/extensions/v1beta1/namespaces/transportation-intg-rdk-stage/ingresses/trans-integration-item-ingress
    uid: a274dc20-3484-11e9-bfe7-525400721049
  spec:
    rules:
    - host: trans-intg-item.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: trans-integration-item-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"trans-integration-location-ingress"},"name":"trans-integration-location-ingress","namespace":"transportation-intg-rdk-stage"},"spec":{"rules":[{"host":"trans-intg-location.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"trans-integration-location-service","servicePort":80},"path":"/"}]}}]}}
    creationTimestamp: 2019-02-18T23:22:21Z
    generation: 1
    labels:
      name: trans-integration-location-ingress
    name: trans-integration-location-ingress
    namespace: transportation-intg-rdk-stage
    resourceVersion: "182182357"
    selfLink: /apis/extensions/v1beta1/namespaces/transportation-intg-rdk-stage/ingresses/trans-integration-location-ingress
    uid: 0ac23a31-33d4-11e9-a157-52540070e292
  spec:
    rules:
    - host: trans-intg-location.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: trans-integration-location-service
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"dc-env-ingress"},"name":"dc-env-ingress","namespace":"unimatrix"},"spec":{"rules":[{"host":"dcsenv.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dc-env-svc","servicePort":80},"path":"/"}]}},{"host":"dcsenv.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dc-env-svc","servicePort":80},"path":"/"}]}},{"host":"dcsenv.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"dc-env-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["dcsenv.ttc-test.k8s.target.com","dcsenv.tte-test.k8s.target.com","dcsenv.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-26T20:52:47Z
    generation: 1
    labels:
      name: dc-env-ingress
    name: dc-env-ingress
    namespace: unimatrix
    resourceVersion: "191444324"
    selfLink: /apis/extensions/v1beta1/namespaces/unimatrix/ingresses/dc-env-ingress
    uid: 7912f1cd-3a08-11e9-a2e8-52540055f679
  spec:
    rules:
    - host: dcsenv.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dc-env-svc
            servicePort: 80
          path: /
    - host: dcsenv.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dc-env-svc
            servicePort: 80
          path: /
    - host: dcsenv.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: dc-env-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - dcsenv.ttc-test.k8s.target.com
      - dcsenv.tte-test.k8s.target.com
      - dcsenv.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"prometheus","chart":"prometheus-6.7.2","component":"alertmanager","heritage":"Tiller","release":"fedtest"},"name":"fedtest-prometheus-alertmanager","namespace":"unimatrix"},"spec":{"rules":[{"host":"fedtest-prometheus-server-alert.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fedtest-prometheus-alertmanager","servicePort":80},"path":"/"}]}},{"host":"fedtest-prometheus-server-alert.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fedtest-prometheus-alertmanager","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["fedtest-prometheus-server-alert.ttc-test.k8s.target.com","fedtest-prometheus-server-alert.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-07-30T19:51:28Z
    generation: 2
    labels:
      app: prometheus
      chart: prometheus-6.7.2
      component: alertmanager
      heritage: Tiller
      release: fedtest
    name: fedtest-prometheus-alertmanager
    namespace: unimatrix
    resourceVersion: "49225782"
    selfLink: /apis/extensions/v1beta1/namespaces/unimatrix/ingresses/fedtest-prometheus-alertmanager
    uid: f2fc50cb-9431-11e8-962d-525400b93a8e
  spec:
    rules:
    - host: fedtest-prometheus-server-alert.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fedtest-prometheus-alertmanager
            servicePort: 80
          path: /
    - host: fedtest-prometheus-server-alert.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fedtest-prometheus-alertmanager
            servicePort: 80
          path: /
    tls:
    - hosts:
      - fedtest-prometheus-server-alert.ttc-test.k8s.target.com
      - fedtest-prometheus-server-alert.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app":"prometheus","chart":"prometheus-6.7.2","component":"server","heritage":"Tiller","release":"fedtest"},"name":"fedtest-prometheus-server","namespace":"unimatrix"},"spec":{"rules":[{"host":"fedtest-prometheus-server.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fedtest-prometheus-server","servicePort":9090},"path":"/"}]}},{"host":"fedtest-prometheus-server.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"fedtest-prometheus-server","servicePort":9090},"path":"/"}]}}],"tls":[{"hosts":["fedtest-prometheus-server.ttc-test.k8s.target.com","fedtest-prometheus-server.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-07-30T19:33:49Z
    generation: 1
    labels:
      app: prometheus
      chart: prometheus-6.7.2
      component: server
      heritage: Tiller
      release: fedtest
    name: fedtest-prometheus-server
    namespace: unimatrix
    resourceVersion: "49225353"
    selfLink: /apis/extensions/v1beta1/namespaces/unimatrix/ingresses/fedtest-prometheus-server
    uid: 7bcd41ae-942f-11e8-bd18-525400524761
  spec:
    rules:
    - host: fedtest-prometheus-server.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fedtest-prometheus-server
            servicePort: 9090
          path: /
    - host: fedtest-prometheus-server.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: fedtest-prometheus-server
            servicePort: 9090
          path: /
    tls:
    - hosts:
      - fedtest-prometheus-server.ttc-test.k8s.target.com
      - fedtest-prometheus-server.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"lab-registry-cache","namespace":"unimatrix"},"spec":{"rules":[{"host":"lab-registry-cache.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lab-registry-cache","servicePort":80},"path":"/"}]}},{"host":"lab-registry-cache.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lab-registry-cache","servicePort":80},"path":"/"}]}},{"host":"lab-registry-cache.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"lab-registry-cache","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["lab-registry-cache.tte-test.k8s.target.com","lab-registry-cache.ttc-test.k8s.target.com","lab-registry-cache.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-07-25T20:54:41Z
    generation: 1
    name: lab-registry-cache
    namespace: unimatrix
    resourceVersion: "49225841"
    selfLink: /apis/extensions/v1beta1/namespaces/unimatrix/ingresses/lab-registry-cache
    uid: f3e32a6d-904c-11e8-a2fd-525400b06b0f
  spec:
    rules:
    - host: lab-registry-cache.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lab-registry-cache
            servicePort: 80
          path: /
    - host: lab-registry-cache.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lab-registry-cache
            servicePort: 80
          path: /
    - host: lab-registry-cache.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: lab-registry-cache
            servicePort: 80
          path: /
    tls:
    - hosts:
      - lab-registry-cache.tte-test.k8s.target.com
      - lab-registry-cache.ttc-test.k8s.target.com
      - lab-registry-cache.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"priorityclassmapping","namespace":"unimatrix"},"spec":{"rules":[{"host":"unimatrix-priority-class.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"priorityclassmapping","servicePort":80},"path":"/"}]}},{"host":"unimatrix-priority-class.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"priorityclassmapping","servicePort":80},"path":"/"}]}},{"host":"unimatrix-priority-class.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"priorityclassmapping","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["unimatrix-priority-class.tte-test.k8s.target.com","unimatrix-priority-class.ttc-test.k8s.target.com","unimatrix-priority-class.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-09-18T21:52:46Z
    generation: 1
    name: priorityclassmapping
    namespace: unimatrix
    resourceVersion: "49225540"
    selfLink: /apis/extensions/v1beta1/namespaces/unimatrix/ingresses/priorityclassmapping
    uid: 2dd65714-bb8d-11e8-8488-525400b06b0f
  spec:
    rules:
    - host: unimatrix-priority-class.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: priorityclassmapping
            servicePort: 80
          path: /
    - host: unimatrix-priority-class.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: priorityclassmapping
            servicePort: 80
          path: /
    - host: unimatrix-priority-class.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: priorityclassmapping
            servicePort: 80
          path: /
    tls:
    - hosts:
      - unimatrix-priority-class.tte-test.k8s.target.com
      - unimatrix-priority-class.ttc-test.k8s.target.com
      - unimatrix-priority-class.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"stores-env-ingress"},"name":"stores-env-ingress","namespace":"unimatrix"},"spec":{"rules":[{"host":"storesenv.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"stores-env-svc","servicePort":80},"path":"/"}]}},{"host":"storesenv.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"stores-env-svc","servicePort":80},"path":"/"}]}},{"host":"storesenv.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"stores-env-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["storesenv.tte-test.k8s.target.com","storesenv.ttc-test.k8s.target.com","storesenv.test.k8s.target.com"]}]}}
    creationTimestamp: 2019-02-26T20:52:52Z
    generation: 2
    labels:
      name: stores-env-ingress
    name: stores-env-ingress
    namespace: unimatrix
    resourceVersion: "191511405"
    selfLink: /apis/extensions/v1beta1/namespaces/unimatrix/ingresses/stores-env-ingress
    uid: 7c118da7-3a08-11e9-a2e8-52540055f679
  spec:
    rules:
    - host: storesenv.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: stores-env-svc
            servicePort: 80
          path: /
    - host: storesenv.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: stores-env-svc
            servicePort: 80
          path: /
    - host: storesenv.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: stores-env-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - storesenv.tte-test.k8s.target.com
      - storesenv.ttc-test.k8s.target.com
      - storesenv.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"stores-env-ingress-vanity"},"name":"stores-env-ingress-vanity","namespace":"unimatrix"},"spec":{"rules":[{"host":"storesenv.us-central-1.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"stores-env-svc","servicePort":80},"path":"/"}]}},{"host":"storesenv.us-central-1ttc.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"stores-env-svc","servicePort":80},"path":"/"}]}},{"host":"storesenv.us-central-1tte.test.core.k8s.tgt","http":{"paths":[{"backend":{"serviceName":"stores-env-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["storesenv.us-central-1ttc.test.core.k8s.tgt","storesenv.us-central-1tte.test.core.k8s.tgt","storesenv.us-central-1.test.core.k8s.tgt"],"secretName":"storesenv-vanity"}]}}
    creationTimestamp: 2019-02-26T21:45:34Z
    generation: 2
    labels:
      name: stores-env-ingress-vanity
    name: stores-env-ingress-vanity
    namespace: unimatrix
    resourceVersion: "192700231"
    selfLink: /apis/extensions/v1beta1/namespaces/unimatrix/ingresses/stores-env-ingress-vanity
    uid: d8cf3723-3a0f-11e9-a157-52540070e292
  spec:
    rules:
    - host: storesenv.us-central-1.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: stores-env-svc
            servicePort: 80
          path: /
    - host: storesenv.us-central-1ttc.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: stores-env-svc
            servicePort: 80
          path: /
    - host: storesenv.us-central-1tte.test.core.k8s.tgt
      http:
        paths:
        - backend:
            serviceName: stores-env-svc
            servicePort: 80
          path: /
    tls:
    - hosts:
      - storesenv.us-central-1ttc.test.core.k8s.tgt
      - storesenv.us-central-1tte.test.core.k8s.tgt
      - storesenv.us-central-1.test.core.k8s.tgt
      secretName: storesenv-vanity
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"name":"stores-env-static","namespace":"unimatrix"},"spec":{"rules":[{"host":"stores-env.tte-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"stores-env-static","servicePort":8080},"path":"/"}]}},{"host":"stores-env.ttc-test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"stores-env-static","servicePort":8080},"path":"/"}]}},{"host":"stores-env.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"stores-env-static","servicePort":8080},"path":"/"}]}}],"tls":[{"hosts":["stores-env.tte-test.k8s.target.com","stores-env.ttc-test.k8s.target.com","stores-env.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-07-23T00:43:24Z
    generation: 1
    name: stores-env-static
    namespace: unimatrix
    resourceVersion: "49225714"
    selfLink: /apis/extensions/v1beta1/namespaces/unimatrix/ingresses/stores-env-static
    uid: 6811cfa2-8e11-11e8-bd18-525400524761
  spec:
    rules:
    - host: stores-env.tte-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: stores-env-static
            servicePort: 8080
          path: /
    - host: stores-env.ttc-test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: stores-env-static
            servicePort: 8080
          path: /
    - host: stores-env.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: stores-env-static
            servicePort: 8080
          path: /
    tls:
    - hosts:
      - stores-env.tte-test.k8s.target.com
      - stores-env.ttc-test.k8s.target.com
      - stores-env.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{},"labels":{"name":"provider-sms-messages-ingress"},"name":"provider-sms-messages-ingress","namespace":"voice-provider-sms-messages"},"spec":{"rules":[{"host":"provider-sms-messages.test.k8s.target.com","http":{"paths":[{"backend":{"serviceName":"provider-sms-messages-service","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["provider-sms-messages.test.k8s.target.com"]}]}}
    creationTimestamp: 2018-10-10T20:29:47Z
    generation: 1
    labels:
      name: provider-sms-messages-ingress
    name: provider-sms-messages-ingress
    namespace: voice-provider-sms-messages
    resourceVersion: "49225797"
    selfLink: /apis/extensions/v1beta1/namespaces/voice-provider-sms-messages/ingresses/provider-sms-messages-ingress
    uid: 3afab437-cccb-11e8-ad5b-5254008c264f
  spec:
    rules:
    - host: provider-sms-messages.test.k8s.target.com
      http:
        paths:
        - backend:
            serviceName: provider-sms-messages-service
            servicePort: 80
          path: /
    tls:
    - hosts:
      - provider-sms-messages.test.k8s.target.com
  status:
    loadBalancer:
      ingress:
      - {}
kind: List
metadata: {}
resourceVersion: ""
selfLink: ""
