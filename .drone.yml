secrets:
  svkubernetes:
    path: secret/org/Kubernetes/svkubernetes
  artifactory_password:
    path: secret/org/Kubernetes/svkubernetes

workspace:
  base: /drone
  path: src/git.target.com/Kubernetes

pipeline:
  build-go:
    image: golang:1.12-alpine
    commands:
      - "apk add --no-cache git gcc libc-dev"
      - "export GOPATH=/drone/"
      - "export GO111MODULE=on"
      - "wget http://browserconfig.target.com/tgt-certs/tgt-ca-bundle.crt --output-document=/usr/local/share/ca-certificates/tgt-ca-bundle.crt && update-ca-certificates --fresh 2>&1"
      - "go test ./..."

  build-docker-pr:
    when:
      event: pull_request
    image: plugins/docker
    registry: docker.target.com/kubernetes
    repo: docker.target.com/kubernetes/envoy-control-plane
    dry_run: true
    tag:
      - "pr"

  build-docker-test:
    when:
      branch: master
      event: push
    image: plugins/docker
    registry: docker.target.com/kubernetes
    repo: docker.target.com/kubernetes/envoy-control-plane
    username: svkubernetes
    secrets:
      - source: svkubernetes
        target: plugin_password
    tag:
      - "test"
      - "0.0.${DRONE_BUILD_NUMBER}"

  build-docker-tag:
    when:
      event: tag
    image: plugins/docker
    registry: docker.target.com/kubernetes
    repo: docker.target.com/kubernetes/envoy-control-plane
    username: svkubernetes
    secrets:
      - source: svkubernetes
        target: plugin_password
    tag:
      - "latest"
      - "${DRONE_TAG}"

  bubble-bath:
    image: docker.target.com/bubble-bath/drone-bubblebath:2
    registry_url: https://docker.target.com
    repo: kubernetes/envoy-control-plane
    comparator: semantic-versioning
    keep: 4
    registry_username: svkubernetes
    secrets:
      - source: svkubernetes
        target: REGISTRY_PASSWORD

  validate-chart:
    image: alpine/helm
    when:
      branch: master
      event: pull_request
    commands:
      - helm init --client-only
      - helm lint ./envoy-control-plane-helm

  prepare-upload-latest-chart-to-artifactory:
    image: alpine/helm
    when:
      branch: master
      event: push
    commands:
      - helm init --client-only
      - helm lint ./envoy-control-plane-helm
      - helm package --version=0.0.${DRONE_BUILD_NUMBER} ./envoy-control-plane-helm

  prepare-upload-released-chart-to-artifactory:
    image: alpine/helm
    when:
      branch: master
      event: tag
    commands:
      - helm init --client-only
      - helm lint ./envoy-control-plane-helm
      - helm package --version=${DRONE_TAG} ./envoy-control-plane-helm

  upload-latest-chart-to-artifactory:
    image: docker.target.com/drone/drone-artifactory:2
    when:
      branch: master
      event: push
    username: svkubernetes
    secrets: [ artifactory_password ]
    url: https://binrepo.target.com/artifactory
    path: kubernetes-helm/
    sources:
      - envoy-control-plane-helm-0.0.${DRONE_BUILD_NUMBER}.tgz

  upload-released-chart-to-artifactory:
    image: docker.target.com/drone/drone-artifactory:2
    when:
      branch: master
      event: tag
    username: svkubernetes
    secrets: [ artifactory_password ]
    url: https://binrepo.target.com/artifactory
    path: kubernetes-helm/
    sources:
      - envoy-control-plane-helm-${DRONE_TAG}.tgz
