secrets:
  svkubernetes:
    path: secret/org/Kubernetes/svkubernetes
  artifactory_password:
    path: secret/org/Kubernetes/svkubernetes
  cache_s3_server:
    path: secret/shared/drone/prod-secrets/cache_s3_server
  cache_s3_access_key:
    path: secret/shared/drone/prod-secrets/cache_s3_access_key
  cache_s3_secret_key:
    path: secret/shared/drone/prod-secrets/cache_s3_secret_key
  cache_s3_ca_cert:
    path: secret/shared/drone/prod-secrets/cache_s3_ca_cert
  gcr_push_tgt_pe_prod:
    path: secret/shared/tap/drone-secrets/TGT_PE_PROD_DOCKER_PASSWORD

workspace:
  base: /drone
  path: src/git.target.com/Kubernetes

pipeline:
  # restore_go_deps_from_cache:
  #   when:
  #     event: [push, pull_request, tag, deployment]
  #   image: docker.target.com/drone/drone-s3-cache:2
  #   secrets: [ cache_s3_server, cache_s3_access_key, cache_s3_secret_key, cache_s3_ca_cert ]
  #   pull: true
  #   filename: deps.tgz
  #   restore: true

  build-go:
    image: golang:1.11-alpine3.8
    commands:
      - "apk add --no-cache git gcc libc-dev"
      - "export GOPATH=/drone/"
      - "export PATH=\"$${PATH}:$${GOPATH}/bin\""
      - "export GO111MODULE=on"
      - "wget http://browserconfig.target.com/tgt-certs/tgt-ca-bundle.crt --output-document=/usr/local/share/ca-certificates/tgt-ca-bundle.crt && update-ca-certificates --fresh 2>&1"
      - "go test ./pkg/k8s -v -cover"
      - "go test ./pkg/envoy -v -cover"
      - "go build"

  build-envoy-control-plane-docker-hq:
    when:
      branch: master
      event: push
    image: plugins/docker
    registry: docker.target.com/kubernetes
    repo: docker.target.com/kubernetes/envoy-control-plane
    dockerfile: Dockerfile
    username: svkubernetes
    secrets:
      - source: svkubernetes
        target: plugin_password
    tag:
      - "test"
      - "0.0.${DRONE_BUILD_NUMBER}"

  build-envoy-control-plane-docker-gcp:
    when:
      branch: master
      event: push
    image: plugins/docker
    registry: gcr.io/tgt-pe-prod
    repo: gcr.io/tgt-pe-prod/kubernetes/envoy-control-plane
    dockerfile: Dockerfile
    username: _json_key
    secrets:
      - source: gcr_push_tgt_pe_prod
        target: plugin_password
    tag:
      - "test"
      - "0.0.${DRONE_BUILD_NUMBER}"

  build-envoyproxy-docker-hq:
    when:
      branch: master
      event: push
    image: plugins/docker
    registry: docker.target.com/kubernetes
    repo: docker.target.com/kubernetes/envoyproxy
    dockerfile: envoyproxy/Dockerfile
    username: svkubernetes
    secrets:
      - source: svkubernetes
        target: plugin_password
    tag:
      - "test"
      - "0.0.${DRONE_BUILD_NUMBER}"

  build-envoyproxy-docker-gcp:
    when:
      branch: master
      event: push
    image: plugins/docker
    registry: gcr.io/tgt-pe-prod
    repo: gcr.io/tgt-pe-prod/kubernetes/envoyproxy
    dockerfile: envoyproxy/Dockerfile
    username: _json_key
    secrets:
      - source: gcr_push_tgt_pe_prod
        target: plugin_password
    tag:
      - "test"
      - "0.0.${DRONE_BUILD_NUMBER}"

  build-fluentd-docker-hq:
    when:
      branch: master
      event: push
    image: plugins/docker
    registry: docker.target.com/kubernetes
    repo: docker.target.com/kubernetes/envoyproxy-fluentd
    dockerfile: fluentd/Dockerfile
    username: svkubernetes
    secrets:
      - source: svkubernetes
        target: plugin_password
    tag:
      - "test"
      - "0.0.${DRONE_BUILD_NUMBER}"

  build-fluentd-docker-gcp:
    when:
      branch: master
      event: push
    image: plugins/docker
    registry: gcr.io/tgt-pe-prod
    repo: gcr.io/tgt-pe-prod/kubernetes/envoyproxy-fluentd
    dockerfile: fluentd/Dockerfile
    username: _json_key
    secrets:
      - source: gcr_push_tgt_pe_prod
        target: plugin_password
    tag:
      - "test"
      - "0.0.${DRONE_BUILD_NUMBER}"

  build-envoy-control-plane-docker-tag-hq:
    when:
      event: tag
    image: plugins/docker
    registry: docker.target.com/kubernetes
    repo: docker.target.com/kubernetes/envoy-control-plane
    dockerfile: Dockerfile
    username: svkubernetes
    secrets:
      - source: svkubernetes
        target: plugin_password
    tag:
      - "latest"
      - "${DRONE_TAG}"

  build-envoy-control-plane-docker-tag-gcp:
    when:
      event: tag
    image: plugins/docker
    registry: gcr.io/tgt-pe-prod
    repo: gcr.io/tgt-pe-prod/kubernetes/envoy-control-plane
    dockerfile: Dockerfile
    username: _json_key
    secrets:
      - source: gcr_push_tgt_pe_prod
        target: plugin_password
    tag:
      - "latest"
      - "${DRONE_TAG}"

  build-envoyproxy-docker-tag-hq:
    when:
      event: tag
    image: plugins/docker
    registry: docker.target.com/kubernetes
    repo: docker.target.com/kubernetes/envoyproxy
    dockerfile: envoyproxy/Dockerfile
    username: svkubernetes
    secrets:
      - source: svkubernetes
        target: plugin_password
    tag:
      - "latest"
      - "${DRONE_TAG}"

  build-envoyproxy-docker-tag-gcp:
    when:
      event: tag
    image: plugins/docker
    registry: gcr.io/tgt-pe-prod
    repo: gcr.io/tgt-pe-prod/kubernetes/envoyproxy
    dockerfile: envoyproxy/Dockerfile
    username: _json_key
    secrets:
      - source: gcr_push_tgt_pe_prod
        target: plugin_password
    tag:
      - "latest"
      - "${DRONE_TAG}"

  build-fluentd-docker-tag-hq:
    when:
      event: tag
    image: plugins/docker
    registry: docker.target.com/kubernetes
    repo: docker.target.com/kubernetes/envoyproxy-fluentd
    dockerfile: fluentd/Dockerfile
    username: svkubernetes
    secrets:
      - source: svkubernetes
        target: plugin_password
    tag:
      - "latest"
      - "${DRONE_TAG}"

  build-fluentd-docker-tag-gcp:
    when:
      event: tag
    image: plugins/docker
    registry: gcr.io/tgt-pe-prod
    repo: gcr.io/tgt-pe-prod/kubernetes/envoyproxy-fluentd
    dockerfile: fluentd/Dockerfile
    username: _json_key
    secrets:
      - source: gcr_push_tgt_pe_prod
        target: plugin_password
    tag:
      - "latest"
      - "${DRONE_TAG}"

  validate-chart:
    image: alpine/helm
    when:
      branch: master
      event: pull_request
    commands:
      - helm init --client-only
      - helm lint ./envoy-control-plane-helm

  prepare-upload-latest-chart-to-artifactory:
    image: alpine/helm
    when:
      branch: master
      event: push
    commands:
      - helm init --client-only
      - helm lint ./envoy-control-plane-helm
      - helm package --version=0.0.${DRONE_BUILD_NUMBER} ./envoy-control-plane-helm

  prepare-upload-released-chart-to-artifactory:
    image: alpine/helm
    when:
      branch: master
      event: tag
    commands:
      - helm init --client-only
      - helm lint ./envoy-control-plane-helm
      - helm package --version=${DRONE_TAG} ./envoy-control-plane-helm

  upload-latest-chart-to-artifactory:
    image: docker.target.com/drone/drone-artifactory:2
    when:
      branch: master
      event: push
    username: svkubernetes
    secrets: [ artifactory_password ]
    url: https://binrepo.target.com/artifactory
    path: kubernetes-helm/
    sources:
      - envoy-control-plane-helm-0.0.${DRONE_BUILD_NUMBER}.tgz

  upload-released-chart-to-artifactory:
    image: docker.target.com/drone/drone-artifactory:2
    when:
      branch: master
      event: tag
    username: svkubernetes
    secrets: [ artifactory_password ]
    url: https://binrepo.target.com/artifactory
    path: kubernetes-helm/
    sources:
      - envoy-control-plane-helm-${DRONE_TAG}.tgz

  # rebuild_cache:
  #   when:
  #     event: push
  #   image: docker.target.com/drone/drone-s3-cache:2
  #   secrets: [ cache_s3_server, cache_s3_access_key, cache_s3_secret_key, cache_s3_ca_cert ]
  #   rebuild: true
  #   filename: deps.tgz
  #   mount:
  #     - /drone/pkg/mod
