#apiVersion: apps/v1
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ include "envoy-control-plane-helm.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "envoy-control-plane-helm.name" . }}
    helm.sh/chart: {{ include "envoy-control-plane-helm.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "envoy-control-plane-helm.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "envoy-control-plane-helm.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      priorityClassName: system-node-critical
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - name: control-plane
          image: "{{ .Values.controlPlane.image }}:{{ .Chart.Version }}"
          imagePullPolicy: {{ .Values.controlPlane.pullPolicy }}
          command:
            - /envoy-control-plane
            {{- range .Values.args }}
            - {{ . }}
            {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            {{- toYaml .Values.controlPlane.resources | nindent 12 }}
          volumeMounts:
          - name: kubeconfig
            mountPath: "/etc/kube"
          - name: config
            mountPath: "/etc/envoy-control-plane"
        - name: envoyproxy
          image: "{{ .Values.envoyproxy.image }}:{{ .Chart.Version }}"
          imagePullPolicy: {{ .Values.envoyproxy.pullPolicy }}
          command: ["/usr/local/bin/envoy"]
          args:
            - --max-obj-name-len 300
            - --config-path /etc/envoy/envoy.yaml
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
            - name: admin
              containerPort: 9901
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: admin
          readinessProbe:
            httpGet:
              path: /
              port: admin
          resources:
            {{- toYaml .Values.envoyproxy.resources | nindent 12 }}
      volumes:
      - name: kubeconfig
        secret:
          secretName: {{ include "envoy-control-plane-helm.fullname" . }}-kubeconfig
      - name: config
        configMap:
          name: {{ include "envoy-control-plane-helm.fullname" . }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
